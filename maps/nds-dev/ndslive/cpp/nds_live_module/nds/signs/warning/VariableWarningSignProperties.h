/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SIGNS_WARNING_VARIABLE_WARNING_SIGN_PROPERTIES_H
#define NDS_SIGNS_WARNING_VARIABLE_WARNING_SIGN_PROPERTIES_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace signs
{
namespace warning
{

enum class VariableWarningSignProperties : uint8_t
{
    MECHANIC_ELEMENTS = UINT8_C(0),
    LIGHT_ELEMENTS = UINT8_C(1)
};

} // namespace warning
} // namespace signs
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for VariableWarningSignProperties enumeration.
template <>
struct EnumTraits<::nds::signs::warning::VariableWarningSignProperties>
{
    static constexpr ::std::array<const char*, 2> names =
    {{
        "MECHANIC_ELEMENTS",
        "LIGHT_ELEMENTS"
    }};

    static constexpr ::std::array<::nds::signs::warning::VariableWarningSignProperties, 2> values =
    {{
        ::nds::signs::warning::VariableWarningSignProperties::MECHANIC_ELEMENTS,
        ::nds::signs::warning::VariableWarningSignProperties::LIGHT_ELEMENTS
    }};

    static constexpr const char* enumName = "VariableWarningSignProperties";
};

template <>
size_t enumToOrdinal<::nds::signs::warning::VariableWarningSignProperties>(::nds::signs::warning::VariableWarningSignProperties value);

template <>
::nds::signs::warning::VariableWarningSignProperties valueToEnum<::nds::signs::warning::VariableWarningSignProperties>(
        typename ::std::underlying_type<::nds::signs::warning::VariableWarningSignProperties>::type rawValue);

template <>
uint32_t enumHashCode<::nds::signs::warning::VariableWarningSignProperties>(::nds::signs::warning::VariableWarningSignProperties value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::signs::warning::VariableWarningSignProperties>(::zserio::DeltaContext& context, ::nds::signs::warning::VariableWarningSignProperties value);

template <>
size_t bitSizeOf<::nds::signs::warning::VariableWarningSignProperties>(::nds::signs::warning::VariableWarningSignProperties value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::signs::warning::VariableWarningSignProperties>(::zserio::DeltaContext& context, ::nds::signs::warning::VariableWarningSignProperties value);

template <>
size_t initializeOffsets<::nds::signs::warning::VariableWarningSignProperties>(size_t bitPosition, ::nds::signs::warning::VariableWarningSignProperties value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::signs::warning::VariableWarningSignProperties>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::signs::warning::VariableWarningSignProperties value);

template <>
::nds::signs::warning::VariableWarningSignProperties read<::nds::signs::warning::VariableWarningSignProperties>(::zserio::BitStreamReader& in);

template <>
::nds::signs::warning::VariableWarningSignProperties read<::nds::signs::warning::VariableWarningSignProperties, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::signs::warning::VariableWarningSignProperties>(::zserio::BitStreamWriter& out, ::nds::signs::warning::VariableWarningSignProperties value);

template <>
void write<::zserio::DeltaContext, ::nds::signs::warning::VariableWarningSignProperties>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::signs::warning::VariableWarningSignProperties value);

} // namespace zserio

#endif // NDS_SIGNS_WARNING_VARIABLE_WARNING_SIGN_PROPERTIES_H
