/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_TILE_SMART_LAYER_TILE_LIST_H
#define NDS_SMART_TILE_SMART_LAYER_TILE_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/smart/tile/SmartLayerTile.h>

namespace nds
{
namespace smart
{
namespace tile
{

class SmartLayerTileList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumTiles()
        {
            return m_numTiles_;
        }

    private:
        ::zserio::DeltaContext m_numTiles_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerTileList() noexcept :
            SmartLayerTileList(allocator_type())
    {}

    explicit SmartLayerTileList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_tileList = ::zserio::vector<::nds::smart::tile::SmartLayerTile>>
    SmartLayerTileList(
            uint32_t numTiles_,
            ZSERIO_T_tileList&& tileList_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerTileList(allocator)
    {
        m_numTiles_ = numTiles_;
        m_tileList_ = ZserioArrayType_tileList(::std::forward<ZSERIO_T_tileList>(tileList_));
    }

    explicit SmartLayerTileList(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SmartLayerTileList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerTileList() = default;

    SmartLayerTileList(const SmartLayerTileList&) = default;
    SmartLayerTileList& operator=(const SmartLayerTileList&) = default;

    SmartLayerTileList(SmartLayerTileList&&) = default;
    SmartLayerTileList& operator=(SmartLayerTileList&&) = default;

    SmartLayerTileList(::zserio::PropagateAllocatorT,
            const SmartLayerTileList& other, const allocator_type& allocator);

    void initializeChildren();

    uint32_t getNumTiles() const;
    void setNumTiles(uint32_t numTiles_);

    const ::zserio::vector<::nds::smart::tile::SmartLayerTile>& getTileList() const;
    ::zserio::vector<::nds::smart::tile::SmartLayerTile>& getTileList();
    void setTileList(const ::zserio::vector<::nds::smart::tile::SmartLayerTile>& tileList_);
    void setTileList(::zserio::vector<::nds::smart::tile::SmartLayerTile>&& tileList_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SmartLayerTileList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_tileList
    {
    public:
        using OwnerType = SmartLayerTileList;

        static void initializeElement(SmartLayerTileList& owner,
                ::nds::smart::tile::SmartLayerTile& element, size_t index);
    };

    class ZserioElementFactory_tileList
    {
    public:
        using OwnerType = SmartLayerTileList;

        static void create(SmartLayerTileList& owner,
                ::zserio::vector<::nds::smart::tile::SmartLayerTile>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SmartLayerTileList& owner,
                ::zserio::vector<::nds::smart::tile::SmartLayerTile>& array,
                ::nds::smart::tile::SmartLayerTile::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_tileList = ::zserio::Array<::zserio::vector<::nds::smart::tile::SmartLayerTile>, ::zserio::ObjectArrayTraits<::nds::smart::tile::SmartLayerTile, ZserioElementFactory_tileList>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_tileList>;

    uint32_t readNumTiles(::zserio::BitStreamReader& in);
    uint32_t readNumTiles(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_tileList readTileList(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_tileList readTileList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint32_t m_numTiles_;
    ZserioArrayType_tileList m_tileList_;
};

} // namespace tile
} // namespace smart
} // namespace nds

#endif // NDS_SMART_TILE_SMART_LAYER_TILE_LIST_H
