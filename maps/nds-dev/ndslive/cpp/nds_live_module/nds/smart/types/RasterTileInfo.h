/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_TYPES_RASTER_TILE_INFO_H
#define NDS_SMART_TYPES_RASTER_TILE_INFO_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/smart/types/RasterImageConfigExtern.h>
#include <nds/smart/types/RasterImageLifetime.h>

namespace nds
{
namespace smart
{
namespace types
{

class RasterTileInfo
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::smart::types::RasterImageLifetime::ZserioPackingContext& getLifetimeInfo()
        {
            return m_lifetimeInfo_;
        }

    private:
        ::nds::smart::types::RasterImageLifetime::ZserioPackingContext m_lifetimeInfo_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    RasterTileInfo() noexcept :
            RasterTileInfo(allocator_type())
    {}

    explicit RasterTileInfo(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_lifetimeInfo = ::nds::smart::types::RasterImageLifetime,
            typename ZSERIO_T_configurations = ::zserio::vector<::nds::smart::types::RasterImageConfigExtern>,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_lifetimeInfo, RasterTileInfo, allocator_type> = 0>
    RasterTileInfo(
            ZSERIO_T_lifetimeInfo&& lifetimeInfo_,
            ZSERIO_T_configurations&& configurations_,
            const allocator_type& allocator = allocator_type()) :
            RasterTileInfo(allocator)
    {
        m_lifetimeInfo_ = ::std::forward<ZSERIO_T_lifetimeInfo>(lifetimeInfo_);
        m_configurations_ = ZserioArrayType_configurations(::std::forward<ZSERIO_T_configurations>(configurations_));
    }

    explicit RasterTileInfo(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit RasterTileInfo(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~RasterTileInfo() = default;

    RasterTileInfo(const RasterTileInfo&) = default;
    RasterTileInfo& operator=(const RasterTileInfo&) = default;

    RasterTileInfo(RasterTileInfo&&) = default;
    RasterTileInfo& operator=(RasterTileInfo&&) = default;

    RasterTileInfo(::zserio::PropagateAllocatorT,
            const RasterTileInfo& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::smart::types::RasterImageLifetime& getLifetimeInfo() const;
    ::nds::smart::types::RasterImageLifetime& getLifetimeInfo();
    void setLifetimeInfo(const ::nds::smart::types::RasterImageLifetime& lifetimeInfo_);
    void setLifetimeInfo(::nds::smart::types::RasterImageLifetime&& lifetimeInfo_);

    const ::zserio::vector<::nds::smart::types::RasterImageConfigExtern>& getConfigurations() const;
    ::zserio::vector<::nds::smart::types::RasterImageConfigExtern>& getConfigurations();
    void setConfigurations(const ::zserio::vector<::nds::smart::types::RasterImageConfigExtern>& configurations_);
    void setConfigurations(::zserio::vector<::nds::smart::types::RasterImageConfigExtern>&& configurations_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const RasterTileInfo& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_configurations
    {
    public:
        using OwnerType = RasterTileInfo;

        static void create(RasterTileInfo& owner,
                ::zserio::vector<::nds::smart::types::RasterImageConfigExtern>& array,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_configurations = ::zserio::Array<::zserio::vector<::nds::smart::types::RasterImageConfigExtern>, ::zserio::ObjectArrayTraits<::nds::smart::types::RasterImageConfigExtern, ZserioElementFactory_configurations>, ::zserio::ArrayType::AUTO>;

    ::nds::smart::types::RasterImageLifetime readLifetimeInfo(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::smart::types::RasterImageLifetime readLifetimeInfo(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_configurations readConfigurations(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    ::nds::smart::types::RasterImageLifetime m_lifetimeInfo_;
    ZserioArrayType_configurations m_configurations_;
};

} // namespace types
} // namespace smart
} // namespace nds

#endif // NDS_SMART_TYPES_RASTER_TILE_INFO_H
