/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_METADATA_SMART_RASTER_REGISTRY_METADATA_H
#define NDS_SMART_METADATA_SMART_RASTER_REGISTRY_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/smart/metadata/RasterRegistryMetadataExtern.h>

namespace nds
{
namespace smart
{
namespace metadata
{

class SmartRasterRegistryMetadata
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    SmartRasterRegistryMetadata() noexcept :
            SmartRasterRegistryMetadata(allocator_type())
    {}

    explicit SmartRasterRegistryMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_metadataExtern = ::nds::smart::metadata::RasterRegistryMetadataExtern,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_metadataExtern, SmartRasterRegistryMetadata, allocator_type> = 0>
    explicit SmartRasterRegistryMetadata(
            ZSERIO_T_metadataExtern&& metadataExtern_,
            const allocator_type& allocator = allocator_type()) :
            SmartRasterRegistryMetadata(allocator)
    {
        m_metadataExtern_ = ::std::forward<ZSERIO_T_metadataExtern>(metadataExtern_);
    }

    explicit SmartRasterRegistryMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartRasterRegistryMetadata() = default;

    SmartRasterRegistryMetadata(const SmartRasterRegistryMetadata&) = default;
    SmartRasterRegistryMetadata& operator=(const SmartRasterRegistryMetadata&) = default;

    SmartRasterRegistryMetadata(SmartRasterRegistryMetadata&&) = default;
    SmartRasterRegistryMetadata& operator=(SmartRasterRegistryMetadata&&) = default;

    SmartRasterRegistryMetadata(::zserio::PropagateAllocatorT,
            const SmartRasterRegistryMetadata& other, const allocator_type& allocator);

    const ::nds::smart::metadata::RasterRegistryMetadataExtern& getMetadataExtern() const;
    ::nds::smart::metadata::RasterRegistryMetadataExtern& getMetadataExtern();
    void setMetadataExtern(const ::nds::smart::metadata::RasterRegistryMetadataExtern& metadataExtern_);
    void setMetadataExtern(::nds::smart::metadata::RasterRegistryMetadataExtern&& metadataExtern_);

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const SmartRasterRegistryMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
    ::nds::smart::metadata::RasterRegistryMetadataExtern readMetadataExtern(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    ::nds::smart::metadata::RasterRegistryMetadataExtern m_metadataExtern_;
};

} // namespace metadata
} // namespace smart
} // namespace nds

#endif // NDS_SMART_METADATA_SMART_RASTER_REGISTRY_METADATA_H
