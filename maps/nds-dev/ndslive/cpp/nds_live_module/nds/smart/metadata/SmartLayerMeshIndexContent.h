/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_METADATA_SMART_LAYER_MESH_INDEX_CONTENT_H
#define NDS_SMART_METADATA_SMART_LAYER_MESH_INDEX_CONTENT_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <memory>
#include <zserio/ArrayTraits.h>

namespace nds
{
namespace smart
{
namespace metadata
{

class SmartLayerMeshIndexContent
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerMeshIndexContent() noexcept :
            SmartLayerMeshIndexContent(allocator_type())
    {}

    explicit SmartLayerMeshIndexContent(const allocator_type& allocator) noexcept;

    SmartLayerMeshIndexContent(
            bool hasHeaders_,
            bool hasSizes_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerMeshIndexContent(allocator)
    {
        m_hasHeaders_ = hasHeaders_;
        m_hasSizes_ = hasSizes_;
    }

    explicit SmartLayerMeshIndexContent(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerMeshIndexContent() = default;

    SmartLayerMeshIndexContent(const SmartLayerMeshIndexContent&) = default;
    SmartLayerMeshIndexContent& operator=(const SmartLayerMeshIndexContent&) = default;

    SmartLayerMeshIndexContent(SmartLayerMeshIndexContent&&) = default;
    SmartLayerMeshIndexContent& operator=(SmartLayerMeshIndexContent&&) = default;

    SmartLayerMeshIndexContent(::zserio::PropagateAllocatorT,
            const SmartLayerMeshIndexContent& other, const allocator_type& allocator);

    bool getHasHeaders() const;
    void setHasHeaders(bool hasHeaders_);

    bool getHasSizes() const;
    void setHasSizes(bool hasSizes_);

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const SmartLayerMeshIndexContent& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
    bool readHasHeaders(::zserio::BitStreamReader& in);
    bool readHasSizes(::zserio::BitStreamReader& in);

    bool m_hasHeaders_;
    bool m_hasSizes_;
};

} // namespace metadata
} // namespace smart
} // namespace nds

#endif // NDS_SMART_METADATA_SMART_LAYER_MESH_INDEX_CONTENT_H
