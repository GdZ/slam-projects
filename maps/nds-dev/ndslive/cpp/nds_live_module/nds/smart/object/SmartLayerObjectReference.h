/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_OBJECT_SMART_LAYER_OBJECT_REFERENCE_H
#define NDS_SMART_OBJECT_SMART_LAYER_OBJECT_REFERENCE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/smart/object/SmartLayerObjectId.h>

namespace nds
{
namespace smart
{
namespace object
{

class SmartLayerObjectReference
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getId()
        {
            return m_id_;
        }

    private:
        ::zserio::DeltaContext m_id_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerObjectReference() noexcept :
            SmartLayerObjectReference(allocator_type())
    {}

    explicit SmartLayerObjectReference(const allocator_type& allocator) noexcept;

    explicit SmartLayerObjectReference(
            ::nds::smart::object::SmartLayerObjectId id_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerObjectReference(allocator)
    {
        m_id_ = id_;
    }

    explicit SmartLayerObjectReference(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SmartLayerObjectReference(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerObjectReference() = default;

    SmartLayerObjectReference(const SmartLayerObjectReference&) = default;
    SmartLayerObjectReference& operator=(const SmartLayerObjectReference&) = default;

    SmartLayerObjectReference(SmartLayerObjectReference&&) = default;
    SmartLayerObjectReference& operator=(SmartLayerObjectReference&&) = default;

    SmartLayerObjectReference(::zserio::PropagateAllocatorT,
            const SmartLayerObjectReference& other, const allocator_type& allocator);

    ::nds::smart::object::SmartLayerObjectId getId() const;
    void setId(::nds::smart::object::SmartLayerObjectId id_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SmartLayerObjectReference& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::smart::object::SmartLayerObjectId readId(::zserio::BitStreamReader& in);
    ::nds::smart::object::SmartLayerObjectId readId(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::smart::object::SmartLayerObjectId m_id_;
};

} // namespace object
} // namespace smart
} // namespace nds

#endif // NDS_SMART_OBJECT_SMART_LAYER_OBJECT_REFERENCE_H
