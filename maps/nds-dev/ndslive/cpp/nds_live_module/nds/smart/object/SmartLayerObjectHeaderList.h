/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_OBJECT_SMART_LAYER_OBJECT_HEADER_LIST_H
#define NDS_SMART_OBJECT_SMART_LAYER_OBJECT_HEADER_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/smart/object/SmartLayerObjectReference.h>
#include <nds/smart/types/SmartLayerHeader.h>

namespace nds
{
namespace smart
{
namespace object
{

class SmartLayerObjectHeaderList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumObjects()
        {
            return m_numObjects_;
        }

    private:
        ::zserio::DeltaContext m_numObjects_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerObjectHeaderList() noexcept :
            SmartLayerObjectHeaderList(allocator_type())
    {}

    explicit SmartLayerObjectHeaderList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_references = ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>,
            typename ZSERIO_T_headers = ::zserio::vector<::nds::smart::types::SmartLayerHeader>>
    SmartLayerObjectHeaderList(
            uint32_t numObjects_,
            ZSERIO_T_references&& references_,
            ZSERIO_T_headers&& headers_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerObjectHeaderList(allocator)
    {
        m_numObjects_ = numObjects_;
        m_references_ = ZserioArrayType_references(::std::forward<ZSERIO_T_references>(references_));
        m_headers_ = ZserioArrayType_headers(::std::forward<ZSERIO_T_headers>(headers_));
    }

    explicit SmartLayerObjectHeaderList(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SmartLayerObjectHeaderList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerObjectHeaderList() = default;

    SmartLayerObjectHeaderList(const SmartLayerObjectHeaderList&) = default;
    SmartLayerObjectHeaderList& operator=(const SmartLayerObjectHeaderList&) = default;

    SmartLayerObjectHeaderList(SmartLayerObjectHeaderList&&) = default;
    SmartLayerObjectHeaderList& operator=(SmartLayerObjectHeaderList&&) = default;

    SmartLayerObjectHeaderList(::zserio::PropagateAllocatorT,
            const SmartLayerObjectHeaderList& other, const allocator_type& allocator);

    void initializeChildren();

    uint32_t getNumObjects() const;
    void setNumObjects(uint32_t numObjects_);

    const ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>& getReferences() const;
    ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>& getReferences();
    void setReferences(const ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>& references_);
    void setReferences(::zserio::vector<::nds::smart::object::SmartLayerObjectReference>&& references_);

    const ::zserio::vector<::nds::smart::types::SmartLayerHeader>& getHeaders() const;
    ::zserio::vector<::nds::smart::types::SmartLayerHeader>& getHeaders();
    void setHeaders(const ::zserio::vector<::nds::smart::types::SmartLayerHeader>& headers_);
    void setHeaders(::zserio::vector<::nds::smart::types::SmartLayerHeader>&& headers_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SmartLayerObjectHeaderList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_references
    {
    public:
        using OwnerType = SmartLayerObjectHeaderList;

        static void create(SmartLayerObjectHeaderList& owner,
                ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SmartLayerObjectHeaderList& owner,
                ::zserio::vector<::nds::smart::object::SmartLayerObjectReference>& array,
                ::nds::smart::object::SmartLayerObjectReference::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    class ZserioArrayExpressions_headers
    {
    public:
        using OwnerType = SmartLayerObjectHeaderList;

        static void initializeElement(SmartLayerObjectHeaderList& owner,
                ::nds::smart::types::SmartLayerHeader& element, size_t index);
    };

    class ZserioElementFactory_headers
    {
    public:
        using OwnerType = SmartLayerObjectHeaderList;

        static void create(SmartLayerObjectHeaderList& owner,
                ::zserio::vector<::nds::smart::types::SmartLayerHeader>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SmartLayerObjectHeaderList& owner,
                ::zserio::vector<::nds::smart::types::SmartLayerHeader>& array,
                ::nds::smart::types::SmartLayerHeader::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_references = ::zserio::Array<::zserio::vector<::nds::smart::object::SmartLayerObjectReference>, ::zserio::ObjectArrayTraits<::nds::smart::object::SmartLayerObjectReference, ZserioElementFactory_references>, ::zserio::ArrayType::NORMAL>;
    using ZserioArrayType_headers = ::zserio::Array<::zserio::vector<::nds::smart::types::SmartLayerHeader>, ::zserio::ObjectArrayTraits<::nds::smart::types::SmartLayerHeader, ZserioElementFactory_headers>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_headers>;

    uint32_t readNumObjects(::zserio::BitStreamReader& in);
    uint32_t readNumObjects(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_references readReferences(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_references readReferences(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_headers readHeaders(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_headers readHeaders(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint32_t m_numObjects_;
    ZserioArrayType_references m_references_;
    ZserioArrayType_headers m_headers_;
};

} // namespace object
} // namespace smart
} // namespace nds

#endif // NDS_SMART_OBJECT_SMART_LAYER_OBJECT_HEADER_LIST_H
