/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_PATH_SMART_LAYER_LOCATION_ID_PATH_H
#define NDS_SMART_PATH_SMART_LAYER_LOCATION_ID_PATH_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/core/location/RoadLocationId.h>
#include <nds/smart/path/SmartLayerLocationIdPathSegment.h>
#include <nds/smart/types/SmartLayerHeader.h>

namespace nds
{
namespace smart
{
namespace path
{

class SmartLayerLocationIdPath
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::smart::types::SmartLayerHeader::ZserioPackingContext& getHeader()
        {
            return m_header_;
        }

        ::nds::core::location::RoadLocationId::ZserioPackingContext& getLocationId()
        {
            return m_locationId_;
        }

    private:
        ::nds::smart::types::SmartLayerHeader::ZserioPackingContext m_header_;
        ::nds::core::location::RoadLocationId::ZserioPackingContext m_locationId_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerLocationIdPath() noexcept :
            SmartLayerLocationIdPath(allocator_type())
    {}

    explicit SmartLayerLocationIdPath(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_header = ::nds::smart::types::SmartLayerHeader,
            typename ZSERIO_T_locationId = ::nds::core::location::RoadLocationId,
            typename ZSERIO_T_segments = ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_header, SmartLayerLocationIdPath, allocator_type> = 0>
    SmartLayerLocationIdPath(
            ZSERIO_T_header&& header_,
            ZSERIO_T_locationId&& locationId_,
            ZSERIO_T_segments&& segments_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerLocationIdPath(allocator)
    {
        m_header_ = ::std::forward<ZSERIO_T_header>(header_);
        m_locationId_ = ::std::forward<ZSERIO_T_locationId>(locationId_);
        m_segments_ = ZserioArrayType_segments(::std::forward<ZSERIO_T_segments>(segments_));
    }

    explicit SmartLayerLocationIdPath(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SmartLayerLocationIdPath(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerLocationIdPath() = default;

    SmartLayerLocationIdPath(const SmartLayerLocationIdPath& other);
    SmartLayerLocationIdPath& operator=(const SmartLayerLocationIdPath& other);

    SmartLayerLocationIdPath(SmartLayerLocationIdPath&& other);
    SmartLayerLocationIdPath& operator=(SmartLayerLocationIdPath&& other);

    SmartLayerLocationIdPath(::zserio::PropagateAllocatorT,
            const SmartLayerLocationIdPath& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::smart::types::SmartLayerHeader& getHeader() const;
    ::nds::smart::types::SmartLayerHeader& getHeader();
    void setHeader(const ::nds::smart::types::SmartLayerHeader& header_);
    void setHeader(::nds::smart::types::SmartLayerHeader&& header_);

    const ::nds::core::location::RoadLocationId& getLocationId() const;
    ::nds::core::location::RoadLocationId& getLocationId();
    void setLocationId(const ::nds::core::location::RoadLocationId& locationId_);
    void setLocationId(::nds::core::location::RoadLocationId&& locationId_);

    const ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>& getSegments() const;
    ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>& getSegments();
    void setSegments(const ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>& segments_);
    void setSegments(::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>&& segments_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SmartLayerLocationIdPath& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_segments
    {
    public:
        using OwnerType = SmartLayerLocationIdPath;

        static void initializeElement(SmartLayerLocationIdPath& owner,
                ::nds::smart::path::SmartLayerLocationIdPathSegment& element, size_t index);
    };

    class ZserioElementFactory_segments
    {
    public:
        using OwnerType = SmartLayerLocationIdPath;

        static void create(SmartLayerLocationIdPath& owner,
                ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SmartLayerLocationIdPath& owner,
                ::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>& array,
                ::nds::smart::path::SmartLayerLocationIdPathSegment::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_segments = ::zserio::Array<::zserio::vector<::nds::smart::path::SmartLayerLocationIdPathSegment>, ::zserio::ObjectArrayTraits<::nds::smart::path::SmartLayerLocationIdPathSegment, ZserioElementFactory_segments>, ::zserio::ArrayType::AUTO, ZserioArrayExpressions_segments>;

    ::nds::smart::types::SmartLayerHeader readHeader(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::smart::types::SmartLayerHeader readHeader(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::core::location::RoadLocationId readLocationId(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::location::RoadLocationId readLocationId(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_segments readSegments(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_segments readSegments(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::smart::types::SmartLayerHeader m_header_;
    ::nds::core::location::RoadLocationId m_locationId_;
    ZserioArrayType_segments m_segments_;
};

} // namespace path
} // namespace smart
} // namespace nds

#endif // NDS_SMART_PATH_SMART_LAYER_LOCATION_ID_PATH_H
