/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SMART_PATH_SMART_LAYER_PATH_LIST_H
#define NDS_SMART_PATH_SMART_LAYER_PATH_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/smart/path/SmartLayerPath.h>

namespace nds
{
namespace smart
{
namespace path
{

class SmartLayerPathList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumPaths()
        {
            return m_numPaths_;
        }

    private:
        ::zserio::DeltaContext m_numPaths_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SmartLayerPathList() noexcept :
            SmartLayerPathList(allocator_type())
    {}

    explicit SmartLayerPathList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_pathList = ::zserio::vector<::nds::smart::path::SmartLayerPath>>
    SmartLayerPathList(
            uint32_t numPaths_,
            ZSERIO_T_pathList&& pathList_,
            const allocator_type& allocator = allocator_type()) :
            SmartLayerPathList(allocator)
    {
        m_numPaths_ = numPaths_;
        m_pathList_ = ZserioArrayType_pathList(::std::forward<ZSERIO_T_pathList>(pathList_));
    }

    explicit SmartLayerPathList(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SmartLayerPathList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SmartLayerPathList() = default;

    SmartLayerPathList(const SmartLayerPathList&) = default;
    SmartLayerPathList& operator=(const SmartLayerPathList&) = default;

    SmartLayerPathList(SmartLayerPathList&&) = default;
    SmartLayerPathList& operator=(SmartLayerPathList&&) = default;

    SmartLayerPathList(::zserio::PropagateAllocatorT,
            const SmartLayerPathList& other, const allocator_type& allocator);

    void initializeChildren();

    uint32_t getNumPaths() const;
    void setNumPaths(uint32_t numPaths_);

    const ::zserio::vector<::nds::smart::path::SmartLayerPath>& getPathList() const;
    ::zserio::vector<::nds::smart::path::SmartLayerPath>& getPathList();
    void setPathList(const ::zserio::vector<::nds::smart::path::SmartLayerPath>& pathList_);
    void setPathList(::zserio::vector<::nds::smart::path::SmartLayerPath>&& pathList_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SmartLayerPathList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_pathList
    {
    public:
        using OwnerType = SmartLayerPathList;

        static void initializeElement(SmartLayerPathList& owner,
                ::nds::smart::path::SmartLayerPath& element, size_t index);
    };

    class ZserioElementFactory_pathList
    {
    public:
        using OwnerType = SmartLayerPathList;

        static void create(SmartLayerPathList& owner,
                ::zserio::vector<::nds::smart::path::SmartLayerPath>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SmartLayerPathList& owner,
                ::zserio::vector<::nds::smart::path::SmartLayerPath>& array,
                ::nds::smart::path::SmartLayerPath::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_pathList = ::zserio::Array<::zserio::vector<::nds::smart::path::SmartLayerPath>, ::zserio::ObjectArrayTraits<::nds::smart::path::SmartLayerPath, ZserioElementFactory_pathList>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_pathList>;

    uint32_t readNumPaths(::zserio::BitStreamReader& in);
    uint32_t readNumPaths(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_pathList readPathList(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_pathList readPathList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint32_t m_numPaths_;
    ZserioArrayType_pathList m_pathList_;
};

} // namespace path
} // namespace smart
} // namespace nds

#endif // NDS_SMART_PATH_SMART_LAYER_PATH_LIST_H
