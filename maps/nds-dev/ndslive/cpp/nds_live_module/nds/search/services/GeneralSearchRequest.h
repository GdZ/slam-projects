/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SEARCH_SERVICES_GENERAL_SEARCH_REQUEST_H
#define NDS_SEARCH_SERVICES_GENERAL_SEARCH_REQUEST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>
#include <zserio/String.h>
#include <zserio/Types.h>

#include <nds/core/geometry/SpatialExtent.h>
#include <nds/core/types/IsoCountryCode.h>
#include <nds/core/types/LanguageCode.h>
#include <nds/search/services/AlongPathSearchRequestDetails.h>
#include <nds/search/services/AroundPositionSearchRequestDetails.h>
#include <nds/search/services/RequestOptions.h>
#include <nds/search/types/ResultOrder.h>
#include <nds/system/types/ExternData.h>

namespace nds
{
namespace search
{
namespace services
{

class GeneralSearchRequest
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getOptions()
        {
            return m_options_;
        }

        ::zserio::DeltaContext& getPreferredLanguage()
        {
            return m_preferredLanguage_;
        }

        ::nds::search::services::AroundPositionSearchRequestDetails::ZserioPackingContext& getAroundSearchDetails()
        {
            return m_aroundSearchDetails_;
        }

        ::nds::search::services::AlongPathSearchRequestDetails::ZserioPackingContext& getAlongSearchDetails()
        {
            return m_alongSearchDetails_;
        }

        ::nds::core::geometry::SpatialExtent::ZserioPackingContext& getInAreaSearchDetails()
        {
            return m_inAreaSearchDetails_;
        }

        ::zserio::DeltaContext& getMaxResponseCount()
        {
            return m_maxResponseCount_;
        }

        ::zserio::DeltaContext& getOrder()
        {
            return m_order_;
        }

    private:
        ::zserio::DeltaContext m_options_;
        ::zserio::DeltaContext m_preferredLanguage_;
        ::nds::search::services::AroundPositionSearchRequestDetails::ZserioPackingContext m_aroundSearchDetails_;
        ::nds::search::services::AlongPathSearchRequestDetails::ZserioPackingContext m_alongSearchDetails_;
        ::nds::core::geometry::SpatialExtent::ZserioPackingContext m_inAreaSearchDetails_;
        ::zserio::DeltaContext m_maxResponseCount_;
        ::zserio::DeltaContext m_order_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    GeneralSearchRequest() noexcept :
            GeneralSearchRequest(allocator_type())
    {}

    explicit GeneralSearchRequest(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_term = ::zserio::string<>,
            typename ZSERIO_T_preferredLanguage = ::nds::core::types::LanguageCode,
            typename ZSERIO_T_aroundSearchDetails = ::nds::search::services::AroundPositionSearchRequestDetails,
            typename ZSERIO_T_alongSearchDetails = ::nds::search::services::AlongPathSearchRequestDetails,
            typename ZSERIO_T_inAreaSearchDetails = ::nds::core::geometry::SpatialExtent,
            typename ZSERIO_T_isoCountryCode = ::nds::core::types::IsoCountryCode,
            typename ZSERIO_T_maxResponseCount = uint64_t,
            typename ZSERIO_T_order = ::nds::search::types::ResultOrder,
            typename ZSERIO_T_poiFilter = ::nds::system::types::ExternData,
            typename ZSERIO_T_addressFilter = ::nds::system::types::ExternData>
    GeneralSearchRequest(
            ::nds::search::services::RequestOptions options_,
            ZSERIO_T_term&& term_,
            ZSERIO_T_preferredLanguage&& preferredLanguage_,
            ZSERIO_T_aroundSearchDetails&& aroundSearchDetails_,
            ZSERIO_T_alongSearchDetails&& alongSearchDetails_,
            ZSERIO_T_inAreaSearchDetails&& inAreaSearchDetails_,
            ZSERIO_T_isoCountryCode&& isoCountryCode_,
            ZSERIO_T_maxResponseCount&& maxResponseCount_,
            ZSERIO_T_order&& order_,
            ZSERIO_T_poiFilter&& poiFilter_,
            ZSERIO_T_addressFilter&& addressFilter_,
            const allocator_type& allocator = allocator_type()) :
            GeneralSearchRequest(allocator)
    {
        m_options_ = options_;
        m_term_ = ::std::forward<ZSERIO_T_term>(term_);
        m_preferredLanguage_ = ::std::forward<ZSERIO_T_preferredLanguage>(preferredLanguage_);
        m_aroundSearchDetails_ = ::std::forward<ZSERIO_T_aroundSearchDetails>(aroundSearchDetails_);
        m_alongSearchDetails_ = ::std::forward<ZSERIO_T_alongSearchDetails>(alongSearchDetails_);
        m_inAreaSearchDetails_ = ::std::forward<ZSERIO_T_inAreaSearchDetails>(inAreaSearchDetails_);
        m_isoCountryCode_ = ::std::forward<ZSERIO_T_isoCountryCode>(isoCountryCode_);
        m_maxResponseCount_ = ::std::forward<ZSERIO_T_maxResponseCount>(maxResponseCount_);
        m_order_ = ::std::forward<ZSERIO_T_order>(order_);
        m_poiFilter_ = ::std::forward<ZSERIO_T_poiFilter>(poiFilter_);
        m_addressFilter_ = ::std::forward<ZSERIO_T_addressFilter>(addressFilter_);
    }

    explicit GeneralSearchRequest(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit GeneralSearchRequest(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~GeneralSearchRequest() = default;

    GeneralSearchRequest(const GeneralSearchRequest&) = default;
    GeneralSearchRequest& operator=(const GeneralSearchRequest&) = default;

    GeneralSearchRequest(GeneralSearchRequest&&) = default;
    GeneralSearchRequest& operator=(GeneralSearchRequest&&) = default;

    GeneralSearchRequest(::zserio::PropagateAllocatorT,
            const GeneralSearchRequest& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::search::services::RequestOptions getOptions() const;
    void setOptions(::nds::search::services::RequestOptions options_);

    const ::zserio::string<>& getTerm() const;
    ::zserio::string<>& getTerm();
    void setTerm(const ::zserio::string<>& term_);
    void setTerm(::zserio::string<>&& term_);

    ::nds::core::types::LanguageCode getPreferredLanguage() const;
    void setPreferredLanguage(::nds::core::types::LanguageCode preferredLanguage_);
    bool isPreferredLanguageUsed() const;
    bool isPreferredLanguageSet() const;
    void resetPreferredLanguage();

    const ::nds::search::services::AroundPositionSearchRequestDetails& getAroundSearchDetails() const;
    ::nds::search::services::AroundPositionSearchRequestDetails& getAroundSearchDetails();
    void setAroundSearchDetails(const ::nds::search::services::AroundPositionSearchRequestDetails& aroundSearchDetails_);
    void setAroundSearchDetails(::nds::search::services::AroundPositionSearchRequestDetails&& aroundSearchDetails_);
    bool isAroundSearchDetailsUsed() const;
    bool isAroundSearchDetailsSet() const;
    void resetAroundSearchDetails();

    const ::nds::search::services::AlongPathSearchRequestDetails& getAlongSearchDetails() const;
    ::nds::search::services::AlongPathSearchRequestDetails& getAlongSearchDetails();
    void setAlongSearchDetails(const ::nds::search::services::AlongPathSearchRequestDetails& alongSearchDetails_);
    void setAlongSearchDetails(::nds::search::services::AlongPathSearchRequestDetails&& alongSearchDetails_);
    bool isAlongSearchDetailsUsed() const;
    bool isAlongSearchDetailsSet() const;
    void resetAlongSearchDetails();

    const ::nds::core::geometry::SpatialExtent& getInAreaSearchDetails() const;
    ::nds::core::geometry::SpatialExtent& getInAreaSearchDetails();
    void setInAreaSearchDetails(const ::nds::core::geometry::SpatialExtent& inAreaSearchDetails_);
    void setInAreaSearchDetails(::nds::core::geometry::SpatialExtent&& inAreaSearchDetails_);
    bool isInAreaSearchDetailsUsed() const;
    bool isInAreaSearchDetailsSet() const;
    void resetInAreaSearchDetails();

    const ::nds::core::types::IsoCountryCode& getIsoCountryCode() const;
    ::nds::core::types::IsoCountryCode& getIsoCountryCode();
    void setIsoCountryCode(const ::nds::core::types::IsoCountryCode& isoCountryCode_);
    void setIsoCountryCode(::nds::core::types::IsoCountryCode&& isoCountryCode_);
    bool isIsoCountryCodeUsed() const;
    bool isIsoCountryCodeSet() const;
    void resetIsoCountryCode();

    uint64_t getMaxResponseCount() const;
    void setMaxResponseCount(uint64_t maxResponseCount_);
    bool isMaxResponseCountUsed() const;
    bool isMaxResponseCountSet() const;
    void resetMaxResponseCount();

    ::nds::search::types::ResultOrder getOrder() const;
    void setOrder(::nds::search::types::ResultOrder order_);
    bool isOrderUsed() const;
    bool isOrderSet() const;
    void resetOrder();

    const ::nds::system::types::ExternData& getPoiFilter() const;
    ::nds::system::types::ExternData& getPoiFilter();
    void setPoiFilter(const ::nds::system::types::ExternData& poiFilter_);
    void setPoiFilter(::nds::system::types::ExternData&& poiFilter_);
    bool isPoiFilterUsed() const;
    bool isPoiFilterSet() const;
    void resetPoiFilter();

    const ::nds::system::types::ExternData& getAddressFilter() const;
    ::nds::system::types::ExternData& getAddressFilter();
    void setAddressFilter(const ::nds::system::types::ExternData& addressFilter_);
    void setAddressFilter(::nds::system::types::ExternData&& addressFilter_);
    bool isAddressFilterUsed() const;
    bool isAddressFilterSet() const;
    void resetAddressFilter();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const GeneralSearchRequest& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::search::services::RequestOptions readOptions(::zserio::BitStreamReader& in);
    ::nds::search::services::RequestOptions readOptions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::string<> readTerm(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::types::LanguageCode> readPreferredLanguage(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::LanguageCode> readPreferredLanguage(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::search::services::AroundPositionSearchRequestDetails> readAroundSearchDetails(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::search::services::AroundPositionSearchRequestDetails> readAroundSearchDetails(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::search::services::AlongPathSearchRequestDetails> readAlongSearchDetails(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::search::services::AlongPathSearchRequestDetails> readAlongSearchDetails(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::SpatialExtent> readInAreaSearchDetails(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::SpatialExtent> readInAreaSearchDetails(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::types::IsoCountryCode> readIsoCountryCode(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<uint64_t> readMaxResponseCount(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<uint64_t> readMaxResponseCount(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::search::types::ResultOrder> readOrder(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::search::types::ResultOrder> readOrder(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::system::types::ExternData> readPoiFilter(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::system::types::ExternData> readAddressFilter(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    ::nds::search::services::RequestOptions m_options_;
    ::zserio::string<> m_term_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::LanguageCode> m_preferredLanguage_;
    ::zserio::InplaceOptionalHolder<::nds::search::services::AroundPositionSearchRequestDetails> m_aroundSearchDetails_;
    ::zserio::InplaceOptionalHolder<::nds::search::services::AlongPathSearchRequestDetails> m_alongSearchDetails_;
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::SpatialExtent> m_inAreaSearchDetails_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::IsoCountryCode> m_isoCountryCode_;
    ::zserio::InplaceOptionalHolder<uint64_t> m_maxResponseCount_;
    ::zserio::InplaceOptionalHolder<::nds::search::types::ResultOrder> m_order_;
    ::zserio::InplaceOptionalHolder<::nds::system::types::ExternData> m_poiFilter_;
    ::zserio::InplaceOptionalHolder<::nds::system::types::ExternData> m_addressFilter_;
};

} // namespace services
} // namespace search
} // namespace nds

#endif // NDS_SEARCH_SERVICES_GENERAL_SEARCH_REQUEST_H
