/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SEARCH_TYPES_SEARCH_RESULT_TYPE_H
#define NDS_SEARCH_TYPES_SEARCH_RESULT_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace search
{
namespace types
{

enum class SearchResultType : uint8_t
{
    ADDRESS = UINT8_C(0),
    ADDRESS_COUNTRY = UINT8_C(1),
    ADDRESS_PLACE = UINT8_C(2),
    ADDRESS_ROAD = UINT8_C(3),
    ADDRESS_INTERSECTION = UINT8_C(4),
    POI = UINT8_C(5)
};

} // namespace types
} // namespace search
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for SearchResultType enumeration.
template <>
struct EnumTraits<::nds::search::types::SearchResultType>
{
    static constexpr ::std::array<const char*, 6> names =
    {{
        "ADDRESS",
        "ADDRESS_COUNTRY",
        "ADDRESS_PLACE",
        "ADDRESS_ROAD",
        "ADDRESS_INTERSECTION",
        "POI"
    }};

    static constexpr ::std::array<::nds::search::types::SearchResultType, 6> values =
    {{
        ::nds::search::types::SearchResultType::ADDRESS,
        ::nds::search::types::SearchResultType::ADDRESS_COUNTRY,
        ::nds::search::types::SearchResultType::ADDRESS_PLACE,
        ::nds::search::types::SearchResultType::ADDRESS_ROAD,
        ::nds::search::types::SearchResultType::ADDRESS_INTERSECTION,
        ::nds::search::types::SearchResultType::POI
    }};

    static constexpr const char* enumName = "SearchResultType";
};

template <>
size_t enumToOrdinal<::nds::search::types::SearchResultType>(::nds::search::types::SearchResultType value);

template <>
::nds::search::types::SearchResultType valueToEnum<::nds::search::types::SearchResultType>(
        typename ::std::underlying_type<::nds::search::types::SearchResultType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::search::types::SearchResultType>(::nds::search::types::SearchResultType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::search::types::SearchResultType>(::zserio::DeltaContext& context, ::nds::search::types::SearchResultType value);

template <>
size_t bitSizeOf<::nds::search::types::SearchResultType>(::nds::search::types::SearchResultType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::search::types::SearchResultType>(::zserio::DeltaContext& context, ::nds::search::types::SearchResultType value);

template <>
size_t initializeOffsets<::nds::search::types::SearchResultType>(size_t bitPosition, ::nds::search::types::SearchResultType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::search::types::SearchResultType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::search::types::SearchResultType value);

template <>
::nds::search::types::SearchResultType read<::nds::search::types::SearchResultType>(::zserio::BitStreamReader& in);

template <>
::nds::search::types::SearchResultType read<::nds::search::types::SearchResultType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::search::types::SearchResultType>(::zserio::BitStreamWriter& out, ::nds::search::types::SearchResultType value);

template <>
void write<::zserio::DeltaContext, ::nds::search::types::SearchResultType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::search::types::SearchResultType value);

} // namespace zserio

#endif // NDS_SEARCH_TYPES_SEARCH_RESULT_TYPE_H
