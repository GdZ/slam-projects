/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTING_TYPES_ROUTE_SEGMENT_CONSUMPTION_H
#define NDS_ROUTING_TYPES_ROUTE_SEGMENT_CONSUMPTION_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/vehicle/FuelLiters.h>
#include <nds/core/vehicle/WattHrs.h>

namespace nds
{
namespace routing
{
namespace types
{

class RouteSegmentConsumption
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getBatteryConsumption()
        {
            return m_batteryConsumption_;
        }

    private:
        ::zserio::DeltaContext m_batteryConsumption_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    RouteSegmentConsumption() noexcept :
            RouteSegmentConsumption(allocator_type())
    {}

    explicit RouteSegmentConsumption(const allocator_type& allocator) noexcept;

    RouteSegmentConsumption(
            ::nds::core::vehicle::FuelLiters fuelConsumption_,
            ::nds::core::vehicle::WattHrs batteryConsumption_,
            const allocator_type& allocator = allocator_type()) :
            RouteSegmentConsumption(allocator)
    {
        m_fuelConsumption_ = fuelConsumption_;
        m_batteryConsumption_ = batteryConsumption_;
    }

    explicit RouteSegmentConsumption(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit RouteSegmentConsumption(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~RouteSegmentConsumption() = default;

    RouteSegmentConsumption(const RouteSegmentConsumption&) = default;
    RouteSegmentConsumption& operator=(const RouteSegmentConsumption&) = default;

    RouteSegmentConsumption(RouteSegmentConsumption&&) = default;
    RouteSegmentConsumption& operator=(RouteSegmentConsumption&&) = default;

    RouteSegmentConsumption(::zserio::PropagateAllocatorT,
            const RouteSegmentConsumption& other, const allocator_type& allocator);

    ::nds::core::vehicle::FuelLiters getFuelConsumption() const;
    void setFuelConsumption(::nds::core::vehicle::FuelLiters fuelConsumption_);

    ::nds::core::vehicle::WattHrs getBatteryConsumption() const;
    void setBatteryConsumption(::nds::core::vehicle::WattHrs batteryConsumption_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const RouteSegmentConsumption& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::vehicle::FuelLiters readFuelConsumption(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::WattHrs readBatteryConsumption(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::WattHrs readBatteryConsumption(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::core::vehicle::FuelLiters m_fuelConsumption_;
    ::nds::core::vehicle::WattHrs m_batteryConsumption_;
};

} // namespace types
} // namespace routing
} // namespace nds

#endif // NDS_ROUTING_TYPES_ROUTE_SEGMENT_CONSUMPTION_H
