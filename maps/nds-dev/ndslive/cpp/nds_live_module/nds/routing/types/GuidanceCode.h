/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTING_TYPES_GUIDANCE_CODE_H
#define NDS_ROUTING_TYPES_GUIDANCE_CODE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace routing
{
namespace types
{

enum class GuidanceCode : uint8_t
{
    STRAIGHT = UINT8_C(0),
    BEAR_LEFT = UINT8_C(1),
    BEAR_RIGHT = UINT8_C(2),
    LEFT = UINT8_C(3),
    RIGHT = UINT8_C(4),
    SLIGHT_LEFT = UINT8_C(5),
    SLIGHT_RIGHT = UINT8_C(6),
    SHARP_LEFT = UINT8_C(7),
    SHARP_RIGHT = UINT8_C(8),
    UTURN_LEFT = UINT8_C(9),
    UTURN_RIGHT = UINT8_C(10),
    UTURN_LEFT_DUAL = UINT8_C(11),
    UTURN_RIGHT_DUAL = UINT8_C(12),
    KEEP_LEFT = UINT8_C(13),
    KEEP_RIGHT = UINT8_C(14),
    KEEP_LEFT_SINGLE = UINT8_C(15),
    KEEP_RIGHT_SINGLE = UINT8_C(16),
    ROUNDABOUT = UINT8_C(17),
    ROUNDABOUT_REVERSED = UINT8_C(18),
    MOTORWAY_EXIT_LEFT = UINT8_C(19),
    MOTORWAY_EXIT_RIGHT = UINT8_C(20),
    BOARD_FERRY = UINT8_C(21),
    LEAVE_FERRY = UINT8_C(22),
    BOARD_CAR_SHUTTLE_TRAIN = UINT8_C(23),
    LEAVE_CAR_SHUTTLE_TRAIN = UINT8_C(24),
    ARRIVE = UINT8_C(25),
    DEPART = UINT8_C(26),
    HEAD_NORTH = UINT8_C(27),
    HEAD_NORTH_EAST = UINT8_C(28),
    HEAD_EAST = UINT8_C(29),
    HEAD_SOUTH_EAST = UINT8_C(30),
    HEAD_SOUTH = UINT8_C(31),
    HEAD_SOUTH_WEST = UINT8_C(32),
    HEAD_WEST = UINT8_C(33),
    HEAD_NORTH_WEST = UINT8_C(34)
};

} // namespace types
} // namespace routing
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for GuidanceCode enumeration.
template <>
struct EnumTraits<::nds::routing::types::GuidanceCode>
{
    static constexpr ::std::array<const char*, 35> names =
    {{
        "STRAIGHT",
        "BEAR_LEFT",
        "BEAR_RIGHT",
        "LEFT",
        "RIGHT",
        "SLIGHT_LEFT",
        "SLIGHT_RIGHT",
        "SHARP_LEFT",
        "SHARP_RIGHT",
        "UTURN_LEFT",
        "UTURN_RIGHT",
        "UTURN_LEFT_DUAL",
        "UTURN_RIGHT_DUAL",
        "KEEP_LEFT",
        "KEEP_RIGHT",
        "KEEP_LEFT_SINGLE",
        "KEEP_RIGHT_SINGLE",
        "ROUNDABOUT",
        "ROUNDABOUT_REVERSED",
        "MOTORWAY_EXIT_LEFT",
        "MOTORWAY_EXIT_RIGHT",
        "BOARD_FERRY",
        "LEAVE_FERRY",
        "BOARD_CAR_SHUTTLE_TRAIN",
        "LEAVE_CAR_SHUTTLE_TRAIN",
        "ARRIVE",
        "DEPART",
        "HEAD_NORTH",
        "HEAD_NORTH_EAST",
        "HEAD_EAST",
        "HEAD_SOUTH_EAST",
        "HEAD_SOUTH",
        "HEAD_SOUTH_WEST",
        "HEAD_WEST",
        "HEAD_NORTH_WEST"
    }};

    static constexpr ::std::array<::nds::routing::types::GuidanceCode, 35> values =
    {{
        ::nds::routing::types::GuidanceCode::STRAIGHT,
        ::nds::routing::types::GuidanceCode::BEAR_LEFT,
        ::nds::routing::types::GuidanceCode::BEAR_RIGHT,
        ::nds::routing::types::GuidanceCode::LEFT,
        ::nds::routing::types::GuidanceCode::RIGHT,
        ::nds::routing::types::GuidanceCode::SLIGHT_LEFT,
        ::nds::routing::types::GuidanceCode::SLIGHT_RIGHT,
        ::nds::routing::types::GuidanceCode::SHARP_LEFT,
        ::nds::routing::types::GuidanceCode::SHARP_RIGHT,
        ::nds::routing::types::GuidanceCode::UTURN_LEFT,
        ::nds::routing::types::GuidanceCode::UTURN_RIGHT,
        ::nds::routing::types::GuidanceCode::UTURN_LEFT_DUAL,
        ::nds::routing::types::GuidanceCode::UTURN_RIGHT_DUAL,
        ::nds::routing::types::GuidanceCode::KEEP_LEFT,
        ::nds::routing::types::GuidanceCode::KEEP_RIGHT,
        ::nds::routing::types::GuidanceCode::KEEP_LEFT_SINGLE,
        ::nds::routing::types::GuidanceCode::KEEP_RIGHT_SINGLE,
        ::nds::routing::types::GuidanceCode::ROUNDABOUT,
        ::nds::routing::types::GuidanceCode::ROUNDABOUT_REVERSED,
        ::nds::routing::types::GuidanceCode::MOTORWAY_EXIT_LEFT,
        ::nds::routing::types::GuidanceCode::MOTORWAY_EXIT_RIGHT,
        ::nds::routing::types::GuidanceCode::BOARD_FERRY,
        ::nds::routing::types::GuidanceCode::LEAVE_FERRY,
        ::nds::routing::types::GuidanceCode::BOARD_CAR_SHUTTLE_TRAIN,
        ::nds::routing::types::GuidanceCode::LEAVE_CAR_SHUTTLE_TRAIN,
        ::nds::routing::types::GuidanceCode::ARRIVE,
        ::nds::routing::types::GuidanceCode::DEPART,
        ::nds::routing::types::GuidanceCode::HEAD_NORTH,
        ::nds::routing::types::GuidanceCode::HEAD_NORTH_EAST,
        ::nds::routing::types::GuidanceCode::HEAD_EAST,
        ::nds::routing::types::GuidanceCode::HEAD_SOUTH_EAST,
        ::nds::routing::types::GuidanceCode::HEAD_SOUTH,
        ::nds::routing::types::GuidanceCode::HEAD_SOUTH_WEST,
        ::nds::routing::types::GuidanceCode::HEAD_WEST,
        ::nds::routing::types::GuidanceCode::HEAD_NORTH_WEST
    }};

    static constexpr const char* enumName = "GuidanceCode";
};

template <>
size_t enumToOrdinal<::nds::routing::types::GuidanceCode>(::nds::routing::types::GuidanceCode value);

template <>
::nds::routing::types::GuidanceCode valueToEnum<::nds::routing::types::GuidanceCode>(
        typename ::std::underlying_type<::nds::routing::types::GuidanceCode>::type rawValue);

template <>
uint32_t enumHashCode<::nds::routing::types::GuidanceCode>(::nds::routing::types::GuidanceCode value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::routing::types::GuidanceCode>(::zserio::DeltaContext& context, ::nds::routing::types::GuidanceCode value);

template <>
size_t bitSizeOf<::nds::routing::types::GuidanceCode>(::nds::routing::types::GuidanceCode value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::routing::types::GuidanceCode>(::zserio::DeltaContext& context, ::nds::routing::types::GuidanceCode value);

template <>
size_t initializeOffsets<::nds::routing::types::GuidanceCode>(size_t bitPosition, ::nds::routing::types::GuidanceCode value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::routing::types::GuidanceCode>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::routing::types::GuidanceCode value);

template <>
::nds::routing::types::GuidanceCode read<::nds::routing::types::GuidanceCode>(::zserio::BitStreamReader& in);

template <>
::nds::routing::types::GuidanceCode read<::nds::routing::types::GuidanceCode, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::routing::types::GuidanceCode>(::zserio::BitStreamWriter& out, ::nds::routing::types::GuidanceCode value);

template <>
void write<::zserio::DeltaContext, ::nds::routing::types::GuidanceCode>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::routing::types::GuidanceCode value);

} // namespace zserio

#endif // NDS_ROUTING_TYPES_GUIDANCE_CODE_H
