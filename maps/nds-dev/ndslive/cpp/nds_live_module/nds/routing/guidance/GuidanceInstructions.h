/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTING_GUIDANCE_GUIDANCE_INSTRUCTIONS_H
#define NDS_ROUTING_GUIDANCE_GUIDANCE_INSTRUCTIONS_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/routing/guidance/Instruction.h>

namespace nds
{
namespace routing
{
namespace guidance
{

class GuidanceInstructions
{
public:
    class ZserioPackingContext
    {
    };

    using allocator_type = ::std::allocator<uint8_t>;

    GuidanceInstructions() noexcept :
            GuidanceInstructions(allocator_type())
    {}

    explicit GuidanceInstructions(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_instructions = ::zserio::vector<::nds::routing::guidance::Instruction>,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_instructions, GuidanceInstructions, allocator_type> = 0>
    explicit GuidanceInstructions(
            ZSERIO_T_instructions&& instructions_,
            const allocator_type& allocator = allocator_type()) :
            GuidanceInstructions(allocator)
    {
        m_instructions_ = ZserioArrayType_instructions(::std::forward<ZSERIO_T_instructions>(instructions_));
    }

    explicit GuidanceInstructions(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit GuidanceInstructions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~GuidanceInstructions() = default;

    GuidanceInstructions(const GuidanceInstructions&) = default;
    GuidanceInstructions& operator=(const GuidanceInstructions&) = default;

    GuidanceInstructions(GuidanceInstructions&&) = default;
    GuidanceInstructions& operator=(GuidanceInstructions&&) = default;

    GuidanceInstructions(::zserio::PropagateAllocatorT,
            const GuidanceInstructions& other, const allocator_type& allocator);

    void initializeChildren();

    const ::zserio::vector<::nds::routing::guidance::Instruction>& getInstructions() const;
    ::zserio::vector<::nds::routing::guidance::Instruction>& getInstructions();
    void setInstructions(const ::zserio::vector<::nds::routing::guidance::Instruction>& instructions_);
    void setInstructions(::zserio::vector<::nds::routing::guidance::Instruction>&& instructions_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const GuidanceInstructions& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_instructions
    {
    public:
        using OwnerType = GuidanceInstructions;

        static void initializeElement(GuidanceInstructions& owner,
                ::nds::routing::guidance::Instruction& element, size_t index);
    };

    class ZserioElementFactory_instructions
    {
    public:
        using OwnerType = GuidanceInstructions;

        static void create(GuidanceInstructions& owner,
                ::zserio::vector<::nds::routing::guidance::Instruction>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(GuidanceInstructions& owner,
                ::zserio::vector<::nds::routing::guidance::Instruction>& array,
                ::nds::routing::guidance::Instruction::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_instructions = ::zserio::Array<::zserio::vector<::nds::routing::guidance::Instruction>, ::zserio::ObjectArrayTraits<::nds::routing::guidance::Instruction, ZserioElementFactory_instructions>, ::zserio::ArrayType::AUTO, ZserioArrayExpressions_instructions>;

    ZserioArrayType_instructions readInstructions(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_instructions readInstructions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ZserioArrayType_instructions m_instructions_;
};

} // namespace guidance
} // namespace routing
} // namespace nds

#endif // NDS_ROUTING_GUIDANCE_GUIDANCE_INSTRUCTIONS_H
