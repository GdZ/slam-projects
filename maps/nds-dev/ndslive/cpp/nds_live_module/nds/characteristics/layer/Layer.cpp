/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/characteristics/layer/RoadCharacteristicsLayer.h>
#include <nds/characteristics/metadata/RoadCharacsLayerContent.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace characteristics
{
namespace layer
{

RoadCharacteristicsLayer::RoadCharacteristicsLayer(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_shift_(::nds::core::geometry::CoordShift()),
        m_content_(::nds::characteristics::metadata::RoadCharacsLayerContent()),
        m_characsRoadRangeMaps_(::zserio::NullOpt),
        m_characsRoadPositionMaps_(::zserio::NullOpt),
        m_characsRoadRangeSets_(::zserio::NullOpt),
        m_characsRoadPositionSets_(::zserio::NullOpt),
        m_characsTransitionMaps_(::zserio::NullOpt),
        m_characsTransitionSets_(::zserio::NullOpt)
{
}

RoadCharacteristicsLayer::RoadCharacteristicsLayer(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_shift_(readShift(in)),
        m_content_(readContent(in)),
        m_characsRoadRangeMaps_(readCharacsRoadRangeMaps(in, allocator)),
        m_characsRoadPositionMaps_(readCharacsRoadPositionMaps(in, allocator)),
        m_characsRoadRangeSets_(readCharacsRoadRangeSets(in, allocator)),
        m_characsRoadPositionSets_(readCharacsRoadPositionSets(in, allocator)),
        m_characsTransitionMaps_(readCharacsTransitionMaps(in, allocator)),
        m_characsTransitionSets_(readCharacsTransitionSets(in, allocator))
{
}

RoadCharacteristicsLayer::RoadCharacteristicsLayer(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_shift_(readShift(context, in)),
        m_content_(readContent(context, in)),
        m_characsRoadRangeMaps_(readCharacsRoadRangeMaps(context, in, allocator)),
        m_characsRoadPositionMaps_(readCharacsRoadPositionMaps(context, in, allocator)),
        m_characsRoadRangeSets_(readCharacsRoadRangeSets(context, in, allocator)),
        m_characsRoadPositionSets_(readCharacsRoadPositionSets(context, in, allocator)),
        m_characsTransitionMaps_(readCharacsTransitionMaps(context, in, allocator)),
        m_characsTransitionSets_(readCharacsTransitionSets(context, in, allocator))
{
}

RoadCharacteristicsLayer::RoadCharacteristicsLayer(const RoadCharacteristicsLayer& other) :
        m_shift_(other.m_shift_),
        m_content_(other.m_content_),
        m_characsRoadRangeMaps_(other.m_characsRoadRangeMaps_),
        m_characsRoadPositionMaps_(other.m_characsRoadPositionMaps_),
        m_characsRoadRangeSets_(other.m_characsRoadRangeSets_),
        m_characsRoadPositionSets_(other.m_characsRoadPositionSets_),
        m_characsTransitionMaps_(other.m_characsTransitionMaps_),
        m_characsTransitionSets_(other.m_characsTransitionSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadCharacteristicsLayer& RoadCharacteristicsLayer::operator=(const RoadCharacteristicsLayer& other)
{
    m_shift_ = other.m_shift_;
    m_content_ = other.m_content_;
    m_characsRoadRangeMaps_ = other.m_characsRoadRangeMaps_;
    m_characsRoadPositionMaps_ = other.m_characsRoadPositionMaps_;
    m_characsRoadRangeSets_ = other.m_characsRoadRangeSets_;
    m_characsRoadPositionSets_ = other.m_characsRoadPositionSets_;
    m_characsTransitionMaps_ = other.m_characsTransitionMaps_;
    m_characsTransitionSets_ = other.m_characsTransitionSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadCharacteristicsLayer::RoadCharacteristicsLayer(RoadCharacteristicsLayer&& other) :
        m_shift_(::std::move(other.m_shift_)),
        m_content_(::std::move(other.m_content_)),
        m_characsRoadRangeMaps_(::std::move(other.m_characsRoadRangeMaps_)),
        m_characsRoadPositionMaps_(::std::move(other.m_characsRoadPositionMaps_)),
        m_characsRoadRangeSets_(::std::move(other.m_characsRoadRangeSets_)),
        m_characsRoadPositionSets_(::std::move(other.m_characsRoadPositionSets_)),
        m_characsTransitionMaps_(::std::move(other.m_characsTransitionMaps_)),
        m_characsTransitionSets_(::std::move(other.m_characsTransitionSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadCharacteristicsLayer& RoadCharacteristicsLayer::operator=(RoadCharacteristicsLayer&& other)
{
    m_shift_ = ::std::move(other.m_shift_);
    m_content_ = ::std::move(other.m_content_);
    m_characsRoadRangeMaps_ = ::std::move(other.m_characsRoadRangeMaps_);
    m_characsRoadPositionMaps_ = ::std::move(other.m_characsRoadPositionMaps_);
    m_characsRoadRangeSets_ = ::std::move(other.m_characsRoadRangeSets_);
    m_characsRoadPositionSets_ = ::std::move(other.m_characsRoadPositionSets_);
    m_characsTransitionMaps_ = ::std::move(other.m_characsTransitionMaps_);
    m_characsTransitionSets_ = ::std::move(other.m_characsTransitionSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadCharacteristicsLayer::RoadCharacteristicsLayer(::zserio::PropagateAllocatorT,
        const RoadCharacteristicsLayer& other, const allocator_type& allocator) :
        m_shift_(::zserio::allocatorPropagatingCopy(other.m_shift_, allocator)),
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_characsRoadRangeMaps_(::zserio::allocatorPropagatingCopy(other.m_characsRoadRangeMaps_, allocator)),
        m_characsRoadPositionMaps_(::zserio::allocatorPropagatingCopy(other.m_characsRoadPositionMaps_, allocator)),
        m_characsRoadRangeSets_(::zserio::allocatorPropagatingCopy(other.m_characsRoadRangeSets_, allocator)),
        m_characsRoadPositionSets_(::zserio::allocatorPropagatingCopy(other.m_characsRoadPositionSets_, allocator)),
        m_characsTransitionMaps_(::zserio::allocatorPropagatingCopy(other.m_characsTransitionMaps_, allocator)),
        m_characsTransitionSets_(::zserio::allocatorPropagatingCopy(other.m_characsTransitionSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void RoadCharacteristicsLayer::initializeChildren()
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
        m_characsRoadRangeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
        m_characsRoadPositionMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
        m_characsRoadRangeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
        m_characsRoadPositionSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
        m_characsTransitionMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
        m_characsTransitionSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));

    m_areChildrenInitialized = true;
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayer::getShift() const
{
    return m_shift_;
}

void RoadCharacteristicsLayer::setShift(::nds::core::geometry::CoordShift shift_)
{
    m_shift_ = shift_;
}

::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayer::getContent() const
{
    return m_content_;
}

void RoadCharacteristicsLayer::setContent(::nds::characteristics::metadata::RoadCharacsLayerContent content_)
{
    m_content_ = content_;
}

::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList& RoadCharacteristicsLayer::getCharacsRoadRangeMaps()
{
    return m_characsRoadRangeMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList& RoadCharacteristicsLayer::getCharacsRoadRangeMaps() const
{
    return m_characsRoadRangeMaps_.value();
}

void RoadCharacteristicsLayer::setCharacsRoadRangeMaps(const ::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList& characsRoadRangeMaps_)
{
    m_characsRoadRangeMaps_ = characsRoadRangeMaps_;
}

void RoadCharacteristicsLayer::setCharacsRoadRangeMaps(::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList&& characsRoadRangeMaps_)
{
    m_characsRoadRangeMaps_ = ::std::move(characsRoadRangeMaps_);
}

bool RoadCharacteristicsLayer::isCharacsRoadRangeMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS);
}

bool RoadCharacteristicsLayer::isCharacsRoadRangeMapsSet() const
{
    return m_characsRoadRangeMaps_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsRoadRangeMaps()
{
    m_characsRoadRangeMaps_.reset();
}

::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList& RoadCharacteristicsLayer::getCharacsRoadPositionMaps()
{
    return m_characsRoadPositionMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList& RoadCharacteristicsLayer::getCharacsRoadPositionMaps() const
{
    return m_characsRoadPositionMaps_.value();
}

void RoadCharacteristicsLayer::setCharacsRoadPositionMaps(const ::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList& characsRoadPositionMaps_)
{
    m_characsRoadPositionMaps_ = characsRoadPositionMaps_;
}

void RoadCharacteristicsLayer::setCharacsRoadPositionMaps(::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList&& characsRoadPositionMaps_)
{
    m_characsRoadPositionMaps_ = ::std::move(characsRoadPositionMaps_);
}

bool RoadCharacteristicsLayer::isCharacsRoadPositionMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS);
}

bool RoadCharacteristicsLayer::isCharacsRoadPositionMapsSet() const
{
    return m_characsRoadPositionMaps_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsRoadPositionMaps()
{
    m_characsRoadPositionMaps_.reset();
}

::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList& RoadCharacteristicsLayer::getCharacsRoadRangeSets()
{
    return m_characsRoadRangeSets_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList& RoadCharacteristicsLayer::getCharacsRoadRangeSets() const
{
    return m_characsRoadRangeSets_.value();
}

void RoadCharacteristicsLayer::setCharacsRoadRangeSets(const ::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList& characsRoadRangeSets_)
{
    m_characsRoadRangeSets_ = characsRoadRangeSets_;
}

void RoadCharacteristicsLayer::setCharacsRoadRangeSets(::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList&& characsRoadRangeSets_)
{
    m_characsRoadRangeSets_ = ::std::move(characsRoadRangeSets_);
}

bool RoadCharacteristicsLayer::isCharacsRoadRangeSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS);
}

bool RoadCharacteristicsLayer::isCharacsRoadRangeSetsSet() const
{
    return m_characsRoadRangeSets_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsRoadRangeSets()
{
    m_characsRoadRangeSets_.reset();
}

::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList& RoadCharacteristicsLayer::getCharacsRoadPositionSets()
{
    return m_characsRoadPositionSets_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList& RoadCharacteristicsLayer::getCharacsRoadPositionSets() const
{
    return m_characsRoadPositionSets_.value();
}

void RoadCharacteristicsLayer::setCharacsRoadPositionSets(const ::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList& characsRoadPositionSets_)
{
    m_characsRoadPositionSets_ = characsRoadPositionSets_;
}

void RoadCharacteristicsLayer::setCharacsRoadPositionSets(::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList&& characsRoadPositionSets_)
{
    m_characsRoadPositionSets_ = ::std::move(characsRoadPositionSets_);
}

bool RoadCharacteristicsLayer::isCharacsRoadPositionSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS);
}

bool RoadCharacteristicsLayer::isCharacsRoadPositionSetsSet() const
{
    return m_characsRoadPositionSets_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsRoadPositionSets()
{
    m_characsRoadPositionSets_.reset();
}

::nds::characteristics::instantiations::CharacsTransitionAttributeMapList& RoadCharacteristicsLayer::getCharacsTransitionMaps()
{
    return m_characsTransitionMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsTransitionAttributeMapList& RoadCharacteristicsLayer::getCharacsTransitionMaps() const
{
    return m_characsTransitionMaps_.value();
}

void RoadCharacteristicsLayer::setCharacsTransitionMaps(const ::nds::characteristics::instantiations::CharacsTransitionAttributeMapList& characsTransitionMaps_)
{
    m_characsTransitionMaps_ = characsTransitionMaps_;
}

void RoadCharacteristicsLayer::setCharacsTransitionMaps(::nds::characteristics::instantiations::CharacsTransitionAttributeMapList&& characsTransitionMaps_)
{
    m_characsTransitionMaps_ = ::std::move(characsTransitionMaps_);
}

bool RoadCharacteristicsLayer::isCharacsTransitionMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS);
}

bool RoadCharacteristicsLayer::isCharacsTransitionMapsSet() const
{
    return m_characsTransitionMaps_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsTransitionMaps()
{
    m_characsTransitionMaps_.reset();
}

::nds::characteristics::instantiations::CharacsTransitionAttributeSetList& RoadCharacteristicsLayer::getCharacsTransitionSets()
{
    return m_characsTransitionSets_.value();
}

const ::nds::characteristics::instantiations::CharacsTransitionAttributeSetList& RoadCharacteristicsLayer::getCharacsTransitionSets() const
{
    return m_characsTransitionSets_.value();
}

void RoadCharacteristicsLayer::setCharacsTransitionSets(const ::nds::characteristics::instantiations::CharacsTransitionAttributeSetList& characsTransitionSets_)
{
    m_characsTransitionSets_ = characsTransitionSets_;
}

void RoadCharacteristicsLayer::setCharacsTransitionSets(::nds::characteristics::instantiations::CharacsTransitionAttributeSetList&& characsTransitionSets_)
{
    m_characsTransitionSets_ = ::std::move(characsTransitionSets_);
}

bool RoadCharacteristicsLayer::isCharacsTransitionSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS);
}

bool RoadCharacteristicsLayer::isCharacsTransitionSetsSet() const
{
    return m_characsTransitionSets_.hasValue();
}

void RoadCharacteristicsLayer::resetCharacsTransitionSets()
{
    m_characsTransitionSets_.reset();
}

::nds::system::types::LayerType RoadCharacteristicsLayer::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void RoadCharacteristicsLayer::initPackingContext(RoadCharacteristicsLayer::ZserioPackingContext& context) const
{
    context.getShift().init<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    m_content_.initPackingContext(context.getContent());
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        m_characsRoadRangeMaps_.value().initPackingContext(context.getCharacsRoadRangeMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        m_characsRoadPositionMaps_.value().initPackingContext(context.getCharacsRoadPositionMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        m_characsRoadRangeSets_.value().initPackingContext(context.getCharacsRoadRangeSets());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        m_characsRoadPositionSets_.value().initPackingContext(context.getCharacsRoadPositionSets());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        m_characsTransitionMaps_.value().initPackingContext(context.getCharacsTransitionMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        m_characsTransitionSets_.value().initPackingContext(context.getCharacsTransitionSets());
    }
}

size_t RoadCharacteristicsLayer::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += UINT8_C(5);
    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition += m_characsRoadRangeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition += m_characsRoadPositionMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition += m_characsRoadRangeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition += m_characsRoadPositionSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        endBitPosition += m_characsTransitionMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        endBitPosition += m_characsTransitionSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadCharacteristicsLayer::bitSizeOf(RoadCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition += m_characsRoadRangeMaps_.value().bitSizeOf(context.getCharacsRoadRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition += m_characsRoadPositionMaps_.value().bitSizeOf(context.getCharacsRoadPositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition += m_characsRoadRangeSets_.value().bitSizeOf(context.getCharacsRoadRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition += m_characsRoadPositionSets_.value().bitSizeOf(context.getCharacsRoadPositionSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        endBitPosition += m_characsTransitionMaps_.value().bitSizeOf(context.getCharacsTransitionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        endBitPosition += m_characsTransitionSets_.value().bitSizeOf(context.getCharacsTransitionSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadCharacteristicsLayer::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition += UINT8_C(5);
    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition = m_characsRoadRangeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition = m_characsRoadPositionMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition = m_characsRoadRangeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition = m_characsRoadPositionSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        endBitPosition = m_characsTransitionMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        endBitPosition = m_characsTransitionSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t RoadCharacteristicsLayer::initializeOffsets(RoadCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition = m_characsRoadRangeMaps_.value().initializeOffsets(context.getCharacsRoadRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition = m_characsRoadPositionMaps_.value().initializeOffsets(context.getCharacsRoadPositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition = m_characsRoadRangeSets_.value().initializeOffsets(context.getCharacsRoadRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition = m_characsRoadPositionSets_.value().initializeOffsets(context.getCharacsRoadPositionSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        endBitPosition = m_characsTransitionMaps_.value().initializeOffsets(context.getCharacsTransitionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        endBitPosition = m_characsTransitionSets_.value().initializeOffsets(context.getCharacsTransitionSets(), endBitPosition);
    }

    return endBitPosition;
}

bool RoadCharacteristicsLayer::operator==(const RoadCharacteristicsLayer& other) const
{
    if (this != &other)
    {
        return
                (m_shift_ == other.m_shift_) &&
                (m_content_ == other.m_content_) &&
                (!isCharacsRoadRangeMapsUsed() ? !other.isCharacsRoadRangeMapsUsed() : (m_characsRoadRangeMaps_ == other.m_characsRoadRangeMaps_)) &&
                (!isCharacsRoadPositionMapsUsed() ? !other.isCharacsRoadPositionMapsUsed() : (m_characsRoadPositionMaps_ == other.m_characsRoadPositionMaps_)) &&
                (!isCharacsRoadRangeSetsUsed() ? !other.isCharacsRoadRangeSetsUsed() : (m_characsRoadRangeSets_ == other.m_characsRoadRangeSets_)) &&
                (!isCharacsRoadPositionSetsUsed() ? !other.isCharacsRoadPositionSetsUsed() : (m_characsRoadPositionSets_ == other.m_characsRoadPositionSets_)) &&
                (!isCharacsTransitionMapsUsed() ? !other.isCharacsTransitionMapsUsed() : (m_characsTransitionMaps_ == other.m_characsTransitionMaps_)) &&
                (!isCharacsTransitionSetsUsed() ? !other.isCharacsTransitionSetsUsed() : (m_characsTransitionSets_ == other.m_characsTransitionSets_));
    }

    return true;
}

uint32_t RoadCharacteristicsLayer::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_shift_);
    result = ::zserio::calcHashCode(result, m_content_);
    if (isCharacsRoadRangeMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadRangeMaps_);
    if (isCharacsRoadPositionMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadPositionMaps_);
    if (isCharacsRoadRangeSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadRangeSets_);
    if (isCharacsRoadPositionSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadPositionSets_);
    if (isCharacsTransitionMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsTransitionMaps_);
    if (isCharacsTransitionSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsTransitionSets_);

    return result;
}

void RoadCharacteristicsLayer::write(::zserio::BitStreamWriter& out) const
{
    out.writeBits(m_shift_, UINT8_C(5));

    m_content_.write(out);

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        // check parameters
        if (m_characsRoadRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadRangeMaps: ") <<
                    m_characsRoadRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        // check parameters
        if (m_characsRoadPositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadPositionMaps: ") <<
                    m_characsRoadPositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        // check parameters
        if (m_characsRoadRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadRangeSets: ") <<
                    m_characsRoadRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeSets_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        // check parameters
        if (m_characsRoadPositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadPositionSets: ") <<
                    m_characsRoadPositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionSets_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        // check parameters
        if (m_characsTransitionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsTransitionMaps: ") <<
                    m_characsTransitionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsTransitionMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        // check parameters
        if (m_characsTransitionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsTransitionSets: ") <<
                    m_characsTransitionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsTransitionSets_.value().write(out);
    }
}

void RoadCharacteristicsLayer::write(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    context.getShift().write<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(out, m_shift_);

    m_content_.write(context.getContent(), out);

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        // check parameters
        if (m_characsRoadRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadRangeMaps: ") <<
                    m_characsRoadRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeMaps_.value().write(context.getCharacsRoadRangeMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        // check parameters
        if (m_characsRoadPositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadPositionMaps: ") <<
                    m_characsRoadPositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionMaps_.value().write(context.getCharacsRoadPositionMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        // check parameters
        if (m_characsRoadRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadRangeSets: ") <<
                    m_characsRoadRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeSets_.value().write(context.getCharacsRoadRangeSets(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        // check parameters
        if (m_characsRoadPositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsRoadPositionSets: ") <<
                    m_characsRoadPositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionSets_.value().write(context.getCharacsRoadPositionSets(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        // check parameters
        if (m_characsTransitionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsTransitionMaps: ") <<
                    m_characsTransitionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsTransitionMaps_.value().write(context.getCharacsTransitionMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        // check parameters
        if (m_characsTransitionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayer.characsTransitionSets: ") <<
                    m_characsTransitionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsTransitionSets_.value().write(context.getCharacsTransitionSets(), out);
    }
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayer::readShift(::zserio::BitStreamReader& in)
{
    return static_cast<::nds::core::geometry::CoordShift>(in.readBits(UINT8_C(5)));
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayer::readShift(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return context.getShift().read<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(in);
}
::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayer::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadCharacsLayerContent(in);
}

::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayer::readContent(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadCharacsLayerContent(context.getContent(), in);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList> RoadCharacteristicsLayer::readCharacsRoadRangeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList> RoadCharacteristicsLayer::readCharacsRoadRangeMaps(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList(context.getCharacsRoadRangeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList> RoadCharacteristicsLayer::readCharacsRoadPositionMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList> RoadCharacteristicsLayer::readCharacsRoadPositionMaps(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList(context.getCharacsRoadPositionMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList> RoadCharacteristicsLayer::readCharacsRoadRangeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList> RoadCharacteristicsLayer::readCharacsRoadRangeSets(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList(context.getCharacsRoadRangeSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadRangeAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList> RoadCharacteristicsLayer::readCharacsRoadPositionSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList> RoadCharacteristicsLayer::readCharacsRoadPositionSets(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList(context.getCharacsRoadPositionSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadPositionAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList> RoadCharacteristicsLayer::readCharacsTransitionMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList>(::nds::characteristics::instantiations::CharacsTransitionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList> RoadCharacteristicsLayer::readCharacsTransitionMaps(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList>(::nds::characteristics::instantiations::CharacsTransitionAttributeMapList(context.getCharacsTransitionMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList> RoadCharacteristicsLayer::readCharacsTransitionSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList>(::nds::characteristics::instantiations::CharacsTransitionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList> RoadCharacteristicsLayer::readCharacsTransitionSets(RoadCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::TRANSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList>(::nds::characteristics::instantiations::CharacsTransitionAttributeSetList(context.getCharacsTransitionSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsTransitionAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace characteristics
} // namespace nds

/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/characteristics/layer/RoadCharacteristicsLayerIndirect.h>
#include <nds/characteristics/metadata/RoadCharacsLayerContent.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace characteristics
{
namespace layer
{

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_shift_(::nds::core::geometry::CoordShift()),
        m_content_(::nds::characteristics::metadata::RoadCharacsLayerContent()),
        m_characsRoadRangeMaps_(::zserio::NullOpt),
        m_characsRoadPositionMaps_(::zserio::NullOpt),
        m_characsRoadRangeSets_(::zserio::NullOpt),
        m_characsRoadPositionSets_(::zserio::NullOpt)
{
}

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_shift_(readShift(in)),
        m_content_(readContent(in)),
        m_characsRoadRangeMaps_(readCharacsRoadRangeMaps(in, allocator)),
        m_characsRoadPositionMaps_(readCharacsRoadPositionMaps(in, allocator)),
        m_characsRoadRangeSets_(readCharacsRoadRangeSets(in, allocator)),
        m_characsRoadPositionSets_(readCharacsRoadPositionSets(in, allocator))
{
}

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_shift_(readShift(context, in)),
        m_content_(readContent(context, in)),
        m_characsRoadRangeMaps_(readCharacsRoadRangeMaps(context, in, allocator)),
        m_characsRoadPositionMaps_(readCharacsRoadPositionMaps(context, in, allocator)),
        m_characsRoadRangeSets_(readCharacsRoadRangeSets(context, in, allocator)),
        m_characsRoadPositionSets_(readCharacsRoadPositionSets(context, in, allocator))
{
}

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(const RoadCharacteristicsLayerIndirect& other) :
        m_shift_(other.m_shift_),
        m_content_(other.m_content_),
        m_characsRoadRangeMaps_(other.m_characsRoadRangeMaps_),
        m_characsRoadPositionMaps_(other.m_characsRoadPositionMaps_),
        m_characsRoadRangeSets_(other.m_characsRoadRangeSets_),
        m_characsRoadPositionSets_(other.m_characsRoadPositionSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadCharacteristicsLayerIndirect& RoadCharacteristicsLayerIndirect::operator=(const RoadCharacteristicsLayerIndirect& other)
{
    m_shift_ = other.m_shift_;
    m_content_ = other.m_content_;
    m_characsRoadRangeMaps_ = other.m_characsRoadRangeMaps_;
    m_characsRoadPositionMaps_ = other.m_characsRoadPositionMaps_;
    m_characsRoadRangeSets_ = other.m_characsRoadRangeSets_;
    m_characsRoadPositionSets_ = other.m_characsRoadPositionSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(RoadCharacteristicsLayerIndirect&& other) :
        m_shift_(::std::move(other.m_shift_)),
        m_content_(::std::move(other.m_content_)),
        m_characsRoadRangeMaps_(::std::move(other.m_characsRoadRangeMaps_)),
        m_characsRoadPositionMaps_(::std::move(other.m_characsRoadPositionMaps_)),
        m_characsRoadRangeSets_(::std::move(other.m_characsRoadRangeSets_)),
        m_characsRoadPositionSets_(::std::move(other.m_characsRoadPositionSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadCharacteristicsLayerIndirect& RoadCharacteristicsLayerIndirect::operator=(RoadCharacteristicsLayerIndirect&& other)
{
    m_shift_ = ::std::move(other.m_shift_);
    m_content_ = ::std::move(other.m_content_);
    m_characsRoadRangeMaps_ = ::std::move(other.m_characsRoadRangeMaps_);
    m_characsRoadPositionMaps_ = ::std::move(other.m_characsRoadPositionMaps_);
    m_characsRoadRangeSets_ = ::std::move(other.m_characsRoadRangeSets_);
    m_characsRoadPositionSets_ = ::std::move(other.m_characsRoadPositionSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadCharacteristicsLayerIndirect::RoadCharacteristicsLayerIndirect(::zserio::PropagateAllocatorT,
        const RoadCharacteristicsLayerIndirect& other, const allocator_type& allocator) :
        m_shift_(::zserio::allocatorPropagatingCopy(other.m_shift_, allocator)),
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_characsRoadRangeMaps_(::zserio::allocatorPropagatingCopy(other.m_characsRoadRangeMaps_, allocator)),
        m_characsRoadPositionMaps_(::zserio::allocatorPropagatingCopy(other.m_characsRoadPositionMaps_, allocator)),
        m_characsRoadRangeSets_(::zserio::allocatorPropagatingCopy(other.m_characsRoadRangeSets_, allocator)),
        m_characsRoadPositionSets_(::zserio::allocatorPropagatingCopy(other.m_characsRoadPositionSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void RoadCharacteristicsLayerIndirect::initializeChildren()
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
        m_characsRoadRangeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
        m_characsRoadPositionMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
        m_characsRoadRangeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
        m_characsRoadPositionSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));

    m_areChildrenInitialized = true;
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayerIndirect::getShift() const
{
    return m_shift_;
}

void RoadCharacteristicsLayerIndirect::setShift(::nds::core::geometry::CoordShift shift_)
{
    m_shift_ = shift_;
}

::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayerIndirect::getContent() const
{
    return m_content_;
}

void RoadCharacteristicsLayerIndirect::setContent(::nds::characteristics::metadata::RoadCharacsLayerContent content_)
{
    m_content_ = content_;
}

::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList& RoadCharacteristicsLayerIndirect::getCharacsRoadRangeMaps()
{
    return m_characsRoadRangeMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList& RoadCharacteristicsLayerIndirect::getCharacsRoadRangeMaps() const
{
    return m_characsRoadRangeMaps_.value();
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadRangeMaps(const ::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList& characsRoadRangeMaps_)
{
    m_characsRoadRangeMaps_ = characsRoadRangeMaps_;
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadRangeMaps(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList&& characsRoadRangeMaps_)
{
    m_characsRoadRangeMaps_ = ::std::move(characsRoadRangeMaps_);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadRangeMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadRangeMapsSet() const
{
    return m_characsRoadRangeMaps_.hasValue();
}

void RoadCharacteristicsLayerIndirect::resetCharacsRoadRangeMaps()
{
    m_characsRoadRangeMaps_.reset();
}

::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList& RoadCharacteristicsLayerIndirect::getCharacsRoadPositionMaps()
{
    return m_characsRoadPositionMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList& RoadCharacteristicsLayerIndirect::getCharacsRoadPositionMaps() const
{
    return m_characsRoadPositionMaps_.value();
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadPositionMaps(const ::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList& characsRoadPositionMaps_)
{
    m_characsRoadPositionMaps_ = characsRoadPositionMaps_;
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadPositionMaps(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList&& characsRoadPositionMaps_)
{
    m_characsRoadPositionMaps_ = ::std::move(characsRoadPositionMaps_);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadPositionMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadPositionMapsSet() const
{
    return m_characsRoadPositionMaps_.hasValue();
}

void RoadCharacteristicsLayerIndirect::resetCharacsRoadPositionMaps()
{
    m_characsRoadPositionMaps_.reset();
}

::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList& RoadCharacteristicsLayerIndirect::getCharacsRoadRangeSets()
{
    return m_characsRoadRangeSets_.value();
}

const ::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList& RoadCharacteristicsLayerIndirect::getCharacsRoadRangeSets() const
{
    return m_characsRoadRangeSets_.value();
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadRangeSets(const ::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList& characsRoadRangeSets_)
{
    m_characsRoadRangeSets_ = characsRoadRangeSets_;
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadRangeSets(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList&& characsRoadRangeSets_)
{
    m_characsRoadRangeSets_ = ::std::move(characsRoadRangeSets_);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadRangeSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadRangeSetsSet() const
{
    return m_characsRoadRangeSets_.hasValue();
}

void RoadCharacteristicsLayerIndirect::resetCharacsRoadRangeSets()
{
    m_characsRoadRangeSets_.reset();
}

::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList& RoadCharacteristicsLayerIndirect::getCharacsRoadPositionSets()
{
    return m_characsRoadPositionSets_.value();
}

const ::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList& RoadCharacteristicsLayerIndirect::getCharacsRoadPositionSets() const
{
    return m_characsRoadPositionSets_.value();
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadPositionSets(const ::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList& characsRoadPositionSets_)
{
    m_characsRoadPositionSets_ = characsRoadPositionSets_;
}

void RoadCharacteristicsLayerIndirect::setCharacsRoadPositionSets(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList&& characsRoadPositionSets_)
{
    m_characsRoadPositionSets_ = ::std::move(characsRoadPositionSets_);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadPositionSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS);
}

bool RoadCharacteristicsLayerIndirect::isCharacsRoadPositionSetsSet() const
{
    return m_characsRoadPositionSets_.hasValue();
}

void RoadCharacteristicsLayerIndirect::resetCharacsRoadPositionSets()
{
    m_characsRoadPositionSets_.reset();
}

::nds::system::types::LayerType RoadCharacteristicsLayerIndirect::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void RoadCharacteristicsLayerIndirect::initPackingContext(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context) const
{
    context.getShift().init<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    m_content_.initPackingContext(context.getContent());
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        m_characsRoadRangeMaps_.value().initPackingContext(context.getCharacsRoadRangeMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        m_characsRoadPositionMaps_.value().initPackingContext(context.getCharacsRoadPositionMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        m_characsRoadRangeSets_.value().initPackingContext(context.getCharacsRoadRangeSets());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        m_characsRoadPositionSets_.value().initPackingContext(context.getCharacsRoadPositionSets());
    }
}

size_t RoadCharacteristicsLayerIndirect::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += UINT8_C(5);
    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition += m_characsRoadRangeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition += m_characsRoadPositionMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition += m_characsRoadRangeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition += m_characsRoadPositionSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadCharacteristicsLayerIndirect::bitSizeOf(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition += m_characsRoadRangeMaps_.value().bitSizeOf(context.getCharacsRoadRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition += m_characsRoadPositionMaps_.value().bitSizeOf(context.getCharacsRoadPositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition += m_characsRoadRangeSets_.value().bitSizeOf(context.getCharacsRoadRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition += m_characsRoadPositionSets_.value().bitSizeOf(context.getCharacsRoadPositionSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadCharacteristicsLayerIndirect::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition += UINT8_C(5);
    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition = m_characsRoadRangeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition = m_characsRoadPositionMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition = m_characsRoadRangeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition = m_characsRoadPositionSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t RoadCharacteristicsLayerIndirect::initializeOffsets(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        endBitPosition = m_characsRoadRangeMaps_.value().initializeOffsets(context.getCharacsRoadRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        endBitPosition = m_characsRoadPositionMaps_.value().initializeOffsets(context.getCharacsRoadPositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        endBitPosition = m_characsRoadRangeSets_.value().initializeOffsets(context.getCharacsRoadRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        endBitPosition = m_characsRoadPositionSets_.value().initializeOffsets(context.getCharacsRoadPositionSets(), endBitPosition);
    }

    return endBitPosition;
}

bool RoadCharacteristicsLayerIndirect::operator==(const RoadCharacteristicsLayerIndirect& other) const
{
    if (this != &other)
    {
        return
                (m_shift_ == other.m_shift_) &&
                (m_content_ == other.m_content_) &&
                (!isCharacsRoadRangeMapsUsed() ? !other.isCharacsRoadRangeMapsUsed() : (m_characsRoadRangeMaps_ == other.m_characsRoadRangeMaps_)) &&
                (!isCharacsRoadPositionMapsUsed() ? !other.isCharacsRoadPositionMapsUsed() : (m_characsRoadPositionMaps_ == other.m_characsRoadPositionMaps_)) &&
                (!isCharacsRoadRangeSetsUsed() ? !other.isCharacsRoadRangeSetsUsed() : (m_characsRoadRangeSets_ == other.m_characsRoadRangeSets_)) &&
                (!isCharacsRoadPositionSetsUsed() ? !other.isCharacsRoadPositionSetsUsed() : (m_characsRoadPositionSets_ == other.m_characsRoadPositionSets_));
    }

    return true;
}

uint32_t RoadCharacteristicsLayerIndirect::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_shift_);
    result = ::zserio::calcHashCode(result, m_content_);
    if (isCharacsRoadRangeMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadRangeMaps_);
    if (isCharacsRoadPositionMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadPositionMaps_);
    if (isCharacsRoadRangeSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadRangeSets_);
    if (isCharacsRoadPositionSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadPositionSets_);

    return result;
}

void RoadCharacteristicsLayerIndirect::write(::zserio::BitStreamWriter& out) const
{
    out.writeBits(m_shift_, UINT8_C(5));

    m_content_.write(out);

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        // check parameters
        if (m_characsRoadRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadRangeMaps: ") <<
                    m_characsRoadRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        // check parameters
        if (m_characsRoadPositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadPositionMaps: ") <<
                    m_characsRoadPositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        // check parameters
        if (m_characsRoadRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadRangeSets: ") <<
                    m_characsRoadRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeSets_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        // check parameters
        if (m_characsRoadPositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadPositionSets: ") <<
                    m_characsRoadPositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionSets_.value().write(out);
    }
}

void RoadCharacteristicsLayerIndirect::write(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    context.getShift().write<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(out, m_shift_);

    m_content_.write(context.getContent(), out);

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        // check parameters
        if (m_characsRoadRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadRangeMaps: ") <<
                    m_characsRoadRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeMaps_.value().write(context.getCharacsRoadRangeMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        // check parameters
        if (m_characsRoadPositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadPositionMaps: ") <<
                    m_characsRoadPositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionMaps_.value().write(context.getCharacsRoadPositionMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        // check parameters
        if (m_characsRoadRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadRangeSets: ") <<
                    m_characsRoadRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadRangeSets_.value().write(context.getCharacsRoadRangeSets(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        // check parameters
        if (m_characsRoadPositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadCharacteristicsLayerIndirect.characsRoadPositionSets: ") <<
                    m_characsRoadPositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadPositionSets_.value().write(context.getCharacsRoadPositionSets(), out);
    }
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayerIndirect::readShift(::zserio::BitStreamReader& in)
{
    return static_cast<::nds::core::geometry::CoordShift>(in.readBits(UINT8_C(5)));
}

::nds::core::geometry::CoordShift RoadCharacteristicsLayerIndirect::readShift(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return context.getShift().read<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(in);
}
::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayerIndirect::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadCharacsLayerContent(in);
}

::nds::characteristics::metadata::RoadCharacsLayerContent RoadCharacteristicsLayerIndirect::readContent(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadCharacsLayerContent(context.getContent(), in);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList> RoadCharacteristicsLayerIndirect::readCharacsRoadRangeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList> RoadCharacteristicsLayerIndirect::readCharacsRoadRangeMaps(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList(context.getCharacsRoadRangeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList> RoadCharacteristicsLayerIndirect::readCharacsRoadPositionMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList>(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList> RoadCharacteristicsLayerIndirect::readCharacsRoadPositionMaps(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList>(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList(context.getCharacsRoadPositionMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList> RoadCharacteristicsLayerIndirect::readCharacsRoadRangeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList> RoadCharacteristicsLayerIndirect::readCharacsRoadRangeSets(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList(context.getCharacsRoadRangeSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadRangeAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList> RoadCharacteristicsLayerIndirect::readCharacsRoadPositionSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList>(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList> RoadCharacteristicsLayerIndirect::readCharacsRoadPositionSets(RoadCharacteristicsLayerIndirect::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS) == ::nds::characteristics::metadata::RoadCharacsLayerContent::Values::ROAD_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList>(::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList(context.getCharacsRoadPositionSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsIndirectRoadPositionAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace characteristics
} // namespace nds

/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/characteristics/layer/RoadLocationCharacteristicsLayer.h>
#include <nds/characteristics/metadata/RoadLocationCharacsLayerContent.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace characteristics
{
namespace layer
{

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_content_(::nds::characteristics::metadata::RoadLocationCharacsLayerContent()),
        m_shift_(::nds::core::geometry::CoordShift()),
        m_characsRoadLocationRangeMaps_(::zserio::NullOpt),
        m_characsRoadLocationRangeSets_(::zserio::NullOpt)
{
}

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(in)),
        m_shift_(readShift(in)),
        m_characsRoadLocationRangeMaps_(readCharacsRoadLocationRangeMaps(in, allocator)),
        m_characsRoadLocationRangeSets_(readCharacsRoadLocationRangeSets(in, allocator))
{
}

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(context, in)),
        m_shift_(readShift(context, in)),
        m_characsRoadLocationRangeMaps_(readCharacsRoadLocationRangeMaps(context, in, allocator)),
        m_characsRoadLocationRangeSets_(readCharacsRoadLocationRangeSets(context, in, allocator))
{
}

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(const RoadLocationCharacteristicsLayer& other) :
        m_content_(other.m_content_),
        m_shift_(other.m_shift_),
        m_characsRoadLocationRangeMaps_(other.m_characsRoadLocationRangeMaps_),
        m_characsRoadLocationRangeSets_(other.m_characsRoadLocationRangeSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadLocationCharacteristicsLayer& RoadLocationCharacteristicsLayer::operator=(const RoadLocationCharacteristicsLayer& other)
{
    m_content_ = other.m_content_;
    m_shift_ = other.m_shift_;
    m_characsRoadLocationRangeMaps_ = other.m_characsRoadLocationRangeMaps_;
    m_characsRoadLocationRangeSets_ = other.m_characsRoadLocationRangeSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(RoadLocationCharacteristicsLayer&& other) :
        m_content_(::std::move(other.m_content_)),
        m_shift_(::std::move(other.m_shift_)),
        m_characsRoadLocationRangeMaps_(::std::move(other.m_characsRoadLocationRangeMaps_)),
        m_characsRoadLocationRangeSets_(::std::move(other.m_characsRoadLocationRangeSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

RoadLocationCharacteristicsLayer& RoadLocationCharacteristicsLayer::operator=(RoadLocationCharacteristicsLayer&& other)
{
    m_content_ = ::std::move(other.m_content_);
    m_shift_ = ::std::move(other.m_shift_);
    m_characsRoadLocationRangeMaps_ = ::std::move(other.m_characsRoadLocationRangeMaps_);
    m_characsRoadLocationRangeSets_ = ::std::move(other.m_characsRoadLocationRangeSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

RoadLocationCharacteristicsLayer::RoadLocationCharacteristicsLayer(::zserio::PropagateAllocatorT,
        const RoadLocationCharacteristicsLayer& other, const allocator_type& allocator) :
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_shift_(::zserio::allocatorPropagatingCopy(other.m_shift_, allocator)),
        m_characsRoadLocationRangeMaps_(::zserio::allocatorPropagatingCopy(other.m_characsRoadLocationRangeMaps_, allocator)),
        m_characsRoadLocationRangeSets_(::zserio::allocatorPropagatingCopy(other.m_characsRoadLocationRangeSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void RoadLocationCharacteristicsLayer::initializeChildren()
{
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
        m_characsRoadLocationRangeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
        m_characsRoadLocationRangeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));

    m_areChildrenInitialized = true;
}

::nds::characteristics::metadata::RoadLocationCharacsLayerContent RoadLocationCharacteristicsLayer::getContent() const
{
    return m_content_;
}

void RoadLocationCharacteristicsLayer::setContent(::nds::characteristics::metadata::RoadLocationCharacsLayerContent content_)
{
    m_content_ = content_;
}

::nds::core::geometry::CoordShift RoadLocationCharacteristicsLayer::getShift() const
{
    return m_shift_;
}

void RoadLocationCharacteristicsLayer::setShift(::nds::core::geometry::CoordShift shift_)
{
    m_shift_ = shift_;
}

::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList& RoadLocationCharacteristicsLayer::getCharacsRoadLocationRangeMaps()
{
    return m_characsRoadLocationRangeMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList& RoadLocationCharacteristicsLayer::getCharacsRoadLocationRangeMaps() const
{
    return m_characsRoadLocationRangeMaps_.value();
}

void RoadLocationCharacteristicsLayer::setCharacsRoadLocationRangeMaps(const ::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList& characsRoadLocationRangeMaps_)
{
    m_characsRoadLocationRangeMaps_ = characsRoadLocationRangeMaps_;
}

void RoadLocationCharacteristicsLayer::setCharacsRoadLocationRangeMaps(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList&& characsRoadLocationRangeMaps_)
{
    m_characsRoadLocationRangeMaps_ = ::std::move(characsRoadLocationRangeMaps_);
}

bool RoadLocationCharacteristicsLayer::isCharacsRoadLocationRangeMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS);
}

bool RoadLocationCharacteristicsLayer::isCharacsRoadLocationRangeMapsSet() const
{
    return m_characsRoadLocationRangeMaps_.hasValue();
}

void RoadLocationCharacteristicsLayer::resetCharacsRoadLocationRangeMaps()
{
    m_characsRoadLocationRangeMaps_.reset();
}

::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList& RoadLocationCharacteristicsLayer::getCharacsRoadLocationRangeSets()
{
    return m_characsRoadLocationRangeSets_.value();
}

const ::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList& RoadLocationCharacteristicsLayer::getCharacsRoadLocationRangeSets() const
{
    return m_characsRoadLocationRangeSets_.value();
}

void RoadLocationCharacteristicsLayer::setCharacsRoadLocationRangeSets(const ::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList& characsRoadLocationRangeSets_)
{
    m_characsRoadLocationRangeSets_ = characsRoadLocationRangeSets_;
}

void RoadLocationCharacteristicsLayer::setCharacsRoadLocationRangeSets(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList&& characsRoadLocationRangeSets_)
{
    m_characsRoadLocationRangeSets_ = ::std::move(characsRoadLocationRangeSets_);
}

bool RoadLocationCharacteristicsLayer::isCharacsRoadLocationRangeSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS);
}

bool RoadLocationCharacteristicsLayer::isCharacsRoadLocationRangeSetsSet() const
{
    return m_characsRoadLocationRangeSets_.hasValue();
}

void RoadLocationCharacteristicsLayer::resetCharacsRoadLocationRangeSets()
{
    m_characsRoadLocationRangeSets_.reset();
}

::nds::system::types::LayerType RoadLocationCharacteristicsLayer::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void RoadLocationCharacteristicsLayer::initPackingContext(RoadLocationCharacteristicsLayer::ZserioPackingContext& context) const
{
    m_content_.initPackingContext(context.getContent());
    context.getShift().init<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        m_characsRoadLocationRangeMaps_.value().initPackingContext(context.getCharacsRoadLocationRangeMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        m_characsRoadLocationRangeSets_.value().initPackingContext(context.getCharacsRoadLocationRangeSets());
    }
}

size_t RoadLocationCharacteristicsLayer::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    endBitPosition += UINT8_C(5);
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        endBitPosition += m_characsRoadLocationRangeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        endBitPosition += m_characsRoadLocationRangeSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadLocationCharacteristicsLayer::bitSizeOf(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        endBitPosition += m_characsRoadLocationRangeMaps_.value().bitSizeOf(context.getCharacsRoadLocationRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        endBitPosition += m_characsRoadLocationRangeSets_.value().bitSizeOf(context.getCharacsRoadLocationRangeSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t RoadLocationCharacteristicsLayer::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    endBitPosition += UINT8_C(5);
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        endBitPosition = m_characsRoadLocationRangeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        endBitPosition = m_characsRoadLocationRangeSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t RoadLocationCharacteristicsLayer::initializeOffsets(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        endBitPosition = m_characsRoadLocationRangeMaps_.value().initializeOffsets(context.getCharacsRoadLocationRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        endBitPosition = m_characsRoadLocationRangeSets_.value().initializeOffsets(context.getCharacsRoadLocationRangeSets(), endBitPosition);
    }

    return endBitPosition;
}

bool RoadLocationCharacteristicsLayer::operator==(const RoadLocationCharacteristicsLayer& other) const
{
    if (this != &other)
    {
        return
                (m_content_ == other.m_content_) &&
                (m_shift_ == other.m_shift_) &&
                (!isCharacsRoadLocationRangeMapsUsed() ? !other.isCharacsRoadLocationRangeMapsUsed() : (m_characsRoadLocationRangeMaps_ == other.m_characsRoadLocationRangeMaps_)) &&
                (!isCharacsRoadLocationRangeSetsUsed() ? !other.isCharacsRoadLocationRangeSetsUsed() : (m_characsRoadLocationRangeSets_ == other.m_characsRoadLocationRangeSets_));
    }

    return true;
}

uint32_t RoadLocationCharacteristicsLayer::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_content_);
    result = ::zserio::calcHashCode(result, m_shift_);
    if (isCharacsRoadLocationRangeMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadLocationRangeMaps_);
    if (isCharacsRoadLocationRangeSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsRoadLocationRangeSets_);

    return result;
}

void RoadLocationCharacteristicsLayer::write(::zserio::BitStreamWriter& out) const
{
    m_content_.write(out);

    out.writeBits(m_shift_, UINT8_C(5));

    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        // check parameters
        if (m_characsRoadLocationRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadLocationCharacteristicsLayer.characsRoadLocationRangeMaps: ") <<
                    m_characsRoadLocationRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadLocationRangeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        // check parameters
        if (m_characsRoadLocationRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadLocationCharacteristicsLayer.characsRoadLocationRangeSets: ") <<
                    m_characsRoadLocationRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadLocationRangeSets_.value().write(out);
    }
}

void RoadLocationCharacteristicsLayer::write(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    m_content_.write(context.getContent(), out);

    context.getShift().write<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(out, m_shift_);

    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        // check parameters
        if (m_characsRoadLocationRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadLocationCharacteristicsLayer.characsRoadLocationRangeMaps: ") <<
                    m_characsRoadLocationRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadLocationRangeMaps_.value().write(context.getCharacsRoadLocationRangeMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        // check parameters
        if (m_characsRoadLocationRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field RoadLocationCharacteristicsLayer.characsRoadLocationRangeSets: ") <<
                    m_characsRoadLocationRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsRoadLocationRangeSets_.value().write(context.getCharacsRoadLocationRangeSets(), out);
    }
}

::nds::characteristics::metadata::RoadLocationCharacsLayerContent RoadLocationCharacteristicsLayer::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadLocationCharacsLayerContent(in);
}

::nds::characteristics::metadata::RoadLocationCharacsLayerContent RoadLocationCharacteristicsLayer::readContent(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::RoadLocationCharacsLayerContent(context.getContent(), in);
}
::nds::core::geometry::CoordShift RoadLocationCharacteristicsLayer::readShift(::zserio::BitStreamReader& in)
{
    return static_cast<::nds::core::geometry::CoordShift>(in.readBits(UINT8_C(5)));
}

::nds::core::geometry::CoordShift RoadLocationCharacteristicsLayer::readShift(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return context.getShift().read<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(in);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList> RoadLocationCharacteristicsLayer::readCharacsRoadLocationRangeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList> RoadLocationCharacteristicsLayer::readCharacsRoadLocationRangeMaps(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList(context.getCharacsRoadLocationRangeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList> RoadLocationCharacteristicsLayer::readCharacsRoadLocationRangeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList> RoadLocationCharacteristicsLayer::readCharacsRoadLocationRangeSets(RoadLocationCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS) == ::nds::characteristics::metadata::RoadLocationCharacsLayerContent::Values::ROAD_LOCATION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList(context.getCharacsRoadLocationRangeSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsRoadLocationRangeAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace characteristics
} // namespace nds

/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/characteristics/layer/LaneCharacteristicsLayer.h>
#include <nds/characteristics/metadata/LaneCharacsLayerContent.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace characteristics
{
namespace layer
{

LaneCharacteristicsLayer::LaneCharacteristicsLayer(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_content_(::nds::characteristics::metadata::LaneCharacsLayerContent()),
        m_characsLaneRangeMaps_(::zserio::NullOpt),
        m_characsLanePositionMaps_(::zserio::NullOpt),
        m_characsLaneRangeSets_(::zserio::NullOpt),
        m_characsLanePositionSets_(::zserio::NullOpt)
{
}

LaneCharacteristicsLayer::LaneCharacteristicsLayer(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(in)),
        m_characsLaneRangeMaps_(readCharacsLaneRangeMaps(in, allocator)),
        m_characsLanePositionMaps_(readCharacsLanePositionMaps(in, allocator)),
        m_characsLaneRangeSets_(readCharacsLaneRangeSets(in, allocator)),
        m_characsLanePositionSets_(readCharacsLanePositionSets(in, allocator))
{
}

LaneCharacteristicsLayer::LaneCharacteristicsLayer(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(context, in)),
        m_characsLaneRangeMaps_(readCharacsLaneRangeMaps(context, in, allocator)),
        m_characsLanePositionMaps_(readCharacsLanePositionMaps(context, in, allocator)),
        m_characsLaneRangeSets_(readCharacsLaneRangeSets(context, in, allocator)),
        m_characsLanePositionSets_(readCharacsLanePositionSets(context, in, allocator))
{
}

LaneCharacteristicsLayer::LaneCharacteristicsLayer(const LaneCharacteristicsLayer& other) :
        m_content_(other.m_content_),
        m_characsLaneRangeMaps_(other.m_characsLaneRangeMaps_),
        m_characsLanePositionMaps_(other.m_characsLanePositionMaps_),
        m_characsLaneRangeSets_(other.m_characsLaneRangeSets_),
        m_characsLanePositionSets_(other.m_characsLanePositionSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

LaneCharacteristicsLayer& LaneCharacteristicsLayer::operator=(const LaneCharacteristicsLayer& other)
{
    m_content_ = other.m_content_;
    m_characsLaneRangeMaps_ = other.m_characsLaneRangeMaps_;
    m_characsLanePositionMaps_ = other.m_characsLanePositionMaps_;
    m_characsLaneRangeSets_ = other.m_characsLaneRangeSets_;
    m_characsLanePositionSets_ = other.m_characsLanePositionSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

LaneCharacteristicsLayer::LaneCharacteristicsLayer(LaneCharacteristicsLayer&& other) :
        m_content_(::std::move(other.m_content_)),
        m_characsLaneRangeMaps_(::std::move(other.m_characsLaneRangeMaps_)),
        m_characsLanePositionMaps_(::std::move(other.m_characsLanePositionMaps_)),
        m_characsLaneRangeSets_(::std::move(other.m_characsLaneRangeSets_)),
        m_characsLanePositionSets_(::std::move(other.m_characsLanePositionSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

LaneCharacteristicsLayer& LaneCharacteristicsLayer::operator=(LaneCharacteristicsLayer&& other)
{
    m_content_ = ::std::move(other.m_content_);
    m_characsLaneRangeMaps_ = ::std::move(other.m_characsLaneRangeMaps_);
    m_characsLanePositionMaps_ = ::std::move(other.m_characsLanePositionMaps_);
    m_characsLaneRangeSets_ = ::std::move(other.m_characsLaneRangeSets_);
    m_characsLanePositionSets_ = ::std::move(other.m_characsLanePositionSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

LaneCharacteristicsLayer::LaneCharacteristicsLayer(::zserio::PropagateAllocatorT,
        const LaneCharacteristicsLayer& other, const allocator_type& allocator) :
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_characsLaneRangeMaps_(::zserio::allocatorPropagatingCopy(other.m_characsLaneRangeMaps_, allocator)),
        m_characsLanePositionMaps_(::zserio::allocatorPropagatingCopy(other.m_characsLanePositionMaps_, allocator)),
        m_characsLaneRangeSets_(::zserio::allocatorPropagatingCopy(other.m_characsLaneRangeSets_, allocator)),
        m_characsLanePositionSets_(::zserio::allocatorPropagatingCopy(other.m_characsLanePositionSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void LaneCharacteristicsLayer::initializeChildren()
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
        m_characsLaneRangeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
        m_characsLanePositionMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
        m_characsLaneRangeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
        m_characsLanePositionSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));

    m_areChildrenInitialized = true;
}

::nds::characteristics::metadata::LaneCharacsLayerContent LaneCharacteristicsLayer::getContent() const
{
    return m_content_;
}

void LaneCharacteristicsLayer::setContent(::nds::characteristics::metadata::LaneCharacsLayerContent content_)
{
    m_content_ = content_;
}

::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList& LaneCharacteristicsLayer::getCharacsLaneRangeMaps()
{
    return m_characsLaneRangeMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList& LaneCharacteristicsLayer::getCharacsLaneRangeMaps() const
{
    return m_characsLaneRangeMaps_.value();
}

void LaneCharacteristicsLayer::setCharacsLaneRangeMaps(const ::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList& characsLaneRangeMaps_)
{
    m_characsLaneRangeMaps_ = characsLaneRangeMaps_;
}

void LaneCharacteristicsLayer::setCharacsLaneRangeMaps(::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList&& characsLaneRangeMaps_)
{
    m_characsLaneRangeMaps_ = ::std::move(characsLaneRangeMaps_);
}

bool LaneCharacteristicsLayer::isCharacsLaneRangeMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS);
}

bool LaneCharacteristicsLayer::isCharacsLaneRangeMapsSet() const
{
    return m_characsLaneRangeMaps_.hasValue();
}

void LaneCharacteristicsLayer::resetCharacsLaneRangeMaps()
{
    m_characsLaneRangeMaps_.reset();
}

::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList& LaneCharacteristicsLayer::getCharacsLanePositionMaps()
{
    return m_characsLanePositionMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList& LaneCharacteristicsLayer::getCharacsLanePositionMaps() const
{
    return m_characsLanePositionMaps_.value();
}

void LaneCharacteristicsLayer::setCharacsLanePositionMaps(const ::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList& characsLanePositionMaps_)
{
    m_characsLanePositionMaps_ = characsLanePositionMaps_;
}

void LaneCharacteristicsLayer::setCharacsLanePositionMaps(::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList&& characsLanePositionMaps_)
{
    m_characsLanePositionMaps_ = ::std::move(characsLanePositionMaps_);
}

bool LaneCharacteristicsLayer::isCharacsLanePositionMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS);
}

bool LaneCharacteristicsLayer::isCharacsLanePositionMapsSet() const
{
    return m_characsLanePositionMaps_.hasValue();
}

void LaneCharacteristicsLayer::resetCharacsLanePositionMaps()
{
    m_characsLanePositionMaps_.reset();
}

::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList& LaneCharacteristicsLayer::getCharacsLaneRangeSets()
{
    return m_characsLaneRangeSets_.value();
}

const ::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList& LaneCharacteristicsLayer::getCharacsLaneRangeSets() const
{
    return m_characsLaneRangeSets_.value();
}

void LaneCharacteristicsLayer::setCharacsLaneRangeSets(const ::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList& characsLaneRangeSets_)
{
    m_characsLaneRangeSets_ = characsLaneRangeSets_;
}

void LaneCharacteristicsLayer::setCharacsLaneRangeSets(::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList&& characsLaneRangeSets_)
{
    m_characsLaneRangeSets_ = ::std::move(characsLaneRangeSets_);
}

bool LaneCharacteristicsLayer::isCharacsLaneRangeSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS);
}

bool LaneCharacteristicsLayer::isCharacsLaneRangeSetsSet() const
{
    return m_characsLaneRangeSets_.hasValue();
}

void LaneCharacteristicsLayer::resetCharacsLaneRangeSets()
{
    m_characsLaneRangeSets_.reset();
}

::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList& LaneCharacteristicsLayer::getCharacsLanePositionSets()
{
    return m_characsLanePositionSets_.value();
}

const ::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList& LaneCharacteristicsLayer::getCharacsLanePositionSets() const
{
    return m_characsLanePositionSets_.value();
}

void LaneCharacteristicsLayer::setCharacsLanePositionSets(const ::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList& characsLanePositionSets_)
{
    m_characsLanePositionSets_ = characsLanePositionSets_;
}

void LaneCharacteristicsLayer::setCharacsLanePositionSets(::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList&& characsLanePositionSets_)
{
    m_characsLanePositionSets_ = ::std::move(characsLanePositionSets_);
}

bool LaneCharacteristicsLayer::isCharacsLanePositionSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS);
}

bool LaneCharacteristicsLayer::isCharacsLanePositionSetsSet() const
{
    return m_characsLanePositionSets_.hasValue();
}

void LaneCharacteristicsLayer::resetCharacsLanePositionSets()
{
    m_characsLanePositionSets_.reset();
}

::nds::system::types::LayerType LaneCharacteristicsLayer::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void LaneCharacteristicsLayer::initPackingContext(LaneCharacteristicsLayer::ZserioPackingContext& context) const
{
    m_content_.initPackingContext(context.getContent());
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        m_characsLaneRangeMaps_.value().initPackingContext(context.getCharacsLaneRangeMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        m_characsLanePositionMaps_.value().initPackingContext(context.getCharacsLanePositionMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        m_characsLaneRangeSets_.value().initPackingContext(context.getCharacsLaneRangeSets());
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        m_characsLanePositionSets_.value().initPackingContext(context.getCharacsLanePositionSets());
    }
}

size_t LaneCharacteristicsLayer::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        endBitPosition += m_characsLaneRangeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        endBitPosition += m_characsLanePositionMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        endBitPosition += m_characsLaneRangeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        endBitPosition += m_characsLanePositionSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t LaneCharacteristicsLayer::bitSizeOf(LaneCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        endBitPosition += m_characsLaneRangeMaps_.value().bitSizeOf(context.getCharacsLaneRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        endBitPosition += m_characsLanePositionMaps_.value().bitSizeOf(context.getCharacsLanePositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        endBitPosition += m_characsLaneRangeSets_.value().bitSizeOf(context.getCharacsLaneRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        endBitPosition += m_characsLanePositionSets_.value().bitSizeOf(context.getCharacsLanePositionSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t LaneCharacteristicsLayer::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        endBitPosition = m_characsLaneRangeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        endBitPosition = m_characsLanePositionMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        endBitPosition = m_characsLaneRangeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        endBitPosition = m_characsLanePositionSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t LaneCharacteristicsLayer::initializeOffsets(LaneCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        endBitPosition = m_characsLaneRangeMaps_.value().initializeOffsets(context.getCharacsLaneRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        endBitPosition = m_characsLanePositionMaps_.value().initializeOffsets(context.getCharacsLanePositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        endBitPosition = m_characsLaneRangeSets_.value().initializeOffsets(context.getCharacsLaneRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        endBitPosition = m_characsLanePositionSets_.value().initializeOffsets(context.getCharacsLanePositionSets(), endBitPosition);
    }

    return endBitPosition;
}

bool LaneCharacteristicsLayer::operator==(const LaneCharacteristicsLayer& other) const
{
    if (this != &other)
    {
        return
                (m_content_ == other.m_content_) &&
                (!isCharacsLaneRangeMapsUsed() ? !other.isCharacsLaneRangeMapsUsed() : (m_characsLaneRangeMaps_ == other.m_characsLaneRangeMaps_)) &&
                (!isCharacsLanePositionMapsUsed() ? !other.isCharacsLanePositionMapsUsed() : (m_characsLanePositionMaps_ == other.m_characsLanePositionMaps_)) &&
                (!isCharacsLaneRangeSetsUsed() ? !other.isCharacsLaneRangeSetsUsed() : (m_characsLaneRangeSets_ == other.m_characsLaneRangeSets_)) &&
                (!isCharacsLanePositionSetsUsed() ? !other.isCharacsLanePositionSetsUsed() : (m_characsLanePositionSets_ == other.m_characsLanePositionSets_));
    }

    return true;
}

uint32_t LaneCharacteristicsLayer::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_content_);
    if (isCharacsLaneRangeMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsLaneRangeMaps_);
    if (isCharacsLanePositionMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsLanePositionMaps_);
    if (isCharacsLaneRangeSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsLaneRangeSets_);
    if (isCharacsLanePositionSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsLanePositionSets_);

    return result;
}

void LaneCharacteristicsLayer::write(::zserio::BitStreamWriter& out) const
{
    m_content_.write(out);

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        // check parameters
        if (m_characsLaneRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeMaps: ") <<
                    m_characsLaneRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLaneRangeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        // check parameters
        if (m_characsLanePositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionMaps: ") <<
                    m_characsLanePositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLanePositionMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        // check parameters
        if (m_characsLaneRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeSets: ") <<
                    m_characsLaneRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLaneRangeSets_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        // check parameters
        if (m_characsLanePositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionSets: ") <<
                    m_characsLanePositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLanePositionSets_.value().write(out);
    }
}

void LaneCharacteristicsLayer::write(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    m_content_.write(context.getContent(), out);

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        // check parameters
        if (m_characsLaneRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeMaps: ") <<
                    m_characsLaneRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLaneRangeMaps_.value().write(context.getCharacsLaneRangeMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        // check parameters
        if (m_characsLanePositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionMaps: ") <<
                    m_characsLanePositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLanePositionMaps_.value().write(context.getCharacsLanePositionMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        // check parameters
        if (m_characsLaneRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeSets: ") <<
                    m_characsLaneRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLaneRangeSets_.value().write(context.getCharacsLaneRangeSets(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        // check parameters
        if (m_characsLanePositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionSets: ") <<
                    m_characsLanePositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsLanePositionSets_.value().write(context.getCharacsLanePositionSets(), out);
    }
}

::nds::characteristics::metadata::LaneCharacsLayerContent LaneCharacteristicsLayer::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::LaneCharacsLayerContent(in);
}

::nds::characteristics::metadata::LaneCharacsLayerContent LaneCharacteristicsLayer::readContent(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::LaneCharacsLayerContent(context.getContent(), in);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList> LaneCharacteristicsLayer::readCharacsLaneRangeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList> LaneCharacteristicsLayer::readCharacsLaneRangeMaps(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList(context.getCharacsLaneRangeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList> LaneCharacteristicsLayer::readCharacsLanePositionMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList>(::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList> LaneCharacteristicsLayer::readCharacsLanePositionMaps(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList>(::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList(context.getCharacsLanePositionMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList> LaneCharacteristicsLayer::readCharacsLaneRangeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList> LaneCharacteristicsLayer::readCharacsLaneRangeSets(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList(context.getCharacsLaneRangeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLaneRangeAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList> LaneCharacteristicsLayer::readCharacsLanePositionSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList>(::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList> LaneCharacteristicsLayer::readCharacsLanePositionSets(LaneCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS) == ::nds::characteristics::metadata::LaneCharacsLayerContent::Values::LANE_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList>(::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList(context.getCharacsLanePositionSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsLanePositionAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace characteristics
} // namespace nds

/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/characteristics/layer/DisplayLineCharacteristicsLayer.h>
#include <nds/characteristics/metadata/DisplayLineCharacsLayerContent.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace characteristics
{
namespace layer
{

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_content_(::nds::characteristics::metadata::DisplayLineCharacsLayerContent()),
        m_shift_(::nds::core::geometry::CoordShift()),
        m_characsDisplayLineRangeMaps_(::zserio::NullOpt),
        m_characsDisplayLinePositionMaps_(::zserio::NullOpt),
        m_characsDisplayLineRangeSets_(::zserio::NullOpt),
        m_characsDisplayLinePositionSets_(::zserio::NullOpt)
{
}

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(in)),
        m_shift_(readShift(in)),
        m_characsDisplayLineRangeMaps_(readCharacsDisplayLineRangeMaps(in, allocator)),
        m_characsDisplayLinePositionMaps_(readCharacsDisplayLinePositionMaps(in, allocator)),
        m_characsDisplayLineRangeSets_(readCharacsDisplayLineRangeSets(in, allocator)),
        m_characsDisplayLinePositionSets_(readCharacsDisplayLinePositionSets(in, allocator))
{
}

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(context, in)),
        m_shift_(readShift(context, in)),
        m_characsDisplayLineRangeMaps_(readCharacsDisplayLineRangeMaps(context, in, allocator)),
        m_characsDisplayLinePositionMaps_(readCharacsDisplayLinePositionMaps(context, in, allocator)),
        m_characsDisplayLineRangeSets_(readCharacsDisplayLineRangeSets(context, in, allocator)),
        m_characsDisplayLinePositionSets_(readCharacsDisplayLinePositionSets(context, in, allocator))
{
}

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(const DisplayLineCharacteristicsLayer& other) :
        m_content_(other.m_content_),
        m_shift_(other.m_shift_),
        m_characsDisplayLineRangeMaps_(other.m_characsDisplayLineRangeMaps_),
        m_characsDisplayLinePositionMaps_(other.m_characsDisplayLinePositionMaps_),
        m_characsDisplayLineRangeSets_(other.m_characsDisplayLineRangeSets_),
        m_characsDisplayLinePositionSets_(other.m_characsDisplayLinePositionSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

DisplayLineCharacteristicsLayer& DisplayLineCharacteristicsLayer::operator=(const DisplayLineCharacteristicsLayer& other)
{
    m_content_ = other.m_content_;
    m_shift_ = other.m_shift_;
    m_characsDisplayLineRangeMaps_ = other.m_characsDisplayLineRangeMaps_;
    m_characsDisplayLinePositionMaps_ = other.m_characsDisplayLinePositionMaps_;
    m_characsDisplayLineRangeSets_ = other.m_characsDisplayLineRangeSets_;
    m_characsDisplayLinePositionSets_ = other.m_characsDisplayLinePositionSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(DisplayLineCharacteristicsLayer&& other) :
        m_content_(::std::move(other.m_content_)),
        m_shift_(::std::move(other.m_shift_)),
        m_characsDisplayLineRangeMaps_(::std::move(other.m_characsDisplayLineRangeMaps_)),
        m_characsDisplayLinePositionMaps_(::std::move(other.m_characsDisplayLinePositionMaps_)),
        m_characsDisplayLineRangeSets_(::std::move(other.m_characsDisplayLineRangeSets_)),
        m_characsDisplayLinePositionSets_(::std::move(other.m_characsDisplayLinePositionSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

DisplayLineCharacteristicsLayer& DisplayLineCharacteristicsLayer::operator=(DisplayLineCharacteristicsLayer&& other)
{
    m_content_ = ::std::move(other.m_content_);
    m_shift_ = ::std::move(other.m_shift_);
    m_characsDisplayLineRangeMaps_ = ::std::move(other.m_characsDisplayLineRangeMaps_);
    m_characsDisplayLinePositionMaps_ = ::std::move(other.m_characsDisplayLinePositionMaps_);
    m_characsDisplayLineRangeSets_ = ::std::move(other.m_characsDisplayLineRangeSets_);
    m_characsDisplayLinePositionSets_ = ::std::move(other.m_characsDisplayLinePositionSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

DisplayLineCharacteristicsLayer::DisplayLineCharacteristicsLayer(::zserio::PropagateAllocatorT,
        const DisplayLineCharacteristicsLayer& other, const allocator_type& allocator) :
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_shift_(::zserio::allocatorPropagatingCopy(other.m_shift_, allocator)),
        m_characsDisplayLineRangeMaps_(::zserio::allocatorPropagatingCopy(other.m_characsDisplayLineRangeMaps_, allocator)),
        m_characsDisplayLinePositionMaps_(::zserio::allocatorPropagatingCopy(other.m_characsDisplayLinePositionMaps_, allocator)),
        m_characsDisplayLineRangeSets_(::zserio::allocatorPropagatingCopy(other.m_characsDisplayLineRangeSets_, allocator)),
        m_characsDisplayLinePositionSets_(::zserio::allocatorPropagatingCopy(other.m_characsDisplayLinePositionSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void DisplayLineCharacteristicsLayer::initializeChildren()
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
        m_characsDisplayLineRangeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
        m_characsDisplayLinePositionMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
        m_characsDisplayLineRangeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(getShift()));
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
        m_characsDisplayLinePositionSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));

    m_areChildrenInitialized = true;
}

::nds::characteristics::metadata::DisplayLineCharacsLayerContent DisplayLineCharacteristicsLayer::getContent() const
{
    return m_content_;
}

void DisplayLineCharacteristicsLayer::setContent(::nds::characteristics::metadata::DisplayLineCharacsLayerContent content_)
{
    m_content_ = content_;
}

::nds::core::geometry::CoordShift DisplayLineCharacteristicsLayer::getShift() const
{
    return m_shift_;
}

void DisplayLineCharacteristicsLayer::setShift(::nds::core::geometry::CoordShift shift_)
{
    m_shift_ = shift_;
}

::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList& DisplayLineCharacteristicsLayer::getCharacsDisplayLineRangeMaps()
{
    return m_characsDisplayLineRangeMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList& DisplayLineCharacteristicsLayer::getCharacsDisplayLineRangeMaps() const
{
    return m_characsDisplayLineRangeMaps_.value();
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLineRangeMaps(const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList& characsDisplayLineRangeMaps_)
{
    m_characsDisplayLineRangeMaps_ = characsDisplayLineRangeMaps_;
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLineRangeMaps(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList&& characsDisplayLineRangeMaps_)
{
    m_characsDisplayLineRangeMaps_ = ::std::move(characsDisplayLineRangeMaps_);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLineRangeMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLineRangeMapsSet() const
{
    return m_characsDisplayLineRangeMaps_.hasValue();
}

void DisplayLineCharacteristicsLayer::resetCharacsDisplayLineRangeMaps()
{
    m_characsDisplayLineRangeMaps_.reset();
}

::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList& DisplayLineCharacteristicsLayer::getCharacsDisplayLinePositionMaps()
{
    return m_characsDisplayLinePositionMaps_.value();
}

const ::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList& DisplayLineCharacteristicsLayer::getCharacsDisplayLinePositionMaps() const
{
    return m_characsDisplayLinePositionMaps_.value();
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLinePositionMaps(const ::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList& characsDisplayLinePositionMaps_)
{
    m_characsDisplayLinePositionMaps_ = characsDisplayLinePositionMaps_;
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLinePositionMaps(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList&& characsDisplayLinePositionMaps_)
{
    m_characsDisplayLinePositionMaps_ = ::std::move(characsDisplayLinePositionMaps_);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLinePositionMapsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLinePositionMapsSet() const
{
    return m_characsDisplayLinePositionMaps_.hasValue();
}

void DisplayLineCharacteristicsLayer::resetCharacsDisplayLinePositionMaps()
{
    m_characsDisplayLinePositionMaps_.reset();
}

::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList& DisplayLineCharacteristicsLayer::getCharacsDisplayLineRangeSets()
{
    return m_characsDisplayLineRangeSets_.value();
}

const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList& DisplayLineCharacteristicsLayer::getCharacsDisplayLineRangeSets() const
{
    return m_characsDisplayLineRangeSets_.value();
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLineRangeSets(const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList& characsDisplayLineRangeSets_)
{
    m_characsDisplayLineRangeSets_ = characsDisplayLineRangeSets_;
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLineRangeSets(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList&& characsDisplayLineRangeSets_)
{
    m_characsDisplayLineRangeSets_ = ::std::move(characsDisplayLineRangeSets_);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLineRangeSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLineRangeSetsSet() const
{
    return m_characsDisplayLineRangeSets_.hasValue();
}

void DisplayLineCharacteristicsLayer::resetCharacsDisplayLineRangeSets()
{
    m_characsDisplayLineRangeSets_.reset();
}

::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList& DisplayLineCharacteristicsLayer::getCharacsDisplayLinePositionSets()
{
    return m_characsDisplayLinePositionSets_.value();
}

const ::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList& DisplayLineCharacteristicsLayer::getCharacsDisplayLinePositionSets() const
{
    return m_characsDisplayLinePositionSets_.value();
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLinePositionSets(const ::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList& characsDisplayLinePositionSets_)
{
    m_characsDisplayLinePositionSets_ = characsDisplayLinePositionSets_;
}

void DisplayLineCharacteristicsLayer::setCharacsDisplayLinePositionSets(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList&& characsDisplayLinePositionSets_)
{
    m_characsDisplayLinePositionSets_ = ::std::move(characsDisplayLinePositionSets_);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLinePositionSetsUsed() const
{
    return ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS);
}

bool DisplayLineCharacteristicsLayer::isCharacsDisplayLinePositionSetsSet() const
{
    return m_characsDisplayLinePositionSets_.hasValue();
}

void DisplayLineCharacteristicsLayer::resetCharacsDisplayLinePositionSets()
{
    m_characsDisplayLinePositionSets_.reset();
}

::nds::system::types::LayerType DisplayLineCharacteristicsLayer::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void DisplayLineCharacteristicsLayer::initPackingContext(DisplayLineCharacteristicsLayer::ZserioPackingContext& context) const
{
    m_content_.initPackingContext(context.getContent());
    context.getShift().init<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        m_characsDisplayLineRangeMaps_.value().initPackingContext(context.getCharacsDisplayLineRangeMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        m_characsDisplayLinePositionMaps_.value().initPackingContext(context.getCharacsDisplayLinePositionMaps());
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        m_characsDisplayLineRangeSets_.value().initPackingContext(context.getCharacsDisplayLineRangeSets());
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        m_characsDisplayLinePositionSets_.value().initPackingContext(context.getCharacsDisplayLinePositionSets());
    }
}

size_t DisplayLineCharacteristicsLayer::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    endBitPosition += UINT8_C(5);
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        endBitPosition += m_characsDisplayLineRangeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        endBitPosition += m_characsDisplayLinePositionMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        endBitPosition += m_characsDisplayLineRangeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        endBitPosition += m_characsDisplayLinePositionSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t DisplayLineCharacteristicsLayer::bitSizeOf(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        endBitPosition += m_characsDisplayLineRangeMaps_.value().bitSizeOf(context.getCharacsDisplayLineRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        endBitPosition += m_characsDisplayLinePositionMaps_.value().bitSizeOf(context.getCharacsDisplayLinePositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        endBitPosition += m_characsDisplayLineRangeSets_.value().bitSizeOf(context.getCharacsDisplayLineRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        endBitPosition += m_characsDisplayLinePositionSets_.value().bitSizeOf(context.getCharacsDisplayLinePositionSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t DisplayLineCharacteristicsLayer::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    endBitPosition += UINT8_C(5);
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        endBitPosition = m_characsDisplayLineRangeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        endBitPosition = m_characsDisplayLinePositionMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        endBitPosition = m_characsDisplayLineRangeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        endBitPosition = m_characsDisplayLinePositionSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t DisplayLineCharacteristicsLayer::initializeOffsets(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    endBitPosition += context.getShift().bitSizeOf<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(m_shift_);
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        endBitPosition = m_characsDisplayLineRangeMaps_.value().initializeOffsets(context.getCharacsDisplayLineRangeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        endBitPosition = m_characsDisplayLinePositionMaps_.value().initializeOffsets(context.getCharacsDisplayLinePositionMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        endBitPosition = m_characsDisplayLineRangeSets_.value().initializeOffsets(context.getCharacsDisplayLineRangeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        endBitPosition = m_characsDisplayLinePositionSets_.value().initializeOffsets(context.getCharacsDisplayLinePositionSets(), endBitPosition);
    }

    return endBitPosition;
}

bool DisplayLineCharacteristicsLayer::operator==(const DisplayLineCharacteristicsLayer& other) const
{
    if (this != &other)
    {
        return
                (m_content_ == other.m_content_) &&
                (m_shift_ == other.m_shift_) &&
                (!isCharacsDisplayLineRangeMapsUsed() ? !other.isCharacsDisplayLineRangeMapsUsed() : (m_characsDisplayLineRangeMaps_ == other.m_characsDisplayLineRangeMaps_)) &&
                (!isCharacsDisplayLinePositionMapsUsed() ? !other.isCharacsDisplayLinePositionMapsUsed() : (m_characsDisplayLinePositionMaps_ == other.m_characsDisplayLinePositionMaps_)) &&
                (!isCharacsDisplayLineRangeSetsUsed() ? !other.isCharacsDisplayLineRangeSetsUsed() : (m_characsDisplayLineRangeSets_ == other.m_characsDisplayLineRangeSets_)) &&
                (!isCharacsDisplayLinePositionSetsUsed() ? !other.isCharacsDisplayLinePositionSetsUsed() : (m_characsDisplayLinePositionSets_ == other.m_characsDisplayLinePositionSets_));
    }

    return true;
}

uint32_t DisplayLineCharacteristicsLayer::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_content_);
    result = ::zserio::calcHashCode(result, m_shift_);
    if (isCharacsDisplayLineRangeMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsDisplayLineRangeMaps_);
    if (isCharacsDisplayLinePositionMapsUsed())
        result = ::zserio::calcHashCode(result, m_characsDisplayLinePositionMaps_);
    if (isCharacsDisplayLineRangeSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsDisplayLineRangeSets_);
    if (isCharacsDisplayLinePositionSetsUsed())
        result = ::zserio::calcHashCode(result, m_characsDisplayLinePositionSets_);

    return result;
}

void DisplayLineCharacteristicsLayer::write(::zserio::BitStreamWriter& out) const
{
    m_content_.write(out);

    out.writeBits(m_shift_, UINT8_C(5));

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        // check parameters
        if (m_characsDisplayLineRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLineRangeMaps: ") <<
                    m_characsDisplayLineRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLineRangeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        // check parameters
        if (m_characsDisplayLinePositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLinePositionMaps: ") <<
                    m_characsDisplayLinePositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLinePositionMaps_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        // check parameters
        if (m_characsDisplayLineRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLineRangeSets: ") <<
                    m_characsDisplayLineRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLineRangeSets_.value().write(out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        // check parameters
        if (m_characsDisplayLinePositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLinePositionSets: ") <<
                    m_characsDisplayLinePositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsDisplayLinePositionSets_.value().write(out);
    }
}

void DisplayLineCharacteristicsLayer::write(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    m_content_.write(context.getContent(), out);

    context.getShift().write<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(out, m_shift_);

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        // check parameters
        if (m_characsDisplayLineRangeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLineRangeMaps: ") <<
                    m_characsDisplayLineRangeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLineRangeMaps_.value().write(context.getCharacsDisplayLineRangeMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        // check parameters
        if (m_characsDisplayLinePositionMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLinePositionMaps: ") <<
                    m_characsDisplayLinePositionMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLinePositionMaps_.value().write(context.getCharacsDisplayLinePositionMaps(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        // check parameters
        if (m_characsDisplayLineRangeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(getShift()))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLineRangeSets: ") <<
                    m_characsDisplayLineRangeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(getShift()) << "!";
        }
        m_characsDisplayLineRangeSets_.value().write(context.getCharacsDisplayLineRangeSets(), out);
    }

    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        // check parameters
        if (m_characsDisplayLinePositionSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field DisplayLineCharacteristicsLayer.characsDisplayLinePositionSets: ") <<
                    m_characsDisplayLinePositionSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_characsDisplayLinePositionSets_.value().write(context.getCharacsDisplayLinePositionSets(), out);
    }
}

::nds::characteristics::metadata::DisplayLineCharacsLayerContent DisplayLineCharacteristicsLayer::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::DisplayLineCharacsLayerContent(in);
}

::nds::characteristics::metadata::DisplayLineCharacsLayerContent DisplayLineCharacteristicsLayer::readContent(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::characteristics::metadata::DisplayLineCharacsLayerContent(context.getContent(), in);
}
::nds::core::geometry::CoordShift DisplayLineCharacteristicsLayer::readShift(::zserio::BitStreamReader& in)
{
    return static_cast<::nds::core::geometry::CoordShift>(in.readBits(UINT8_C(5)));
}

::nds::core::geometry::CoordShift DisplayLineCharacteristicsLayer::readShift(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return context.getShift().read<::zserio::BitFieldArrayTraits<::nds::core::geometry::CoordShift, UINT8_C(5)>>(in);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList> DisplayLineCharacteristicsLayer::readCharacsDisplayLineRangeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList> DisplayLineCharacteristicsLayer::readCharacsDisplayLineRangeMaps(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList>(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList(context.getCharacsDisplayLineRangeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList> DisplayLineCharacteristicsLayer::readCharacsDisplayLinePositionMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList>(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList> DisplayLineCharacteristicsLayer::readCharacsDisplayLinePositionMaps(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList>(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList(context.getCharacsDisplayLinePositionMaps(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList> DisplayLineCharacteristicsLayer::readCharacsDisplayLineRangeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList> DisplayLineCharacteristicsLayer::readCharacsDisplayLineRangeSets(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_RANGE_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList>(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList(context.getCharacsDisplayLineRangeSets(), in, static_cast<::nds::core::geometry::CoordShift>(getShift()), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList> DisplayLineCharacteristicsLayer::readCharacsDisplayLinePositionSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList>(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList> DisplayLineCharacteristicsLayer::readCharacsDisplayLinePositionSets(DisplayLineCharacteristicsLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS) == ::nds::characteristics::metadata::DisplayLineCharacsLayerContent::Values::DISPLAY_LINE_POSITION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList>(::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList(context.getCharacsDisplayLinePositionSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::characteristics::instantiations::CharacsDisplayLinePositionAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace characteristics
} // namespace nds
