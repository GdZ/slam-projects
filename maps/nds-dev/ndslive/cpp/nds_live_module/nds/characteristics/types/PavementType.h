/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CHARACTERISTICS_TYPES_PAVEMENT_TYPE_H
#define NDS_CHARACTERISTICS_TYPES_PAVEMENT_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace characteristics
{
namespace types
{

enum class PavementType : uint8_t
{
    UNKNOWN = UINT8_C(0),
    SANDY = UINT8_C(1),
    GRAVEL = UINT8_C(2),
    COBBLESTONE = UINT8_C(3),
    CONCRETE = UINT8_C(4),
    ASPHALT = UINT8_C(5),
    PAVED = UINT8_C(6),
    UNPAVED = UINT8_C(7),
    POOR_CONDITION = UINT8_C(8),
    OTHER = UINT8_C(9)
};

} // namespace types
} // namespace characteristics
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for PavementType enumeration.
template <>
struct EnumTraits<::nds::characteristics::types::PavementType>
{
    static constexpr ::std::array<const char*, 10> names =
    {{
        "UNKNOWN",
        "SANDY",
        "GRAVEL",
        "COBBLESTONE",
        "CONCRETE",
        "ASPHALT",
        "PAVED",
        "UNPAVED",
        "POOR_CONDITION",
        "OTHER"
    }};

    static constexpr ::std::array<::nds::characteristics::types::PavementType, 10> values =
    {{
        ::nds::characteristics::types::PavementType::UNKNOWN,
        ::nds::characteristics::types::PavementType::SANDY,
        ::nds::characteristics::types::PavementType::GRAVEL,
        ::nds::characteristics::types::PavementType::COBBLESTONE,
        ::nds::characteristics::types::PavementType::CONCRETE,
        ::nds::characteristics::types::PavementType::ASPHALT,
        ::nds::characteristics::types::PavementType::PAVED,
        ::nds::characteristics::types::PavementType::UNPAVED,
        ::nds::characteristics::types::PavementType::POOR_CONDITION,
        ::nds::characteristics::types::PavementType::OTHER
    }};

    static constexpr const char* enumName = "PavementType";
};

template <>
size_t enumToOrdinal<::nds::characteristics::types::PavementType>(::nds::characteristics::types::PavementType value);

template <>
::nds::characteristics::types::PavementType valueToEnum<::nds::characteristics::types::PavementType>(
        typename ::std::underlying_type<::nds::characteristics::types::PavementType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::characteristics::types::PavementType>(::nds::characteristics::types::PavementType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::characteristics::types::PavementType>(::zserio::DeltaContext& context, ::nds::characteristics::types::PavementType value);

template <>
size_t bitSizeOf<::nds::characteristics::types::PavementType>(::nds::characteristics::types::PavementType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::characteristics::types::PavementType>(::zserio::DeltaContext& context, ::nds::characteristics::types::PavementType value);

template <>
size_t initializeOffsets<::nds::characteristics::types::PavementType>(size_t bitPosition, ::nds::characteristics::types::PavementType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::characteristics::types::PavementType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::characteristics::types::PavementType value);

template <>
::nds::characteristics::types::PavementType read<::nds::characteristics::types::PavementType>(::zserio::BitStreamReader& in);

template <>
::nds::characteristics::types::PavementType read<::nds::characteristics::types::PavementType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::characteristics::types::PavementType>(::zserio::BitStreamWriter& out, ::nds::characteristics::types::PavementType value);

template <>
void write<::zserio::DeltaContext, ::nds::characteristics::types::PavementType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::characteristics::types::PavementType value);

} // namespace zserio

#endif // NDS_CHARACTERISTICS_TYPES_PAVEMENT_TYPE_H
