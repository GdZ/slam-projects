/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CHARACTERISTICS_TYPES_ROAD_MEDIAN_H
#define NDS_CHARACTERISTICS_TYPES_ROAD_MEDIAN_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

#include <nds/characteristics/types/RoadMedianShape.h>
#include <nds/characteristics/types/RoadMedianSurface.h>

namespace nds
{
namespace characteristics
{
namespace types
{

class RoadMedian
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getWidth()
        {
            return m_width_;
        }

        ::zserio::DeltaContext& getShape()
        {
            return m_shape_;
        }

        ::zserio::DeltaContext& getSurface()
        {
            return m_surface_;
        }

    private:
        ::zserio::DeltaContext m_width_;
        ::zserio::DeltaContext m_shape_;
        ::zserio::DeltaContext m_surface_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    RoadMedian() noexcept :
            RoadMedian(allocator_type())
    {}

    explicit RoadMedian(const allocator_type& allocator) noexcept;

    RoadMedian(
            uint16_t width_,
            ::nds::characteristics::types::RoadMedianShape shape_,
            ::nds::characteristics::types::RoadMedianSurface surface_,
            const allocator_type& allocator = allocator_type()) :
            RoadMedian(allocator)
    {
        m_width_ = width_;
        m_shape_ = shape_;
        m_surface_ = surface_;
    }

    explicit RoadMedian(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit RoadMedian(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~RoadMedian() = default;

    RoadMedian(const RoadMedian&) = default;
    RoadMedian& operator=(const RoadMedian&) = default;

    RoadMedian(RoadMedian&&) = default;
    RoadMedian& operator=(RoadMedian&&) = default;

    RoadMedian(::zserio::PropagateAllocatorT,
            const RoadMedian& other, const allocator_type& allocator);

    uint16_t getWidth() const;
    void setWidth(uint16_t width_);

    ::nds::characteristics::types::RoadMedianShape getShape() const;
    void setShape(::nds::characteristics::types::RoadMedianShape shape_);

    ::nds::characteristics::types::RoadMedianSurface getSurface() const;
    void setSurface(::nds::characteristics::types::RoadMedianSurface surface_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const RoadMedian& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    uint16_t readWidth(::zserio::BitStreamReader& in);
    uint16_t readWidth(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::characteristics::types::RoadMedianShape readShape(::zserio::BitStreamReader& in);
    ::nds::characteristics::types::RoadMedianShape readShape(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::characteristics::types::RoadMedianSurface readSurface(::zserio::BitStreamReader& in);
    ::nds::characteristics::types::RoadMedianSurface readSurface(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    uint16_t m_width_;
    ::nds::characteristics::types::RoadMedianShape m_shape_;
    ::nds::characteristics::types::RoadMedianSurface m_surface_;
};

} // namespace types
} // namespace characteristics
} // namespace nds

#endif // NDS_CHARACTERISTICS_TYPES_ROAD_MEDIAN_H
