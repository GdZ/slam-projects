/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CHARACTERISTICS_ATTRIBUTES_CHARACS_LANE_POSITION_ATTRIBUTE_TYPE_H
#define NDS_CHARACTERISTICS_ATTRIBUTES_CHARACS_LANE_POSITION_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace characteristics
{
namespace attributes
{

enum class CharacsLanePositionAttributeType : uint16_t
{
    STOP_LINE = UINT16_C(0),
    WAITING_LINE = UINT16_C(1),
    SLOW_ROAD_USER_CROSSING = UINT16_C(2),
    STATION = UINT16_C(3)
};

} // namespace attributes
} // namespace characteristics
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for CharacsLanePositionAttributeType enumeration.
template <>
struct EnumTraits<::nds::characteristics::attributes::CharacsLanePositionAttributeType>
{
    static constexpr ::std::array<const char*, 4> names =
    {{
        "STOP_LINE",
        "WAITING_LINE",
        "SLOW_ROAD_USER_CROSSING",
        "STATION"
    }};

    static constexpr ::std::array<::nds::characteristics::attributes::CharacsLanePositionAttributeType, 4> values =
    {{
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType::STOP_LINE,
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType::WAITING_LINE,
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType::SLOW_ROAD_USER_CROSSING,
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType::STATION
    }};

    static constexpr const char* enumName = "CharacsLanePositionAttributeType";
};

template <>
size_t enumToOrdinal<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
::nds::characteristics::attributes::CharacsLanePositionAttributeType valueToEnum<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(
        typename ::std::underlying_type<::nds::characteristics::attributes::CharacsLanePositionAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::DeltaContext& context, ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
size_t bitSizeOf<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::DeltaContext& context, ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
size_t initializeOffsets<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(size_t bitPosition, ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
::nds::characteristics::attributes::CharacsLanePositionAttributeType read<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::characteristics::attributes::CharacsLanePositionAttributeType read<::nds::characteristics::attributes::CharacsLanePositionAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::BitStreamWriter& out, ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::characteristics::attributes::CharacsLanePositionAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::characteristics::attributes::CharacsLanePositionAttributeType value);

} // namespace zserio

#endif // NDS_CHARACTERISTICS_ATTRIBUTES_CHARACS_LANE_POSITION_ATTRIBUTE_TYPE_H
