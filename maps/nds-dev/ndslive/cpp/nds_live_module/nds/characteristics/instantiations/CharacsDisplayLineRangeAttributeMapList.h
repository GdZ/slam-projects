/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CHARACTERISTICS_INSTANTIATIONS_CHARACS_DISPLAY_LINE_RANGE_ATTRIBUTE_MAP_LIST_H
#define NDS_CHARACTERISTICS_INSTANTIATIONS_CHARACS_DISPLAY_LINE_RANGE_ATTRIBUTE_MAP_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/characteristics/instantiations/CharacsDisplayLineRangeAttributeMap.h>
#include <nds/characteristics/instantiations/CharacsDisplayLineRangeAttributeMapListHeader.h>
#include <nds/core/geometry/CoordShift.h>

namespace nds
{
namespace characteristics
{
namespace instantiations
{

class CharacsDisplayLineRangeAttributeMapList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumMaps()
        {
            return m_numMaps_;
        }

        ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader::ZserioPackingContext& getHeader()
        {
            return m_header_;
        }

    private:
        ::zserio::DeltaContext m_numMaps_;
        ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader::ZserioPackingContext m_header_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    CharacsDisplayLineRangeAttributeMapList() noexcept :
            CharacsDisplayLineRangeAttributeMapList(allocator_type())
    {}

    explicit CharacsDisplayLineRangeAttributeMapList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_header = ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader,
            typename ZSERIO_T_maps = ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>>
    CharacsDisplayLineRangeAttributeMapList(
            uint32_t numMaps_,
            ZSERIO_T_header&& header_,
            ZSERIO_T_maps&& maps_,
            const allocator_type& allocator = allocator_type()) :
            CharacsDisplayLineRangeAttributeMapList(allocator)
    {
        m_numMaps_ = numMaps_;
        m_header_ = ::std::forward<ZSERIO_T_header>(header_);
        m_maps_ = ZserioArrayType_maps(::std::forward<ZSERIO_T_maps>(maps_));
    }

    explicit CharacsDisplayLineRangeAttributeMapList(::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift coordShift_, const allocator_type& allocator = allocator_type());
    explicit CharacsDisplayLineRangeAttributeMapList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift coordShift_, const allocator_type& allocator = allocator_type());

    ~CharacsDisplayLineRangeAttributeMapList() = default;

    CharacsDisplayLineRangeAttributeMapList(const CharacsDisplayLineRangeAttributeMapList& other);
    CharacsDisplayLineRangeAttributeMapList& operator=(const CharacsDisplayLineRangeAttributeMapList& other);

    CharacsDisplayLineRangeAttributeMapList(CharacsDisplayLineRangeAttributeMapList&& other);
    CharacsDisplayLineRangeAttributeMapList& operator=(CharacsDisplayLineRangeAttributeMapList&& other);

    CharacsDisplayLineRangeAttributeMapList(::zserio::PropagateAllocatorT,
            const CharacsDisplayLineRangeAttributeMapList& other, const allocator_type& allocator);

    void initialize(
            ::nds::core::geometry::CoordShift coordShift_);
    bool isInitialized() const;
    void initializeChildren();

    ::nds::core::geometry::CoordShift getCoordShift() const;

    uint32_t getNumMaps() const;
    void setNumMaps(uint32_t numMaps_);

    const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader& getHeader() const;
    ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader& getHeader();
    void setHeader(const ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader& header_);
    void setHeader(::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader&& header_);

    const ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>& getMaps() const;
    ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>& getMaps();
    void setMaps(const ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>& maps_);
    void setMaps(::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>&& maps_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const CharacsDisplayLineRangeAttributeMapList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_maps
    {
    public:
        using OwnerType = CharacsDisplayLineRangeAttributeMapList;

        static void initializeElement(CharacsDisplayLineRangeAttributeMapList& owner,
                ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap& element, size_t index);
    };

    class ZserioElementFactory_maps
    {
    public:
        using OwnerType = CharacsDisplayLineRangeAttributeMapList;

        static void create(CharacsDisplayLineRangeAttributeMapList& owner,
                ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(CharacsDisplayLineRangeAttributeMapList& owner,
                ::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>& array,
                ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_maps = ::zserio::Array<::zserio::vector<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap>, ::zserio::ObjectArrayTraits<::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMap, ZserioElementFactory_maps>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_maps>;

    uint32_t readNumMaps(::zserio::BitStreamReader& in);
    uint32_t readNumMaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader readHeader(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader readHeader(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_maps readMaps(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_maps readMaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::core::geometry::CoordShift m_coordShift_;
    bool m_isInitialized;
    uint32_t m_numMaps_;
    ::nds::characteristics::instantiations::CharacsDisplayLineRangeAttributeMapListHeader m_header_;
    ZserioArrayType_maps m_maps_;
};

} // namespace instantiations
} // namespace characteristics
} // namespace nds

#endif // NDS_CHARACTERISTICS_INSTANTIATIONS_CHARACS_DISPLAY_LINE_RANGE_ATTRIBUTE_MAP_LIST_H
