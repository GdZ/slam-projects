/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_DETAILS_METADATA_DISPLAY3D_ATTRIBUTE_LAYER_METADATA_H
#define NDS_DISPLAY_DETAILS_METADATA_DISPLAY3D_ATTRIBUTE_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/display/details/instantiations/Display3dMeshAttributeMetadata.h>
#include <nds/display/details/metadata/Display3dAttributeLayerContent.h>

namespace nds
{
namespace display
{
namespace details
{
namespace metadata
{

class Display3dAttributeLayerMetadata
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::nds::display::details::instantiations::Display3dMeshAttributeMetadata::ZserioPackingContext& getDisplay3dMeshAttributeMetadata()
        {
            return m_display3dMeshAttributeMetadata_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::nds::display::details::instantiations::Display3dMeshAttributeMetadata::ZserioPackingContext m_display3dMeshAttributeMetadata_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    Display3dAttributeLayerMetadata() noexcept :
            Display3dAttributeLayerMetadata(allocator_type())
    {}

    explicit Display3dAttributeLayerMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_display3dMeshAttributeMetadata = ::nds::display::details::instantiations::Display3dMeshAttributeMetadata>
    Display3dAttributeLayerMetadata(
            ::nds::display::details::metadata::Display3dAttributeLayerContent content_,
            ZSERIO_T_display3dMeshAttributeMetadata&& display3dMeshAttributeMetadata_,
            const allocator_type& allocator = allocator_type()) :
            Display3dAttributeLayerMetadata(allocator)
    {
        m_content_ = content_;
        m_display3dMeshAttributeMetadata_ = ::std::forward<ZSERIO_T_display3dMeshAttributeMetadata>(display3dMeshAttributeMetadata_);
    }

    explicit Display3dAttributeLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit Display3dAttributeLayerMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~Display3dAttributeLayerMetadata() = default;

    Display3dAttributeLayerMetadata(const Display3dAttributeLayerMetadata&) = default;
    Display3dAttributeLayerMetadata& operator=(const Display3dAttributeLayerMetadata&) = default;

    Display3dAttributeLayerMetadata(Display3dAttributeLayerMetadata&&) = default;
    Display3dAttributeLayerMetadata& operator=(Display3dAttributeLayerMetadata&&) = default;

    Display3dAttributeLayerMetadata(::zserio::PropagateAllocatorT,
            const Display3dAttributeLayerMetadata& other, const allocator_type& allocator);

    ::nds::display::details::metadata::Display3dAttributeLayerContent getContent() const;
    void setContent(::nds::display::details::metadata::Display3dAttributeLayerContent content_);

    const ::nds::display::details::instantiations::Display3dMeshAttributeMetadata& getDisplay3dMeshAttributeMetadata() const;
    ::nds::display::details::instantiations::Display3dMeshAttributeMetadata& getDisplay3dMeshAttributeMetadata();
    void setDisplay3dMeshAttributeMetadata(const ::nds::display::details::instantiations::Display3dMeshAttributeMetadata& display3dMeshAttributeMetadata_);
    void setDisplay3dMeshAttributeMetadata(::nds::display::details::instantiations::Display3dMeshAttributeMetadata&& display3dMeshAttributeMetadata_);
    bool isDisplay3dMeshAttributeMetadataUsed() const;
    bool isDisplay3dMeshAttributeMetadataSet() const;
    void resetDisplay3dMeshAttributeMetadata();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const Display3dAttributeLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::display::details::metadata::Display3dAttributeLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::display::details::metadata::Display3dAttributeLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::Display3dMeshAttributeMetadata> readDisplay3dMeshAttributeMetadata(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::Display3dMeshAttributeMetadata> readDisplay3dMeshAttributeMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::display::details::metadata::Display3dAttributeLayerContent m_content_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::Display3dMeshAttributeMetadata> m_display3dMeshAttributeMetadata_;
};

} // namespace metadata
} // namespace details
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_DETAILS_METADATA_DISPLAY3D_ATTRIBUTE_LAYER_METADATA_H
