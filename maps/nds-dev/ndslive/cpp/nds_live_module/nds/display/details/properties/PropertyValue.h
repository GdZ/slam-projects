/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_DETAILS_PROPERTIES_PROPERTY_VALUE_H
#define NDS_DISPLAY_DETAILS_PROPERTIES_PROPERTY_VALUE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/AnyHolder.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/display/details/properties/PropertyType.h>

namespace nds
{
namespace display
{
namespace details
{
namespace properties
{

class PropertyValue
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    enum ChoiceTag : int32_t
    {
        UNDEFINED_CHOICE = -1
    };

    PropertyValue() noexcept :
            PropertyValue(allocator_type())
    {}

    explicit PropertyValue(const allocator_type& allocator) noexcept;

    explicit PropertyValue(::zserio::BitStreamReader& in,
            ::nds::display::details::properties::PropertyType type_, const allocator_type& allocator = allocator_type());

    ~PropertyValue() = default;

    PropertyValue(const PropertyValue& other);
    PropertyValue& operator=(const PropertyValue& other);

    PropertyValue(PropertyValue&& other);
    PropertyValue& operator=(PropertyValue&& other);

    PropertyValue(::zserio::PropagateAllocatorT,
            const PropertyValue& other, const allocator_type& allocator);

    void initialize(
            ::nds::display::details::properties::PropertyType type_);
    bool isInitialized() const;

    ChoiceTag choiceTag() const;

    ::nds::display::details::properties::PropertyType getType() const;

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const PropertyValue& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
    ::nds::display::details::properties::PropertyType m_type_;
    bool m_isInitialized;
};

} // namespace properties
} // namespace details
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_DETAILS_PROPERTIES_PROPERTY_VALUE_H
