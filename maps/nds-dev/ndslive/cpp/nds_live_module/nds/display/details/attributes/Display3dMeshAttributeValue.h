/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY3D_MESH_ATTRIBUTE_VALUE_H
#define NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY3D_MESH_ATTRIBUTE_VALUE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <zserio/AnyHolder.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/display/details/attributes/Display3dMeshAttributeType.h>
#include <nds/display/details/types/Additional3dFeatureClass.h>
#include <nds/display/details/types/OriginalPointHeights.h>

namespace nds
{
namespace display
{
namespace details
{
namespace attributes
{

class Display3dMeshAttributeValue
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    enum ChoiceTag : int32_t
    {
        CHOICE_additional3dFeatureClass = 0,
        CHOICE_originalPointHeights = 1,
        UNDEFINED_CHOICE = -1
    };

    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getAdditional3dFeatureClass()
        {
            return m_additional3dFeatureClass_;
        }

        ::nds::display::details::types::OriginalPointHeights::ZserioPackingContext& getOriginalPointHeights()
        {
            return m_originalPointHeights_;
        }

    private:
        ::zserio::DeltaContext m_additional3dFeatureClass_;
        ::nds::display::details::types::OriginalPointHeights::ZserioPackingContext m_originalPointHeights_;
    };

    Display3dMeshAttributeValue() noexcept :
            Display3dMeshAttributeValue(allocator_type())
    {}

    explicit Display3dMeshAttributeValue(const allocator_type& allocator) noexcept;

    explicit Display3dMeshAttributeValue(::zserio::BitStreamReader& in,
            ::nds::display::details::attributes::Display3dMeshAttributeType type_, const allocator_type& allocator = allocator_type());
    explicit Display3dMeshAttributeValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            ::nds::display::details::attributes::Display3dMeshAttributeType type_, const allocator_type& allocator = allocator_type());

    ~Display3dMeshAttributeValue() = default;

    Display3dMeshAttributeValue(const Display3dMeshAttributeValue& other);
    Display3dMeshAttributeValue& operator=(const Display3dMeshAttributeValue& other);

    Display3dMeshAttributeValue(Display3dMeshAttributeValue&& other);
    Display3dMeshAttributeValue& operator=(Display3dMeshAttributeValue&& other);

    Display3dMeshAttributeValue(::zserio::PropagateAllocatorT,
            const Display3dMeshAttributeValue& other, const allocator_type& allocator);

    void initialize(
            ::nds::display::details::attributes::Display3dMeshAttributeType type_);
    bool isInitialized() const;

    ChoiceTag choiceTag() const;

    ::nds::display::details::attributes::Display3dMeshAttributeType getType() const;

    ::nds::display::details::types::Additional3dFeatureClass getAdditional3dFeatureClass() const;
    void setAdditional3dFeatureClass(::nds::display::details::types::Additional3dFeatureClass additional3dFeatureClass_);

    const ::nds::display::details::types::OriginalPointHeights& getOriginalPointHeights() const;
    ::nds::display::details::types::OriginalPointHeights& getOriginalPointHeights();
    void setOriginalPointHeights(const ::nds::display::details::types::OriginalPointHeights& originalPointHeights_);
    void setOriginalPointHeights(::nds::display::details::types::OriginalPointHeights&& originalPointHeights_);
    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const Display3dMeshAttributeValue& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::zserio::AnyHolder<> readObject(::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::AnyHolder<> readObject(ZserioPackingContext& context, ::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::AnyHolder<> copyObject(const allocator_type& allocator) const;

    ::nds::display::details::attributes::Display3dMeshAttributeType m_type_;
    bool m_isInitialized;
    ::zserio::AnyHolder<> m_objectChoice;
};

} // namespace attributes
} // namespace details
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY3D_MESH_ATTRIBUTE_VALUE_H
