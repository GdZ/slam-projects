/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY_POINT_ATTRIBUTE_TYPE_H
#define NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY_POINT_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace display
{
namespace details
{
namespace attributes
{

enum class DisplayPointAttributeType : uint16_t
{
    POPULATION = UINT16_C(0),
    DRAWING_ORDER = UINT16_C(1),
    ELEVATION_DELTA = UINT16_C(2),
    ELEVATION_LEVEL = UINT16_C(3)
};

} // namespace attributes
} // namespace details
} // namespace display
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for DisplayPointAttributeType enumeration.
template <>
struct EnumTraits<::nds::display::details::attributes::DisplayPointAttributeType>
{
    static constexpr ::std::array<const char*, 4> names =
    {{
        "POPULATION",
        "DRAWING_ORDER",
        "ELEVATION_DELTA",
        "ELEVATION_LEVEL"
    }};

    static constexpr ::std::array<::nds::display::details::attributes::DisplayPointAttributeType, 4> values =
    {{
        ::nds::display::details::attributes::DisplayPointAttributeType::POPULATION,
        ::nds::display::details::attributes::DisplayPointAttributeType::DRAWING_ORDER,
        ::nds::display::details::attributes::DisplayPointAttributeType::ELEVATION_DELTA,
        ::nds::display::details::attributes::DisplayPointAttributeType::ELEVATION_LEVEL
    }};

    static constexpr const char* enumName = "DisplayPointAttributeType";
};

template <>
size_t enumToOrdinal<::nds::display::details::attributes::DisplayPointAttributeType>(::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
::nds::display::details::attributes::DisplayPointAttributeType valueToEnum<::nds::display::details::attributes::DisplayPointAttributeType>(
        typename ::std::underlying_type<::nds::display::details::attributes::DisplayPointAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::display::details::attributes::DisplayPointAttributeType>(::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::DeltaContext& context, ::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
size_t bitSizeOf<::nds::display::details::attributes::DisplayPointAttributeType>(::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::DeltaContext& context, ::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
size_t initializeOffsets<::nds::display::details::attributes::DisplayPointAttributeType>(size_t bitPosition, ::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
::nds::display::details::attributes::DisplayPointAttributeType read<::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::display::details::attributes::DisplayPointAttributeType read<::nds::display::details::attributes::DisplayPointAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::BitStreamWriter& out, ::nds::display::details::attributes::DisplayPointAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::display::details::attributes::DisplayPointAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::display::details::attributes::DisplayPointAttributeType value);

} // namespace zserio

#endif // NDS_DISPLAY_DETAILS_ATTRIBUTES_DISPLAY_POINT_ATTRIBUTE_TYPE_H
