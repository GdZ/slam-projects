/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_DETAILS_LAYER_DISPLAY_ATTRIBUTE_LAYER_H
#define NDS_DISPLAY_DETAILS_LAYER_DISPLAY_ATTRIBUTE_LAYER_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/display/details/instantiations/DisplayAreaAttributeMapList.h>
#include <nds/display/details/instantiations/DisplayAreaAttributeSetList.h>
#include <nds/display/details/instantiations/DisplayLineAttributeMapList.h>
#include <nds/display/details/instantiations/DisplayLineAttributeSetList.h>
#include <nds/display/details/instantiations/DisplayPointAttributeMapList.h>
#include <nds/display/details/instantiations/DisplayPointAttributeSetList.h>
#include <nds/display/details/metadata/DisplayAttributeLayerContent.h>
#include <nds/display/details/types/BaseElevation.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace display
{
namespace details
{
namespace layer
{

class DisplayAttributeLayer
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::zserio::DeltaContext& getBaseElevation()
        {
            return m_baseElevation_;
        }

        ::nds::display::details::instantiations::DisplayAreaAttributeMapList::ZserioPackingContext& getDisplayAreaAttributeMaps()
        {
            return m_displayAreaAttributeMaps_;
        }

        ::nds::display::details::instantiations::DisplayAreaAttributeSetList::ZserioPackingContext& getDisplayAreaAttributeSets()
        {
            return m_displayAreaAttributeSets_;
        }

        ::nds::display::details::instantiations::DisplayLineAttributeMapList::ZserioPackingContext& getDisplayLineAttributeMaps()
        {
            return m_displayLineAttributeMaps_;
        }

        ::nds::display::details::instantiations::DisplayLineAttributeSetList::ZserioPackingContext& getDisplayLineAttributeSets()
        {
            return m_displayLineAttributeSets_;
        }

        ::nds::display::details::instantiations::DisplayPointAttributeMapList::ZserioPackingContext& getDisplayPointAttributeMaps()
        {
            return m_displayPointAttributeMaps_;
        }

        ::nds::display::details::instantiations::DisplayPointAttributeSetList::ZserioPackingContext& getDisplayPointAttributeSets()
        {
            return m_displayPointAttributeSets_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::zserio::DeltaContext m_baseElevation_;
        ::nds::display::details::instantiations::DisplayAreaAttributeMapList::ZserioPackingContext m_displayAreaAttributeMaps_;
        ::nds::display::details::instantiations::DisplayAreaAttributeSetList::ZserioPackingContext m_displayAreaAttributeSets_;
        ::nds::display::details::instantiations::DisplayLineAttributeMapList::ZserioPackingContext m_displayLineAttributeMaps_;
        ::nds::display::details::instantiations::DisplayLineAttributeSetList::ZserioPackingContext m_displayLineAttributeSets_;
        ::nds::display::details::instantiations::DisplayPointAttributeMapList::ZserioPackingContext m_displayPointAttributeMaps_;
        ::nds::display::details::instantiations::DisplayPointAttributeSetList::ZserioPackingContext m_displayPointAttributeSets_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    DisplayAttributeLayer() noexcept :
            DisplayAttributeLayer(allocator_type())
    {}

    explicit DisplayAttributeLayer(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_baseElevation = ::nds::display::details::types::BaseElevation,
            typename ZSERIO_T_displayAreaAttributeMaps = ::nds::display::details::instantiations::DisplayAreaAttributeMapList,
            typename ZSERIO_T_displayAreaAttributeSets = ::nds::display::details::instantiations::DisplayAreaAttributeSetList,
            typename ZSERIO_T_displayLineAttributeMaps = ::nds::display::details::instantiations::DisplayLineAttributeMapList,
            typename ZSERIO_T_displayLineAttributeSets = ::nds::display::details::instantiations::DisplayLineAttributeSetList,
            typename ZSERIO_T_displayPointAttributeMaps = ::nds::display::details::instantiations::DisplayPointAttributeMapList,
            typename ZSERIO_T_displayPointAttributeSets = ::nds::display::details::instantiations::DisplayPointAttributeSetList>
    DisplayAttributeLayer(
            ::nds::display::details::metadata::DisplayAttributeLayerContent content_,
            ZSERIO_T_baseElevation&& baseElevation_,
            ZSERIO_T_displayAreaAttributeMaps&& displayAreaAttributeMaps_,
            ZSERIO_T_displayAreaAttributeSets&& displayAreaAttributeSets_,
            ZSERIO_T_displayLineAttributeMaps&& displayLineAttributeMaps_,
            ZSERIO_T_displayLineAttributeSets&& displayLineAttributeSets_,
            ZSERIO_T_displayPointAttributeMaps&& displayPointAttributeMaps_,
            ZSERIO_T_displayPointAttributeSets&& displayPointAttributeSets_,
            const allocator_type& allocator = allocator_type()) :
            DisplayAttributeLayer(allocator)
    {
        m_content_ = content_;
        m_baseElevation_ = ::std::forward<ZSERIO_T_baseElevation>(baseElevation_);
        m_displayAreaAttributeMaps_ = ::std::forward<ZSERIO_T_displayAreaAttributeMaps>(displayAreaAttributeMaps_);
        m_displayAreaAttributeSets_ = ::std::forward<ZSERIO_T_displayAreaAttributeSets>(displayAreaAttributeSets_);
        m_displayLineAttributeMaps_ = ::std::forward<ZSERIO_T_displayLineAttributeMaps>(displayLineAttributeMaps_);
        m_displayLineAttributeSets_ = ::std::forward<ZSERIO_T_displayLineAttributeSets>(displayLineAttributeSets_);
        m_displayPointAttributeMaps_ = ::std::forward<ZSERIO_T_displayPointAttributeMaps>(displayPointAttributeMaps_);
        m_displayPointAttributeSets_ = ::std::forward<ZSERIO_T_displayPointAttributeSets>(displayPointAttributeSets_);
    }

    explicit DisplayAttributeLayer(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit DisplayAttributeLayer(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~DisplayAttributeLayer() = default;

    DisplayAttributeLayer(const DisplayAttributeLayer& other);
    DisplayAttributeLayer& operator=(const DisplayAttributeLayer& other);

    DisplayAttributeLayer(DisplayAttributeLayer&& other);
    DisplayAttributeLayer& operator=(DisplayAttributeLayer&& other);

    DisplayAttributeLayer(::zserio::PropagateAllocatorT,
            const DisplayAttributeLayer& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::display::details::metadata::DisplayAttributeLayerContent getContent() const;
    void setContent(::nds::display::details::metadata::DisplayAttributeLayerContent content_);

    ::nds::display::details::types::BaseElevation getBaseElevation() const;
    void setBaseElevation(::nds::display::details::types::BaseElevation baseElevation_);
    bool isBaseElevationUsed() const;
    bool isBaseElevationSet() const;
    void resetBaseElevation();

    const ::nds::display::details::instantiations::DisplayAreaAttributeMapList& getDisplayAreaAttributeMaps() const;
    ::nds::display::details::instantiations::DisplayAreaAttributeMapList& getDisplayAreaAttributeMaps();
    void setDisplayAreaAttributeMaps(const ::nds::display::details::instantiations::DisplayAreaAttributeMapList& displayAreaAttributeMaps_);
    void setDisplayAreaAttributeMaps(::nds::display::details::instantiations::DisplayAreaAttributeMapList&& displayAreaAttributeMaps_);
    bool isDisplayAreaAttributeMapsUsed() const;
    bool isDisplayAreaAttributeMapsSet() const;
    void resetDisplayAreaAttributeMaps();

    const ::nds::display::details::instantiations::DisplayAreaAttributeSetList& getDisplayAreaAttributeSets() const;
    ::nds::display::details::instantiations::DisplayAreaAttributeSetList& getDisplayAreaAttributeSets();
    void setDisplayAreaAttributeSets(const ::nds::display::details::instantiations::DisplayAreaAttributeSetList& displayAreaAttributeSets_);
    void setDisplayAreaAttributeSets(::nds::display::details::instantiations::DisplayAreaAttributeSetList&& displayAreaAttributeSets_);
    bool isDisplayAreaAttributeSetsUsed() const;
    bool isDisplayAreaAttributeSetsSet() const;
    void resetDisplayAreaAttributeSets();

    const ::nds::display::details::instantiations::DisplayLineAttributeMapList& getDisplayLineAttributeMaps() const;
    ::nds::display::details::instantiations::DisplayLineAttributeMapList& getDisplayLineAttributeMaps();
    void setDisplayLineAttributeMaps(const ::nds::display::details::instantiations::DisplayLineAttributeMapList& displayLineAttributeMaps_);
    void setDisplayLineAttributeMaps(::nds::display::details::instantiations::DisplayLineAttributeMapList&& displayLineAttributeMaps_);
    bool isDisplayLineAttributeMapsUsed() const;
    bool isDisplayLineAttributeMapsSet() const;
    void resetDisplayLineAttributeMaps();

    const ::nds::display::details::instantiations::DisplayLineAttributeSetList& getDisplayLineAttributeSets() const;
    ::nds::display::details::instantiations::DisplayLineAttributeSetList& getDisplayLineAttributeSets();
    void setDisplayLineAttributeSets(const ::nds::display::details::instantiations::DisplayLineAttributeSetList& displayLineAttributeSets_);
    void setDisplayLineAttributeSets(::nds::display::details::instantiations::DisplayLineAttributeSetList&& displayLineAttributeSets_);
    bool isDisplayLineAttributeSetsUsed() const;
    bool isDisplayLineAttributeSetsSet() const;
    void resetDisplayLineAttributeSets();

    const ::nds::display::details::instantiations::DisplayPointAttributeMapList& getDisplayPointAttributeMaps() const;
    ::nds::display::details::instantiations::DisplayPointAttributeMapList& getDisplayPointAttributeMaps();
    void setDisplayPointAttributeMaps(const ::nds::display::details::instantiations::DisplayPointAttributeMapList& displayPointAttributeMaps_);
    void setDisplayPointAttributeMaps(::nds::display::details::instantiations::DisplayPointAttributeMapList&& displayPointAttributeMaps_);
    bool isDisplayPointAttributeMapsUsed() const;
    bool isDisplayPointAttributeMapsSet() const;
    void resetDisplayPointAttributeMaps();

    const ::nds::display::details::instantiations::DisplayPointAttributeSetList& getDisplayPointAttributeSets() const;
    ::nds::display::details::instantiations::DisplayPointAttributeSetList& getDisplayPointAttributeSets();
    void setDisplayPointAttributeSets(const ::nds::display::details::instantiations::DisplayPointAttributeSetList& displayPointAttributeSets_);
    void setDisplayPointAttributeSets(::nds::display::details::instantiations::DisplayPointAttributeSetList&& displayPointAttributeSets_);
    bool isDisplayPointAttributeSetsUsed() const;
    bool isDisplayPointAttributeSetsSet() const;
    void resetDisplayPointAttributeSets();

    ::nds::system::types::LayerType funcGetLayerType() const;

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const DisplayAttributeLayer& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::display::details::metadata::DisplayAttributeLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::display::details::metadata::DisplayAttributeLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::details::types::BaseElevation> readBaseElevation(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::details::types::BaseElevation> readBaseElevation(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeMapList> readDisplayAreaAttributeMaps(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeMapList> readDisplayAreaAttributeMaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeSetList> readDisplayAreaAttributeSets(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeSetList> readDisplayAreaAttributeSets(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeMapList> readDisplayLineAttributeMaps(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeMapList> readDisplayLineAttributeMaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeSetList> readDisplayLineAttributeSets(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeSetList> readDisplayLineAttributeSets(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeMapList> readDisplayPointAttributeMaps(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeMapList> readDisplayPointAttributeMaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeSetList> readDisplayPointAttributeSets(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeSetList> readDisplayPointAttributeSets(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::display::details::metadata::DisplayAttributeLayerContent m_content_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::types::BaseElevation> m_baseElevation_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeMapList> m_displayAreaAttributeMaps_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayAreaAttributeSetList> m_displayAreaAttributeSets_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeMapList> m_displayLineAttributeMaps_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayLineAttributeSetList> m_displayLineAttributeSets_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeMapList> m_displayPointAttributeMaps_;
    ::zserio::InplaceOptionalHolder<::nds::display::details::instantiations::DisplayPointAttributeSetList> m_displayPointAttributeSets_;
};

} // namespace layer
} // namespace details
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_DETAILS_LAYER_DISPLAY_ATTRIBUTE_LAYER_H
