/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_REFERENCE_TYPES_TEXTURE_REFERENCE_H
#define NDS_DISPLAY_REFERENCE_TYPES_TEXTURE_REFERENCE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/display/reference/types/TextureId.h>
#include <nds/display/reference/types/TextureSectionIndex.h>

namespace nds
{
namespace display
{
namespace reference
{
namespace types
{

class TextureReference
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getTextureId()
        {
            return m_textureId_;
        }

        ::zserio::DeltaContext& getTextureSectionIndex()
        {
            return m_textureSectionIndex_;
        }

    private:
        ::zserio::DeltaContext m_textureId_;
        ::zserio::DeltaContext m_textureSectionIndex_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    TextureReference() noexcept :
            TextureReference(allocator_type())
    {}

    explicit TextureReference(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_textureSectionIndex = ::nds::display::reference::types::TextureSectionIndex>
    TextureReference(
            ::nds::display::reference::types::TextureId textureId_,
            bool isSection_,
            ZSERIO_T_textureSectionIndex&& textureSectionIndex_,
            const allocator_type& allocator = allocator_type()) :
            TextureReference(allocator)
    {
        m_textureId_ = textureId_;
        m_isSection_ = isSection_;
        m_textureSectionIndex_ = ::std::forward<ZSERIO_T_textureSectionIndex>(textureSectionIndex_);
    }

    explicit TextureReference(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit TextureReference(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~TextureReference() = default;

    TextureReference(const TextureReference&) = default;
    TextureReference& operator=(const TextureReference&) = default;

    TextureReference(TextureReference&&) = default;
    TextureReference& operator=(TextureReference&&) = default;

    TextureReference(::zserio::PropagateAllocatorT,
            const TextureReference& other, const allocator_type& allocator);

    ::nds::display::reference::types::TextureId getTextureId() const;
    void setTextureId(::nds::display::reference::types::TextureId textureId_);

    bool getIsSection() const;
    void setIsSection(bool isSection_);

    ::nds::display::reference::types::TextureSectionIndex getTextureSectionIndex() const;
    void setTextureSectionIndex(::nds::display::reference::types::TextureSectionIndex textureSectionIndex_);
    bool isTextureSectionIndexUsed() const;
    bool isTextureSectionIndexSet() const;
    void resetTextureSectionIndex();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const TextureReference& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::display::reference::types::TextureId readTextureId(::zserio::BitStreamReader& in);
    ::nds::display::reference::types::TextureId readTextureId(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    bool readIsSection(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::reference::types::TextureSectionIndex> readTextureSectionIndex(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::display::reference::types::TextureSectionIndex> readTextureSectionIndex(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::display::reference::types::TextureId m_textureId_;
    bool m_isSection_;
    ::zserio::InplaceOptionalHolder<::nds::display::reference::types::TextureSectionIndex> m_textureSectionIndex_;
};

} // namespace types
} // namespace reference
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_REFERENCE_TYPES_TEXTURE_REFERENCE_H
