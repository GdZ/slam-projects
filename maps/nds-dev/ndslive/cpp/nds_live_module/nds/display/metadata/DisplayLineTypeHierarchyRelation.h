/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_METADATA_DISPLAY_LINE_TYPE_HIERARCHY_RELATION_H
#define NDS_DISPLAY_METADATA_DISPLAY_LINE_TYPE_HIERARCHY_RELATION_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/display/types/DisplayLineType.h>

namespace nds
{
namespace display
{
namespace metadata
{

class DisplayLineTypeHierarchyRelation
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getParent()
        {
            return m_parent_;
        }

    private:
        ::zserio::DeltaContext m_parent_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    DisplayLineTypeHierarchyRelation() noexcept :
            DisplayLineTypeHierarchyRelation(allocator_type())
    {}

    explicit DisplayLineTypeHierarchyRelation(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_children = ::zserio::vector<::nds::display::types::DisplayLineType>>
    DisplayLineTypeHierarchyRelation(
            ::nds::display::types::DisplayLineType parent_,
            ZSERIO_T_children&& children_,
            const allocator_type& allocator = allocator_type()) :
            DisplayLineTypeHierarchyRelation(allocator)
    {
        m_parent_ = parent_;
        m_children_ = ZserioArrayType_children(::std::forward<ZSERIO_T_children>(children_));
    }

    explicit DisplayLineTypeHierarchyRelation(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit DisplayLineTypeHierarchyRelation(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~DisplayLineTypeHierarchyRelation() = default;

    DisplayLineTypeHierarchyRelation(const DisplayLineTypeHierarchyRelation&) = default;
    DisplayLineTypeHierarchyRelation& operator=(const DisplayLineTypeHierarchyRelation&) = default;

    DisplayLineTypeHierarchyRelation(DisplayLineTypeHierarchyRelation&&) = default;
    DisplayLineTypeHierarchyRelation& operator=(DisplayLineTypeHierarchyRelation&&) = default;

    DisplayLineTypeHierarchyRelation(::zserio::PropagateAllocatorT,
            const DisplayLineTypeHierarchyRelation& other, const allocator_type& allocator);

    ::nds::display::types::DisplayLineType getParent() const;
    void setParent(::nds::display::types::DisplayLineType parent_);

    const ::zserio::vector<::nds::display::types::DisplayLineType>& getChildren() const;
    ::zserio::vector<::nds::display::types::DisplayLineType>& getChildren();
    void setChildren(const ::zserio::vector<::nds::display::types::DisplayLineType>& children_);
    void setChildren(::zserio::vector<::nds::display::types::DisplayLineType>&& children_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const DisplayLineTypeHierarchyRelation& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    using ZserioArrayType_children = ::zserio::Array<::zserio::vector<::nds::display::types::DisplayLineType>, ::zserio::EnumArrayTraits<::nds::display::types::DisplayLineType>, ::zserio::ArrayType::AUTO>;

    ::nds::display::types::DisplayLineType readParent(::zserio::BitStreamReader& in);
    ::nds::display::types::DisplayLineType readParent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_children readChildren(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_children readChildren(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::display::types::DisplayLineType m_parent_;
    ZserioArrayType_children m_children_;
};

} // namespace metadata
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_METADATA_DISPLAY_LINE_TYPE_HIERARCHY_RELATION_H
