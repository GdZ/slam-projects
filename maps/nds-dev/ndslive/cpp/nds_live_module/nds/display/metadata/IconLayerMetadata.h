/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_METADATA_ICON_LAYER_METADATA_H
#define NDS_DISPLAY_METADATA_ICON_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/core/icons/IconFormat.h>
#include <nds/core/types/Iso3166Codes.h>
#include <nds/display/metadata/DisplayScaleTileLevelMapping.h>
#include <nds/display/metadata/IconLayerContent.h>

namespace nds
{
namespace display
{
namespace metadata
{

class IconLayerMetadata
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::nds::display::metadata::DisplayScaleTileLevelMapping::ZserioPackingContext& getDisplayScaleTileLevelMapping()
        {
            return m_displayScaleTileLevelMapping_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::nds::display::metadata::DisplayScaleTileLevelMapping::ZserioPackingContext m_displayScaleTileLevelMapping_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    IconLayerMetadata() noexcept :
            IconLayerMetadata(allocator_type())
    {}

    explicit IconLayerMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_containedIconFormats = ::zserio::vector<::nds::core::icons::IconFormat>,
            typename ZSERIO_T_isoCountryCode = ::nds::core::types::Iso3166Codes,
            typename ZSERIO_T_displayScaleTileLevelMapping = ::nds::display::metadata::DisplayScaleTileLevelMapping>
    IconLayerMetadata(
            ::nds::display::metadata::IconLayerContent content_,
            ZSERIO_T_containedIconFormats&& containedIconFormats_,
            ZSERIO_T_isoCountryCode&& isoCountryCode_,
            ZSERIO_T_displayScaleTileLevelMapping&& displayScaleTileLevelMapping_,
            const allocator_type& allocator = allocator_type()) :
            IconLayerMetadata(allocator)
    {
        m_content_ = content_;
        m_containedIconFormats_ = ZserioArrayType_containedIconFormats(::std::forward<ZSERIO_T_containedIconFormats>(containedIconFormats_));
        m_isoCountryCode_ = ::std::forward<ZSERIO_T_isoCountryCode>(isoCountryCode_);
        m_displayScaleTileLevelMapping_ = ::std::forward<ZSERIO_T_displayScaleTileLevelMapping>(displayScaleTileLevelMapping_);
    }

    explicit IconLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit IconLayerMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~IconLayerMetadata() = default;

    IconLayerMetadata(const IconLayerMetadata&) = default;
    IconLayerMetadata& operator=(const IconLayerMetadata&) = default;

    IconLayerMetadata(IconLayerMetadata&&) = default;
    IconLayerMetadata& operator=(IconLayerMetadata&&) = default;

    IconLayerMetadata(::zserio::PropagateAllocatorT,
            const IconLayerMetadata& other, const allocator_type& allocator);

    ::nds::display::metadata::IconLayerContent getContent() const;
    void setContent(::nds::display::metadata::IconLayerContent content_);

    const ::zserio::vector<::nds::core::icons::IconFormat>& getContainedIconFormats() const;
    ::zserio::vector<::nds::core::icons::IconFormat>& getContainedIconFormats();
    void setContainedIconFormats(const ::zserio::vector<::nds::core::icons::IconFormat>& containedIconFormats_);
    void setContainedIconFormats(::zserio::vector<::nds::core::icons::IconFormat>&& containedIconFormats_);

    const ::nds::core::types::Iso3166Codes& getIsoCountryCode() const;
    ::nds::core::types::Iso3166Codes& getIsoCountryCode();
    void setIsoCountryCode(const ::nds::core::types::Iso3166Codes& isoCountryCode_);
    void setIsoCountryCode(::nds::core::types::Iso3166Codes&& isoCountryCode_);
    bool isIsoCountryCodeUsed() const;
    bool isIsoCountryCodeSet() const;
    void resetIsoCountryCode();

    const ::nds::display::metadata::DisplayScaleTileLevelMapping& getDisplayScaleTileLevelMapping() const;
    ::nds::display::metadata::DisplayScaleTileLevelMapping& getDisplayScaleTileLevelMapping();
    void setDisplayScaleTileLevelMapping(const ::nds::display::metadata::DisplayScaleTileLevelMapping& displayScaleTileLevelMapping_);
    void setDisplayScaleTileLevelMapping(::nds::display::metadata::DisplayScaleTileLevelMapping&& displayScaleTileLevelMapping_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const IconLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    using ZserioArrayType_containedIconFormats = ::zserio::Array<::zserio::vector<::nds::core::icons::IconFormat>, ::zserio::EnumArrayTraits<::nds::core::icons::IconFormat>, ::zserio::ArrayType::AUTO>;

    ::nds::display::metadata::IconLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::display::metadata::IconLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_containedIconFormats readContainedIconFormats(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_containedIconFormats readContainedIconFormats(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::types::Iso3166Codes> readIsoCountryCode(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::display::metadata::DisplayScaleTileLevelMapping readDisplayScaleTileLevelMapping(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::display::metadata::DisplayScaleTileLevelMapping readDisplayScaleTileLevelMapping(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::display::metadata::IconLayerContent m_content_;
    ZserioArrayType_containedIconFormats m_containedIconFormats_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::Iso3166Codes> m_isoCountryCode_;
    ::nds::display::metadata::DisplayScaleTileLevelMapping m_displayScaleTileLevelMapping_;
};

} // namespace metadata
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_METADATA_ICON_LAYER_METADATA_H
