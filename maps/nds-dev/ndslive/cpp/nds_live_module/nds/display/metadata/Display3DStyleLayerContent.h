/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_METADATA_DISPLAY3_DSTYLE_LAYER_CONTENT_H
#define NDS_DISPLAY_METADATA_DISPLAY3_DSTYLE_LAYER_CONTENT_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <memory>
#include <zserio/ArrayTraits.h>

namespace nds
{
namespace display
{
namespace metadata
{

class Display3DStyleLayerContent
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    Display3DStyleLayerContent() noexcept :
            Display3DStyleLayerContent(allocator_type())
    {}

    explicit Display3DStyleLayerContent(const allocator_type& allocator) noexcept;

    Display3DStyleLayerContent(
            bool hasTextures_,
            bool hasColors_,
            const allocator_type& allocator = allocator_type()) :
            Display3DStyleLayerContent(allocator)
    {
        m_hasTextures_ = hasTextures_;
        m_hasColors_ = hasColors_;
    }

    explicit Display3DStyleLayerContent(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~Display3DStyleLayerContent() = default;

    Display3DStyleLayerContent(const Display3DStyleLayerContent&) = default;
    Display3DStyleLayerContent& operator=(const Display3DStyleLayerContent&) = default;

    Display3DStyleLayerContent(Display3DStyleLayerContent&&) = default;
    Display3DStyleLayerContent& operator=(Display3DStyleLayerContent&&) = default;

    Display3DStyleLayerContent(::zserio::PropagateAllocatorT,
            const Display3DStyleLayerContent& other, const allocator_type& allocator);

    bool getHasTextures() const;
    void setHasTextures(bool hasTextures_);

    bool getHasColors() const;
    void setHasColors(bool hasColors_);

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const Display3DStyleLayerContent& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
    bool readHasTextures(::zserio::BitStreamReader& in);
    bool readHasColors(::zserio::BitStreamReader& in);

    bool m_hasTextures_;
    bool m_hasColors_;
};

} // namespace metadata
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_METADATA_DISPLAY3_DSTYLE_LAYER_CONTENT_H
