/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_TYPES_CLIPPING_EDGE_H
#define NDS_DISPLAY_TYPES_CLIPPING_EDGE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/core/geometry/Position2D.h>

namespace nds
{
namespace display
{
namespace types
{

class ClippingEdge
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::core::geometry::Position2D::ZserioPackingContext& getStartPosition()
        {
            return m_startPosition_;
        }

        ::nds::core::geometry::Position2D::ZserioPackingContext& getEndPosition()
        {
            return m_endPosition_;
        }

    private:
        ::nds::core::geometry::Position2D::ZserioPackingContext m_startPosition_;
        ::nds::core::geometry::Position2D::ZserioPackingContext m_endPosition_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    ClippingEdge() noexcept :
            ClippingEdge(allocator_type())
    {}

    explicit ClippingEdge(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_startPosition = ::nds::core::geometry::Position2D,
            typename ZSERIO_T_endPosition = ::nds::core::geometry::Position2D,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_startPosition, ClippingEdge, allocator_type> = 0>
    ClippingEdge(
            ZSERIO_T_startPosition&& startPosition_,
            ZSERIO_T_endPosition&& endPosition_,
            const allocator_type& allocator = allocator_type()) :
            ClippingEdge(allocator)
    {
        m_startPosition_ = ::std::forward<ZSERIO_T_startPosition>(startPosition_);
        m_endPosition_ = ::std::forward<ZSERIO_T_endPosition>(endPosition_);
    }

    explicit ClippingEdge(::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift shift_, const allocator_type& allocator = allocator_type());
    explicit ClippingEdge(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift shift_, const allocator_type& allocator = allocator_type());

    ~ClippingEdge() = default;

    ClippingEdge(const ClippingEdge& other);
    ClippingEdge& operator=(const ClippingEdge& other);

    ClippingEdge(ClippingEdge&& other);
    ClippingEdge& operator=(ClippingEdge&& other);

    ClippingEdge(::zserio::PropagateAllocatorT,
            const ClippingEdge& other, const allocator_type& allocator);

    void initialize(
            ::nds::core::geometry::CoordShift shift_);
    bool isInitialized() const;
    void initializeChildren();

    ::nds::core::geometry::CoordShift getShift() const;

    const ::nds::core::geometry::Position2D& getStartPosition() const;
    ::nds::core::geometry::Position2D& getStartPosition();
    void setStartPosition(const ::nds::core::geometry::Position2D& startPosition_);
    void setStartPosition(::nds::core::geometry::Position2D&& startPosition_);

    const ::nds::core::geometry::Position2D& getEndPosition() const;
    ::nds::core::geometry::Position2D& getEndPosition();
    void setEndPosition(const ::nds::core::geometry::Position2D& endPosition_);
    void setEndPosition(::nds::core::geometry::Position2D&& endPosition_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const ClippingEdge& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::geometry::Position2D readStartPosition(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::geometry::Position2D readStartPosition(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::core::geometry::Position2D readEndPosition(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::geometry::Position2D readEndPosition(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::core::geometry::CoordShift m_shift_;
    bool m_isInitialized;
    ::nds::core::geometry::Position2D m_startPosition_;
    ::nds::core::geometry::Position2D m_endPosition_;
};

} // namespace types
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_TYPES_CLIPPING_EDGE_H
