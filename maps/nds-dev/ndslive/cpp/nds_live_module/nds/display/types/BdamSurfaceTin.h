/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_TYPES_BDAM_SURFACE_TIN_H
#define NDS_DISPLAY_TYPES_BDAM_SURFACE_TIN_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/display/types/RenderSurface.h>

namespace nds
{
namespace display
{
namespace types
{

class BdamSurfaceTin
{
public:
    class ZserioPackingContext
    {
    };

    using allocator_type = ::std::allocator<uint8_t>;

    BdamSurfaceTin() noexcept :
            BdamSurfaceTin(allocator_type())
    {}

    explicit BdamSurfaceTin(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_renderSurfaces = ::zserio::vector<::nds::display::types::RenderSurface>,
            typename ZSERIO_T_indices = ::zserio::vector<uint32_t>,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_renderSurfaces, BdamSurfaceTin, allocator_type> = 0>
    BdamSurfaceTin(
            ZSERIO_T_renderSurfaces&& renderSurfaces_,
            ZSERIO_T_indices&& indices_,
            const allocator_type& allocator = allocator_type()) :
            BdamSurfaceTin(allocator)
    {
        m_renderSurfaces_ = ZserioArrayType_renderSurfaces(::std::forward<ZSERIO_T_renderSurfaces>(renderSurfaces_));
        m_indices_ = ZserioArrayType_indices(::std::forward<ZSERIO_T_indices>(indices_));
    }

    explicit BdamSurfaceTin(::zserio::BitStreamReader& in,
            uint8_t numIndexBits_, const allocator_type& allocator = allocator_type());
    explicit BdamSurfaceTin(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            uint8_t numIndexBits_, const allocator_type& allocator = allocator_type());

    ~BdamSurfaceTin() = default;

    BdamSurfaceTin(const BdamSurfaceTin& other);
    BdamSurfaceTin& operator=(const BdamSurfaceTin& other);

    BdamSurfaceTin(BdamSurfaceTin&& other);
    BdamSurfaceTin& operator=(BdamSurfaceTin&& other);

    BdamSurfaceTin(::zserio::PropagateAllocatorT,
            const BdamSurfaceTin& other, const allocator_type& allocator);

    void initialize(
            uint8_t numIndexBits_);
    bool isInitialized() const;
    void initializeChildren();

    uint8_t getNumIndexBits() const;

    const ::zserio::vector<::nds::display::types::RenderSurface>& getRenderSurfaces() const;
    ::zserio::vector<::nds::display::types::RenderSurface>& getRenderSurfaces();
    void setRenderSurfaces(const ::zserio::vector<::nds::display::types::RenderSurface>& renderSurfaces_);
    void setRenderSurfaces(::zserio::vector<::nds::display::types::RenderSurface>&& renderSurfaces_);

    const ::zserio::vector<uint32_t>& getIndices() const;
    ::zserio::vector<uint32_t>& getIndices();
    void setIndices(const ::zserio::vector<uint32_t>& indices_);
    void setIndices(::zserio::vector<uint32_t>&& indices_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const BdamSurfaceTin& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_renderSurfaces
    {
    public:
        using OwnerType = BdamSurfaceTin;

        static void initializeElement(BdamSurfaceTin& owner,
                ::nds::display::types::RenderSurface& element, size_t index);
    };

    class ZserioElementFactory_renderSurfaces
    {
    public:
        using OwnerType = BdamSurfaceTin;

        static void create(BdamSurfaceTin& owner,
                ::zserio::vector<::nds::display::types::RenderSurface>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(BdamSurfaceTin& owner,
                ::zserio::vector<::nds::display::types::RenderSurface>& array,
                ::nds::display::types::RenderSurface::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    class ZserioElementBitSize_indices
    {
    public:
        using OwnerType = BdamSurfaceTin;

        static uint8_t get(const BdamSurfaceTin& owner);
    };

    using ZserioArrayType_renderSurfaces = ::zserio::Array<::zserio::vector<::nds::display::types::RenderSurface>, ::zserio::ObjectArrayTraits<::nds::display::types::RenderSurface, ZserioElementFactory_renderSurfaces>, ::zserio::ArrayType::AUTO, ZserioArrayExpressions_renderSurfaces>;
    using ZserioArrayType_indices = ::zserio::Array<::zserio::vector<uint32_t>, ::zserio::DynamicBitFieldArrayTraits<uint32_t, ZserioElementBitSize_indices>, ::zserio::ArrayType::AUTO>;

    ZserioArrayType_renderSurfaces readRenderSurfaces(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_renderSurfaces readRenderSurfaces(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_indices readIndices(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_indices readIndices(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint8_t m_numIndexBits_;
    bool m_isInitialized;
    ZserioArrayType_renderSurfaces m_renderSurfaces_;
    ZserioArrayType_indices m_indices_;
};

} // namespace types
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_TYPES_BDAM_SURFACE_TIN_H
