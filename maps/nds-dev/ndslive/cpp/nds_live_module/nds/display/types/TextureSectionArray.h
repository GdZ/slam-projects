/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_TYPES_TEXTURE_SECTION_ARRAY_H
#define NDS_DISPLAY_TYPES_TEXTURE_SECTION_ARRAY_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/display/reference/types/TextureSectionNumber.h>
#include <nds/display/types/TextureSection.h>

namespace nds
{
namespace display
{
namespace types
{

class TextureSectionArray
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumSections()
        {
            return m_numSections_;
        }

    private:
        ::zserio::DeltaContext m_numSections_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    TextureSectionArray() noexcept :
            TextureSectionArray(allocator_type())
    {}

    explicit TextureSectionArray(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_sections = ::zserio::vector<::nds::display::types::TextureSection>>
    TextureSectionArray(
            ::nds::display::reference::types::TextureSectionNumber numSections_,
            ZSERIO_T_sections&& sections_,
            const allocator_type& allocator = allocator_type()) :
            TextureSectionArray(allocator)
    {
        m_numSections_ = numSections_;
        m_sections_ = ZserioArrayType_sections(::std::forward<ZSERIO_T_sections>(sections_));
    }

    explicit TextureSectionArray(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit TextureSectionArray(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~TextureSectionArray() = default;

    TextureSectionArray(const TextureSectionArray&) = default;
    TextureSectionArray& operator=(const TextureSectionArray&) = default;

    TextureSectionArray(TextureSectionArray&&) = default;
    TextureSectionArray& operator=(TextureSectionArray&&) = default;

    TextureSectionArray(::zserio::PropagateAllocatorT,
            const TextureSectionArray& other, const allocator_type& allocator);

    ::nds::display::reference::types::TextureSectionNumber getNumSections() const;
    void setNumSections(::nds::display::reference::types::TextureSectionNumber numSections_);

    const ::zserio::vector<::nds::display::types::TextureSection>& getSections() const;
    ::zserio::vector<::nds::display::types::TextureSection>& getSections();
    void setSections(const ::zserio::vector<::nds::display::types::TextureSection>& sections_);
    void setSections(::zserio::vector<::nds::display::types::TextureSection>&& sections_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const TextureSectionArray& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_sections
    {
    public:
        using OwnerType = TextureSectionArray;

        static void create(TextureSectionArray& owner,
                ::zserio::vector<::nds::display::types::TextureSection>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(TextureSectionArray& owner,
                ::zserio::vector<::nds::display::types::TextureSection>& array,
                ::nds::display::types::TextureSection::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_sections = ::zserio::Array<::zserio::vector<::nds::display::types::TextureSection>, ::zserio::ObjectArrayTraits<::nds::display::types::TextureSection, ZserioElementFactory_sections>, ::zserio::ArrayType::NORMAL>;

    ::nds::display::reference::types::TextureSectionNumber readNumSections(::zserio::BitStreamReader& in);
    ::nds::display::reference::types::TextureSectionNumber readNumSections(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_sections readSections(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_sections readSections(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::display::reference::types::TextureSectionNumber m_numSections_;
    ZserioArrayType_sections m_sections_;
};

} // namespace types
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_TYPES_TEXTURE_SECTION_ARRAY_H
