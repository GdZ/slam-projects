/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_DISPLAY_LAYER_HEIGHTMAP_LAYER_H
#define NDS_DISPLAY_LAYER_HEIGHTMAP_LAYER_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/display/instantiations/HeightMapGridLayer.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace display
{
namespace layer
{

class HeightmapLayer
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::display::instantiations::HeightMapGridLayer::ZserioPackingContext& getHeightmaps()
        {
            return m_heightmaps_;
        }

    private:
        ::nds::display::instantiations::HeightMapGridLayer::ZserioPackingContext m_heightmaps_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    HeightmapLayer() noexcept :
            HeightmapLayer(allocator_type())
    {}

    explicit HeightmapLayer(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_heightmaps = ::nds::display::instantiations::HeightMapGridLayer>
    HeightmapLayer(
            bool hasIds_,
            bool completeTile_,
            ZSERIO_T_heightmaps&& heightmaps_,
            const allocator_type& allocator = allocator_type()) :
            HeightmapLayer(allocator)
    {
        m_hasIds_ = hasIds_;
        m_completeTile_ = completeTile_;
        m_heightmaps_ = ::std::forward<ZSERIO_T_heightmaps>(heightmaps_);
    }

    explicit HeightmapLayer(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit HeightmapLayer(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~HeightmapLayer() = default;

    HeightmapLayer(const HeightmapLayer& other);
    HeightmapLayer& operator=(const HeightmapLayer& other);

    HeightmapLayer(HeightmapLayer&& other);
    HeightmapLayer& operator=(HeightmapLayer&& other);

    HeightmapLayer(::zserio::PropagateAllocatorT,
            const HeightmapLayer& other, const allocator_type& allocator);

    void initializeChildren();

    bool getHasIds() const;
    void setHasIds(bool hasIds_);

    bool getCompleteTile() const;
    void setCompleteTile(bool completeTile_);

    const ::nds::display::instantiations::HeightMapGridLayer& getHeightmaps() const;
    ::nds::display::instantiations::HeightMapGridLayer& getHeightmaps();
    void setHeightmaps(const ::nds::display::instantiations::HeightMapGridLayer& heightmaps_);
    void setHeightmaps(::nds::display::instantiations::HeightMapGridLayer&& heightmaps_);

    ::nds::system::types::LayerType funcGetLayerType() const;

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const HeightmapLayer& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    bool readHasIds(::zserio::BitStreamReader& in);
    bool readCompleteTile(::zserio::BitStreamReader& in);
    ::nds::display::instantiations::HeightMapGridLayer readHeightmaps(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::display::instantiations::HeightMapGridLayer readHeightmaps(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    bool m_hasIds_;
    bool m_completeTile_;
    ::nds::display::instantiations::HeightMapGridLayer m_heightmaps_;
};

} // namespace layer
} // namespace display
} // namespace nds

#endif // NDS_DISPLAY_LAYER_HEIGHTMAP_LAYER_H
