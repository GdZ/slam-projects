/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTINGDATA_ATTRIBUTES_ROUTING_LANE_TRANSITION_ATTRIBUTE_TYPE_H
#define NDS_ROUTINGDATA_ATTRIBUTES_ROUTING_LANE_TRANSITION_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace routingdata
{
namespace attributes
{

enum class RoutingLaneTransitionAttributeType : uint16_t
{
    SPECIAL_TRANSITION_CODE = UINT16_C(0),
    CONSUMPTION_SPEED_VARIATION = UINT16_C(1),
    TRANSITION_DURATION = UINT16_C(2),
    TRANSITION_ANGLE = UINT16_C(3)
};

} // namespace attributes
} // namespace routingdata
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for RoutingLaneTransitionAttributeType enumeration.
template <>
struct EnumTraits<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>
{
    static constexpr ::std::array<const char*, 4> names =
    {{
        "SPECIAL_TRANSITION_CODE",
        "CONSUMPTION_SPEED_VARIATION",
        "TRANSITION_DURATION",
        "TRANSITION_ANGLE"
    }};

    static constexpr ::std::array<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType, 4> values =
    {{
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType::SPECIAL_TRANSITION_CODE,
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType::CONSUMPTION_SPEED_VARIATION,
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType::TRANSITION_DURATION,
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType::TRANSITION_ANGLE
    }};

    static constexpr const char* enumName = "RoutingLaneTransitionAttributeType";
};

template <>
size_t enumToOrdinal<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
::nds::routingdata::attributes::RoutingLaneTransitionAttributeType valueToEnum<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(
        typename ::std::underlying_type<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::DeltaContext& context, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
size_t bitSizeOf<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::DeltaContext& context, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
size_t initializeOffsets<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(size_t bitPosition, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
::nds::routingdata::attributes::RoutingLaneTransitionAttributeType read<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::routingdata::attributes::RoutingLaneTransitionAttributeType read<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::BitStreamWriter& out, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::routingdata::attributes::RoutingLaneTransitionAttributeType value);

} // namespace zserio

#endif // NDS_ROUTINGDATA_ATTRIBUTES_ROUTING_LANE_TRANSITION_ATTRIBUTE_TYPE_H
