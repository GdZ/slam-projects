/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTINGDATA_TYPES_TOURIST_ROUTE_TYPE_H
#define NDS_ROUTINGDATA_TYPES_TOURIST_ROUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace routingdata
{
namespace types
{

enum class TouristRouteType : uint8_t
{
    SCENIC = UINT8_C(0),
    NATIONAL = UINT8_C(1),
    REGIONAL = UINT8_C(2),
    NATURAL = UINT8_C(3),
    CULTURAL_HISTORIC = UINT8_C(4)
};

} // namespace types
} // namespace routingdata
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for TouristRouteType enumeration.
template <>
struct EnumTraits<::nds::routingdata::types::TouristRouteType>
{
    static constexpr ::std::array<const char*, 5> names =
    {{
        "SCENIC",
        "NATIONAL",
        "REGIONAL",
        "NATURAL",
        "CULTURAL_HISTORIC"
    }};

    static constexpr ::std::array<::nds::routingdata::types::TouristRouteType, 5> values =
    {{
        ::nds::routingdata::types::TouristRouteType::SCENIC,
        ::nds::routingdata::types::TouristRouteType::NATIONAL,
        ::nds::routingdata::types::TouristRouteType::REGIONAL,
        ::nds::routingdata::types::TouristRouteType::NATURAL,
        ::nds::routingdata::types::TouristRouteType::CULTURAL_HISTORIC
    }};

    static constexpr const char* enumName = "TouristRouteType";
};

template <>
size_t enumToOrdinal<::nds::routingdata::types::TouristRouteType>(::nds::routingdata::types::TouristRouteType value);

template <>
::nds::routingdata::types::TouristRouteType valueToEnum<::nds::routingdata::types::TouristRouteType>(
        typename ::std::underlying_type<::nds::routingdata::types::TouristRouteType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::routingdata::types::TouristRouteType>(::nds::routingdata::types::TouristRouteType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::routingdata::types::TouristRouteType>(::zserio::DeltaContext& context, ::nds::routingdata::types::TouristRouteType value);

template <>
size_t bitSizeOf<::nds::routingdata::types::TouristRouteType>(::nds::routingdata::types::TouristRouteType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::routingdata::types::TouristRouteType>(::zserio::DeltaContext& context, ::nds::routingdata::types::TouristRouteType value);

template <>
size_t initializeOffsets<::nds::routingdata::types::TouristRouteType>(size_t bitPosition, ::nds::routingdata::types::TouristRouteType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::routingdata::types::TouristRouteType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::routingdata::types::TouristRouteType value);

template <>
::nds::routingdata::types::TouristRouteType read<::nds::routingdata::types::TouristRouteType>(::zserio::BitStreamReader& in);

template <>
::nds::routingdata::types::TouristRouteType read<::nds::routingdata::types::TouristRouteType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::routingdata::types::TouristRouteType>(::zserio::BitStreamWriter& out, ::nds::routingdata::types::TouristRouteType value);

template <>
void write<::zserio::DeltaContext, ::nds::routingdata::types::TouristRouteType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::routingdata::types::TouristRouteType value);

} // namespace zserio

#endif // NDS_ROUTINGDATA_TYPES_TOURIST_ROUTE_TYPE_H
