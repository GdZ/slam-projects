/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROUTINGDATA_TYPES_SPEED_PROFILES_WEEK_H
#define NDS_ROUTINGDATA_TYPES_SPEED_PROFILES_WEEK_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/core/conditions/DaysOfWeek.h>
#include <nds/core/types/SpeedKmh.h>
#include <nds/routingdata/types/SpeedProfileId.h>

namespace nds
{
namespace routingdata
{
namespace types
{

class SpeedProfilesWeek
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getBaseSpeed()
        {
            return m_baseSpeed_;
        }

        ::zserio::DeltaContext& getProfileSunday()
        {
            return m_profileSunday_;
        }

        ::zserio::DeltaContext& getAvgSpeedSunday()
        {
            return m_avgSpeedSunday_;
        }

        ::zserio::DeltaContext& getProfileMonday()
        {
            return m_profileMonday_;
        }

        ::zserio::DeltaContext& getAvgSpeedMonday()
        {
            return m_avgSpeedMonday_;
        }

        ::zserio::DeltaContext& getProfileTuesday()
        {
            return m_profileTuesday_;
        }

        ::zserio::DeltaContext& getAvgSpeedTuesday()
        {
            return m_avgSpeedTuesday_;
        }

        ::zserio::DeltaContext& getProfileWednesday()
        {
            return m_profileWednesday_;
        }

        ::zserio::DeltaContext& getAvgSpeedWednesday()
        {
            return m_avgSpeedWednesday_;
        }

        ::zserio::DeltaContext& getProfileThursday()
        {
            return m_profileThursday_;
        }

        ::zserio::DeltaContext& getAvgSpeedThursday()
        {
            return m_avgSpeedThursday_;
        }

        ::zserio::DeltaContext& getProfileFriday()
        {
            return m_profileFriday_;
        }

        ::zserio::DeltaContext& getAvgSpeedFriday()
        {
            return m_avgSpeedFriday_;
        }

        ::zserio::DeltaContext& getProfileSaturday()
        {
            return m_profileSaturday_;
        }

        ::zserio::DeltaContext& getAvgSpeedSaturday()
        {
            return m_avgSpeedSaturday_;
        }

    private:
        ::zserio::DeltaContext m_baseSpeed_;
        ::zserio::DeltaContext m_profileSunday_;
        ::zserio::DeltaContext m_avgSpeedSunday_;
        ::zserio::DeltaContext m_profileMonday_;
        ::zserio::DeltaContext m_avgSpeedMonday_;
        ::zserio::DeltaContext m_profileTuesday_;
        ::zserio::DeltaContext m_avgSpeedTuesday_;
        ::zserio::DeltaContext m_profileWednesday_;
        ::zserio::DeltaContext m_avgSpeedWednesday_;
        ::zserio::DeltaContext m_profileThursday_;
        ::zserio::DeltaContext m_avgSpeedThursday_;
        ::zserio::DeltaContext m_profileFriday_;
        ::zserio::DeltaContext m_avgSpeedFriday_;
        ::zserio::DeltaContext m_profileSaturday_;
        ::zserio::DeltaContext m_avgSpeedSaturday_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SpeedProfilesWeek() noexcept :
            SpeedProfilesWeek(allocator_type())
    {}

    explicit SpeedProfilesWeek(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_daysOfWeek = ::nds::core::conditions::DaysOfWeek,
            typename ZSERIO_T_baseSpeed = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileSunday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedSunday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileMonday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedMonday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileTuesday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedTuesday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileWednesday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedWednesday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileThursday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedThursday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileFriday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedFriday = ::nds::core::types::SpeedKmh,
            typename ZSERIO_T_profileSaturday = ::nds::routingdata::types::SpeedProfileId,
            typename ZSERIO_T_avgSpeedSaturday = ::nds::core::types::SpeedKmh,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_daysOfWeek, SpeedProfilesWeek, allocator_type> = 0>
    SpeedProfilesWeek(
            ZSERIO_T_daysOfWeek&& daysOfWeek_,
            ZSERIO_T_baseSpeed&& baseSpeed_,
            ZSERIO_T_profileSunday&& profileSunday_,
            ZSERIO_T_avgSpeedSunday&& avgSpeedSunday_,
            ZSERIO_T_profileMonday&& profileMonday_,
            ZSERIO_T_avgSpeedMonday&& avgSpeedMonday_,
            ZSERIO_T_profileTuesday&& profileTuesday_,
            ZSERIO_T_avgSpeedTuesday&& avgSpeedTuesday_,
            ZSERIO_T_profileWednesday&& profileWednesday_,
            ZSERIO_T_avgSpeedWednesday&& avgSpeedWednesday_,
            ZSERIO_T_profileThursday&& profileThursday_,
            ZSERIO_T_avgSpeedThursday&& avgSpeedThursday_,
            ZSERIO_T_profileFriday&& profileFriday_,
            ZSERIO_T_avgSpeedFriday&& avgSpeedFriday_,
            ZSERIO_T_profileSaturday&& profileSaturday_,
            ZSERIO_T_avgSpeedSaturday&& avgSpeedSaturday_,
            const allocator_type& allocator = allocator_type()) :
            SpeedProfilesWeek(allocator)
    {
        m_daysOfWeek_ = ::std::forward<ZSERIO_T_daysOfWeek>(daysOfWeek_);
        m_baseSpeed_ = ::std::forward<ZSERIO_T_baseSpeed>(baseSpeed_);
        m_profileSunday_ = ::std::forward<ZSERIO_T_profileSunday>(profileSunday_);
        m_avgSpeedSunday_ = ::std::forward<ZSERIO_T_avgSpeedSunday>(avgSpeedSunday_);
        m_profileMonday_ = ::std::forward<ZSERIO_T_profileMonday>(profileMonday_);
        m_avgSpeedMonday_ = ::std::forward<ZSERIO_T_avgSpeedMonday>(avgSpeedMonday_);
        m_profileTuesday_ = ::std::forward<ZSERIO_T_profileTuesday>(profileTuesday_);
        m_avgSpeedTuesday_ = ::std::forward<ZSERIO_T_avgSpeedTuesday>(avgSpeedTuesday_);
        m_profileWednesday_ = ::std::forward<ZSERIO_T_profileWednesday>(profileWednesday_);
        m_avgSpeedWednesday_ = ::std::forward<ZSERIO_T_avgSpeedWednesday>(avgSpeedWednesday_);
        m_profileThursday_ = ::std::forward<ZSERIO_T_profileThursday>(profileThursday_);
        m_avgSpeedThursday_ = ::std::forward<ZSERIO_T_avgSpeedThursday>(avgSpeedThursday_);
        m_profileFriday_ = ::std::forward<ZSERIO_T_profileFriday>(profileFriday_);
        m_avgSpeedFriday_ = ::std::forward<ZSERIO_T_avgSpeedFriday>(avgSpeedFriday_);
        m_profileSaturday_ = ::std::forward<ZSERIO_T_profileSaturday>(profileSaturday_);
        m_avgSpeedSaturday_ = ::std::forward<ZSERIO_T_avgSpeedSaturday>(avgSpeedSaturday_);
    }

    explicit SpeedProfilesWeek(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SpeedProfilesWeek(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SpeedProfilesWeek() = default;

    SpeedProfilesWeek(const SpeedProfilesWeek&) = default;
    SpeedProfilesWeek& operator=(const SpeedProfilesWeek&) = default;

    SpeedProfilesWeek(SpeedProfilesWeek&&) = default;
    SpeedProfilesWeek& operator=(SpeedProfilesWeek&&) = default;

    SpeedProfilesWeek(::zserio::PropagateAllocatorT,
            const SpeedProfilesWeek& other, const allocator_type& allocator);

    const ::nds::core::conditions::DaysOfWeek& getDaysOfWeek() const;
    ::nds::core::conditions::DaysOfWeek& getDaysOfWeek();
    void setDaysOfWeek(const ::nds::core::conditions::DaysOfWeek& daysOfWeek_);
    void setDaysOfWeek(::nds::core::conditions::DaysOfWeek&& daysOfWeek_);

    ::nds::core::types::SpeedKmh getBaseSpeed() const;
    void setBaseSpeed(::nds::core::types::SpeedKmh baseSpeed_);
    bool isBaseSpeedUsed() const;
    bool isBaseSpeedSet() const;
    void resetBaseSpeed();

    ::nds::routingdata::types::SpeedProfileId getProfileSunday() const;
    void setProfileSunday(::nds::routingdata::types::SpeedProfileId profileSunday_);
    bool isProfileSundayUsed() const;
    bool isProfileSundaySet() const;
    void resetProfileSunday();

    ::nds::core::types::SpeedKmh getAvgSpeedSunday() const;
    void setAvgSpeedSunday(::nds::core::types::SpeedKmh avgSpeedSunday_);
    bool isAvgSpeedSundayUsed() const;
    bool isAvgSpeedSundaySet() const;
    void resetAvgSpeedSunday();

    ::nds::routingdata::types::SpeedProfileId getProfileMonday() const;
    void setProfileMonday(::nds::routingdata::types::SpeedProfileId profileMonday_);
    bool isProfileMondayUsed() const;
    bool isProfileMondaySet() const;
    void resetProfileMonday();

    ::nds::core::types::SpeedKmh getAvgSpeedMonday() const;
    void setAvgSpeedMonday(::nds::core::types::SpeedKmh avgSpeedMonday_);
    bool isAvgSpeedMondayUsed() const;
    bool isAvgSpeedMondaySet() const;
    void resetAvgSpeedMonday();

    ::nds::routingdata::types::SpeedProfileId getProfileTuesday() const;
    void setProfileTuesday(::nds::routingdata::types::SpeedProfileId profileTuesday_);
    bool isProfileTuesdayUsed() const;
    bool isProfileTuesdaySet() const;
    void resetProfileTuesday();

    ::nds::core::types::SpeedKmh getAvgSpeedTuesday() const;
    void setAvgSpeedTuesday(::nds::core::types::SpeedKmh avgSpeedTuesday_);
    bool isAvgSpeedTuesdayUsed() const;
    bool isAvgSpeedTuesdaySet() const;
    void resetAvgSpeedTuesday();

    ::nds::routingdata::types::SpeedProfileId getProfileWednesday() const;
    void setProfileWednesday(::nds::routingdata::types::SpeedProfileId profileWednesday_);
    bool isProfileWednesdayUsed() const;
    bool isProfileWednesdaySet() const;
    void resetProfileWednesday();

    ::nds::core::types::SpeedKmh getAvgSpeedWednesday() const;
    void setAvgSpeedWednesday(::nds::core::types::SpeedKmh avgSpeedWednesday_);
    bool isAvgSpeedWednesdayUsed() const;
    bool isAvgSpeedWednesdaySet() const;
    void resetAvgSpeedWednesday();

    ::nds::routingdata::types::SpeedProfileId getProfileThursday() const;
    void setProfileThursday(::nds::routingdata::types::SpeedProfileId profileThursday_);
    bool isProfileThursdayUsed() const;
    bool isProfileThursdaySet() const;
    void resetProfileThursday();

    ::nds::core::types::SpeedKmh getAvgSpeedThursday() const;
    void setAvgSpeedThursday(::nds::core::types::SpeedKmh avgSpeedThursday_);
    bool isAvgSpeedThursdayUsed() const;
    bool isAvgSpeedThursdaySet() const;
    void resetAvgSpeedThursday();

    ::nds::routingdata::types::SpeedProfileId getProfileFriday() const;
    void setProfileFriday(::nds::routingdata::types::SpeedProfileId profileFriday_);
    bool isProfileFridayUsed() const;
    bool isProfileFridaySet() const;
    void resetProfileFriday();

    ::nds::core::types::SpeedKmh getAvgSpeedFriday() const;
    void setAvgSpeedFriday(::nds::core::types::SpeedKmh avgSpeedFriday_);
    bool isAvgSpeedFridayUsed() const;
    bool isAvgSpeedFridaySet() const;
    void resetAvgSpeedFriday();

    ::nds::routingdata::types::SpeedProfileId getProfileSaturday() const;
    void setProfileSaturday(::nds::routingdata::types::SpeedProfileId profileSaturday_);
    bool isProfileSaturdayUsed() const;
    bool isProfileSaturdaySet() const;
    void resetProfileSaturday();

    ::nds::core::types::SpeedKmh getAvgSpeedSaturday() const;
    void setAvgSpeedSaturday(::nds::core::types::SpeedKmh avgSpeedSaturday_);
    bool isAvgSpeedSaturdayUsed() const;
    bool isAvgSpeedSaturdaySet() const;
    void resetAvgSpeedSaturday();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SpeedProfilesWeek& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::conditions::DaysOfWeek readDaysOfWeek(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readBaseSpeed(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readBaseSpeed(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileSunday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileSunday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedSunday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedSunday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileMonday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileMonday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedMonday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedMonday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileTuesday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileTuesday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedTuesday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedTuesday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileWednesday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileWednesday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedWednesday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedWednesday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileThursday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileThursday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedThursday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedThursday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileFriday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileFriday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedFriday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedFriday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileSaturday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> readProfileSaturday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedSaturday(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> readAvgSpeedSaturday(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::core::conditions::DaysOfWeek m_daysOfWeek_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_baseSpeed_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileSunday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedSunday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileMonday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedMonday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileTuesday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedTuesday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileWednesday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedWednesday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileThursday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedThursday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileFriday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedFriday_;
    ::zserio::InplaceOptionalHolder<::nds::routingdata::types::SpeedProfileId> m_profileSaturday_;
    ::zserio::InplaceOptionalHolder<::nds::core::types::SpeedKmh> m_avgSpeedSaturday_;
};

} // namespace types
} // namespace routingdata
} // namespace nds

#endif // NDS_ROUTINGDATA_TYPES_SPEED_PROFILES_WEEK_H
