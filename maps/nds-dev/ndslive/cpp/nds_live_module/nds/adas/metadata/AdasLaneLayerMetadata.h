/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_METADATA_ADAS_LANE_LAYER_METADATA_H
#define NDS_ADAS_METADATA_ADAS_LANE_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/adas/instantiations/AdasLaneAttributeMetadata.h>
#include <nds/adas/metadata/AdasLaneLayerContent.h>
#include <nds/core/types/LaneType.h>

namespace nds
{
namespace adas
{
namespace metadata
{

class AdasLaneLayerMetadata
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::nds::adas::instantiations::AdasLaneAttributeMetadata::ZserioPackingContext& getLaneAttributeMetadata()
        {
            return m_laneAttributeMetadata_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::nds::adas::instantiations::AdasLaneAttributeMetadata::ZserioPackingContext m_laneAttributeMetadata_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    AdasLaneLayerMetadata() noexcept :
            AdasLaneLayerMetadata(allocator_type())
    {}

    explicit AdasLaneLayerMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_laneAttributeMetadata = ::nds::adas::instantiations::AdasLaneAttributeMetadata,
            typename ZSERIO_T_coveredLaneTypes = ::zserio::vector<::nds::core::types::LaneType>>
    AdasLaneLayerMetadata(
            ::nds::adas::metadata::AdasLaneLayerContent content_,
            ZSERIO_T_laneAttributeMetadata&& laneAttributeMetadata_,
            ZSERIO_T_coveredLaneTypes&& coveredLaneTypes_,
            const allocator_type& allocator = allocator_type()) :
            AdasLaneLayerMetadata(allocator)
    {
        m_content_ = content_;
        m_laneAttributeMetadata_ = ::std::forward<ZSERIO_T_laneAttributeMetadata>(laneAttributeMetadata_);
        m_coveredLaneTypes_ = ZserioArrayType_coveredLaneTypes(::std::forward<ZSERIO_T_coveredLaneTypes>(coveredLaneTypes_));
    }

    explicit AdasLaneLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit AdasLaneLayerMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~AdasLaneLayerMetadata() = default;

    AdasLaneLayerMetadata(const AdasLaneLayerMetadata&) = default;
    AdasLaneLayerMetadata& operator=(const AdasLaneLayerMetadata&) = default;

    AdasLaneLayerMetadata(AdasLaneLayerMetadata&&) = default;
    AdasLaneLayerMetadata& operator=(AdasLaneLayerMetadata&&) = default;

    AdasLaneLayerMetadata(::zserio::PropagateAllocatorT,
            const AdasLaneLayerMetadata& other, const allocator_type& allocator);

    ::nds::adas::metadata::AdasLaneLayerContent getContent() const;
    void setContent(::nds::adas::metadata::AdasLaneLayerContent content_);

    const ::nds::adas::instantiations::AdasLaneAttributeMetadata& getLaneAttributeMetadata() const;
    ::nds::adas::instantiations::AdasLaneAttributeMetadata& getLaneAttributeMetadata();
    void setLaneAttributeMetadata(const ::nds::adas::instantiations::AdasLaneAttributeMetadata& laneAttributeMetadata_);
    void setLaneAttributeMetadata(::nds::adas::instantiations::AdasLaneAttributeMetadata&& laneAttributeMetadata_);

    const ::zserio::vector<::nds::core::types::LaneType>& getCoveredLaneTypes() const;
    ::zserio::vector<::nds::core::types::LaneType>& getCoveredLaneTypes();
    void setCoveredLaneTypes(const ::zserio::vector<::nds::core::types::LaneType>& coveredLaneTypes_);
    void setCoveredLaneTypes(::zserio::vector<::nds::core::types::LaneType>&& coveredLaneTypes_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const AdasLaneLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_coveredLaneTypes
    {
    public:
        using OwnerType = AdasLaneLayerMetadata;

        static void create(AdasLaneLayerMetadata& owner,
                ::zserio::vector<::nds::core::types::LaneType>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(AdasLaneLayerMetadata& owner,
                ::zserio::vector<::nds::core::types::LaneType>& array,
                ::nds::core::types::LaneType::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_coveredLaneTypes = ::zserio::Array<::zserio::vector<::nds::core::types::LaneType>, ::zserio::ObjectArrayTraits<::nds::core::types::LaneType, ZserioElementFactory_coveredLaneTypes>, ::zserio::ArrayType::AUTO>;

    ::nds::adas::metadata::AdasLaneLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::adas::metadata::AdasLaneLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::adas::instantiations::AdasLaneAttributeMetadata readLaneAttributeMetadata(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::adas::instantiations::AdasLaneAttributeMetadata readLaneAttributeMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_coveredLaneTypes readCoveredLaneTypes(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_coveredLaneTypes readCoveredLaneTypes(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::adas::metadata::AdasLaneLayerContent m_content_;
    ::nds::adas::instantiations::AdasLaneAttributeMetadata m_laneAttributeMetadata_;
    ZserioArrayType_coveredLaneTypes m_coveredLaneTypes_;
};

} // namespace metadata
} // namespace adas
} // namespace nds

#endif // NDS_ADAS_METADATA_ADAS_LANE_LAYER_METADATA_H
