/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_ATTRIBUTES_ADAS_LANE_ATTRIBUTE_TYPE_H
#define NDS_ADAS_ATTRIBUTES_ADAS_LANE_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace adas
{
namespace attributes
{

enum class AdasLaneAttributeType : uint16_t
{
    CURVATURE = UINT16_C(0),
    SLOPE_ARRAY = UINT16_C(1),
    COMFORTABLE_SPEED_CURVE = UINT16_C(2)
};

} // namespace attributes
} // namespace adas
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for AdasLaneAttributeType enumeration.
template <>
struct EnumTraits<::nds::adas::attributes::AdasLaneAttributeType>
{
    static constexpr ::std::array<const char*, 3> names =
    {{
        "CURVATURE",
        "SLOPE_ARRAY",
        "COMFORTABLE_SPEED_CURVE"
    }};

    static constexpr ::std::array<::nds::adas::attributes::AdasLaneAttributeType, 3> values =
    {{
        ::nds::adas::attributes::AdasLaneAttributeType::CURVATURE,
        ::nds::adas::attributes::AdasLaneAttributeType::SLOPE_ARRAY,
        ::nds::adas::attributes::AdasLaneAttributeType::COMFORTABLE_SPEED_CURVE
    }};

    static constexpr const char* enumName = "AdasLaneAttributeType";
};

template <>
size_t enumToOrdinal<::nds::adas::attributes::AdasLaneAttributeType>(::nds::adas::attributes::AdasLaneAttributeType value);

template <>
::nds::adas::attributes::AdasLaneAttributeType valueToEnum<::nds::adas::attributes::AdasLaneAttributeType>(
        typename ::std::underlying_type<::nds::adas::attributes::AdasLaneAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::adas::attributes::AdasLaneAttributeType>(::nds::adas::attributes::AdasLaneAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::adas::attributes::AdasLaneAttributeType>(::zserio::DeltaContext& context, ::nds::adas::attributes::AdasLaneAttributeType value);

template <>
size_t bitSizeOf<::nds::adas::attributes::AdasLaneAttributeType>(::nds::adas::attributes::AdasLaneAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::adas::attributes::AdasLaneAttributeType>(::zserio::DeltaContext& context, ::nds::adas::attributes::AdasLaneAttributeType value);

template <>
size_t initializeOffsets<::nds::adas::attributes::AdasLaneAttributeType>(size_t bitPosition, ::nds::adas::attributes::AdasLaneAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::adas::attributes::AdasLaneAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::adas::attributes::AdasLaneAttributeType value);

template <>
::nds::adas::attributes::AdasLaneAttributeType read<::nds::adas::attributes::AdasLaneAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::adas::attributes::AdasLaneAttributeType read<::nds::adas::attributes::AdasLaneAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::adas::attributes::AdasLaneAttributeType>(::zserio::BitStreamWriter& out, ::nds::adas::attributes::AdasLaneAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::adas::attributes::AdasLaneAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::adas::attributes::AdasLaneAttributeType value);

} // namespace zserio

#endif // NDS_ADAS_ATTRIBUTES_ADAS_LANE_ATTRIBUTE_TYPE_H
