/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_ATTRIBUTES_ADAS_ROAD_ATTRIBUTE_TYPE_H
#define NDS_ADAS_ATTRIBUTES_ADAS_ROAD_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace adas
{
namespace attributes
{

enum class AdasRoadAttributeType : uint16_t
{
    CURVATURE = UINT16_C(0),
    SLOPE_ARRAY = UINT16_C(1),
    CLOTHOID = UINT16_C(2),
    GRADIENT = UINT16_C(3),
    ENHANCED_GEOMETRY = UINT16_C(4),
    CURVATURE_PATH = UINT16_C(5),
    COMFORTABLE_SPEED_CURVE = UINT16_C(6),
    COMFORTABLE_SPEED_PATH = UINT16_C(7),
    ELEVATION_ARRAY = UINT16_C(8)
};

} // namespace attributes
} // namespace adas
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for AdasRoadAttributeType enumeration.
template <>
struct EnumTraits<::nds::adas::attributes::AdasRoadAttributeType>
{
    static constexpr ::std::array<const char*, 9> names =
    {{
        "CURVATURE",
        "SLOPE_ARRAY",
        "CLOTHOID",
        "GRADIENT",
        "ENHANCED_GEOMETRY",
        "CURVATURE_PATH",
        "COMFORTABLE_SPEED_CURVE",
        "COMFORTABLE_SPEED_PATH",
        "ELEVATION_ARRAY"
    }};

    static constexpr ::std::array<::nds::adas::attributes::AdasRoadAttributeType, 9> values =
    {{
        ::nds::adas::attributes::AdasRoadAttributeType::CURVATURE,
        ::nds::adas::attributes::AdasRoadAttributeType::SLOPE_ARRAY,
        ::nds::adas::attributes::AdasRoadAttributeType::CLOTHOID,
        ::nds::adas::attributes::AdasRoadAttributeType::GRADIENT,
        ::nds::adas::attributes::AdasRoadAttributeType::ENHANCED_GEOMETRY,
        ::nds::adas::attributes::AdasRoadAttributeType::CURVATURE_PATH,
        ::nds::adas::attributes::AdasRoadAttributeType::COMFORTABLE_SPEED_CURVE,
        ::nds::adas::attributes::AdasRoadAttributeType::COMFORTABLE_SPEED_PATH,
        ::nds::adas::attributes::AdasRoadAttributeType::ELEVATION_ARRAY
    }};

    static constexpr const char* enumName = "AdasRoadAttributeType";
};

template <>
size_t enumToOrdinal<::nds::adas::attributes::AdasRoadAttributeType>(::nds::adas::attributes::AdasRoadAttributeType value);

template <>
::nds::adas::attributes::AdasRoadAttributeType valueToEnum<::nds::adas::attributes::AdasRoadAttributeType>(
        typename ::std::underlying_type<::nds::adas::attributes::AdasRoadAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::adas::attributes::AdasRoadAttributeType>(::nds::adas::attributes::AdasRoadAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::adas::attributes::AdasRoadAttributeType>(::zserio::DeltaContext& context, ::nds::adas::attributes::AdasRoadAttributeType value);

template <>
size_t bitSizeOf<::nds::adas::attributes::AdasRoadAttributeType>(::nds::adas::attributes::AdasRoadAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::adas::attributes::AdasRoadAttributeType>(::zserio::DeltaContext& context, ::nds::adas::attributes::AdasRoadAttributeType value);

template <>
size_t initializeOffsets<::nds::adas::attributes::AdasRoadAttributeType>(size_t bitPosition, ::nds::adas::attributes::AdasRoadAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::adas::attributes::AdasRoadAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::adas::attributes::AdasRoadAttributeType value);

template <>
::nds::adas::attributes::AdasRoadAttributeType read<::nds::adas::attributes::AdasRoadAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::adas::attributes::AdasRoadAttributeType read<::nds::adas::attributes::AdasRoadAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::adas::attributes::AdasRoadAttributeType>(::zserio::BitStreamWriter& out, ::nds::adas::attributes::AdasRoadAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::adas::attributes::AdasRoadAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::adas::attributes::AdasRoadAttributeType value);

} // namespace zserio

#endif // NDS_ADAS_ATTRIBUTES_ADAS_ROAD_ATTRIBUTE_TYPE_H
