/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_TYPES_SLOPE_ARRAY_H
#define NDS_ADAS_TYPES_SLOPE_ARRAY_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/adas/types/SlopePoint.h>

namespace nds
{
namespace adas
{
namespace types
{

class SlopeArray
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumOfValues()
        {
            return m_numOfValues_;
        }

    private:
        ::zserio::DeltaContext m_numOfValues_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SlopeArray() noexcept :
            SlopeArray(allocator_type())
    {}

    explicit SlopeArray(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_slopePoint = ::zserio::vector<::nds::adas::types::SlopePoint>>
    SlopeArray(
            uint16_t numOfValues_,
            ZSERIO_T_slopePoint&& slopePoint_,
            const allocator_type& allocator = allocator_type()) :
            SlopeArray(allocator)
    {
        m_numOfValues_ = numOfValues_;
        m_slopePoint_ = ZserioArrayType_slopePoint(::std::forward<ZSERIO_T_slopePoint>(slopePoint_));
    }

    explicit SlopeArray(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SlopeArray(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SlopeArray() = default;

    SlopeArray(const SlopeArray&) = default;
    SlopeArray& operator=(const SlopeArray&) = default;

    SlopeArray(SlopeArray&&) = default;
    SlopeArray& operator=(SlopeArray&&) = default;

    SlopeArray(::zserio::PropagateAllocatorT,
            const SlopeArray& other, const allocator_type& allocator);

    uint16_t getNumOfValues() const;
    void setNumOfValues(uint16_t numOfValues_);

    const ::zserio::vector<::nds::adas::types::SlopePoint>& getSlopePoint() const;
    ::zserio::vector<::nds::adas::types::SlopePoint>& getSlopePoint();
    void setSlopePoint(const ::zserio::vector<::nds::adas::types::SlopePoint>& slopePoint_);
    void setSlopePoint(::zserio::vector<::nds::adas::types::SlopePoint>&& slopePoint_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SlopeArray& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_slopePoint
    {
    public:
        using OwnerType = SlopeArray;

        static void create(SlopeArray& owner,
                ::zserio::vector<::nds::adas::types::SlopePoint>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(SlopeArray& owner,
                ::zserio::vector<::nds::adas::types::SlopePoint>& array,
                ::nds::adas::types::SlopePoint::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_slopePoint = ::zserio::Array<::zserio::vector<::nds::adas::types::SlopePoint>, ::zserio::ObjectArrayTraits<::nds::adas::types::SlopePoint, ZserioElementFactory_slopePoint>, ::zserio::ArrayType::NORMAL>;

    uint16_t readNumOfValues(::zserio::BitStreamReader& in);
    uint16_t readNumOfValues(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_slopePoint readSlopePoint(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_slopePoint readSlopePoint(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint16_t m_numOfValues_;
    ZserioArrayType_slopePoint m_slopePoint_;
};

} // namespace types
} // namespace adas
} // namespace nds

#endif // NDS_ADAS_TYPES_SLOPE_ARRAY_H
