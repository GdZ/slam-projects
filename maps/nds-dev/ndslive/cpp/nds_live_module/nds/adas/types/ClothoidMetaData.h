/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_TYPES_CLOTHOID_META_DATA_H
#define NDS_ADAS_TYPES_CLOTHOID_META_DATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/adas/types/AdasAccuracy.h>
#include <nds/adas/types/DegreeOfFreedom.h>
#include <nds/adas/types/RelativeCurvatureDeviation.h>

namespace nds
{
namespace adas
{
namespace types
{

class ClothoidMetaData
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getAdasAccuracy()
        {
            return m_adasAccuracy_;
        }

        ::zserio::DeltaContext& getRelativeCurvatureDeviation()
        {
            return m_relativeCurvatureDeviation_;
        }

        ::zserio::DeltaContext& getDegreeOfFreedom()
        {
            return m_degreeOfFreedom_;
        }

    private:
        ::zserio::DeltaContext m_adasAccuracy_;
        ::zserio::DeltaContext m_relativeCurvatureDeviation_;
        ::zserio::DeltaContext m_degreeOfFreedom_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    ClothoidMetaData() noexcept :
            ClothoidMetaData(allocator_type())
    {}

    explicit ClothoidMetaData(const allocator_type& allocator) noexcept;

    ClothoidMetaData(
            ::nds::adas::types::AdasAccuracy adasAccuracy_,
            ::nds::adas::types::RelativeCurvatureDeviation relativeCurvatureDeviation_,
            ::nds::adas::types::DegreeOfFreedom degreeOfFreedom_,
            bool hasGradient_,
            const allocator_type& allocator = allocator_type()) :
            ClothoidMetaData(allocator)
    {
        m_adasAccuracy_ = adasAccuracy_;
        m_relativeCurvatureDeviation_ = relativeCurvatureDeviation_;
        m_degreeOfFreedom_ = degreeOfFreedom_;
        m_hasGradient_ = hasGradient_;
    }

    explicit ClothoidMetaData(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit ClothoidMetaData(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~ClothoidMetaData() = default;

    ClothoidMetaData(const ClothoidMetaData&) = default;
    ClothoidMetaData& operator=(const ClothoidMetaData&) = default;

    ClothoidMetaData(ClothoidMetaData&&) = default;
    ClothoidMetaData& operator=(ClothoidMetaData&&) = default;

    ClothoidMetaData(::zserio::PropagateAllocatorT,
            const ClothoidMetaData& other, const allocator_type& allocator);

    ::nds::adas::types::AdasAccuracy getAdasAccuracy() const;
    void setAdasAccuracy(::nds::adas::types::AdasAccuracy adasAccuracy_);

    ::nds::adas::types::RelativeCurvatureDeviation getRelativeCurvatureDeviation() const;
    void setRelativeCurvatureDeviation(::nds::adas::types::RelativeCurvatureDeviation relativeCurvatureDeviation_);

    ::nds::adas::types::DegreeOfFreedom getDegreeOfFreedom() const;
    void setDegreeOfFreedom(::nds::adas::types::DegreeOfFreedom degreeOfFreedom_);

    bool getHasGradient() const;
    void setHasGradient(bool hasGradient_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const ClothoidMetaData& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::adas::types::AdasAccuracy readAdasAccuracy(::zserio::BitStreamReader& in);
    ::nds::adas::types::AdasAccuracy readAdasAccuracy(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::adas::types::RelativeCurvatureDeviation readRelativeCurvatureDeviation(::zserio::BitStreamReader& in);
    ::nds::adas::types::RelativeCurvatureDeviation readRelativeCurvatureDeviation(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::adas::types::DegreeOfFreedom readDegreeOfFreedom(::zserio::BitStreamReader& in);
    ::nds::adas::types::DegreeOfFreedom readDegreeOfFreedom(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    bool readHasGradient(::zserio::BitStreamReader& in);

    ::nds::adas::types::AdasAccuracy m_adasAccuracy_;
    ::nds::adas::types::RelativeCurvatureDeviation m_relativeCurvatureDeviation_;
    ::nds::adas::types::DegreeOfFreedom m_degreeOfFreedom_;
    bool m_hasGradient_;
};

} // namespace types
} // namespace adas
} // namespace nds

#endif // NDS_ADAS_TYPES_CLOTHOID_META_DATA_H
