/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_TYPES_CURVATURE_POINT_LIST_H
#define NDS_ADAS_TYPES_CURVATURE_POINT_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/adas/types/CurvaturePoint.h>

namespace nds
{
namespace adas
{
namespace types
{

class CurvaturePointList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumOfValues()
        {
            return m_numOfValues_;
        }

    private:
        ::zserio::DeltaContext m_numOfValues_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    CurvaturePointList() noexcept :
            CurvaturePointList(allocator_type())
    {}

    explicit CurvaturePointList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_curvaturePoint = ::zserio::vector<::nds::adas::types::CurvaturePoint>>
    CurvaturePointList(
            uint16_t numOfValues_,
            ZSERIO_T_curvaturePoint&& curvaturePoint_,
            const allocator_type& allocator = allocator_type()) :
            CurvaturePointList(allocator)
    {
        m_numOfValues_ = numOfValues_;
        m_curvaturePoint_ = ZserioArrayType_curvaturePoint(::std::forward<ZSERIO_T_curvaturePoint>(curvaturePoint_));
    }

    explicit CurvaturePointList(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit CurvaturePointList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~CurvaturePointList() = default;

    CurvaturePointList(const CurvaturePointList&) = default;
    CurvaturePointList& operator=(const CurvaturePointList&) = default;

    CurvaturePointList(CurvaturePointList&&) = default;
    CurvaturePointList& operator=(CurvaturePointList&&) = default;

    CurvaturePointList(::zserio::PropagateAllocatorT,
            const CurvaturePointList& other, const allocator_type& allocator);

    uint16_t getNumOfValues() const;
    void setNumOfValues(uint16_t numOfValues_);

    const ::zserio::vector<::nds::adas::types::CurvaturePoint>& getCurvaturePoint() const;
    ::zserio::vector<::nds::adas::types::CurvaturePoint>& getCurvaturePoint();
    void setCurvaturePoint(const ::zserio::vector<::nds::adas::types::CurvaturePoint>& curvaturePoint_);
    void setCurvaturePoint(::zserio::vector<::nds::adas::types::CurvaturePoint>&& curvaturePoint_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const CurvaturePointList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_curvaturePoint
    {
    public:
        using OwnerType = CurvaturePointList;

        static void create(CurvaturePointList& owner,
                ::zserio::vector<::nds::adas::types::CurvaturePoint>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(CurvaturePointList& owner,
                ::zserio::vector<::nds::adas::types::CurvaturePoint>& array,
                ::nds::adas::types::CurvaturePoint::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_curvaturePoint = ::zserio::Array<::zserio::vector<::nds::adas::types::CurvaturePoint>, ::zserio::ObjectArrayTraits<::nds::adas::types::CurvaturePoint, ZserioElementFactory_curvaturePoint>, ::zserio::ArrayType::NORMAL>;

    uint16_t readNumOfValues(::zserio::BitStreamReader& in);
    uint16_t readNumOfValues(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_curvaturePoint readCurvaturePoint(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_curvaturePoint readCurvaturePoint(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint16_t m_numOfValues_;
    ZserioArrayType_curvaturePoint m_curvaturePoint_;
};

} // namespace types
} // namespace adas
} // namespace nds

#endif // NDS_ADAS_TYPES_CURVATURE_POINT_LIST_H
