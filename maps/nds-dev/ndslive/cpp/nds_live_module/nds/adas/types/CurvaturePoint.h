/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ADAS_TYPES_CURVATURE_POINT_H
#define NDS_ADAS_TYPES_CURVATURE_POINT_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/adas/types/AdasGeometryPosition.h>
#include <nds/adas/types/Curvature.h>

namespace nds
{
namespace adas
{
namespace types
{

class CurvaturePoint
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getPoint()
        {
            return m_point_;
        }

        ::zserio::DeltaContext& getCurvature()
        {
            return m_curvature_;
        }

    private:
        ::zserio::DeltaContext m_point_;
        ::zserio::DeltaContext m_curvature_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    CurvaturePoint() noexcept :
            CurvaturePoint(allocator_type())
    {}

    explicit CurvaturePoint(const allocator_type& allocator) noexcept;

    CurvaturePoint(
            ::nds::adas::types::AdasGeometryPosition point_,
            ::nds::adas::types::Curvature curvature_,
            const allocator_type& allocator = allocator_type()) :
            CurvaturePoint(allocator)
    {
        m_point_ = point_;
        m_curvature_ = curvature_;
    }

    explicit CurvaturePoint(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit CurvaturePoint(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~CurvaturePoint() = default;

    CurvaturePoint(const CurvaturePoint&) = default;
    CurvaturePoint& operator=(const CurvaturePoint&) = default;

    CurvaturePoint(CurvaturePoint&&) = default;
    CurvaturePoint& operator=(CurvaturePoint&&) = default;

    CurvaturePoint(::zserio::PropagateAllocatorT,
            const CurvaturePoint& other, const allocator_type& allocator);

    ::nds::adas::types::AdasGeometryPosition getPoint() const;
    void setPoint(::nds::adas::types::AdasGeometryPosition point_);

    ::nds::adas::types::Curvature getCurvature() const;
    void setCurvature(::nds::adas::types::Curvature curvature_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const CurvaturePoint& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::adas::types::AdasGeometryPosition readPoint(::zserio::BitStreamReader& in);
    ::nds::adas::types::AdasGeometryPosition readPoint(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::adas::types::Curvature readCurvature(::zserio::BitStreamReader& in);
    ::nds::adas::types::Curvature readCurvature(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::adas::types::AdasGeometryPosition m_point_;
    ::nds::adas::types::Curvature m_curvature_;
};

} // namespace types
} // namespace adas
} // namespace nds

#endif // NDS_ADAS_TYPES_CURVATURE_POINT_H
