/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_INSTRUCTIONS_METADATA_INSTRUCTIONS_IMAGE_LAYER_METADATA_H
#define NDS_INSTRUCTIONS_METADATA_INSTRUCTIONS_IMAGE_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/instructions/metadata/InstructionsImageLayerContent.h>
#include <nds/instructions/types/JunctionViewAbstractionLevel.h>

namespace nds
{
namespace instructions
{
namespace metadata
{

class InstructionsImageLayerMetadata
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::zserio::DeltaContext& getJunctionViewAbstractionLevel()
        {
            return m_junctionViewAbstractionLevel_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::zserio::DeltaContext m_junctionViewAbstractionLevel_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    InstructionsImageLayerMetadata() noexcept :
            InstructionsImageLayerMetadata(allocator_type())
    {}

    explicit InstructionsImageLayerMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_junctionViewAbstractionLevel = ::nds::instructions::types::JunctionViewAbstractionLevel>
    InstructionsImageLayerMetadata(
            ::nds::instructions::metadata::InstructionsImageLayerContent content_,
            ZSERIO_T_junctionViewAbstractionLevel&& junctionViewAbstractionLevel_,
            const allocator_type& allocator = allocator_type()) :
            InstructionsImageLayerMetadata(allocator)
    {
        m_content_ = content_;
        m_junctionViewAbstractionLevel_ = ::std::forward<ZSERIO_T_junctionViewAbstractionLevel>(junctionViewAbstractionLevel_);
    }

    explicit InstructionsImageLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit InstructionsImageLayerMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~InstructionsImageLayerMetadata() = default;

    InstructionsImageLayerMetadata(const InstructionsImageLayerMetadata&) = default;
    InstructionsImageLayerMetadata& operator=(const InstructionsImageLayerMetadata&) = default;

    InstructionsImageLayerMetadata(InstructionsImageLayerMetadata&&) = default;
    InstructionsImageLayerMetadata& operator=(InstructionsImageLayerMetadata&&) = default;

    InstructionsImageLayerMetadata(::zserio::PropagateAllocatorT,
            const InstructionsImageLayerMetadata& other, const allocator_type& allocator);

    ::nds::instructions::metadata::InstructionsImageLayerContent getContent() const;
    void setContent(::nds::instructions::metadata::InstructionsImageLayerContent content_);

    ::nds::instructions::types::JunctionViewAbstractionLevel getJunctionViewAbstractionLevel() const;
    void setJunctionViewAbstractionLevel(::nds::instructions::types::JunctionViewAbstractionLevel junctionViewAbstractionLevel_);
    bool isJunctionViewAbstractionLevelUsed() const;
    bool isJunctionViewAbstractionLevelSet() const;
    void resetJunctionViewAbstractionLevel();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const InstructionsImageLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::instructions::metadata::InstructionsImageLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::instructions::metadata::InstructionsImageLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::instructions::types::JunctionViewAbstractionLevel> readJunctionViewAbstractionLevel(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::instructions::types::JunctionViewAbstractionLevel> readJunctionViewAbstractionLevel(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::instructions::metadata::InstructionsImageLayerContent m_content_;
    ::zserio::InplaceOptionalHolder<::nds::instructions::types::JunctionViewAbstractionLevel> m_junctionViewAbstractionLevel_;
};

} // namespace metadata
} // namespace instructions
} // namespace nds

#endif // NDS_INSTRUCTIONS_METADATA_INSTRUCTIONS_IMAGE_LAYER_METADATA_H
