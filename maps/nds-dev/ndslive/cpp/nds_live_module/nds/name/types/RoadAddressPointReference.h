/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_NAME_TYPES_ROAD_ADDRESS_POINT_REFERENCE_H
#define NDS_NAME_TYPES_ROAD_ADDRESS_POINT_REFERENCE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/road/reference/types/RoadPositionValidity.h>
#include <nds/road/reference/types/RoadReferenceIndirect.h>

namespace nds
{
namespace name
{
namespace types
{

class RoadAddressPointReference
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::road::reference::types::RoadReferenceIndirect::ZserioPackingContext& getIndirectReference()
        {
            return m_indirectReference_;
        }

        ::nds::road::reference::types::RoadPositionValidity::ZserioPackingContext& getPosition()
        {
            return m_position_;
        }

    private:
        ::nds::road::reference::types::RoadReferenceIndirect::ZserioPackingContext m_indirectReference_;
        ::nds::road::reference::types::RoadPositionValidity::ZserioPackingContext m_position_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    RoadAddressPointReference() noexcept :
            RoadAddressPointReference(allocator_type())
    {}

    explicit RoadAddressPointReference(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_indirectReference = ::nds::road::reference::types::RoadReferenceIndirect,
            typename ZSERIO_T_position = ::nds::road::reference::types::RoadPositionValidity,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_indirectReference, RoadAddressPointReference, allocator_type> = 0>
    RoadAddressPointReference(
            ZSERIO_T_indirectReference&& indirectReference_,
            ZSERIO_T_position&& position_,
            const allocator_type& allocator = allocator_type()) :
            RoadAddressPointReference(allocator)
    {
        m_indirectReference_ = ::std::forward<ZSERIO_T_indirectReference>(indirectReference_);
        m_position_ = ::std::forward<ZSERIO_T_position>(position_);
    }

    explicit RoadAddressPointReference(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit RoadAddressPointReference(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~RoadAddressPointReference() = default;

    RoadAddressPointReference(const RoadAddressPointReference& other);
    RoadAddressPointReference& operator=(const RoadAddressPointReference& other);

    RoadAddressPointReference(RoadAddressPointReference&& other);
    RoadAddressPointReference& operator=(RoadAddressPointReference&& other);

    RoadAddressPointReference(::zserio::PropagateAllocatorT,
            const RoadAddressPointReference& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::road::reference::types::RoadReferenceIndirect& getIndirectReference() const;
    ::nds::road::reference::types::RoadReferenceIndirect& getIndirectReference();
    void setIndirectReference(const ::nds::road::reference::types::RoadReferenceIndirect& indirectReference_);
    void setIndirectReference(::nds::road::reference::types::RoadReferenceIndirect&& indirectReference_);

    const ::nds::road::reference::types::RoadPositionValidity& getPosition() const;
    ::nds::road::reference::types::RoadPositionValidity& getPosition();
    void setPosition(const ::nds::road::reference::types::RoadPositionValidity& position_);
    void setPosition(::nds::road::reference::types::RoadPositionValidity&& position_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const RoadAddressPointReference& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::road::reference::types::RoadReferenceIndirect readIndirectReference(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::road::reference::types::RoadReferenceIndirect readIndirectReference(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::road::reference::types::RoadPositionValidity readPosition(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::road::reference::types::RoadPositionValidity readPosition(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::road::reference::types::RoadReferenceIndirect m_indirectReference_;
    ::nds::road::reference::types::RoadPositionValidity m_position_;
};

} // namespace types
} // namespace name
} // namespace nds

#endif // NDS_NAME_TYPES_ROAD_ADDRESS_POINT_REFERENCE_H
