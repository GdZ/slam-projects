/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_NAME_TYPES_HOUSE_NUMBER_TYPE_H
#define NDS_NAME_TYPES_HOUSE_NUMBER_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace name
{
namespace types
{

enum class HouseNumberType : uint8_t
{
    RANGE_EVEN_ODD = UINT8_C(0),
    RANGE_EVEN_ODD_PATTERN = UINT8_C(1),
    RANGE_CONTINUOUS = UINT8_C(2),
    RANGE_CONTINUOUS_PATTERN = UINT8_C(3),
    LIST_NUMERIC = UINT8_C(4),
    LIST_STRING = UINT8_C(5)
};

} // namespace types
} // namespace name
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for HouseNumberType enumeration.
template <>
struct EnumTraits<::nds::name::types::HouseNumberType>
{
    static constexpr ::std::array<const char*, 6> names =
    {{
        "RANGE_EVEN_ODD",
        "RANGE_EVEN_ODD_PATTERN",
        "RANGE_CONTINUOUS",
        "RANGE_CONTINUOUS_PATTERN",
        "LIST_NUMERIC",
        "LIST_STRING"
    }};

    static constexpr ::std::array<::nds::name::types::HouseNumberType, 6> values =
    {{
        ::nds::name::types::HouseNumberType::RANGE_EVEN_ODD,
        ::nds::name::types::HouseNumberType::RANGE_EVEN_ODD_PATTERN,
        ::nds::name::types::HouseNumberType::RANGE_CONTINUOUS,
        ::nds::name::types::HouseNumberType::RANGE_CONTINUOUS_PATTERN,
        ::nds::name::types::HouseNumberType::LIST_NUMERIC,
        ::nds::name::types::HouseNumberType::LIST_STRING
    }};

    static constexpr const char* enumName = "HouseNumberType";
};

template <>
size_t enumToOrdinal<::nds::name::types::HouseNumberType>(::nds::name::types::HouseNumberType value);

template <>
::nds::name::types::HouseNumberType valueToEnum<::nds::name::types::HouseNumberType>(
        typename ::std::underlying_type<::nds::name::types::HouseNumberType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::name::types::HouseNumberType>(::nds::name::types::HouseNumberType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::name::types::HouseNumberType>(::zserio::DeltaContext& context, ::nds::name::types::HouseNumberType value);

template <>
size_t bitSizeOf<::nds::name::types::HouseNumberType>(::nds::name::types::HouseNumberType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::name::types::HouseNumberType>(::zserio::DeltaContext& context, ::nds::name::types::HouseNumberType value);

template <>
size_t initializeOffsets<::nds::name::types::HouseNumberType>(size_t bitPosition, ::nds::name::types::HouseNumberType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::name::types::HouseNumberType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::name::types::HouseNumberType value);

template <>
::nds::name::types::HouseNumberType read<::nds::name::types::HouseNumberType>(::zserio::BitStreamReader& in);

template <>
::nds::name::types::HouseNumberType read<::nds::name::types::HouseNumberType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::name::types::HouseNumberType>(::zserio::BitStreamWriter& out, ::nds::name::types::HouseNumberType value);

template <>
void write<::zserio::DeltaContext, ::nds::name::types::HouseNumberType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::name::types::HouseNumberType value);

} // namespace zserio

#endif // NDS_NAME_TYPES_HOUSE_NUMBER_TYPE_H
