/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_NAME_ATTRIBUTES_NAME_DISPLAY_POINT_ATTRIBUTE_TYPE_H
#define NDS_NAME_ATTRIBUTES_NAME_DISPLAY_POINT_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace name
{
namespace attributes
{

enum class NameDisplayPointAttributeType : uint16_t
{
    POINT_LABEL_NAME = UINT16_C(0),
    ADMINISTRATIVE_AREA_CENTER_NAME = UINT16_C(1),
    MOUNTAIN_NAME = UINT16_C(2),
    ISLAND_NAME = UINT16_C(3),
    TOLL_STATION_NAME = UINT16_C(4)
};

} // namespace attributes
} // namespace name
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for NameDisplayPointAttributeType enumeration.
template <>
struct EnumTraits<::nds::name::attributes::NameDisplayPointAttributeType>
{
    static constexpr ::std::array<const char*, 5> names =
    {{
        "POINT_LABEL_NAME",
        "ADMINISTRATIVE_AREA_CENTER_NAME",
        "MOUNTAIN_NAME",
        "ISLAND_NAME",
        "TOLL_STATION_NAME"
    }};

    static constexpr ::std::array<::nds::name::attributes::NameDisplayPointAttributeType, 5> values =
    {{
        ::nds::name::attributes::NameDisplayPointAttributeType::POINT_LABEL_NAME,
        ::nds::name::attributes::NameDisplayPointAttributeType::ADMINISTRATIVE_AREA_CENTER_NAME,
        ::nds::name::attributes::NameDisplayPointAttributeType::MOUNTAIN_NAME,
        ::nds::name::attributes::NameDisplayPointAttributeType::ISLAND_NAME,
        ::nds::name::attributes::NameDisplayPointAttributeType::TOLL_STATION_NAME
    }};

    static constexpr const char* enumName = "NameDisplayPointAttributeType";
};

template <>
size_t enumToOrdinal<::nds::name::attributes::NameDisplayPointAttributeType>(::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
::nds::name::attributes::NameDisplayPointAttributeType valueToEnum<::nds::name::attributes::NameDisplayPointAttributeType>(
        typename ::std::underlying_type<::nds::name::attributes::NameDisplayPointAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::name::attributes::NameDisplayPointAttributeType>(::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::DeltaContext& context, ::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
size_t bitSizeOf<::nds::name::attributes::NameDisplayPointAttributeType>(::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::DeltaContext& context, ::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
size_t initializeOffsets<::nds::name::attributes::NameDisplayPointAttributeType>(size_t bitPosition, ::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
::nds::name::attributes::NameDisplayPointAttributeType read<::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::name::attributes::NameDisplayPointAttributeType read<::nds::name::attributes::NameDisplayPointAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::BitStreamWriter& out, ::nds::name::attributes::NameDisplayPointAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::name::attributes::NameDisplayPointAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::name::attributes::NameDisplayPointAttributeType value);

} // namespace zserio

#endif // NDS_NAME_ATTRIBUTES_NAME_DISPLAY_POINT_ATTRIBUTE_TYPE_H
