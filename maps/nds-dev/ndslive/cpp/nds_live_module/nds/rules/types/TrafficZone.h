/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_RULES_TYPES_TRAFFIC_ZONE_H
#define NDS_RULES_TYPES_TRAFFIC_ZONE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace rules
{
namespace types
{

enum class TrafficZone : uint8_t
{
    OTHER = UINT8_C(0),
    ENVIRONMENT_ZONE = UINT8_C(1),
    TOLL_ZONE = UINT8_C(2),
    LIVING_STREET = UINT8_C(3),
    SPEED_LIMIT_ZONE = UINT8_C(4),
    SCHOOL_ZONE = UINT8_C(5),
    LOW_EMISSION_ZONE = UINT8_C(6),
    CONGESTION_ZONE = UINT8_C(7),
    AUTONOMOUS_DRIVING_ZONE = UINT8_C(8),
    NON_AUTONOMOUS_DRIVING_ZONE = UINT8_C(9),
    RESIDENTIAL_AREA = UINT8_C(10),
    GATED_AREA = UINT8_C(11),
    CYCLIST_ROAD = UINT8_C(12),
    RESTRICTED_PARKING_ZONE = UINT8_C(13),
    NO_STOPPING_ZONE = UINT8_C(14),
    NO_BOUNDARY_MARKINGS_ZONE = UINT8_C(15)
};

} // namespace types
} // namespace rules
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for TrafficZone enumeration.
template <>
struct EnumTraits<::nds::rules::types::TrafficZone>
{
    static constexpr ::std::array<const char*, 16> names =
    {{
        "OTHER",
        "ENVIRONMENT_ZONE",
        "TOLL_ZONE",
        "LIVING_STREET",
        "SPEED_LIMIT_ZONE",
        "SCHOOL_ZONE",
        "LOW_EMISSION_ZONE",
        "CONGESTION_ZONE",
        "AUTONOMOUS_DRIVING_ZONE",
        "NON_AUTONOMOUS_DRIVING_ZONE",
        "RESIDENTIAL_AREA",
        "GATED_AREA",
        "CYCLIST_ROAD",
        "RESTRICTED_PARKING_ZONE",
        "NO_STOPPING_ZONE",
        "NO_BOUNDARY_MARKINGS_ZONE"
    }};

    static constexpr ::std::array<::nds::rules::types::TrafficZone, 16> values =
    {{
        ::nds::rules::types::TrafficZone::OTHER,
        ::nds::rules::types::TrafficZone::ENVIRONMENT_ZONE,
        ::nds::rules::types::TrafficZone::TOLL_ZONE,
        ::nds::rules::types::TrafficZone::LIVING_STREET,
        ::nds::rules::types::TrafficZone::SPEED_LIMIT_ZONE,
        ::nds::rules::types::TrafficZone::SCHOOL_ZONE,
        ::nds::rules::types::TrafficZone::LOW_EMISSION_ZONE,
        ::nds::rules::types::TrafficZone::CONGESTION_ZONE,
        ::nds::rules::types::TrafficZone::AUTONOMOUS_DRIVING_ZONE,
        ::nds::rules::types::TrafficZone::NON_AUTONOMOUS_DRIVING_ZONE,
        ::nds::rules::types::TrafficZone::RESIDENTIAL_AREA,
        ::nds::rules::types::TrafficZone::GATED_AREA,
        ::nds::rules::types::TrafficZone::CYCLIST_ROAD,
        ::nds::rules::types::TrafficZone::RESTRICTED_PARKING_ZONE,
        ::nds::rules::types::TrafficZone::NO_STOPPING_ZONE,
        ::nds::rules::types::TrafficZone::NO_BOUNDARY_MARKINGS_ZONE
    }};

    static constexpr const char* enumName = "TrafficZone";
};

template <>
size_t enumToOrdinal<::nds::rules::types::TrafficZone>(::nds::rules::types::TrafficZone value);

template <>
::nds::rules::types::TrafficZone valueToEnum<::nds::rules::types::TrafficZone>(
        typename ::std::underlying_type<::nds::rules::types::TrafficZone>::type rawValue);

template <>
uint32_t enumHashCode<::nds::rules::types::TrafficZone>(::nds::rules::types::TrafficZone value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::rules::types::TrafficZone>(::zserio::DeltaContext& context, ::nds::rules::types::TrafficZone value);

template <>
size_t bitSizeOf<::nds::rules::types::TrafficZone>(::nds::rules::types::TrafficZone value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::rules::types::TrafficZone>(::zserio::DeltaContext& context, ::nds::rules::types::TrafficZone value);

template <>
size_t initializeOffsets<::nds::rules::types::TrafficZone>(size_t bitPosition, ::nds::rules::types::TrafficZone value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::rules::types::TrafficZone>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::rules::types::TrafficZone value);

template <>
::nds::rules::types::TrafficZone read<::nds::rules::types::TrafficZone>(::zserio::BitStreamReader& in);

template <>
::nds::rules::types::TrafficZone read<::nds::rules::types::TrafficZone, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::rules::types::TrafficZone>(::zserio::BitStreamWriter& out, ::nds::rules::types::TrafficZone value);

template <>
void write<::zserio::DeltaContext, ::nds::rules::types::TrafficZone>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::rules::types::TrafficZone value);

} // namespace zserio

#endif // NDS_RULES_TYPES_TRAFFIC_ZONE_H
