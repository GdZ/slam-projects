/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_RULES_ATTRIBUTES_RULES_LANE_POSITION_ATTRIBUTE_TYPE_H
#define NDS_RULES_ATTRIBUTES_RULES_LANE_POSITION_ATTRIBUTE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace rules
{
namespace attributes
{

enum class RulesLanePositionAttributeType : uint16_t
{
    TRAFFIC_LIGHTS = UINT16_C(0),
    TRAFFIC_ENFORCEMENT_CAMERA = UINT16_C(1),
    WARNING_SIGN = UINT16_C(2),
    MOVABLE_WARNING_SIGN = UINT16_C(3),
    RIGHT_OF_WAY_REGULATION = UINT16_C(4)
};

} // namespace attributes
} // namespace rules
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for RulesLanePositionAttributeType enumeration.
template <>
struct EnumTraits<::nds::rules::attributes::RulesLanePositionAttributeType>
{
    static constexpr ::std::array<const char*, 5> names =
    {{
        "TRAFFIC_LIGHTS",
        "TRAFFIC_ENFORCEMENT_CAMERA",
        "WARNING_SIGN",
        "MOVABLE_WARNING_SIGN",
        "RIGHT_OF_WAY_REGULATION"
    }};

    static constexpr ::std::array<::nds::rules::attributes::RulesLanePositionAttributeType, 5> values =
    {{
        ::nds::rules::attributes::RulesLanePositionAttributeType::TRAFFIC_LIGHTS,
        ::nds::rules::attributes::RulesLanePositionAttributeType::TRAFFIC_ENFORCEMENT_CAMERA,
        ::nds::rules::attributes::RulesLanePositionAttributeType::WARNING_SIGN,
        ::nds::rules::attributes::RulesLanePositionAttributeType::MOVABLE_WARNING_SIGN,
        ::nds::rules::attributes::RulesLanePositionAttributeType::RIGHT_OF_WAY_REGULATION
    }};

    static constexpr const char* enumName = "RulesLanePositionAttributeType";
};

template <>
size_t enumToOrdinal<::nds::rules::attributes::RulesLanePositionAttributeType>(::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
::nds::rules::attributes::RulesLanePositionAttributeType valueToEnum<::nds::rules::attributes::RulesLanePositionAttributeType>(
        typename ::std::underlying_type<::nds::rules::attributes::RulesLanePositionAttributeType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::rules::attributes::RulesLanePositionAttributeType>(::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::DeltaContext& context, ::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
size_t bitSizeOf<::nds::rules::attributes::RulesLanePositionAttributeType>(::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::DeltaContext& context, ::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
size_t initializeOffsets<::nds::rules::attributes::RulesLanePositionAttributeType>(size_t bitPosition, ::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
::nds::rules::attributes::RulesLanePositionAttributeType read<::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::BitStreamReader& in);

template <>
::nds::rules::attributes::RulesLanePositionAttributeType read<::nds::rules::attributes::RulesLanePositionAttributeType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::BitStreamWriter& out, ::nds::rules::attributes::RulesLanePositionAttributeType value);

template <>
void write<::zserio::DeltaContext, ::nds::rules::attributes::RulesLanePositionAttributeType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::rules::attributes::RulesLanePositionAttributeType value);

} // namespace zserio

#endif // NDS_RULES_ATTRIBUTES_RULES_LANE_POSITION_ATTRIBUTE_TYPE_H
