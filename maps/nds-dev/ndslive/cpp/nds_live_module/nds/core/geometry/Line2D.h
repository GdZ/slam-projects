/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_GEOMETRY_LINE2_D_H
#define NDS_CORE_GEOMETRY_LINE2_D_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/core/geometry/Position2D.h>

namespace nds
{
namespace core
{
namespace geometry
{

class Line2D
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumPositions()
        {
            return m_numPositions_;
        }

    private:
        ::zserio::DeltaContext m_numPositions_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    Line2D() noexcept :
            Line2D(allocator_type())
    {}

    explicit Line2D(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_positions = ::zserio::vector<::nds::core::geometry::Position2D>>
    Line2D(
            uint32_t numPositions_,
            ZSERIO_T_positions&& positions_,
            const allocator_type& allocator = allocator_type()) :
            Line2D(allocator)
    {
        m_numPositions_ = numPositions_;
        m_positions_ = ZserioArrayType_positions(::std::forward<ZSERIO_T_positions>(positions_));
    }

    explicit Line2D(::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift shift_, const allocator_type& allocator = allocator_type());
    explicit Line2D(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            ::nds::core::geometry::CoordShift shift_, const allocator_type& allocator = allocator_type());

    ~Line2D() = default;

    Line2D(const Line2D& other);
    Line2D& operator=(const Line2D& other);

    Line2D(Line2D&& other);
    Line2D& operator=(Line2D&& other);

    Line2D(::zserio::PropagateAllocatorT,
            const Line2D& other, const allocator_type& allocator);

    void initialize(
            ::nds::core::geometry::CoordShift shift_);
    bool isInitialized() const;
    void initializeChildren();

    ::nds::core::geometry::CoordShift getShift() const;

    uint32_t getNumPositions() const;
    void setNumPositions(uint32_t numPositions_);

    const ::zserio::vector<::nds::core::geometry::Position2D>& getPositions() const;
    ::zserio::vector<::nds::core::geometry::Position2D>& getPositions();
    void setPositions(const ::zserio::vector<::nds::core::geometry::Position2D>& positions_);
    void setPositions(::zserio::vector<::nds::core::geometry::Position2D>&& positions_);

    uint32_t funcLastPositionIdx() const;

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const Line2D& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_positions
    {
    public:
        using OwnerType = Line2D;

        static void initializeElement(Line2D& owner,
                ::nds::core::geometry::Position2D& element, size_t index);
    };

    class ZserioElementFactory_positions
    {
    public:
        using OwnerType = Line2D;

        static void create(Line2D& owner,
                ::zserio::vector<::nds::core::geometry::Position2D>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(Line2D& owner,
                ::zserio::vector<::nds::core::geometry::Position2D>& array,
                ::nds::core::geometry::Position2D::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_positions = ::zserio::Array<::zserio::vector<::nds::core::geometry::Position2D>, ::zserio::ObjectArrayTraits<::nds::core::geometry::Position2D, ZserioElementFactory_positions>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_positions>;

    uint32_t readNumPositions(::zserio::BitStreamReader& in);
    uint32_t readNumPositions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_positions readPositions(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_positions readPositions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::core::geometry::CoordShift m_shift_;
    bool m_isInitialized;
    uint32_t m_numPositions_;
    ZserioArrayType_positions m_positions_;
};

} // namespace geometry
} // namespace core
} // namespace nds

#endif // NDS_CORE_GEOMETRY_LINE2_D_H
