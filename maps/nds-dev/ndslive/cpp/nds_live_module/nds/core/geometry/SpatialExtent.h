/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_GEOMETRY_SPATIAL_EXTENT_H
#define NDS_CORE_GEOMETRY_SPATIAL_EXTENT_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/BoundingBox2D.h>
#include <nds/core/geometry/BoundingPolygon2D.h>
#include <nds/core/geometry/CoordShift.h>

namespace nds
{
namespace core
{
namespace geometry
{

class SpatialExtent
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::core::geometry::BoundingBox2D::ZserioPackingContext& getBoundingBox()
        {
            return m_boundingBox_;
        }

        ::nds::core::geometry::BoundingPolygon2D::ZserioPackingContext& getBoundingPolygon()
        {
            return m_boundingPolygon_;
        }

    private:
        ::nds::core::geometry::BoundingBox2D::ZserioPackingContext m_boundingBox_;
        ::nds::core::geometry::BoundingPolygon2D::ZserioPackingContext m_boundingPolygon_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    SpatialExtent() noexcept :
            SpatialExtent(allocator_type())
    {}

    explicit SpatialExtent(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_boundingBox = ::nds::core::geometry::BoundingBox2D,
            typename ZSERIO_T_boundingPolygon = ::nds::core::geometry::BoundingPolygon2D,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_boundingBox, SpatialExtent, allocator_type> = 0>
    SpatialExtent(
            ZSERIO_T_boundingBox&& boundingBox_,
            ZSERIO_T_boundingPolygon&& boundingPolygon_,
            const allocator_type& allocator = allocator_type()) :
            SpatialExtent(allocator)
    {
        m_boundingBox_ = ::std::forward<ZSERIO_T_boundingBox>(boundingBox_);
        m_boundingPolygon_ = ::std::forward<ZSERIO_T_boundingPolygon>(boundingPolygon_);
    }

    explicit SpatialExtent(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit SpatialExtent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~SpatialExtent() = default;

    SpatialExtent(const SpatialExtent& other);
    SpatialExtent& operator=(const SpatialExtent& other);

    SpatialExtent(SpatialExtent&& other);
    SpatialExtent& operator=(SpatialExtent&& other);

    SpatialExtent(::zserio::PropagateAllocatorT,
            const SpatialExtent& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::core::geometry::BoundingBox2D& getBoundingBox() const;
    ::nds::core::geometry::BoundingBox2D& getBoundingBox();
    void setBoundingBox(const ::nds::core::geometry::BoundingBox2D& boundingBox_);
    void setBoundingBox(::nds::core::geometry::BoundingBox2D&& boundingBox_);

    const ::nds::core::geometry::BoundingPolygon2D& getBoundingPolygon() const;
    ::nds::core::geometry::BoundingPolygon2D& getBoundingPolygon();
    void setBoundingPolygon(const ::nds::core::geometry::BoundingPolygon2D& boundingPolygon_);
    void setBoundingPolygon(::nds::core::geometry::BoundingPolygon2D&& boundingPolygon_);
    bool isBoundingPolygonUsed() const;
    bool isBoundingPolygonSet() const;
    void resetBoundingPolygon();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const SpatialExtent& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::geometry::BoundingBox2D readBoundingBox(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::geometry::BoundingBox2D readBoundingBox(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::BoundingPolygon2D> readBoundingPolygon(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::BoundingPolygon2D> readBoundingPolygon(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::core::geometry::BoundingBox2D m_boundingBox_;
    ::zserio::InplaceOptionalHolder<::nds::core::geometry::BoundingPolygon2D> m_boundingPolygon_;
};

} // namespace geometry
} // namespace core
} // namespace nds

#endif // NDS_CORE_GEOMETRY_SPATIAL_EXTENT_H
