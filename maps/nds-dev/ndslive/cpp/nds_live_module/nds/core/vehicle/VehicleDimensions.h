/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_VEHICLE_VEHICLE_DIMENSIONS_H
#define NDS_CORE_VEHICLE_VEHICLE_DIMENSIONS_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/vehicle/VehicleHeight.h>
#include <nds/core/vehicle/VehicleLength.h>
#include <nds/core/vehicle/VehicleWeight.h>
#include <nds/core/vehicle/VehicleWidth.h>

namespace nds
{
namespace core
{
namespace vehicle
{

class VehicleDimensions
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getLength()
        {
            return m_length_;
        }

        ::zserio::DeltaContext& getWidth()
        {
            return m_width_;
        }

        ::zserio::DeltaContext& getHeight()
        {
            return m_height_;
        }

        ::zserio::DeltaContext& getWeight()
        {
            return m_weight_;
        }

    private:
        ::zserio::DeltaContext m_length_;
        ::zserio::DeltaContext m_width_;
        ::zserio::DeltaContext m_height_;
        ::zserio::DeltaContext m_weight_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    VehicleDimensions() noexcept :
            VehicleDimensions(allocator_type())
    {}

    explicit VehicleDimensions(const allocator_type& allocator) noexcept;

    VehicleDimensions(
            ::nds::core::vehicle::VehicleLength length_,
            ::nds::core::vehicle::VehicleWidth width_,
            ::nds::core::vehicle::VehicleHeight height_,
            ::nds::core::vehicle::VehicleWeight weight_,
            const allocator_type& allocator = allocator_type()) :
            VehicleDimensions(allocator)
    {
        m_length_ = length_;
        m_width_ = width_;
        m_height_ = height_;
        m_weight_ = weight_;
    }

    explicit VehicleDimensions(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit VehicleDimensions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~VehicleDimensions() = default;

    VehicleDimensions(const VehicleDimensions&) = default;
    VehicleDimensions& operator=(const VehicleDimensions&) = default;

    VehicleDimensions(VehicleDimensions&&) = default;
    VehicleDimensions& operator=(VehicleDimensions&&) = default;

    VehicleDimensions(::zserio::PropagateAllocatorT,
            const VehicleDimensions& other, const allocator_type& allocator);

    ::nds::core::vehicle::VehicleLength getLength() const;
    void setLength(::nds::core::vehicle::VehicleLength length_);

    ::nds::core::vehicle::VehicleWidth getWidth() const;
    void setWidth(::nds::core::vehicle::VehicleWidth width_);

    ::nds::core::vehicle::VehicleHeight getHeight() const;
    void setHeight(::nds::core::vehicle::VehicleHeight height_);

    ::nds::core::vehicle::VehicleWeight getWeight() const;
    void setWeight(::nds::core::vehicle::VehicleWeight weight_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const VehicleDimensions& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::vehicle::VehicleLength readLength(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleLength readLength(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleWidth readWidth(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleWidth readWidth(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleHeight readHeight(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleHeight readHeight(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleWeight readWeight(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::VehicleWeight readWeight(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::core::vehicle::VehicleLength m_length_;
    ::nds::core::vehicle::VehicleWidth m_width_;
    ::nds::core::vehicle::VehicleHeight m_height_;
    ::nds::core::vehicle::VehicleWeight m_weight_;
};

} // namespace vehicle
} // namespace core
} // namespace nds

#endif // NDS_CORE_VEHICLE_VEHICLE_DIMENSIONS_H
