/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_TYPES_TILE_ID_H
#define NDS_CORE_TYPES_TILE_ID_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/types/PackedTileId.h>

namespace nds
{
namespace core
{
namespace types
{

class TileId
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getId()
        {
            return m_id_;
        }

    private:
        ::zserio::DeltaContext m_id_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    TileId() noexcept :
            TileId(allocator_type())
    {}

    explicit TileId(const allocator_type& allocator) noexcept;

    explicit TileId(
            ::nds::core::types::PackedTileId id_,
            const allocator_type& allocator = allocator_type()) :
            TileId(allocator)
    {
        m_id_ = id_;
    }

    explicit TileId(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit TileId(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~TileId() = default;

    TileId(const TileId&) = default;
    TileId& operator=(const TileId&) = default;

    TileId(TileId&&) = default;
    TileId& operator=(TileId&&) = default;

    TileId(::zserio::PropagateAllocatorT,
            const TileId& other, const allocator_type& allocator);

    ::nds::core::types::PackedTileId getId() const;
    void setId(::nds::core::types::PackedTileId id_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const TileId& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::types::PackedTileId readId(::zserio::BitStreamReader& in);
    ::nds::core::types::PackedTileId readId(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    ::nds::core::types::PackedTileId m_id_;
};

} // namespace types
} // namespace core
} // namespace nds

#endif // NDS_CORE_TYPES_TILE_ID_H
