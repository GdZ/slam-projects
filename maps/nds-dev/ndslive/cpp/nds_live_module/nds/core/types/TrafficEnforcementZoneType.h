/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_TYPES_TRAFFIC_ENFORCEMENT_ZONE_TYPE_H
#define NDS_CORE_TYPES_TRAFFIC_ENFORCEMENT_ZONE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace core
{
namespace types
{

enum class TrafficEnforcementZoneType : uint8_t
{
    AVERAGE_SPEED_ZONE = UINT8_C(0),
    SPEED_ENFORCEMENT_ZONE = UINT8_C(1),
    DANGER_ZONE = UINT8_C(2),
    MOBILE_SPEED_HOTSPOT_ZONE = UINT8_C(3),
    ACCIDENT_BLACKSPOT_ZONE = UINT8_C(4),
    RISK_ZONE = UINT8_C(5)
};

} // namespace types
} // namespace core
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for TrafficEnforcementZoneType enumeration.
template <>
struct EnumTraits<::nds::core::types::TrafficEnforcementZoneType>
{
    static constexpr ::std::array<const char*, 6> names =
    {{
        "AVERAGE_SPEED_ZONE",
        "SPEED_ENFORCEMENT_ZONE",
        "DANGER_ZONE",
        "MOBILE_SPEED_HOTSPOT_ZONE",
        "ACCIDENT_BLACKSPOT_ZONE",
        "RISK_ZONE"
    }};

    static constexpr ::std::array<::nds::core::types::TrafficEnforcementZoneType, 6> values =
    {{
        ::nds::core::types::TrafficEnforcementZoneType::AVERAGE_SPEED_ZONE,
        ::nds::core::types::TrafficEnforcementZoneType::SPEED_ENFORCEMENT_ZONE,
        ::nds::core::types::TrafficEnforcementZoneType::DANGER_ZONE,
        ::nds::core::types::TrafficEnforcementZoneType::MOBILE_SPEED_HOTSPOT_ZONE,
        ::nds::core::types::TrafficEnforcementZoneType::ACCIDENT_BLACKSPOT_ZONE,
        ::nds::core::types::TrafficEnforcementZoneType::RISK_ZONE
    }};

    static constexpr const char* enumName = "TrafficEnforcementZoneType";
};

template <>
size_t enumToOrdinal<::nds::core::types::TrafficEnforcementZoneType>(::nds::core::types::TrafficEnforcementZoneType value);

template <>
::nds::core::types::TrafficEnforcementZoneType valueToEnum<::nds::core::types::TrafficEnforcementZoneType>(
        typename ::std::underlying_type<::nds::core::types::TrafficEnforcementZoneType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::core::types::TrafficEnforcementZoneType>(::nds::core::types::TrafficEnforcementZoneType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::core::types::TrafficEnforcementZoneType>(::zserio::DeltaContext& context, ::nds::core::types::TrafficEnforcementZoneType value);

template <>
size_t bitSizeOf<::nds::core::types::TrafficEnforcementZoneType>(::nds::core::types::TrafficEnforcementZoneType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::core::types::TrafficEnforcementZoneType>(::zserio::DeltaContext& context, ::nds::core::types::TrafficEnforcementZoneType value);

template <>
size_t initializeOffsets<::nds::core::types::TrafficEnforcementZoneType>(size_t bitPosition, ::nds::core::types::TrafficEnforcementZoneType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::core::types::TrafficEnforcementZoneType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::core::types::TrafficEnforcementZoneType value);

template <>
::nds::core::types::TrafficEnforcementZoneType read<::nds::core::types::TrafficEnforcementZoneType>(::zserio::BitStreamReader& in);

template <>
::nds::core::types::TrafficEnforcementZoneType read<::nds::core::types::TrafficEnforcementZoneType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::core::types::TrafficEnforcementZoneType>(::zserio::BitStreamWriter& out, ::nds::core::types::TrafficEnforcementZoneType value);

template <>
void write<::zserio::DeltaContext, ::nds::core::types::TrafficEnforcementZoneType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::core::types::TrafficEnforcementZoneType value);

} // namespace zserio

#endif // NDS_CORE_TYPES_TRAFFIC_ENFORCEMENT_ZONE_TYPE_H
