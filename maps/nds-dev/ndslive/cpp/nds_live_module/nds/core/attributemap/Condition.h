/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_ATTRIBUTEMAP_CONDITION_H
#define NDS_CORE_ATTRIBUTEMAP_CONDITION_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/conditions/ConditionTypeCode.h>
#include <nds/core/conditions/ConditionValue.h>

namespace nds
{
namespace core
{
namespace attributemap
{

class Condition
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getConditionTypeCode()
        {
            return m_conditionTypeCode_;
        }

        ::nds::core::conditions::ConditionValue::ZserioPackingContext& getConditionValue()
        {
            return m_conditionValue_;
        }

    private:
        ::zserio::DeltaContext m_conditionTypeCode_;
        ::nds::core::conditions::ConditionValue::ZserioPackingContext m_conditionValue_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    Condition() noexcept :
            Condition(allocator_type())
    {}

    explicit Condition(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_conditionValue = ::nds::core::conditions::ConditionValue>
    Condition(
            ::nds::core::conditions::ConditionTypeCode conditionTypeCode_,
            ZSERIO_T_conditionValue&& conditionValue_,
            const allocator_type& allocator = allocator_type()) :
            Condition(allocator)
    {
        m_conditionTypeCode_ = conditionTypeCode_;
        m_conditionValue_ = ::std::forward<ZSERIO_T_conditionValue>(conditionValue_);
    }

    explicit Condition(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit Condition(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~Condition() = default;

    Condition(const Condition& other);
    Condition& operator=(const Condition& other);

    Condition(Condition&& other);
    Condition& operator=(Condition&& other);

    Condition(::zserio::PropagateAllocatorT,
            const Condition& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::core::conditions::ConditionTypeCode getConditionTypeCode() const;
    void setConditionTypeCode(::nds::core::conditions::ConditionTypeCode conditionTypeCode_);

    const ::nds::core::conditions::ConditionValue& getConditionValue() const;
    ::nds::core::conditions::ConditionValue& getConditionValue();
    void setConditionValue(const ::nds::core::conditions::ConditionValue& conditionValue_);
    void setConditionValue(::nds::core::conditions::ConditionValue&& conditionValue_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const Condition& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::conditions::ConditionTypeCode readConditionTypeCode(::zserio::BitStreamReader& in);
    ::nds::core::conditions::ConditionTypeCode readConditionTypeCode(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::conditions::ConditionValue readConditionValue(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::conditions::ConditionValue readConditionValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::core::conditions::ConditionTypeCode m_conditionTypeCode_;
    ::nds::core::conditions::ConditionValue m_conditionValue_;
};

} // namespace attributemap
} // namespace core
} // namespace nds

#endif // NDS_CORE_ATTRIBUTEMAP_CONDITION_H
