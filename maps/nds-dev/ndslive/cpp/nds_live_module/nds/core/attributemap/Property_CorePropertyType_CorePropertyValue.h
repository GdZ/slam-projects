/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_ATTRIBUTEMAP_PROPERTY_CORE_PROPERTY_TYPE_CORE_PROPERTY_VALUE_H
#define NDS_CORE_ATTRIBUTEMAP_PROPERTY_CORE_PROPERTY_TYPE_CORE_PROPERTY_VALUE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/properties/CorePropertyType.h>
#include <nds/core/properties/CorePropertyValue.h>

namespace nds
{
namespace core
{
namespace attributemap
{

class Property_CorePropertyType_CorePropertyValue
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getPropertyTypeCode()
        {
            return m_propertyTypeCode_;
        }

        ::nds::core::properties::CorePropertyValue::ZserioPackingContext& getPropertyValue()
        {
            return m_propertyValue_;
        }

    private:
        ::zserio::DeltaContext m_propertyTypeCode_;
        ::nds::core::properties::CorePropertyValue::ZserioPackingContext m_propertyValue_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    Property_CorePropertyType_CorePropertyValue() noexcept :
            Property_CorePropertyType_CorePropertyValue(allocator_type())
    {}

    explicit Property_CorePropertyType_CorePropertyValue(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_propertyValue = ::nds::core::properties::CorePropertyValue>
    Property_CorePropertyType_CorePropertyValue(
            ::nds::core::properties::CorePropertyType propertyTypeCode_,
            ZSERIO_T_propertyValue&& propertyValue_,
            const allocator_type& allocator = allocator_type()) :
            Property_CorePropertyType_CorePropertyValue(allocator)
    {
        m_propertyTypeCode_ = propertyTypeCode_;
        m_propertyValue_ = ::std::forward<ZSERIO_T_propertyValue>(propertyValue_);
    }

    explicit Property_CorePropertyType_CorePropertyValue(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit Property_CorePropertyType_CorePropertyValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~Property_CorePropertyType_CorePropertyValue() = default;

    Property_CorePropertyType_CorePropertyValue(const Property_CorePropertyType_CorePropertyValue& other);
    Property_CorePropertyType_CorePropertyValue& operator=(const Property_CorePropertyType_CorePropertyValue& other);

    Property_CorePropertyType_CorePropertyValue(Property_CorePropertyType_CorePropertyValue&& other);
    Property_CorePropertyType_CorePropertyValue& operator=(Property_CorePropertyType_CorePropertyValue&& other);

    Property_CorePropertyType_CorePropertyValue(::zserio::PropagateAllocatorT,
            const Property_CorePropertyType_CorePropertyValue& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::core::properties::CorePropertyType getPropertyTypeCode() const;
    void setPropertyTypeCode(::nds::core::properties::CorePropertyType propertyTypeCode_);

    const ::nds::core::properties::CorePropertyValue& getPropertyValue() const;
    ::nds::core::properties::CorePropertyValue& getPropertyValue();
    void setPropertyValue(const ::nds::core::properties::CorePropertyValue& propertyValue_);
    void setPropertyValue(::nds::core::properties::CorePropertyValue&& propertyValue_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const Property_CorePropertyType_CorePropertyValue& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::properties::CorePropertyType readPropertyTypeCode(::zserio::BitStreamReader& in);
    ::nds::core::properties::CorePropertyType readPropertyTypeCode(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::properties::CorePropertyValue readPropertyValue(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::properties::CorePropertyValue readPropertyValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::core::properties::CorePropertyType m_propertyTypeCode_;
    ::nds::core::properties::CorePropertyValue m_propertyValue_;
};

} // namespace attributemap
} // namespace core
} // namespace nds

#endif // NDS_CORE_ATTRIBUTEMAP_PROPERTY_CORE_PROPERTY_TYPE_CORE_PROPERTY_VALUE_H
