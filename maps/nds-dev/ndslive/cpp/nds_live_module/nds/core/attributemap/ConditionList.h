/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_ATTRIBUTEMAP_CONDITION_LIST_H
#define NDS_CORE_ATTRIBUTEMAP_CONDITION_LIST_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/core/attributemap/Condition.h>

namespace nds
{
namespace core
{
namespace attributemap
{

class ConditionList
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumConditions()
        {
            return m_numConditions_;
        }

    private:
        ::zserio::DeltaContext m_numConditions_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    ConditionList() noexcept :
            ConditionList(allocator_type())
    {}

    explicit ConditionList(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_conditionList = ::zserio::vector<::nds::core::attributemap::Condition>>
    ConditionList(
            uint8_t numConditions_,
            ZSERIO_T_conditionList&& conditionList_,
            const allocator_type& allocator = allocator_type()) :
            ConditionList(allocator)
    {
        m_numConditions_ = numConditions_;
        m_conditionList_ = ZserioArrayType_conditionList(::std::forward<ZSERIO_T_conditionList>(conditionList_));
    }

    explicit ConditionList(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit ConditionList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~ConditionList() = default;

    ConditionList(const ConditionList&) = default;
    ConditionList& operator=(const ConditionList&) = default;

    ConditionList(ConditionList&&) = default;
    ConditionList& operator=(ConditionList&&) = default;

    ConditionList(::zserio::PropagateAllocatorT,
            const ConditionList& other, const allocator_type& allocator);

    void initializeChildren();

    uint8_t getNumConditions() const;
    void setNumConditions(uint8_t numConditions_);

    const ::zserio::vector<::nds::core::attributemap::Condition>& getConditionList() const;
    ::zserio::vector<::nds::core::attributemap::Condition>& getConditionList();
    void setConditionList(const ::zserio::vector<::nds::core::attributemap::Condition>& conditionList_);
    void setConditionList(::zserio::vector<::nds::core::attributemap::Condition>&& conditionList_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const ConditionList& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioArrayExpressions_conditionList
    {
    public:
        using OwnerType = ConditionList;

        static void initializeElement(ConditionList& owner,
                ::nds::core::attributemap::Condition& element, size_t index);
    };

    class ZserioElementFactory_conditionList
    {
    public:
        using OwnerType = ConditionList;

        static void create(ConditionList& owner,
                ::zserio::vector<::nds::core::attributemap::Condition>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(ConditionList& owner,
                ::zserio::vector<::nds::core::attributemap::Condition>& array,
                ::nds::core::attributemap::Condition::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_conditionList = ::zserio::Array<::zserio::vector<::nds::core::attributemap::Condition>, ::zserio::ObjectArrayTraits<::nds::core::attributemap::Condition, ZserioElementFactory_conditionList>, ::zserio::ArrayType::NORMAL, ZserioArrayExpressions_conditionList>;

    uint8_t readNumConditions(::zserio::BitStreamReader& in);
    uint8_t readNumConditions(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_conditionList readConditionList(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_conditionList readConditionList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint8_t m_numConditions_;
    ZserioArrayType_conditionList m_conditionList_;
};

} // namespace attributemap
} // namespace core
} // namespace nds

#endif // NDS_CORE_ATTRIBUTEMAP_CONDITION_LIST_H
