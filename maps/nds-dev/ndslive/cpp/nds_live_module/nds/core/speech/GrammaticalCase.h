/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_SPEECH_GRAMMATICAL_CASE_H
#define NDS_CORE_SPEECH_GRAMMATICAL_CASE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace core
{
namespace speech
{

enum class GrammaticalCase : uint8_t
{
    NO_GRAMMATICAL_CASE = UINT8_C(0),
    ABESSIVE_CASE = UINT8_C(1),
    ABLATIVE_CASE = UINT8_C(2),
    ABSOLUTIVE_CASE = UINT8_C(3),
    ADESSIVE_CASE = UINT8_C(4),
    ACCUSATIVE_CASE = UINT8_C(5),
    ALLATIVE_CASE = UINT8_C(6),
    CAUSAL_CASE = UINT8_C(7),
    COMITATIVE_CASE = UINT8_C(8),
    DATIVE_CASE = UINT8_C(9),
    DELATIVE_CASE = UINT8_C(10),
    DELIMITATIVE_CASE = UINT8_C(11),
    DIRECTIONAL_CASE = UINT8_C(12),
    DISTRIBUTIVE_TEMPORAL_CASE = UINT8_C(13),
    ELATIVE_CASE = UINT8_C(14),
    EQUATIVE_CASE = UINT8_C(15),
    ERGATIVE_CASE = UINT8_C(16),
    ESSIVE_CASE = UINT8_C(17),
    FINAL_CASE = UINT8_C(18),
    GENITIVE_CASE = UINT8_C(19),
    ILLATIVE_CASE = UINT8_C(20),
    INESSIVE_CASE = UINT8_C(21),
    INSTRUCTIVE_CASE = UINT8_C(22),
    INSTRUMENTAL_CASE = UINT8_C(23),
    LOCATIVE_CASE = UINT8_C(24),
    MODAL_CASE = UINT8_C(25),
    MULTIPLICATIVE_CASE = UINT8_C(26),
    NOMINATIVE_CASE = UINT8_C(27),
    OBLIQUE_CASE = UINT8_C(28),
    PARTITIVE_CASE = UINT8_C(29),
    PERLATIVE_CASE = UINT8_C(30),
    POSSESSIVE_CASE = UINT8_C(31),
    POSTPOSITIONAL_CASE = UINT8_C(32),
    PREPOSITIONAL_CASE = UINT8_C(33),
    PROLATIVE_CASE = UINT8_C(34),
    SUBLATIVE_CASE = UINT8_C(35),
    SUPERESSIVE_CASE = UINT8_C(36),
    TEMPORAL_CASE = UINT8_C(37),
    TERMINATIVE_CASE = UINT8_C(38),
    TRANSLATIVE_CASE = UINT8_C(39),
    VOCATIVE_CASE = UINT8_C(40)
};

} // namespace speech
} // namespace core
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for GrammaticalCase enumeration.
template <>
struct EnumTraits<::nds::core::speech::GrammaticalCase>
{
    static constexpr ::std::array<const char*, 41> names =
    {{
        "NO_GRAMMATICAL_CASE",
        "ABESSIVE_CASE",
        "ABLATIVE_CASE",
        "ABSOLUTIVE_CASE",
        "ADESSIVE_CASE",
        "ACCUSATIVE_CASE",
        "ALLATIVE_CASE",
        "CAUSAL_CASE",
        "COMITATIVE_CASE",
        "DATIVE_CASE",
        "DELATIVE_CASE",
        "DELIMITATIVE_CASE",
        "DIRECTIONAL_CASE",
        "DISTRIBUTIVE_TEMPORAL_CASE",
        "ELATIVE_CASE",
        "EQUATIVE_CASE",
        "ERGATIVE_CASE",
        "ESSIVE_CASE",
        "FINAL_CASE",
        "GENITIVE_CASE",
        "ILLATIVE_CASE",
        "INESSIVE_CASE",
        "INSTRUCTIVE_CASE",
        "INSTRUMENTAL_CASE",
        "LOCATIVE_CASE",
        "MODAL_CASE",
        "MULTIPLICATIVE_CASE",
        "NOMINATIVE_CASE",
        "OBLIQUE_CASE",
        "PARTITIVE_CASE",
        "PERLATIVE_CASE",
        "POSSESSIVE_CASE",
        "POSTPOSITIONAL_CASE",
        "PREPOSITIONAL_CASE",
        "PROLATIVE_CASE",
        "SUBLATIVE_CASE",
        "SUPERESSIVE_CASE",
        "TEMPORAL_CASE",
        "TERMINATIVE_CASE",
        "TRANSLATIVE_CASE",
        "VOCATIVE_CASE"
    }};

    static constexpr ::std::array<::nds::core::speech::GrammaticalCase, 41> values =
    {{
        ::nds::core::speech::GrammaticalCase::NO_GRAMMATICAL_CASE,
        ::nds::core::speech::GrammaticalCase::ABESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ABLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ABSOLUTIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ADESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ACCUSATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ALLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::CAUSAL_CASE,
        ::nds::core::speech::GrammaticalCase::COMITATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::DATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::DELATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::DELIMITATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::DIRECTIONAL_CASE,
        ::nds::core::speech::GrammaticalCase::DISTRIBUTIVE_TEMPORAL_CASE,
        ::nds::core::speech::GrammaticalCase::ELATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::EQUATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ERGATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::FINAL_CASE,
        ::nds::core::speech::GrammaticalCase::GENITIVE_CASE,
        ::nds::core::speech::GrammaticalCase::ILLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::INESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::INSTRUCTIVE_CASE,
        ::nds::core::speech::GrammaticalCase::INSTRUMENTAL_CASE,
        ::nds::core::speech::GrammaticalCase::LOCATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::MODAL_CASE,
        ::nds::core::speech::GrammaticalCase::MULTIPLICATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::NOMINATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::OBLIQUE_CASE,
        ::nds::core::speech::GrammaticalCase::PARTITIVE_CASE,
        ::nds::core::speech::GrammaticalCase::PERLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::POSSESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::POSTPOSITIONAL_CASE,
        ::nds::core::speech::GrammaticalCase::PREPOSITIONAL_CASE,
        ::nds::core::speech::GrammaticalCase::PROLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::SUBLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::SUPERESSIVE_CASE,
        ::nds::core::speech::GrammaticalCase::TEMPORAL_CASE,
        ::nds::core::speech::GrammaticalCase::TERMINATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::TRANSLATIVE_CASE,
        ::nds::core::speech::GrammaticalCase::VOCATIVE_CASE
    }};

    static constexpr const char* enumName = "GrammaticalCase";
};

template <>
size_t enumToOrdinal<::nds::core::speech::GrammaticalCase>(::nds::core::speech::GrammaticalCase value);

template <>
::nds::core::speech::GrammaticalCase valueToEnum<::nds::core::speech::GrammaticalCase>(
        typename ::std::underlying_type<::nds::core::speech::GrammaticalCase>::type rawValue);

template <>
uint32_t enumHashCode<::nds::core::speech::GrammaticalCase>(::nds::core::speech::GrammaticalCase value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::core::speech::GrammaticalCase>(::zserio::DeltaContext& context, ::nds::core::speech::GrammaticalCase value);

template <>
size_t bitSizeOf<::nds::core::speech::GrammaticalCase>(::nds::core::speech::GrammaticalCase value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::core::speech::GrammaticalCase>(::zserio::DeltaContext& context, ::nds::core::speech::GrammaticalCase value);

template <>
size_t initializeOffsets<::nds::core::speech::GrammaticalCase>(size_t bitPosition, ::nds::core::speech::GrammaticalCase value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::core::speech::GrammaticalCase>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::core::speech::GrammaticalCase value);

template <>
::nds::core::speech::GrammaticalCase read<::nds::core::speech::GrammaticalCase>(::zserio::BitStreamReader& in);

template <>
::nds::core::speech::GrammaticalCase read<::nds::core::speech::GrammaticalCase, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::core::speech::GrammaticalCase>(::zserio::BitStreamWriter& out, ::nds::core::speech::GrammaticalCase value);

template <>
void write<::zserio::DeltaContext, ::nds::core::speech::GrammaticalCase>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::core::speech::GrammaticalCase value);

} // namespace zserio

#endif // NDS_CORE_SPEECH_GRAMMATICAL_CASE_H
