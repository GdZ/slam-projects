/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_PROPERTIES_TOLL_PAYMENT_METHOD_H
#define NDS_CORE_PROPERTIES_TOLL_PAYMENT_METHOD_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Vector.h>

#include <nds/core/properties/TollCollectionProvider.h>
#include <nds/core/properties/TollPaymentMethodType.h>

namespace nds
{
namespace core
{
namespace properties
{

class TollPaymentMethod
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getType()
        {
            return m_type_;
        }

    private:
        ::zserio::DeltaContext m_type_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    TollPaymentMethod() noexcept :
            TollPaymentMethod(allocator_type())
    {}

    explicit TollPaymentMethod(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_provider = ::zserio::vector<::nds::core::properties::TollCollectionProvider>>
    TollPaymentMethod(
            ::nds::core::properties::TollPaymentMethodType type_,
            ZSERIO_T_provider&& provider_,
            const allocator_type& allocator = allocator_type()) :
            TollPaymentMethod(allocator)
    {
        m_type_ = type_;
        m_provider_ = ::zserio::createOptionalArray<ZserioArrayType_provider>(::std::forward<ZSERIO_T_provider>(provider_));
    }

    explicit TollPaymentMethod(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit TollPaymentMethod(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~TollPaymentMethod() = default;

    TollPaymentMethod(const TollPaymentMethod&) = default;
    TollPaymentMethod& operator=(const TollPaymentMethod&) = default;

    TollPaymentMethod(TollPaymentMethod&&) = default;
    TollPaymentMethod& operator=(TollPaymentMethod&&) = default;

    TollPaymentMethod(::zserio::PropagateAllocatorT,
            const TollPaymentMethod& other, const allocator_type& allocator);

    ::nds::core::properties::TollPaymentMethodType getType() const;
    void setType(::nds::core::properties::TollPaymentMethodType type_);

    const ::zserio::vector<::nds::core::properties::TollCollectionProvider>& getProvider() const;
    ::zserio::vector<::nds::core::properties::TollCollectionProvider>& getProvider();
    void setProvider(const ::zserio::vector<::nds::core::properties::TollCollectionProvider>& provider_);
    void setProvider(::zserio::vector<::nds::core::properties::TollCollectionProvider>&& provider_);
    bool isProviderUsed() const;
    bool isProviderSet() const;
    void resetProvider();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const TollPaymentMethod& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    using ZserioArrayType_provider = ::zserio::Array<::zserio::vector<::nds::core::properties::TollCollectionProvider>, ::zserio::StringArrayTraits, ::zserio::ArrayType::AUTO>;

    ::nds::core::properties::TollPaymentMethodType readType(::zserio::BitStreamReader& in);
    ::nds::core::properties::TollPaymentMethodType readType(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<ZserioArrayType_provider> readProvider(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    ::nds::core::properties::TollPaymentMethodType m_type_;
    ::zserio::InplaceOptionalHolder<ZserioArrayType_provider> m_provider_;
};

} // namespace properties
} // namespace core
} // namespace nds

#endif // NDS_CORE_PROPERTIES_TOLL_PAYMENT_METHOD_H
