/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_PROPERTIES_ATTRIBUTE_REASON_TYPE_H
#define NDS_CORE_PROPERTIES_ATTRIBUTE_REASON_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace core
{
namespace properties
{

enum class AttributeReasonType : uint8_t
{
    DYNAMICALLY_CONTROLLED = UINT8_C(0),
    POSTED = UINT8_C(1),
    COUNTRY_DRIVING_RULES = UINT8_C(2)
};

} // namespace properties
} // namespace core
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for AttributeReasonType enumeration.
template <>
struct EnumTraits<::nds::core::properties::AttributeReasonType>
{
    static constexpr ::std::array<const char*, 3> names =
    {{
        "DYNAMICALLY_CONTROLLED",
        "POSTED",
        "COUNTRY_DRIVING_RULES"
    }};

    static constexpr ::std::array<::nds::core::properties::AttributeReasonType, 3> values =
    {{
        ::nds::core::properties::AttributeReasonType::DYNAMICALLY_CONTROLLED,
        ::nds::core::properties::AttributeReasonType::POSTED,
        ::nds::core::properties::AttributeReasonType::COUNTRY_DRIVING_RULES
    }};

    static constexpr const char* enumName = "AttributeReasonType";
};

template <>
size_t enumToOrdinal<::nds::core::properties::AttributeReasonType>(::nds::core::properties::AttributeReasonType value);

template <>
::nds::core::properties::AttributeReasonType valueToEnum<::nds::core::properties::AttributeReasonType>(
        typename ::std::underlying_type<::nds::core::properties::AttributeReasonType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::core::properties::AttributeReasonType>(::nds::core::properties::AttributeReasonType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::core::properties::AttributeReasonType>(::zserio::DeltaContext& context, ::nds::core::properties::AttributeReasonType value);

template <>
size_t bitSizeOf<::nds::core::properties::AttributeReasonType>(::nds::core::properties::AttributeReasonType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::core::properties::AttributeReasonType>(::zserio::DeltaContext& context, ::nds::core::properties::AttributeReasonType value);

template <>
size_t initializeOffsets<::nds::core::properties::AttributeReasonType>(size_t bitPosition, ::nds::core::properties::AttributeReasonType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::core::properties::AttributeReasonType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::core::properties::AttributeReasonType value);

template <>
::nds::core::properties::AttributeReasonType read<::nds::core::properties::AttributeReasonType>(::zserio::BitStreamReader& in);

template <>
::nds::core::properties::AttributeReasonType read<::nds::core::properties::AttributeReasonType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::core::properties::AttributeReasonType>(::zserio::BitStreamWriter& out, ::nds::core::properties::AttributeReasonType value);

template <>
void write<::zserio::DeltaContext, ::nds::core::properties::AttributeReasonType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::core::properties::AttributeReasonType value);

} // namespace zserio

#endif // NDS_CORE_PROPERTIES_ATTRIBUTE_REASON_TYPE_H
