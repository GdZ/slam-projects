/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_CONDITIONS_CONDITION_TYPE_CODE_H
#define NDS_CORE_CONDITIONS_CONDITION_TYPE_CODE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace core
{
namespace conditions
{

enum class ConditionTypeCode : uint16_t
{
    TIME_RANGE_OF_DAY = UINT16_C(0),
    TIME_RANGE_OF_WEEK = UINT16_C(1),
    DATE_RANGE_OF_YEAR = UINT16_C(2),
    DAYS_OF_WEEK = UINT16_C(3),
    DAYS_OF_MONTH = UINT16_C(4),
    DAY_OF_YEAR = UINT16_C(5),
    MONTHS_OF_YEAR = UINT16_C(6),
    WEEK_IN_MONTH = UINT16_C(7),
    WEEKDAY_IN_MONTH = UINT16_C(8),
    CALENDAR_WEEK = UINT16_C(9),
    TIME_DURATION = UINT16_C(10),
    ODD_OR_EVEN_DAYS = UINT16_C(11),
    FUZZY_TIME_DOMAIN = UINT16_C(12),
    WEATHER = UINT16_C(13),
    FREQUENTLY_USED_VEHICLE_TYPES = UINT16_C(14),
    SLOW_ROAD_USERS = UINT16_C(15),
    BIG_VEHICLES = UINT16_C(16),
    PUBLIC_SERVICE_VEHICLES = UINT16_C(17),
    EMERGENCY_MILITARY_DETAILS = UINT16_C(18),
    EQUIPMENT = UINT16_C(19),
    AUTHORIZATION = UINT16_C(20),
    LOAD = UINT16_C(21),
    NUM_AXLES = UINT16_C(22),
    OCCUPANCY = UINT16_C(23),
    LENGTH_METRIC = UINT16_C(24),
    LENGTH_IMPERIAL = UINT16_C(25),
    VEHICLE_HEIGHT_METRIC = UINT16_C(26),
    VEHICLE_HEIGHT_IMPERIAL = UINT16_C(27),
    VEHICLE_WIDTH_METRIC = UINT16_C(28),
    VEHICLE_WIDTH_IMPERIAL = UINT16_C(29),
    WEIGHT_METRIC = UINT16_C(30),
    WEIGHT_IMPERIAL = UINT16_C(31),
    WEIGHT_PER_AXLE_METRIC = UINT16_C(32),
    WEIGHT_PER_AXLE_IMPERIAL = UINT16_C(33),
    WEIGHT_PER_TANDEM_AXLE_METRIC = UINT16_C(34),
    WEIGHT_PER_TANDEM_AXLE_IMPERIAL = UINT16_C(35),
    WEIGHT_PER_TRIDEM_AXLE_METRIC = UINT16_C(36),
    WEIGHT_PER_TRIDEM_AXLE_IMPERIAL = UINT16_C(37),
    TIME_RANGE_OF_WEEKDAYS = UINT16_C(38),
    VISIBILITY = UINT16_C(39),
    SURFACE = UINT16_C(40),
    EURO_EMISSION_CLASS = UINT16_C(41),
    TIME_DURATION_HOURS = UINT16_C(42),
    TIME_RANGE_OF_YEAR = UINT16_C(43),
    NUM_TRAILERS = UINT16_C(44),
    TRAILER_LENGTH_METRIC = UINT16_C(45),
    TRAILER_LENGTH_IMPERIAL = UINT16_C(46),
    ENGINE_DISPLACEMENT = UINT16_C(47),
    ENERGY_TYPE = UINT16_C(48),
    BRAKED_TRAILER = UINT16_C(49),
    PUBLIC_BUS_TYPE = UINT16_C(50)
};

} // namespace conditions
} // namespace core
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for ConditionTypeCode enumeration.
template <>
struct EnumTraits<::nds::core::conditions::ConditionTypeCode>
{
    static constexpr ::std::array<const char*, 51> names =
    {{
        "TIME_RANGE_OF_DAY",
        "TIME_RANGE_OF_WEEK",
        "DATE_RANGE_OF_YEAR",
        "DAYS_OF_WEEK",
        "DAYS_OF_MONTH",
        "DAY_OF_YEAR",
        "MONTHS_OF_YEAR",
        "WEEK_IN_MONTH",
        "WEEKDAY_IN_MONTH",
        "CALENDAR_WEEK",
        "TIME_DURATION",
        "ODD_OR_EVEN_DAYS",
        "FUZZY_TIME_DOMAIN",
        "WEATHER",
        "FREQUENTLY_USED_VEHICLE_TYPES",
        "SLOW_ROAD_USERS",
        "BIG_VEHICLES",
        "PUBLIC_SERVICE_VEHICLES",
        "EMERGENCY_MILITARY_DETAILS",
        "EQUIPMENT",
        "AUTHORIZATION",
        "LOAD",
        "NUM_AXLES",
        "OCCUPANCY",
        "LENGTH_METRIC",
        "LENGTH_IMPERIAL",
        "VEHICLE_HEIGHT_METRIC",
        "VEHICLE_HEIGHT_IMPERIAL",
        "VEHICLE_WIDTH_METRIC",
        "VEHICLE_WIDTH_IMPERIAL",
        "WEIGHT_METRIC",
        "WEIGHT_IMPERIAL",
        "WEIGHT_PER_AXLE_METRIC",
        "WEIGHT_PER_AXLE_IMPERIAL",
        "WEIGHT_PER_TANDEM_AXLE_METRIC",
        "WEIGHT_PER_TANDEM_AXLE_IMPERIAL",
        "WEIGHT_PER_TRIDEM_AXLE_METRIC",
        "WEIGHT_PER_TRIDEM_AXLE_IMPERIAL",
        "TIME_RANGE_OF_WEEKDAYS",
        "VISIBILITY",
        "SURFACE",
        "EURO_EMISSION_CLASS",
        "TIME_DURATION_HOURS",
        "TIME_RANGE_OF_YEAR",
        "NUM_TRAILERS",
        "TRAILER_LENGTH_METRIC",
        "TRAILER_LENGTH_IMPERIAL",
        "ENGINE_DISPLACEMENT",
        "ENERGY_TYPE",
        "BRAKED_TRAILER",
        "PUBLIC_BUS_TYPE"
    }};

    static constexpr ::std::array<::nds::core::conditions::ConditionTypeCode, 51> values =
    {{
        ::nds::core::conditions::ConditionTypeCode::TIME_RANGE_OF_DAY,
        ::nds::core::conditions::ConditionTypeCode::TIME_RANGE_OF_WEEK,
        ::nds::core::conditions::ConditionTypeCode::DATE_RANGE_OF_YEAR,
        ::nds::core::conditions::ConditionTypeCode::DAYS_OF_WEEK,
        ::nds::core::conditions::ConditionTypeCode::DAYS_OF_MONTH,
        ::nds::core::conditions::ConditionTypeCode::DAY_OF_YEAR,
        ::nds::core::conditions::ConditionTypeCode::MONTHS_OF_YEAR,
        ::nds::core::conditions::ConditionTypeCode::WEEK_IN_MONTH,
        ::nds::core::conditions::ConditionTypeCode::WEEKDAY_IN_MONTH,
        ::nds::core::conditions::ConditionTypeCode::CALENDAR_WEEK,
        ::nds::core::conditions::ConditionTypeCode::TIME_DURATION,
        ::nds::core::conditions::ConditionTypeCode::ODD_OR_EVEN_DAYS,
        ::nds::core::conditions::ConditionTypeCode::FUZZY_TIME_DOMAIN,
        ::nds::core::conditions::ConditionTypeCode::WEATHER,
        ::nds::core::conditions::ConditionTypeCode::FREQUENTLY_USED_VEHICLE_TYPES,
        ::nds::core::conditions::ConditionTypeCode::SLOW_ROAD_USERS,
        ::nds::core::conditions::ConditionTypeCode::BIG_VEHICLES,
        ::nds::core::conditions::ConditionTypeCode::PUBLIC_SERVICE_VEHICLES,
        ::nds::core::conditions::ConditionTypeCode::EMERGENCY_MILITARY_DETAILS,
        ::nds::core::conditions::ConditionTypeCode::EQUIPMENT,
        ::nds::core::conditions::ConditionTypeCode::AUTHORIZATION,
        ::nds::core::conditions::ConditionTypeCode::LOAD,
        ::nds::core::conditions::ConditionTypeCode::NUM_AXLES,
        ::nds::core::conditions::ConditionTypeCode::OCCUPANCY,
        ::nds::core::conditions::ConditionTypeCode::LENGTH_METRIC,
        ::nds::core::conditions::ConditionTypeCode::LENGTH_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::VEHICLE_HEIGHT_METRIC,
        ::nds::core::conditions::ConditionTypeCode::VEHICLE_HEIGHT_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::VEHICLE_WIDTH_METRIC,
        ::nds::core::conditions::ConditionTypeCode::VEHICLE_WIDTH_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_METRIC,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_AXLE_METRIC,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_AXLE_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_TANDEM_AXLE_METRIC,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_TANDEM_AXLE_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_TRIDEM_AXLE_METRIC,
        ::nds::core::conditions::ConditionTypeCode::WEIGHT_PER_TRIDEM_AXLE_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::TIME_RANGE_OF_WEEKDAYS,
        ::nds::core::conditions::ConditionTypeCode::VISIBILITY,
        ::nds::core::conditions::ConditionTypeCode::SURFACE,
        ::nds::core::conditions::ConditionTypeCode::EURO_EMISSION_CLASS,
        ::nds::core::conditions::ConditionTypeCode::TIME_DURATION_HOURS,
        ::nds::core::conditions::ConditionTypeCode::TIME_RANGE_OF_YEAR,
        ::nds::core::conditions::ConditionTypeCode::NUM_TRAILERS,
        ::nds::core::conditions::ConditionTypeCode::TRAILER_LENGTH_METRIC,
        ::nds::core::conditions::ConditionTypeCode::TRAILER_LENGTH_IMPERIAL,
        ::nds::core::conditions::ConditionTypeCode::ENGINE_DISPLACEMENT,
        ::nds::core::conditions::ConditionTypeCode::ENERGY_TYPE,
        ::nds::core::conditions::ConditionTypeCode::BRAKED_TRAILER,
        ::nds::core::conditions::ConditionTypeCode::PUBLIC_BUS_TYPE
    }};

    static constexpr const char* enumName = "ConditionTypeCode";
};

template <>
size_t enumToOrdinal<::nds::core::conditions::ConditionTypeCode>(::nds::core::conditions::ConditionTypeCode value);

template <>
::nds::core::conditions::ConditionTypeCode valueToEnum<::nds::core::conditions::ConditionTypeCode>(
        typename ::std::underlying_type<::nds::core::conditions::ConditionTypeCode>::type rawValue);

template <>
uint32_t enumHashCode<::nds::core::conditions::ConditionTypeCode>(::nds::core::conditions::ConditionTypeCode value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::core::conditions::ConditionTypeCode>(::zserio::DeltaContext& context, ::nds::core::conditions::ConditionTypeCode value);

template <>
size_t bitSizeOf<::nds::core::conditions::ConditionTypeCode>(::nds::core::conditions::ConditionTypeCode value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::core::conditions::ConditionTypeCode>(::zserio::DeltaContext& context, ::nds::core::conditions::ConditionTypeCode value);

template <>
size_t initializeOffsets<::nds::core::conditions::ConditionTypeCode>(size_t bitPosition, ::nds::core::conditions::ConditionTypeCode value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::core::conditions::ConditionTypeCode>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::core::conditions::ConditionTypeCode value);

template <>
::nds::core::conditions::ConditionTypeCode read<::nds::core::conditions::ConditionTypeCode>(::zserio::BitStreamReader& in);

template <>
::nds::core::conditions::ConditionTypeCode read<::nds::core::conditions::ConditionTypeCode, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::core::conditions::ConditionTypeCode>(::zserio::BitStreamWriter& out, ::nds::core::conditions::ConditionTypeCode value);

template <>
void write<::zserio::DeltaContext, ::nds::core::conditions::ConditionTypeCode>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::core::conditions::ConditionTypeCode value);

} // namespace zserio

#endif // NDS_CORE_CONDITIONS_CONDITION_TYPE_CODE_H
