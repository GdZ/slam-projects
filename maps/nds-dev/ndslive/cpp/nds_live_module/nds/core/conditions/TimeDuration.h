/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_CORE_CONDITIONS_TIME_DURATION_H
#define NDS_CORE_CONDITIONS_TIME_DURATION_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace core
{
namespace conditions
{

class TimeDuration
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getDays()
        {
            return m_days_;
        }

        ::zserio::DeltaContext& getMonths()
        {
            return m_months_;
        }

        ::zserio::DeltaContext& getYears()
        {
            return m_years_;
        }

    private:
        ::zserio::DeltaContext m_days_;
        ::zserio::DeltaContext m_months_;
        ::zserio::DeltaContext m_years_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    TimeDuration() noexcept :
            TimeDuration(allocator_type())
    {}

    explicit TimeDuration(const allocator_type& allocator) noexcept;

    TimeDuration(
            uint8_t days_,
            uint8_t months_,
            uint8_t years_,
            const allocator_type& allocator = allocator_type()) :
            TimeDuration(allocator)
    {
        m_days_ = days_;
        m_months_ = months_;
        m_years_ = years_;
    }

    explicit TimeDuration(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit TimeDuration(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~TimeDuration() = default;

    TimeDuration(const TimeDuration&) = default;
    TimeDuration& operator=(const TimeDuration&) = default;

    TimeDuration(TimeDuration&&) = default;
    TimeDuration& operator=(TimeDuration&&) = default;

    TimeDuration(::zserio::PropagateAllocatorT,
            const TimeDuration& other, const allocator_type& allocator);

    uint8_t getDays() const;
    void setDays(uint8_t days_);

    uint8_t getMonths() const;
    void setMonths(uint8_t months_);

    uint8_t getYears() const;
    void setYears(uint8_t years_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const TimeDuration& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    uint8_t readDays(::zserio::BitStreamReader& in);
    uint8_t readDays(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    uint8_t readMonths(::zserio::BitStreamReader& in);
    uint8_t readMonths(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    uint8_t readYears(::zserio::BitStreamReader& in);
    uint8_t readYears(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    uint8_t m_days_;
    uint8_t m_months_;
    uint8_t m_years_;
};

} // namespace conditions
} // namespace core
} // namespace nds

#endif // NDS_CORE_CONDITIONS_TIME_DURATION_H
