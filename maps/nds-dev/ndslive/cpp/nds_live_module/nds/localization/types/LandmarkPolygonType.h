/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_TYPES_LANDMARK_POLYGON_TYPE_H
#define NDS_LOCALIZATION_TYPES_LANDMARK_POLYGON_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace localization
{
namespace types
{

enum class LandmarkPolygonType : uint8_t
{
    SIGN_BOUNDING_BOX = UINT8_C(0),
    SIGN = UINT8_C(1),
    PERPENDICULAR_WALL = UINT8_C(2),
    OVERHEAD_STRUCTURE = UINT8_C(3),
    SPEED_BUMP = UINT8_C(4),
    BUILDING_DOOR = UINT8_C(5),
    BUILDING_WINDOW = UINT8_C(6),
    BUILDING_ROOF = UINT8_C(7),
    BUILDING_BRACE = UINT8_C(8),
    FIDUCIAL_MARKER = UINT8_C(9)
};

} // namespace types
} // namespace localization
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for LandmarkPolygonType enumeration.
template <>
struct EnumTraits<::nds::localization::types::LandmarkPolygonType>
{
    static constexpr ::std::array<const char*, 10> names =
    {{
        "SIGN_BOUNDING_BOX",
        "SIGN",
        "PERPENDICULAR_WALL",
        "OVERHEAD_STRUCTURE",
        "SPEED_BUMP",
        "BUILDING_DOOR",
        "BUILDING_WINDOW",
        "BUILDING_ROOF",
        "BUILDING_BRACE",
        "FIDUCIAL_MARKER"
    }};

    static constexpr ::std::array<::nds::localization::types::LandmarkPolygonType, 10> values =
    {{
        ::nds::localization::types::LandmarkPolygonType::SIGN_BOUNDING_BOX,
        ::nds::localization::types::LandmarkPolygonType::SIGN,
        ::nds::localization::types::LandmarkPolygonType::PERPENDICULAR_WALL,
        ::nds::localization::types::LandmarkPolygonType::OVERHEAD_STRUCTURE,
        ::nds::localization::types::LandmarkPolygonType::SPEED_BUMP,
        ::nds::localization::types::LandmarkPolygonType::BUILDING_DOOR,
        ::nds::localization::types::LandmarkPolygonType::BUILDING_WINDOW,
        ::nds::localization::types::LandmarkPolygonType::BUILDING_ROOF,
        ::nds::localization::types::LandmarkPolygonType::BUILDING_BRACE,
        ::nds::localization::types::LandmarkPolygonType::FIDUCIAL_MARKER
    }};

    static constexpr const char* enumName = "LandmarkPolygonType";
};

template <>
size_t enumToOrdinal<::nds::localization::types::LandmarkPolygonType>(::nds::localization::types::LandmarkPolygonType value);

template <>
::nds::localization::types::LandmarkPolygonType valueToEnum<::nds::localization::types::LandmarkPolygonType>(
        typename ::std::underlying_type<::nds::localization::types::LandmarkPolygonType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::localization::types::LandmarkPolygonType>(::nds::localization::types::LandmarkPolygonType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::localization::types::LandmarkPolygonType>(::zserio::DeltaContext& context, ::nds::localization::types::LandmarkPolygonType value);

template <>
size_t bitSizeOf<::nds::localization::types::LandmarkPolygonType>(::nds::localization::types::LandmarkPolygonType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::localization::types::LandmarkPolygonType>(::zserio::DeltaContext& context, ::nds::localization::types::LandmarkPolygonType value);

template <>
size_t initializeOffsets<::nds::localization::types::LandmarkPolygonType>(size_t bitPosition, ::nds::localization::types::LandmarkPolygonType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::localization::types::LandmarkPolygonType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::localization::types::LandmarkPolygonType value);

template <>
::nds::localization::types::LandmarkPolygonType read<::nds::localization::types::LandmarkPolygonType>(::zserio::BitStreamReader& in);

template <>
::nds::localization::types::LandmarkPolygonType read<::nds::localization::types::LandmarkPolygonType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::localization::types::LandmarkPolygonType>(::zserio::BitStreamWriter& out, ::nds::localization::types::LandmarkPolygonType value);

template <>
void write<::zserio::DeltaContext, ::nds::localization::types::LandmarkPolygonType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::localization::types::LandmarkPolygonType value);

} // namespace zserio

#endif // NDS_LOCALIZATION_TYPES_LANDMARK_POLYGON_TYPE_H
