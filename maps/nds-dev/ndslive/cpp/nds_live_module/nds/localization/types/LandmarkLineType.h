/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_TYPES_LANDMARK_LINE_TYPE_H
#define NDS_LOCALIZATION_TYPES_LANDMARK_LINE_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace localization
{
namespace types
{

enum class LandmarkLineType : uint8_t
{
    GUARDRAIL_POST = UINT8_C(0),
    LIGHT_POLE = UINT8_C(1),
    DELINEATOR_POST = UINT8_C(2),
    REFLECTOR_POST = UINT8_C(3),
    GANTRY_POLE = UINT8_C(4),
    SIGNPOST_POLE = UINT8_C(5),
    POLE_UNKNOWN = UINT8_C(6),
    CURB = UINT8_C(7),
    WALL_FLAT = UINT8_C(8),
    WALL_TUNNEL = UINT8_C(9),
    BARRIER_JERSEY = UINT8_C(10),
    BARRIER_SOUND = UINT8_C(11),
    BARRIER_CABLE = UINT8_C(12),
    GUARDRAIL = UINT8_C(13),
    FENCE = UINT8_C(14),
    CLIFF = UINT8_C(15),
    DITCH = UINT8_C(16)
};

} // namespace types
} // namespace localization
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for LandmarkLineType enumeration.
template <>
struct EnumTraits<::nds::localization::types::LandmarkLineType>
{
    static constexpr ::std::array<const char*, 17> names =
    {{
        "GUARDRAIL_POST",
        "LIGHT_POLE",
        "DELINEATOR_POST",
        "REFLECTOR_POST",
        "GANTRY_POLE",
        "SIGNPOST_POLE",
        "POLE_UNKNOWN",
        "CURB",
        "WALL_FLAT",
        "WALL_TUNNEL",
        "BARRIER_JERSEY",
        "BARRIER_SOUND",
        "BARRIER_CABLE",
        "GUARDRAIL",
        "FENCE",
        "CLIFF",
        "DITCH"
    }};

    static constexpr ::std::array<::nds::localization::types::LandmarkLineType, 17> values =
    {{
        ::nds::localization::types::LandmarkLineType::GUARDRAIL_POST,
        ::nds::localization::types::LandmarkLineType::LIGHT_POLE,
        ::nds::localization::types::LandmarkLineType::DELINEATOR_POST,
        ::nds::localization::types::LandmarkLineType::REFLECTOR_POST,
        ::nds::localization::types::LandmarkLineType::GANTRY_POLE,
        ::nds::localization::types::LandmarkLineType::SIGNPOST_POLE,
        ::nds::localization::types::LandmarkLineType::POLE_UNKNOWN,
        ::nds::localization::types::LandmarkLineType::CURB,
        ::nds::localization::types::LandmarkLineType::WALL_FLAT,
        ::nds::localization::types::LandmarkLineType::WALL_TUNNEL,
        ::nds::localization::types::LandmarkLineType::BARRIER_JERSEY,
        ::nds::localization::types::LandmarkLineType::BARRIER_SOUND,
        ::nds::localization::types::LandmarkLineType::BARRIER_CABLE,
        ::nds::localization::types::LandmarkLineType::GUARDRAIL,
        ::nds::localization::types::LandmarkLineType::FENCE,
        ::nds::localization::types::LandmarkLineType::CLIFF,
        ::nds::localization::types::LandmarkLineType::DITCH
    }};

    static constexpr const char* enumName = "LandmarkLineType";
};

template <>
size_t enumToOrdinal<::nds::localization::types::LandmarkLineType>(::nds::localization::types::LandmarkLineType value);

template <>
::nds::localization::types::LandmarkLineType valueToEnum<::nds::localization::types::LandmarkLineType>(
        typename ::std::underlying_type<::nds::localization::types::LandmarkLineType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::localization::types::LandmarkLineType>(::nds::localization::types::LandmarkLineType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::localization::types::LandmarkLineType>(::zserio::DeltaContext& context, ::nds::localization::types::LandmarkLineType value);

template <>
size_t bitSizeOf<::nds::localization::types::LandmarkLineType>(::nds::localization::types::LandmarkLineType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::localization::types::LandmarkLineType>(::zserio::DeltaContext& context, ::nds::localization::types::LandmarkLineType value);

template <>
size_t initializeOffsets<::nds::localization::types::LandmarkLineType>(size_t bitPosition, ::nds::localization::types::LandmarkLineType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::localization::types::LandmarkLineType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::localization::types::LandmarkLineType value);

template <>
::nds::localization::types::LandmarkLineType read<::nds::localization::types::LandmarkLineType>(::zserio::BitStreamReader& in);

template <>
::nds::localization::types::LandmarkLineType read<::nds::localization::types::LandmarkLineType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::localization::types::LandmarkLineType>(::zserio::BitStreamWriter& out, ::nds::localization::types::LandmarkLineType value);

template <>
void write<::zserio::DeltaContext, ::nds::localization::types::LandmarkLineType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::localization::types::LandmarkLineType value);

} // namespace zserio

#endif // NDS_LOCALIZATION_TYPES_LANDMARK_LINE_TYPE_H
