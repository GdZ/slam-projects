/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_LAYER_OBSTACLE_LAYER_H
#define NDS_LOCALIZATION_LAYER_OBSTACLE_LAYER_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/GeometryLayerType.h>
#include <nds/localization/instantiations/ObstacleGeometryLayer.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace localization
{
namespace layer
{

class ObstacleLayer
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::localization::instantiations::ObstacleGeometryLayer::ZserioPackingContext& getObstacleGeometryLayer()
        {
            return m_obstacleGeometryLayer_;
        }

    private:
        ::nds::localization::instantiations::ObstacleGeometryLayer::ZserioPackingContext m_obstacleGeometryLayer_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    ObstacleLayer() noexcept :
            ObstacleLayer(allocator_type())
    {}

    explicit ObstacleLayer(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_obstacleGeometryLayer = ::nds::localization::instantiations::ObstacleGeometryLayer,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_obstacleGeometryLayer, ObstacleLayer, allocator_type> = 0>
    explicit ObstacleLayer(
            ZSERIO_T_obstacleGeometryLayer&& obstacleGeometryLayer_,
            const allocator_type& allocator = allocator_type()) :
            ObstacleLayer(allocator)
    {
        m_obstacleGeometryLayer_ = ::std::forward<ZSERIO_T_obstacleGeometryLayer>(obstacleGeometryLayer_);
    }

    explicit ObstacleLayer(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit ObstacleLayer(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~ObstacleLayer() = default;

    ObstacleLayer(const ObstacleLayer& other);
    ObstacleLayer& operator=(const ObstacleLayer& other);

    ObstacleLayer(ObstacleLayer&& other);
    ObstacleLayer& operator=(ObstacleLayer&& other);

    ObstacleLayer(::zserio::PropagateAllocatorT,
            const ObstacleLayer& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::localization::instantiations::ObstacleGeometryLayer& getObstacleGeometryLayer() const;
    ::nds::localization::instantiations::ObstacleGeometryLayer& getObstacleGeometryLayer();
    void setObstacleGeometryLayer(const ::nds::localization::instantiations::ObstacleGeometryLayer& obstacleGeometryLayer_);
    void setObstacleGeometryLayer(::nds::localization::instantiations::ObstacleGeometryLayer&& obstacleGeometryLayer_);

    ::nds::system::types::LayerType funcGetLayerType() const;

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const ObstacleLayer& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::localization::instantiations::ObstacleGeometryLayer readObstacleGeometryLayer(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::localization::instantiations::ObstacleGeometryLayer readObstacleGeometryLayer(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::localization::instantiations::ObstacleGeometryLayer m_obstacleGeometryLayer_;
};

} // namespace layer
} // namespace localization
} // namespace nds

#endif // NDS_LOCALIZATION_LAYER_OBSTACLE_LAYER_H
