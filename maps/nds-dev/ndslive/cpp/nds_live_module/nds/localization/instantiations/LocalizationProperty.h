/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_INSTANTIATIONS_LOCALIZATION_PROPERTY_H
#define NDS_LOCALIZATION_INSTANTIATIONS_LOCALIZATION_PROPERTY_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/localization/properties/LocalizationPropertyType.h>
#include <nds/localization/properties/LocalizationPropertyValue.h>

namespace nds
{
namespace localization
{
namespace instantiations
{

class LocalizationProperty
{
public:
    class ZserioPackingContext
    {
    public:
        ::nds::localization::properties::LocalizationPropertyType::ZserioPackingContext& getPropertyTypeCode()
        {
            return m_propertyTypeCode_;
        }

        ::nds::localization::properties::LocalizationPropertyValue::ZserioPackingContext& getPropertyValue()
        {
            return m_propertyValue_;
        }

    private:
        ::nds::localization::properties::LocalizationPropertyType::ZserioPackingContext m_propertyTypeCode_;
        ::nds::localization::properties::LocalizationPropertyValue::ZserioPackingContext m_propertyValue_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    LocalizationProperty() noexcept :
            LocalizationProperty(allocator_type())
    {}

    explicit LocalizationProperty(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_propertyTypeCode = ::nds::localization::properties::LocalizationPropertyType,
            typename ZSERIO_T_propertyValue = ::nds::localization::properties::LocalizationPropertyValue,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_propertyTypeCode, LocalizationProperty, allocator_type> = 0>
    LocalizationProperty(
            ZSERIO_T_propertyTypeCode&& propertyTypeCode_,
            ZSERIO_T_propertyValue&& propertyValue_,
            const allocator_type& allocator = allocator_type()) :
            LocalizationProperty(allocator)
    {
        m_propertyTypeCode_ = ::std::forward<ZSERIO_T_propertyTypeCode>(propertyTypeCode_);
        m_propertyValue_ = ::std::forward<ZSERIO_T_propertyValue>(propertyValue_);
    }

    explicit LocalizationProperty(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit LocalizationProperty(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~LocalizationProperty() = default;

    LocalizationProperty(const LocalizationProperty& other);
    LocalizationProperty& operator=(const LocalizationProperty& other);

    LocalizationProperty(LocalizationProperty&& other);
    LocalizationProperty& operator=(LocalizationProperty&& other);

    LocalizationProperty(::zserio::PropagateAllocatorT,
            const LocalizationProperty& other, const allocator_type& allocator);

    void initializeChildren();

    const ::nds::localization::properties::LocalizationPropertyType& getPropertyTypeCode() const;
    ::nds::localization::properties::LocalizationPropertyType& getPropertyTypeCode();
    void setPropertyTypeCode(const ::nds::localization::properties::LocalizationPropertyType& propertyTypeCode_);
    void setPropertyTypeCode(::nds::localization::properties::LocalizationPropertyType&& propertyTypeCode_);

    const ::nds::localization::properties::LocalizationPropertyValue& getPropertyValue() const;
    ::nds::localization::properties::LocalizationPropertyValue& getPropertyValue();
    void setPropertyValue(const ::nds::localization::properties::LocalizationPropertyValue& propertyValue_);
    void setPropertyValue(::nds::localization::properties::LocalizationPropertyValue&& propertyValue_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const LocalizationProperty& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::localization::properties::LocalizationPropertyType readPropertyTypeCode(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::localization::properties::LocalizationPropertyType readPropertyTypeCode(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::localization::properties::LocalizationPropertyValue readPropertyValue(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::localization::properties::LocalizationPropertyValue readPropertyValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::localization::properties::LocalizationPropertyType m_propertyTypeCode_;
    ::nds::localization::properties::LocalizationPropertyValue m_propertyValue_;
};

} // namespace instantiations
} // namespace localization
} // namespace nds

#endif // NDS_LOCALIZATION_INSTANTIATIONS_LOCALIZATION_PROPERTY_H
