/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_ATTRIBUTES_OCCUPANCY_GRID_RELATION_ATTRIBUTE_VALUE_H
#define NDS_LOCALIZATION_ATTRIBUTES_OCCUPANCY_GRID_RELATION_ATTRIBUTE_VALUE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <zserio/AnyHolder.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/localization/attributes/OccupancyGridRelationAttributeType.h>
#include <nds/localization/types/OccupancyGridId.h>

namespace nds
{
namespace localization
{
namespace attributes
{

class OccupancyGridRelationAttributeValue
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    enum ChoiceTag : int32_t
    {
        CHOICE_id = 0,
        UNDEFINED_CHOICE = -1
    };

    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getId()
        {
            return m_id_;
        }

    private:
        ::zserio::DeltaContext m_id_;
    };

    OccupancyGridRelationAttributeValue() noexcept :
            OccupancyGridRelationAttributeValue(allocator_type())
    {}

    explicit OccupancyGridRelationAttributeValue(const allocator_type& allocator) noexcept;

    explicit OccupancyGridRelationAttributeValue(::zserio::BitStreamReader& in,
            ::nds::localization::attributes::OccupancyGridRelationAttributeType type_, const allocator_type& allocator = allocator_type());
    explicit OccupancyGridRelationAttributeValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in,
            ::nds::localization::attributes::OccupancyGridRelationAttributeType type_, const allocator_type& allocator = allocator_type());

    ~OccupancyGridRelationAttributeValue() = default;

    OccupancyGridRelationAttributeValue(const OccupancyGridRelationAttributeValue& other);
    OccupancyGridRelationAttributeValue& operator=(const OccupancyGridRelationAttributeValue& other);

    OccupancyGridRelationAttributeValue(OccupancyGridRelationAttributeValue&& other);
    OccupancyGridRelationAttributeValue& operator=(OccupancyGridRelationAttributeValue&& other);

    OccupancyGridRelationAttributeValue(::zserio::PropagateAllocatorT,
            const OccupancyGridRelationAttributeValue& other, const allocator_type& allocator);

    void initialize(
            ::nds::localization::attributes::OccupancyGridRelationAttributeType type_);
    bool isInitialized() const;

    ChoiceTag choiceTag() const;

    ::nds::localization::attributes::OccupancyGridRelationAttributeType getType() const;

    ::nds::localization::types::OccupancyGridId getId() const;
    void setId(::nds::localization::types::OccupancyGridId id_);
    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const OccupancyGridRelationAttributeValue& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::zserio::AnyHolder<> readObject(::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::AnyHolder<> readObject(ZserioPackingContext& context, ::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::AnyHolder<> copyObject(const allocator_type& allocator) const;

    ::nds::localization::attributes::OccupancyGridRelationAttributeType m_type_;
    bool m_isInitialized;
    ::zserio::AnyHolder<> m_objectChoice;
};

} // namespace attributes
} // namespace localization
} // namespace nds

#endif // NDS_LOCALIZATION_ATTRIBUTES_OCCUPANCY_GRID_RELATION_ATTRIBUTE_VALUE_H
