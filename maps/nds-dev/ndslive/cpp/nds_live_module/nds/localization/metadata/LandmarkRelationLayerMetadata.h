/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LOCALIZATION_METADATA_LANDMARK_RELATION_LAYER_METADATA_H
#define NDS_LOCALIZATION_METADATA_LANDMARK_RELATION_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <memory>

namespace nds
{
namespace localization
{
namespace metadata
{

class LandmarkRelationLayerMetadata
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    LandmarkRelationLayerMetadata() noexcept :
            LandmarkRelationLayerMetadata(allocator_type())
    {}

    explicit LandmarkRelationLayerMetadata(const allocator_type& allocator) noexcept;

    explicit LandmarkRelationLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~LandmarkRelationLayerMetadata() = default;

    LandmarkRelationLayerMetadata(const LandmarkRelationLayerMetadata&) = default;
    LandmarkRelationLayerMetadata& operator=(const LandmarkRelationLayerMetadata&) = default;

    LandmarkRelationLayerMetadata(LandmarkRelationLayerMetadata&&) = default;
    LandmarkRelationLayerMetadata& operator=(LandmarkRelationLayerMetadata&&) = default;

    LandmarkRelationLayerMetadata(::zserio::PropagateAllocatorT,
            const LandmarkRelationLayerMetadata& other, const allocator_type& allocator);

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const LandmarkRelationLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
};

} // namespace metadata
} // namespace localization
} // namespace nds

#endif // NDS_LOCALIZATION_METADATA_LANDMARK_RELATION_LAYER_METADATA_H
