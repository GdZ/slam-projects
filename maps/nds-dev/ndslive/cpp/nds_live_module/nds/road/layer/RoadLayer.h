/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_ROAD_LAYER_ROAD_LAYER_H
#define NDS_ROAD_LAYER_ROAD_LAYER_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/road/road/IntersectionList.h>
#include <nds/road/road/RoadList.h>
#include <nds/system/types/LayerType.h>

namespace nds
{
namespace road
{
namespace layer
{

class RoadLayer
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getCoordShift()
        {
            return m_coordShift_;
        }

        ::nds::road::road::RoadList::ZserioPackingContext& getRoadList()
        {
            return m_roadList_;
        }

        ::nds::road::road::IntersectionList::ZserioPackingContext& getIntersectionList()
        {
            return m_intersectionList_;
        }

    private:
        ::zserio::DeltaContext m_coordShift_;
        ::nds::road::road::RoadList::ZserioPackingContext m_roadList_;
        ::nds::road::road::IntersectionList::ZserioPackingContext m_intersectionList_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    RoadLayer() noexcept :
            RoadLayer(allocator_type())
    {}

    explicit RoadLayer(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_roadList = ::nds::road::road::RoadList,
            typename ZSERIO_T_intersectionList = ::nds::road::road::IntersectionList>
    RoadLayer(
            ::nds::core::geometry::CoordShift coordShift_,
            ZSERIO_T_roadList&& roadList_,
            ZSERIO_T_intersectionList&& intersectionList_,
            const allocator_type& allocator = allocator_type()) :
            RoadLayer(allocator)
    {
        m_coordShift_ = coordShift_;
        m_roadList_ = ::std::forward<ZSERIO_T_roadList>(roadList_);
        m_intersectionList_ = ::std::forward<ZSERIO_T_intersectionList>(intersectionList_);
    }

    explicit RoadLayer(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit RoadLayer(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~RoadLayer() = default;

    RoadLayer(const RoadLayer& other);
    RoadLayer& operator=(const RoadLayer& other);

    RoadLayer(RoadLayer&& other);
    RoadLayer& operator=(RoadLayer&& other);

    RoadLayer(::zserio::PropagateAllocatorT,
            const RoadLayer& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::core::geometry::CoordShift getCoordShift() const;
    void setCoordShift(::nds::core::geometry::CoordShift coordShift_);

    const ::nds::road::road::RoadList& getRoadList() const;
    ::nds::road::road::RoadList& getRoadList();
    void setRoadList(const ::nds::road::road::RoadList& roadList_);
    void setRoadList(::nds::road::road::RoadList&& roadList_);

    const ::nds::road::road::IntersectionList& getIntersectionList() const;
    ::nds::road::road::IntersectionList& getIntersectionList();
    void setIntersectionList(const ::nds::road::road::IntersectionList& intersectionList_);
    void setIntersectionList(::nds::road::road::IntersectionList&& intersectionList_);

    ::nds::system::types::LayerType funcGetLayerType() const;

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const RoadLayer& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::core::geometry::CoordShift readCoordShift(::zserio::BitStreamReader& in);
    ::nds::core::geometry::CoordShift readCoordShift(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::road::road::RoadList readRoadList(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::road::road::RoadList readRoadList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::road::road::IntersectionList readIntersectionList(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::road::road::IntersectionList readIntersectionList(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::core::geometry::CoordShift m_coordShift_;
    ::nds::road::road::RoadList m_roadList_;
    ::nds::road::road::IntersectionList m_intersectionList_;
};

} // namespace layer
} // namespace road
} // namespace nds

#endif // NDS_ROAD_LAYER_ROAD_LAYER_H
