/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_METADATA_POI_ATTRIBUTE_LAYER_METADATA_H
#define NDS_POI_METADATA_POI_ATTRIBUTE_LAYER_METADATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/ArrayTraits.h>

#include <nds/core/language/AvailableLanguages.h>
#include <nds/poi/instantiations/PoiAttributeMetadata.h>
#include <nds/poi/metadata/AttributeValueIconMap.h>
#include <nds/poi/metadata/PoiAttributeLayerContent.h>

namespace nds
{
namespace poi
{
namespace metadata
{

class PoiAttributeLayerMetadata
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getContent()
        {
            return m_content_;
        }

        ::nds::poi::metadata::AttributeValueIconMap::ZserioPackingContext& getAttributeValueIconMap()
        {
            return m_attributeValueIconMap_;
        }

        ::nds::poi::instantiations::PoiAttributeMetadata::ZserioPackingContext& getPoiAttributeMetadata()
        {
            return m_poiAttributeMetadata_;
        }

        ::nds::core::language::AvailableLanguages::ZserioPackingContext& getAvailableLanguages()
        {
            return m_availableLanguages_;
        }

    private:
        ::zserio::DeltaContext m_content_;
        ::nds::poi::metadata::AttributeValueIconMap::ZserioPackingContext m_attributeValueIconMap_;
        ::nds::poi::instantiations::PoiAttributeMetadata::ZserioPackingContext m_poiAttributeMetadata_;
        ::nds::core::language::AvailableLanguages::ZserioPackingContext m_availableLanguages_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    PoiAttributeLayerMetadata() noexcept :
            PoiAttributeLayerMetadata(allocator_type())
    {}

    explicit PoiAttributeLayerMetadata(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_attributeValueIconMap = ::nds::poi::metadata::AttributeValueIconMap,
            typename ZSERIO_T_poiAttributeMetadata = ::nds::poi::instantiations::PoiAttributeMetadata,
            typename ZSERIO_T_availableLanguages = ::nds::core::language::AvailableLanguages>
    PoiAttributeLayerMetadata(
            ::nds::poi::metadata::PoiAttributeLayerContent content_,
            ZSERIO_T_attributeValueIconMap&& attributeValueIconMap_,
            ZSERIO_T_poiAttributeMetadata&& poiAttributeMetadata_,
            ZSERIO_T_availableLanguages&& availableLanguages_,
            bool globalIconSetReferences_,
            const allocator_type& allocator = allocator_type()) :
            PoiAttributeLayerMetadata(allocator)
    {
        m_content_ = content_;
        m_attributeValueIconMap_ = ::std::forward<ZSERIO_T_attributeValueIconMap>(attributeValueIconMap_);
        m_poiAttributeMetadata_ = ::std::forward<ZSERIO_T_poiAttributeMetadata>(poiAttributeMetadata_);
        m_availableLanguages_ = ::std::forward<ZSERIO_T_availableLanguages>(availableLanguages_);
        m_globalIconSetReferences_ = globalIconSetReferences_;
    }

    explicit PoiAttributeLayerMetadata(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit PoiAttributeLayerMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~PoiAttributeLayerMetadata() = default;

    PoiAttributeLayerMetadata(const PoiAttributeLayerMetadata&) = default;
    PoiAttributeLayerMetadata& operator=(const PoiAttributeLayerMetadata&) = default;

    PoiAttributeLayerMetadata(PoiAttributeLayerMetadata&&) = default;
    PoiAttributeLayerMetadata& operator=(PoiAttributeLayerMetadata&&) = default;

    PoiAttributeLayerMetadata(::zserio::PropagateAllocatorT,
            const PoiAttributeLayerMetadata& other, const allocator_type& allocator);

    ::nds::poi::metadata::PoiAttributeLayerContent getContent() const;
    void setContent(::nds::poi::metadata::PoiAttributeLayerContent content_);

    const ::nds::poi::metadata::AttributeValueIconMap& getAttributeValueIconMap() const;
    ::nds::poi::metadata::AttributeValueIconMap& getAttributeValueIconMap();
    void setAttributeValueIconMap(const ::nds::poi::metadata::AttributeValueIconMap& attributeValueIconMap_);
    void setAttributeValueIconMap(::nds::poi::metadata::AttributeValueIconMap&& attributeValueIconMap_);

    const ::nds::poi::instantiations::PoiAttributeMetadata& getPoiAttributeMetadata() const;
    ::nds::poi::instantiations::PoiAttributeMetadata& getPoiAttributeMetadata();
    void setPoiAttributeMetadata(const ::nds::poi::instantiations::PoiAttributeMetadata& poiAttributeMetadata_);
    void setPoiAttributeMetadata(::nds::poi::instantiations::PoiAttributeMetadata&& poiAttributeMetadata_);

    const ::nds::core::language::AvailableLanguages& getAvailableLanguages() const;
    ::nds::core::language::AvailableLanguages& getAvailableLanguages();
    void setAvailableLanguages(const ::nds::core::language::AvailableLanguages& availableLanguages_);
    void setAvailableLanguages(::nds::core::language::AvailableLanguages&& availableLanguages_);

    bool getGlobalIconSetReferences() const;
    void setGlobalIconSetReferences(bool globalIconSetReferences_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const PoiAttributeLayerMetadata& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::poi::metadata::PoiAttributeLayerContent readContent(::zserio::BitStreamReader& in);
    ::nds::poi::metadata::PoiAttributeLayerContent readContent(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::poi::metadata::AttributeValueIconMap readAttributeValueIconMap(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::poi::metadata::AttributeValueIconMap readAttributeValueIconMap(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::poi::instantiations::PoiAttributeMetadata readPoiAttributeMetadata(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::poi::instantiations::PoiAttributeMetadata readPoiAttributeMetadata(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::core::language::AvailableLanguages readAvailableLanguages(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::language::AvailableLanguages readAvailableLanguages(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    bool readGlobalIconSetReferences(::zserio::BitStreamReader& in);

    ::nds::poi::metadata::PoiAttributeLayerContent m_content_;
    ::nds::poi::metadata::AttributeValueIconMap m_attributeValueIconMap_;
    ::nds::poi::instantiations::PoiAttributeMetadata m_poiAttributeMetadata_;
    ::nds::core::language::AvailableLanguages m_availableLanguages_;
    bool m_globalIconSetReferences_;
};

} // namespace metadata
} // namespace poi
} // namespace nds

#endif // NDS_POI_METADATA_POI_ATTRIBUTE_LAYER_METADATA_H
