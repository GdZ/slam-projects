/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_METADATA_ATTRIBUTE_VALUE_ICON_MAP_H
#define NDS_POI_METADATA_ATTRIBUTE_VALUE_ICON_MAP_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/poi/attributes/PoiAttributeType.h>
#include <nds/poi/types/PoiAttributeIconSetReference.h>

namespace nds
{
namespace poi
{
namespace metadata
{

class AttributeValueIconMap
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumEntries()
        {
            return m_numEntries_;
        }

    private:
        ::zserio::DeltaContext m_numEntries_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    AttributeValueIconMap() noexcept :
            AttributeValueIconMap(allocator_type())
    {}

    explicit AttributeValueIconMap(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_type = ::zserio::vector<::nds::poi::attributes::PoiAttributeType>,
            typename ZSERIO_T_enumValue = ::zserio::vector<uint32_t>,
            typename ZSERIO_T_iconSetReference = ::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>>
    AttributeValueIconMap(
            uint32_t numEntries_,
            ZSERIO_T_type&& type_,
            ZSERIO_T_enumValue&& enumValue_,
            ZSERIO_T_iconSetReference&& iconSetReference_,
            const allocator_type& allocator = allocator_type()) :
            AttributeValueIconMap(allocator)
    {
        m_numEntries_ = numEntries_;
        m_type_ = ZserioArrayType_type(::std::forward<ZSERIO_T_type>(type_));
        m_enumValue_ = ZserioArrayType_enumValue(::std::forward<ZSERIO_T_enumValue>(enumValue_));
        m_iconSetReference_ = ZserioArrayType_iconSetReference(::std::forward<ZSERIO_T_iconSetReference>(iconSetReference_));
    }

    explicit AttributeValueIconMap(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit AttributeValueIconMap(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~AttributeValueIconMap() = default;

    AttributeValueIconMap(const AttributeValueIconMap&) = default;
    AttributeValueIconMap& operator=(const AttributeValueIconMap&) = default;

    AttributeValueIconMap(AttributeValueIconMap&&) = default;
    AttributeValueIconMap& operator=(AttributeValueIconMap&&) = default;

    AttributeValueIconMap(::zserio::PropagateAllocatorT,
            const AttributeValueIconMap& other, const allocator_type& allocator);

    uint32_t getNumEntries() const;
    void setNumEntries(uint32_t numEntries_);

    const ::zserio::vector<::nds::poi::attributes::PoiAttributeType>& getType() const;
    ::zserio::vector<::nds::poi::attributes::PoiAttributeType>& getType();
    void setType(const ::zserio::vector<::nds::poi::attributes::PoiAttributeType>& type_);
    void setType(::zserio::vector<::nds::poi::attributes::PoiAttributeType>&& type_);

    const ::zserio::vector<uint32_t>& getEnumValue() const;
    ::zserio::vector<uint32_t>& getEnumValue();
    void setEnumValue(const ::zserio::vector<uint32_t>& enumValue_);
    void setEnumValue(::zserio::vector<uint32_t>&& enumValue_);

    const ::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>& getIconSetReference() const;
    ::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>& getIconSetReference();
    void setIconSetReference(const ::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>& iconSetReference_);
    void setIconSetReference(::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>&& iconSetReference_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const AttributeValueIconMap& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    using ZserioArrayType_type = ::zserio::Array<::zserio::vector<::nds::poi::attributes::PoiAttributeType>, ::zserio::EnumArrayTraits<::nds::poi::attributes::PoiAttributeType>, ::zserio::ArrayType::NORMAL>;
    using ZserioArrayType_enumValue = ::zserio::Array<::zserio::vector<uint32_t>, ::zserio::VarIntNNArrayTraits<uint32_t>, ::zserio::ArrayType::NORMAL>;
    using ZserioArrayType_iconSetReference = ::zserio::Array<::zserio::vector<::nds::poi::types::PoiAttributeIconSetReference>, ::zserio::VarIntArrayTraits<::nds::poi::types::PoiAttributeIconSetReference>, ::zserio::ArrayType::NORMAL>;

    uint32_t readNumEntries(::zserio::BitStreamReader& in);
    uint32_t readNumEntries(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_type readType(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_type readType(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_enumValue readEnumValue(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_enumValue readEnumValue(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_iconSetReference readIconSetReference(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_iconSetReference readIconSetReference(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint32_t m_numEntries_;
    ZserioArrayType_type m_type_;
    ZserioArrayType_enumValue m_enumValue_;
    ZserioArrayType_iconSetReference m_iconSetReference_;
};

} // namespace metadata
} // namespace poi
} // namespace nds

#endif // NDS_POI_METADATA_ATTRIBUTE_VALUE_ICON_MAP_H
