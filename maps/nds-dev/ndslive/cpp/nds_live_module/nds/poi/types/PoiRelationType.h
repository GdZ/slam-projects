/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_TYPES_POI_RELATION_TYPE_H
#define NDS_POI_TYPES_POI_RELATION_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace poi
{
namespace types
{

enum class PoiRelationType : uint8_t
{
    PART = UINT8_C(0),
    ACCESS = UINT8_C(1),
    ACTIVATION = UINT8_C(2),
    LOGICAL_ACCESS = UINT8_C(3),
    GUIDANCE_POINT = UINT8_C(4),
    CONNECTED = UINT8_C(5),
    PREFERRED = UINT8_C(6)
};

} // namespace types
} // namespace poi
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for PoiRelationType enumeration.
template <>
struct EnumTraits<::nds::poi::types::PoiRelationType>
{
    static constexpr ::std::array<const char*, 7> names =
    {{
        "PART",
        "ACCESS",
        "ACTIVATION",
        "LOGICAL_ACCESS",
        "GUIDANCE_POINT",
        "CONNECTED",
        "PREFERRED"
    }};

    static constexpr ::std::array<::nds::poi::types::PoiRelationType, 7> values =
    {{
        ::nds::poi::types::PoiRelationType::PART,
        ::nds::poi::types::PoiRelationType::ACCESS,
        ::nds::poi::types::PoiRelationType::ACTIVATION,
        ::nds::poi::types::PoiRelationType::LOGICAL_ACCESS,
        ::nds::poi::types::PoiRelationType::GUIDANCE_POINT,
        ::nds::poi::types::PoiRelationType::CONNECTED,
        ::nds::poi::types::PoiRelationType::PREFERRED
    }};

    static constexpr const char* enumName = "PoiRelationType";
};

template <>
size_t enumToOrdinal<::nds::poi::types::PoiRelationType>(::nds::poi::types::PoiRelationType value);

template <>
::nds::poi::types::PoiRelationType valueToEnum<::nds::poi::types::PoiRelationType>(
        typename ::std::underlying_type<::nds::poi::types::PoiRelationType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::poi::types::PoiRelationType>(::nds::poi::types::PoiRelationType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::poi::types::PoiRelationType>(::zserio::DeltaContext& context, ::nds::poi::types::PoiRelationType value);

template <>
size_t bitSizeOf<::nds::poi::types::PoiRelationType>(::nds::poi::types::PoiRelationType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::poi::types::PoiRelationType>(::zserio::DeltaContext& context, ::nds::poi::types::PoiRelationType value);

template <>
size_t initializeOffsets<::nds::poi::types::PoiRelationType>(size_t bitPosition, ::nds::poi::types::PoiRelationType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::poi::types::PoiRelationType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::poi::types::PoiRelationType value);

template <>
::nds::poi::types::PoiRelationType read<::nds::poi::types::PoiRelationType>(::zserio::BitStreamReader& in);

template <>
::nds::poi::types::PoiRelationType read<::nds::poi::types::PoiRelationType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::poi::types::PoiRelationType>(::zserio::BitStreamWriter& out, ::nds::poi::types::PoiRelationType value);

template <>
void write<::zserio::DeltaContext, ::nds::poi::types::PoiRelationType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::poi::types::PoiRelationType value);

} // namespace zserio

#endif // NDS_POI_TYPES_POI_RELATION_TYPE_H
