/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_TYPES_EV_CHARGING_STATION_DETAILS_H
#define NDS_POI_TYPES_EV_CHARGING_STATION_DETAILS_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/core/vehicle/Watt.h>
#include <nds/poi/types/EvConnector.h>

namespace nds
{
namespace poi
{
namespace types
{

class EvChargingStationDetails
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getTotalPower()
        {
            return m_totalPower_;
        }

        ::zserio::DeltaContext& getNumConnectors()
        {
            return m_numConnectors_;
        }

    private:
        ::zserio::DeltaContext m_totalPower_;
        ::zserio::DeltaContext m_numConnectors_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    EvChargingStationDetails() noexcept :
            EvChargingStationDetails(allocator_type())
    {}

    explicit EvChargingStationDetails(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_connectors = ::zserio::vector<::nds::poi::types::EvConnector>,
            typename ZSERIO_T_chargers = ::zserio::vector<uint16_t>>
    EvChargingStationDetails(
            ::nds::core::vehicle::Watt totalPower_,
            uint32_t numConnectors_,
            ZSERIO_T_connectors&& connectors_,
            ZSERIO_T_chargers&& chargers_,
            const allocator_type& allocator = allocator_type()) :
            EvChargingStationDetails(allocator)
    {
        m_totalPower_ = totalPower_;
        m_numConnectors_ = numConnectors_;
        m_connectors_ = ZserioArrayType_connectors(::std::forward<ZSERIO_T_connectors>(connectors_));
        m_chargers_ = ZserioArrayType_chargers(::std::forward<ZSERIO_T_chargers>(chargers_));
    }

    explicit EvChargingStationDetails(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit EvChargingStationDetails(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~EvChargingStationDetails() = default;

    EvChargingStationDetails(const EvChargingStationDetails&) = default;
    EvChargingStationDetails& operator=(const EvChargingStationDetails&) = default;

    EvChargingStationDetails(EvChargingStationDetails&&) = default;
    EvChargingStationDetails& operator=(EvChargingStationDetails&&) = default;

    EvChargingStationDetails(::zserio::PropagateAllocatorT,
            const EvChargingStationDetails& other, const allocator_type& allocator);

    ::nds::core::vehicle::Watt getTotalPower() const;
    void setTotalPower(::nds::core::vehicle::Watt totalPower_);

    uint32_t getNumConnectors() const;
    void setNumConnectors(uint32_t numConnectors_);

    const ::zserio::vector<::nds::poi::types::EvConnector>& getConnectors() const;
    ::zserio::vector<::nds::poi::types::EvConnector>& getConnectors();
    void setConnectors(const ::zserio::vector<::nds::poi::types::EvConnector>& connectors_);
    void setConnectors(::zserio::vector<::nds::poi::types::EvConnector>&& connectors_);

    const ::zserio::vector<uint16_t>& getChargers() const;
    ::zserio::vector<uint16_t>& getChargers();
    void setChargers(const ::zserio::vector<uint16_t>& chargers_);
    void setChargers(::zserio::vector<uint16_t>&& chargers_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const EvChargingStationDetails& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_connectors
    {
    public:
        using OwnerType = EvChargingStationDetails;

        static void create(EvChargingStationDetails& owner,
                ::zserio::vector<::nds::poi::types::EvConnector>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(EvChargingStationDetails& owner,
                ::zserio::vector<::nds::poi::types::EvConnector>& array,
                ::nds::poi::types::EvConnector::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_connectors = ::zserio::Array<::zserio::vector<::nds::poi::types::EvConnector>, ::zserio::ObjectArrayTraits<::nds::poi::types::EvConnector, ZserioElementFactory_connectors>, ::zserio::ArrayType::NORMAL>;
    using ZserioArrayType_chargers = ::zserio::Array<::zserio::vector<uint16_t>, ::zserio::VarIntNNArrayTraits<uint16_t>, ::zserio::ArrayType::NORMAL>;

    ::nds::core::vehicle::Watt readTotalPower(::zserio::BitStreamReader& in);
    ::nds::core::vehicle::Watt readTotalPower(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    uint32_t readNumConnectors(::zserio::BitStreamReader& in);
    uint32_t readNumConnectors(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_connectors readConnectors(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_connectors readConnectors(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ZserioArrayType_chargers readChargers(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_chargers readChargers(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    ::nds::core::vehicle::Watt m_totalPower_;
    uint32_t m_numConnectors_;
    ZserioArrayType_connectors m_connectors_;
    ZserioArrayType_chargers m_chargers_;
};

} // namespace types
} // namespace poi
} // namespace nds

#endif // NDS_POI_TYPES_EV_CHARGING_STATION_DETAILS_H
