/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_TYPES_POI_RELATION_H
#define NDS_POI_TYPES_POI_RELATION_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>

#include <nds/poi/reference/types/PoiReference.h>
#include <nds/poi/reference/types/PoiReferenceIndirect.h>
#include <nds/poi/types/PoiRelationType.h>

namespace nds
{
namespace poi
{
namespace types
{

class PoiRelation
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getRelatedPoi()
        {
            return m_relatedPoi_;
        }

        ::nds::poi::reference::types::PoiReferenceIndirect::ZserioPackingContext& getExtRelatedPoi()
        {
            return m_extRelatedPoi_;
        }

        ::zserio::DeltaContext& getType()
        {
            return m_type_;
        }

    private:
        ::zserio::DeltaContext m_relatedPoi_;
        ::nds::poi::reference::types::PoiReferenceIndirect::ZserioPackingContext m_extRelatedPoi_;
        ::zserio::DeltaContext m_type_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    PoiRelation() noexcept :
            PoiRelation(allocator_type())
    {}

    explicit PoiRelation(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_relatedPoi = ::nds::poi::reference::types::PoiReference,
            typename ZSERIO_T_extRelatedPoi = ::nds::poi::reference::types::PoiReferenceIndirect>
    PoiRelation(
            bool inSameTile_,
            ZSERIO_T_relatedPoi&& relatedPoi_,
            ZSERIO_T_extRelatedPoi&& extRelatedPoi_,
            ::nds::poi::types::PoiRelationType type_,
            const allocator_type& allocator = allocator_type()) :
            PoiRelation(allocator)
    {
        m_inSameTile_ = inSameTile_;
        m_relatedPoi_ = ::std::forward<ZSERIO_T_relatedPoi>(relatedPoi_);
        m_extRelatedPoi_ = ::std::forward<ZSERIO_T_extRelatedPoi>(extRelatedPoi_);
        m_type_ = type_;
    }

    explicit PoiRelation(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit PoiRelation(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~PoiRelation() = default;

    PoiRelation(const PoiRelation&) = default;
    PoiRelation& operator=(const PoiRelation&) = default;

    PoiRelation(PoiRelation&&) = default;
    PoiRelation& operator=(PoiRelation&&) = default;

    PoiRelation(::zserio::PropagateAllocatorT,
            const PoiRelation& other, const allocator_type& allocator);

    void initializeChildren();

    bool getInSameTile() const;
    void setInSameTile(bool inSameTile_);

    ::nds::poi::reference::types::PoiReference getRelatedPoi() const;
    void setRelatedPoi(::nds::poi::reference::types::PoiReference relatedPoi_);
    bool isRelatedPoiUsed() const;
    bool isRelatedPoiSet() const;
    void resetRelatedPoi();

    const ::nds::poi::reference::types::PoiReferenceIndirect& getExtRelatedPoi() const;
    ::nds::poi::reference::types::PoiReferenceIndirect& getExtRelatedPoi();
    void setExtRelatedPoi(const ::nds::poi::reference::types::PoiReferenceIndirect& extRelatedPoi_);
    void setExtRelatedPoi(::nds::poi::reference::types::PoiReferenceIndirect&& extRelatedPoi_);
    bool isExtRelatedPoiUsed() const;
    bool isExtRelatedPoiSet() const;
    void resetExtRelatedPoi();

    ::nds::poi::types::PoiRelationType getType() const;
    void setType(::nds::poi::types::PoiRelationType type_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const PoiRelation& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    bool readInSameTile(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReference> readRelatedPoi(::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReference> readRelatedPoi(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReferenceIndirect> readExtRelatedPoi(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReferenceIndirect> readExtRelatedPoi(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::nds::poi::types::PoiRelationType readType(::zserio::BitStreamReader& in);
    ::nds::poi::types::PoiRelationType readType(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);

    bool m_inSameTile_;
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReference> m_relatedPoi_;
    ::zserio::InplaceOptionalHolder<::nds::poi::reference::types::PoiReferenceIndirect> m_extRelatedPoi_;
    ::nds::poi::types::PoiRelationType m_type_;
};

} // namespace types
} // namespace poi
} // namespace nds

#endif // NDS_POI_TYPES_POI_RELATION_H
