/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_TYPES_ACCEPTED_PAYMENT_METHODS_H
#define NDS_POI_TYPES_ACCEPTED_PAYMENT_METHODS_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/Array.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>
#include <zserio/Vector.h>

#include <nds/poi/types/PaymentMethod.h>

namespace nds
{
namespace poi
{
namespace types
{

class AcceptedPaymentMethods
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getNumMethods()
        {
            return m_numMethods_;
        }

    private:
        ::zserio::DeltaContext m_numMethods_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    AcceptedPaymentMethods() noexcept :
            AcceptedPaymentMethods(allocator_type())
    {}

    explicit AcceptedPaymentMethods(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_methods = ::zserio::vector<::nds::poi::types::PaymentMethod>>
    AcceptedPaymentMethods(
            uint8_t numMethods_,
            ZSERIO_T_methods&& methods_,
            const allocator_type& allocator = allocator_type()) :
            AcceptedPaymentMethods(allocator)
    {
        m_numMethods_ = numMethods_;
        m_methods_ = ZserioArrayType_methods(::std::forward<ZSERIO_T_methods>(methods_));
    }

    explicit AcceptedPaymentMethods(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit AcceptedPaymentMethods(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~AcceptedPaymentMethods() = default;

    AcceptedPaymentMethods(const AcceptedPaymentMethods&) = default;
    AcceptedPaymentMethods& operator=(const AcceptedPaymentMethods&) = default;

    AcceptedPaymentMethods(AcceptedPaymentMethods&&) = default;
    AcceptedPaymentMethods& operator=(AcceptedPaymentMethods&&) = default;

    AcceptedPaymentMethods(::zserio::PropagateAllocatorT,
            const AcceptedPaymentMethods& other, const allocator_type& allocator);

    uint8_t getNumMethods() const;
    void setNumMethods(uint8_t numMethods_);

    const ::zserio::vector<::nds::poi::types::PaymentMethod>& getMethods() const;
    ::zserio::vector<::nds::poi::types::PaymentMethod>& getMethods();
    void setMethods(const ::zserio::vector<::nds::poi::types::PaymentMethod>& methods_);
    void setMethods(::zserio::vector<::nds::poi::types::PaymentMethod>&& methods_);

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const AcceptedPaymentMethods& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    class ZserioElementFactory_methods
    {
    public:
        using OwnerType = AcceptedPaymentMethods;

        static void create(AcceptedPaymentMethods& owner,
                ::zserio::vector<::nds::poi::types::PaymentMethod>& array,
                ::zserio::BitStreamReader& in, size_t index);

        static void create(AcceptedPaymentMethods& owner,
                ::zserio::vector<::nds::poi::types::PaymentMethod>& array,
                ::nds::poi::types::PaymentMethod::ZserioPackingContext& context,
                ::zserio::BitStreamReader& in, size_t index);
    };

    using ZserioArrayType_methods = ::zserio::Array<::zserio::vector<::nds::poi::types::PaymentMethod>, ::zserio::ObjectArrayTraits<::nds::poi::types::PaymentMethod, ZserioElementFactory_methods>, ::zserio::ArrayType::NORMAL>;

    uint8_t readNumMethods(::zserio::BitStreamReader& in);
    uint8_t readNumMethods(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ZserioArrayType_methods readMethods(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ZserioArrayType_methods readMethods(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);

    uint8_t m_numMethods_;
    ZserioArrayType_methods m_methods_;
};

} // namespace types
} // namespace poi
} // namespace nds

#endif // NDS_POI_TYPES_ACCEPTED_PAYMENT_METHODS_H
