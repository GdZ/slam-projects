/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_TYPES_STAR_RATING_H
#define NDS_POI_TYPES_STAR_RATING_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace poi
{
namespace types
{

enum class StarRating : uint8_t
{
    RATING_1_STAR = UINT8_C(0),
    RATING_2_STAR = UINT8_C(1),
    RATING_3_STAR = UINT8_C(2),
    RATING_4_STAR = UINT8_C(3),
    RATING_5_STAR = UINT8_C(4),
    RATING_6_STAR = UINT8_C(5),
    RATING_7_STAR = UINT8_C(6)
};

} // namespace types
} // namespace poi
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for StarRating enumeration.
template <>
struct EnumTraits<::nds::poi::types::StarRating>
{
    static constexpr ::std::array<const char*, 7> names =
    {{
        "RATING_1_STAR",
        "RATING_2_STAR",
        "RATING_3_STAR",
        "RATING_4_STAR",
        "RATING_5_STAR",
        "RATING_6_STAR",
        "RATING_7_STAR"
    }};

    static constexpr ::std::array<::nds::poi::types::StarRating, 7> values =
    {{
        ::nds::poi::types::StarRating::RATING_1_STAR,
        ::nds::poi::types::StarRating::RATING_2_STAR,
        ::nds::poi::types::StarRating::RATING_3_STAR,
        ::nds::poi::types::StarRating::RATING_4_STAR,
        ::nds::poi::types::StarRating::RATING_5_STAR,
        ::nds::poi::types::StarRating::RATING_6_STAR,
        ::nds::poi::types::StarRating::RATING_7_STAR
    }};

    static constexpr const char* enumName = "StarRating";
};

template <>
size_t enumToOrdinal<::nds::poi::types::StarRating>(::nds::poi::types::StarRating value);

template <>
::nds::poi::types::StarRating valueToEnum<::nds::poi::types::StarRating>(
        typename ::std::underlying_type<::nds::poi::types::StarRating>::type rawValue);

template <>
uint32_t enumHashCode<::nds::poi::types::StarRating>(::nds::poi::types::StarRating value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::poi::types::StarRating>(::zserio::DeltaContext& context, ::nds::poi::types::StarRating value);

template <>
size_t bitSizeOf<::nds::poi::types::StarRating>(::nds::poi::types::StarRating value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::poi::types::StarRating>(::zserio::DeltaContext& context, ::nds::poi::types::StarRating value);

template <>
size_t initializeOffsets<::nds::poi::types::StarRating>(size_t bitPosition, ::nds::poi::types::StarRating value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::poi::types::StarRating>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::poi::types::StarRating value);

template <>
::nds::poi::types::StarRating read<::nds::poi::types::StarRating>(::zserio::BitStreamReader& in);

template <>
::nds::poi::types::StarRating read<::nds::poi::types::StarRating, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::poi::types::StarRating>(::zserio::BitStreamWriter& out, ::nds::poi::types::StarRating value);

template <>
void write<::zserio::DeltaContext, ::nds::poi::types::StarRating>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::poi::types::StarRating value);

} // namespace zserio

#endif // NDS_POI_TYPES_STAR_RATING_H
