/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_POI_REFERENCE_TYPES_POI_REFERENCE_INDIRECT_H
#define NDS_POI_REFERENCE_TYPES_POI_REFERENCE_INDIRECT_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <zserio/DeltaContext.h>
#include <memory>
#include <zserio/OptionalHolder.h>
#include <zserio/ArrayTraits.h>
#include <zserio/String.h>

#include <nds/core/geometry/CoordShift.h>
#include <nds/core/geometry/Position2D.h>
#include <nds/core/location/RoadLocationPath.h>
#include <nds/poi/reference/types/PoiStandardCategory.h>

namespace nds
{
namespace poi
{
namespace reference
{
namespace types
{

class PoiReferenceIndirect
{
public:
    class ZserioPackingContext
    {
    public:
        ::zserio::DeltaContext& getStandardCategory()
        {
            return m_standardCategory_;
        }

        ::nds::core::geometry::Position2D::ZserioPackingContext& getPosition()
        {
            return m_position_;
        }

        ::nds::core::location::RoadLocationPath::ZserioPackingContext& getRoadLocationPath()
        {
            return m_roadLocationPath_;
        }

    private:
        ::zserio::DeltaContext m_standardCategory_;
        ::nds::core::geometry::Position2D::ZserioPackingContext m_position_;
        ::nds::core::location::RoadLocationPath::ZserioPackingContext m_roadLocationPath_;
    };

    using allocator_type = ::std::allocator<uint8_t>;

    PoiReferenceIndirect() noexcept :
            PoiReferenceIndirect(allocator_type())
    {}

    explicit PoiReferenceIndirect(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_position = ::nds::core::geometry::Position2D,
            typename ZSERIO_T_roadLocationPath = ::nds::core::location::RoadLocationPath,
            typename ZSERIO_T_name = ::zserio::string<>>
    PoiReferenceIndirect(
            ::nds::poi::reference::types::PoiStandardCategory standardCategory_,
            ZSERIO_T_position&& position_,
            ZSERIO_T_roadLocationPath&& roadLocationPath_,
            ZSERIO_T_name&& name_,
            const allocator_type& allocator = allocator_type()) :
            PoiReferenceIndirect(allocator)
    {
        m_standardCategory_ = standardCategory_;
        m_position_ = ::std::forward<ZSERIO_T_position>(position_);
        m_roadLocationPath_ = ::std::forward<ZSERIO_T_roadLocationPath>(roadLocationPath_);
        m_name_ = ::std::forward<ZSERIO_T_name>(name_);
    }

    explicit PoiReferenceIndirect(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());
    explicit PoiReferenceIndirect(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~PoiReferenceIndirect() = default;

    PoiReferenceIndirect(const PoiReferenceIndirect& other);
    PoiReferenceIndirect& operator=(const PoiReferenceIndirect& other);

    PoiReferenceIndirect(PoiReferenceIndirect&& other);
    PoiReferenceIndirect& operator=(PoiReferenceIndirect&& other);

    PoiReferenceIndirect(::zserio::PropagateAllocatorT,
            const PoiReferenceIndirect& other, const allocator_type& allocator);

    void initializeChildren();

    ::nds::poi::reference::types::PoiStandardCategory getStandardCategory() const;
    void setStandardCategory(::nds::poi::reference::types::PoiStandardCategory standardCategory_);

    const ::nds::core::geometry::Position2D& getPosition() const;
    ::nds::core::geometry::Position2D& getPosition();
    void setPosition(const ::nds::core::geometry::Position2D& position_);
    void setPosition(::nds::core::geometry::Position2D&& position_);

    const ::nds::core::location::RoadLocationPath& getRoadLocationPath() const;
    ::nds::core::location::RoadLocationPath& getRoadLocationPath();
    void setRoadLocationPath(const ::nds::core::location::RoadLocationPath& roadLocationPath_);
    void setRoadLocationPath(::nds::core::location::RoadLocationPath&& roadLocationPath_);
    bool isRoadLocationPathUsed() const;
    bool isRoadLocationPathSet() const;
    void resetRoadLocationPath();

    const ::zserio::string<>& getName() const;
    ::zserio::string<>& getName();
    void setName(const ::zserio::string<>& name_);
    void setName(::zserio::string<>&& name_);
    bool isNameUsed() const;
    bool isNameSet() const;
    void resetName();

    void initPackingContext(ZserioPackingContext& context) const;

    size_t bitSizeOf(size_t bitPosition = 0) const;
    size_t bitSizeOf(ZserioPackingContext& context, size_t bitPosition) const;

    size_t initializeOffsets(size_t bitPosition = 0);
    size_t initializeOffsets(ZserioPackingContext& context, size_t bitPosition);

    bool operator==(const PoiReferenceIndirect& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;
    void write(ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const;

private:
    ::nds::poi::reference::types::PoiStandardCategory readStandardCategory(::zserio::BitStreamReader& in);
    ::nds::poi::reference::types::PoiStandardCategory readStandardCategory(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in);
    ::nds::core::geometry::Position2D readPosition(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::nds::core::geometry::Position2D readPosition(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::location::RoadLocationPath> readRoadLocationPath(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::nds::core::location::RoadLocationPath> readRoadLocationPath(ZserioPackingContext& context,
            ::zserio::BitStreamReader& in, const allocator_type& allocator);
    ::zserio::InplaceOptionalHolder<::zserio::string<>> readName(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    bool m_areChildrenInitialized;
    ::nds::poi::reference::types::PoiStandardCategory m_standardCategory_;
    ::nds::core::geometry::Position2D m_position_;
    ::zserio::InplaceOptionalHolder<::nds::core::location::RoadLocationPath> m_roadLocationPath_;
    ::zserio::InplaceOptionalHolder<::zserio::string<>> m_name_;
};

} // namespace types
} // namespace reference
} // namespace poi
} // namespace nds

#endif // NDS_POI_REFERENCE_TYPES_POI_REFERENCE_INDIRECT_H
