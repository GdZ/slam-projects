/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_SYSTEM_TYPES_EXTERN_DATA_H
#define NDS_SYSTEM_TYPES_EXTERN_DATA_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <zserio/Traits.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/AllocatorPropagatingCopy.h>
#include <memory>
#include <zserio/ArrayTraits.h>
#include <zserio/BitBuffer.h>

#include <nds/system/types/ExternDescriptor.h>

namespace nds
{
namespace system
{
namespace types
{

class ExternData
{
public:
    using allocator_type = ::std::allocator<uint8_t>;

    ExternData() noexcept :
            ExternData(allocator_type())
    {}

    explicit ExternData(const allocator_type& allocator) noexcept;

    template <typename ZSERIO_T_externDescriptor = ::nds::system::types::ExternDescriptor,
            typename ZSERIO_T_data = ::zserio::BitBuffer,
            ::zserio::is_field_constructor_enabled_t<ZSERIO_T_externDescriptor, ExternData, allocator_type> = 0>
    ExternData(
            ZSERIO_T_externDescriptor&& externDescriptor_,
            ZSERIO_T_data&& data_,
            const allocator_type& allocator = allocator_type()) :
            ExternData(allocator)
    {
        m_externDescriptor_ = ::std::forward<ZSERIO_T_externDescriptor>(externDescriptor_);
        m_data_ = ::std::forward<ZSERIO_T_data>(data_);
    }

    explicit ExternData(::zserio::BitStreamReader& in, const allocator_type& allocator = allocator_type());

    ~ExternData() = default;

    ExternData(const ExternData&) = default;
    ExternData& operator=(const ExternData&) = default;

    ExternData(ExternData&&) = default;
    ExternData& operator=(ExternData&&) = default;

    ExternData(::zserio::PropagateAllocatorT,
            const ExternData& other, const allocator_type& allocator);

    const ::nds::system::types::ExternDescriptor& getExternDescriptor() const;
    ::nds::system::types::ExternDescriptor& getExternDescriptor();
    void setExternDescriptor(const ::nds::system::types::ExternDescriptor& externDescriptor_);
    void setExternDescriptor(::nds::system::types::ExternDescriptor&& externDescriptor_);

    const ::zserio::BitBuffer& getData() const;
    ::zserio::BitBuffer& getData();
    void setData(const ::zserio::BitBuffer& data_);
    void setData(::zserio::BitBuffer&& data_);

    size_t bitSizeOf(size_t bitPosition = 0) const;

    size_t initializeOffsets(size_t bitPosition = 0);

    bool operator==(const ExternData& other) const;
    uint32_t hashCode() const;

    void write(::zserio::BitStreamWriter& out) const;

private:
    ::nds::system::types::ExternDescriptor readExternDescriptor(::zserio::BitStreamReader& in,
            const allocator_type& allocator);
    ::zserio::BitBuffer readData(::zserio::BitStreamReader& in,
            const allocator_type& allocator);

    ::nds::system::types::ExternDescriptor m_externDescriptor_;
    ::zserio::BitBuffer m_data_;
};

} // namespace types
} // namespace system
} // namespace nds

#endif // NDS_SYSTEM_TYPES_EXTERN_DATA_H
