/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>
#include <zserio/ArrayTraits.h>

#include <nds/venue/details/layer/ParkingFacilityAttributeLayer.h>
#include <nds/system/types/LayerType.h>
#include <nds/venue/details/metadata/ParkingFacilityAttributeLayerContent.h>

namespace nds
{
namespace venue
{
namespace details
{
namespace layer
{

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(const allocator_type&) noexcept :
        m_areChildrenInitialized(false),
        m_content_(::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent()),
        m_parkingFacilityAttributeMaps_(::zserio::NullOpt),
        m_parkingFacilityAttributeSets_(::zserio::NullOpt),
        m_parkingLevelAttributeMaps_(::zserio::NullOpt),
        m_parkingLevelAttributeSets_(::zserio::NullOpt),
        m_parkingSectionAttributeMaps_(::zserio::NullOpt),
        m_parkingSectionAttributeSets_(::zserio::NullOpt),
        m_parkingRowAttributeMaps_(::zserio::NullOpt),
        m_parkingRowAttributeSets_(::zserio::NullOpt),
        m_parkingSpotAttributeMaps_(::zserio::NullOpt),
        m_parkingSpotAttributeSets_(::zserio::NullOpt)
{
}

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(in)),
        m_parkingFacilityAttributeMaps_(readParkingFacilityAttributeMaps(in, allocator)),
        m_parkingFacilityAttributeSets_(readParkingFacilityAttributeSets(in, allocator)),
        m_parkingLevelAttributeMaps_(readParkingLevelAttributeMaps(in, allocator)),
        m_parkingLevelAttributeSets_(readParkingLevelAttributeSets(in, allocator)),
        m_parkingSectionAttributeMaps_(readParkingSectionAttributeMaps(in, allocator)),
        m_parkingSectionAttributeSets_(readParkingSectionAttributeSets(in, allocator)),
        m_parkingRowAttributeMaps_(readParkingRowAttributeMaps(in, allocator)),
        m_parkingRowAttributeSets_(readParkingRowAttributeSets(in, allocator)),
        m_parkingSpotAttributeMaps_(readParkingSpotAttributeMaps(in, allocator)),
        m_parkingSpotAttributeSets_(readParkingSpotAttributeSets(in, allocator))
{
}

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator) :
        m_areChildrenInitialized(true),
        m_content_(readContent(context, in)),
        m_parkingFacilityAttributeMaps_(readParkingFacilityAttributeMaps(context, in, allocator)),
        m_parkingFacilityAttributeSets_(readParkingFacilityAttributeSets(context, in, allocator)),
        m_parkingLevelAttributeMaps_(readParkingLevelAttributeMaps(context, in, allocator)),
        m_parkingLevelAttributeSets_(readParkingLevelAttributeSets(context, in, allocator)),
        m_parkingSectionAttributeMaps_(readParkingSectionAttributeMaps(context, in, allocator)),
        m_parkingSectionAttributeSets_(readParkingSectionAttributeSets(context, in, allocator)),
        m_parkingRowAttributeMaps_(readParkingRowAttributeMaps(context, in, allocator)),
        m_parkingRowAttributeSets_(readParkingRowAttributeSets(context, in, allocator)),
        m_parkingSpotAttributeMaps_(readParkingSpotAttributeMaps(context, in, allocator)),
        m_parkingSpotAttributeSets_(readParkingSpotAttributeSets(context, in, allocator))
{
}

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(const ParkingFacilityAttributeLayer& other) :
        m_content_(other.m_content_),
        m_parkingFacilityAttributeMaps_(other.m_parkingFacilityAttributeMaps_),
        m_parkingFacilityAttributeSets_(other.m_parkingFacilityAttributeSets_),
        m_parkingLevelAttributeMaps_(other.m_parkingLevelAttributeMaps_),
        m_parkingLevelAttributeSets_(other.m_parkingLevelAttributeSets_),
        m_parkingSectionAttributeMaps_(other.m_parkingSectionAttributeMaps_),
        m_parkingSectionAttributeSets_(other.m_parkingSectionAttributeSets_),
        m_parkingRowAttributeMaps_(other.m_parkingRowAttributeMaps_),
        m_parkingRowAttributeSets_(other.m_parkingRowAttributeSets_),
        m_parkingSpotAttributeMaps_(other.m_parkingSpotAttributeMaps_),
        m_parkingSpotAttributeSets_(other.m_parkingSpotAttributeSets_)
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

ParkingFacilityAttributeLayer& ParkingFacilityAttributeLayer::operator=(const ParkingFacilityAttributeLayer& other)
{
    m_content_ = other.m_content_;
    m_parkingFacilityAttributeMaps_ = other.m_parkingFacilityAttributeMaps_;
    m_parkingFacilityAttributeSets_ = other.m_parkingFacilityAttributeSets_;
    m_parkingLevelAttributeMaps_ = other.m_parkingLevelAttributeMaps_;
    m_parkingLevelAttributeSets_ = other.m_parkingLevelAttributeSets_;
    m_parkingSectionAttributeMaps_ = other.m_parkingSectionAttributeMaps_;
    m_parkingSectionAttributeSets_ = other.m_parkingSectionAttributeSets_;
    m_parkingRowAttributeMaps_ = other.m_parkingRowAttributeMaps_;
    m_parkingRowAttributeSets_ = other.m_parkingRowAttributeSets_;
    m_parkingSpotAttributeMaps_ = other.m_parkingSpotAttributeMaps_;
    m_parkingSpotAttributeSets_ = other.m_parkingSpotAttributeSets_;
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(ParkingFacilityAttributeLayer&& other) :
        m_content_(::std::move(other.m_content_)),
        m_parkingFacilityAttributeMaps_(::std::move(other.m_parkingFacilityAttributeMaps_)),
        m_parkingFacilityAttributeSets_(::std::move(other.m_parkingFacilityAttributeSets_)),
        m_parkingLevelAttributeMaps_(::std::move(other.m_parkingLevelAttributeMaps_)),
        m_parkingLevelAttributeSets_(::std::move(other.m_parkingLevelAttributeSets_)),
        m_parkingSectionAttributeMaps_(::std::move(other.m_parkingSectionAttributeMaps_)),
        m_parkingSectionAttributeSets_(::std::move(other.m_parkingSectionAttributeSets_)),
        m_parkingRowAttributeMaps_(::std::move(other.m_parkingRowAttributeMaps_)),
        m_parkingRowAttributeSets_(::std::move(other.m_parkingRowAttributeSets_)),
        m_parkingSpotAttributeMaps_(::std::move(other.m_parkingSpotAttributeMaps_)),
        m_parkingSpotAttributeSets_(::std::move(other.m_parkingSpotAttributeSets_))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

ParkingFacilityAttributeLayer& ParkingFacilityAttributeLayer::operator=(ParkingFacilityAttributeLayer&& other)
{
    m_content_ = ::std::move(other.m_content_);
    m_parkingFacilityAttributeMaps_ = ::std::move(other.m_parkingFacilityAttributeMaps_);
    m_parkingFacilityAttributeSets_ = ::std::move(other.m_parkingFacilityAttributeSets_);
    m_parkingLevelAttributeMaps_ = ::std::move(other.m_parkingLevelAttributeMaps_);
    m_parkingLevelAttributeSets_ = ::std::move(other.m_parkingLevelAttributeSets_);
    m_parkingSectionAttributeMaps_ = ::std::move(other.m_parkingSectionAttributeMaps_);
    m_parkingSectionAttributeSets_ = ::std::move(other.m_parkingSectionAttributeSets_);
    m_parkingRowAttributeMaps_ = ::std::move(other.m_parkingRowAttributeMaps_);
    m_parkingRowAttributeSets_ = ::std::move(other.m_parkingRowAttributeSets_);
    m_parkingSpotAttributeMaps_ = ::std::move(other.m_parkingSpotAttributeMaps_);
    m_parkingSpotAttributeSets_ = ::std::move(other.m_parkingSpotAttributeSets_);
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;

    return *this;
}

ParkingFacilityAttributeLayer::ParkingFacilityAttributeLayer(::zserio::PropagateAllocatorT,
        const ParkingFacilityAttributeLayer& other, const allocator_type& allocator) :
        m_content_(::zserio::allocatorPropagatingCopy(other.m_content_, allocator)),
        m_parkingFacilityAttributeMaps_(::zserio::allocatorPropagatingCopy(other.m_parkingFacilityAttributeMaps_, allocator)),
        m_parkingFacilityAttributeSets_(::zserio::allocatorPropagatingCopy(other.m_parkingFacilityAttributeSets_, allocator)),
        m_parkingLevelAttributeMaps_(::zserio::allocatorPropagatingCopy(other.m_parkingLevelAttributeMaps_, allocator)),
        m_parkingLevelAttributeSets_(::zserio::allocatorPropagatingCopy(other.m_parkingLevelAttributeSets_, allocator)),
        m_parkingSectionAttributeMaps_(::zserio::allocatorPropagatingCopy(other.m_parkingSectionAttributeMaps_, allocator)),
        m_parkingSectionAttributeSets_(::zserio::allocatorPropagatingCopy(other.m_parkingSectionAttributeSets_, allocator)),
        m_parkingRowAttributeMaps_(::zserio::allocatorPropagatingCopy(other.m_parkingRowAttributeMaps_, allocator)),
        m_parkingRowAttributeSets_(::zserio::allocatorPropagatingCopy(other.m_parkingRowAttributeSets_, allocator)),
        m_parkingSpotAttributeMaps_(::zserio::allocatorPropagatingCopy(other.m_parkingSpotAttributeMaps_, allocator)),
        m_parkingSpotAttributeSets_(::zserio::allocatorPropagatingCopy(other.m_parkingSpotAttributeSets_, allocator))
{
    if (other.m_areChildrenInitialized)
        initializeChildren();
    else
        m_areChildrenInitialized = false;
}

void ParkingFacilityAttributeLayer::initializeChildren()
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
        m_parkingFacilityAttributeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
        m_parkingFacilityAttributeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
        m_parkingLevelAttributeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
        m_parkingLevelAttributeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
        m_parkingSectionAttributeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
        m_parkingSectionAttributeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
        m_parkingRowAttributeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
        m_parkingRowAttributeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
        m_parkingSpotAttributeMaps_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
        m_parkingSpotAttributeSets_.value().initialize(static_cast<::nds::core::geometry::CoordShift>(0));

    m_areChildrenInitialized = true;
}

::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent ParkingFacilityAttributeLayer::getContent() const
{
    return m_content_;
}

void ParkingFacilityAttributeLayer::setContent(::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent content_)
{
    m_content_ = content_;
}

::nds::venue::details::instantiations::ParkingFacilityAttributeMapList& ParkingFacilityAttributeLayer::getParkingFacilityAttributeMaps()
{
    return m_parkingFacilityAttributeMaps_.value();
}

const ::nds::venue::details::instantiations::ParkingFacilityAttributeMapList& ParkingFacilityAttributeLayer::getParkingFacilityAttributeMaps() const
{
    return m_parkingFacilityAttributeMaps_.value();
}

void ParkingFacilityAttributeLayer::setParkingFacilityAttributeMaps(const ::nds::venue::details::instantiations::ParkingFacilityAttributeMapList& parkingFacilityAttributeMaps_)
{
    m_parkingFacilityAttributeMaps_ = parkingFacilityAttributeMaps_;
}

void ParkingFacilityAttributeLayer::setParkingFacilityAttributeMaps(::nds::venue::details::instantiations::ParkingFacilityAttributeMapList&& parkingFacilityAttributeMaps_)
{
    m_parkingFacilityAttributeMaps_ = ::std::move(parkingFacilityAttributeMaps_);
}

bool ParkingFacilityAttributeLayer::isParkingFacilityAttributeMapsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS);
}

bool ParkingFacilityAttributeLayer::isParkingFacilityAttributeMapsSet() const
{
    return m_parkingFacilityAttributeMaps_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingFacilityAttributeMaps()
{
    m_parkingFacilityAttributeMaps_.reset();
}

::nds::venue::details::instantiations::ParkingFacilityAttributeSetList& ParkingFacilityAttributeLayer::getParkingFacilityAttributeSets()
{
    return m_parkingFacilityAttributeSets_.value();
}

const ::nds::venue::details::instantiations::ParkingFacilityAttributeSetList& ParkingFacilityAttributeLayer::getParkingFacilityAttributeSets() const
{
    return m_parkingFacilityAttributeSets_.value();
}

void ParkingFacilityAttributeLayer::setParkingFacilityAttributeSets(const ::nds::venue::details::instantiations::ParkingFacilityAttributeSetList& parkingFacilityAttributeSets_)
{
    m_parkingFacilityAttributeSets_ = parkingFacilityAttributeSets_;
}

void ParkingFacilityAttributeLayer::setParkingFacilityAttributeSets(::nds::venue::details::instantiations::ParkingFacilityAttributeSetList&& parkingFacilityAttributeSets_)
{
    m_parkingFacilityAttributeSets_ = ::std::move(parkingFacilityAttributeSets_);
}

bool ParkingFacilityAttributeLayer::isParkingFacilityAttributeSetsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS);
}

bool ParkingFacilityAttributeLayer::isParkingFacilityAttributeSetsSet() const
{
    return m_parkingFacilityAttributeSets_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingFacilityAttributeSets()
{
    m_parkingFacilityAttributeSets_.reset();
}

::nds::venue::details::instantiations::ParkingLevelAttributeMapList& ParkingFacilityAttributeLayer::getParkingLevelAttributeMaps()
{
    return m_parkingLevelAttributeMaps_.value();
}

const ::nds::venue::details::instantiations::ParkingLevelAttributeMapList& ParkingFacilityAttributeLayer::getParkingLevelAttributeMaps() const
{
    return m_parkingLevelAttributeMaps_.value();
}

void ParkingFacilityAttributeLayer::setParkingLevelAttributeMaps(const ::nds::venue::details::instantiations::ParkingLevelAttributeMapList& parkingLevelAttributeMaps_)
{
    m_parkingLevelAttributeMaps_ = parkingLevelAttributeMaps_;
}

void ParkingFacilityAttributeLayer::setParkingLevelAttributeMaps(::nds::venue::details::instantiations::ParkingLevelAttributeMapList&& parkingLevelAttributeMaps_)
{
    m_parkingLevelAttributeMaps_ = ::std::move(parkingLevelAttributeMaps_);
}

bool ParkingFacilityAttributeLayer::isParkingLevelAttributeMapsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS);
}

bool ParkingFacilityAttributeLayer::isParkingLevelAttributeMapsSet() const
{
    return m_parkingLevelAttributeMaps_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingLevelAttributeMaps()
{
    m_parkingLevelAttributeMaps_.reset();
}

::nds::venue::details::instantiations::ParkingLevelAttributeSetList& ParkingFacilityAttributeLayer::getParkingLevelAttributeSets()
{
    return m_parkingLevelAttributeSets_.value();
}

const ::nds::venue::details::instantiations::ParkingLevelAttributeSetList& ParkingFacilityAttributeLayer::getParkingLevelAttributeSets() const
{
    return m_parkingLevelAttributeSets_.value();
}

void ParkingFacilityAttributeLayer::setParkingLevelAttributeSets(const ::nds::venue::details::instantiations::ParkingLevelAttributeSetList& parkingLevelAttributeSets_)
{
    m_parkingLevelAttributeSets_ = parkingLevelAttributeSets_;
}

void ParkingFacilityAttributeLayer::setParkingLevelAttributeSets(::nds::venue::details::instantiations::ParkingLevelAttributeSetList&& parkingLevelAttributeSets_)
{
    m_parkingLevelAttributeSets_ = ::std::move(parkingLevelAttributeSets_);
}

bool ParkingFacilityAttributeLayer::isParkingLevelAttributeSetsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS);
}

bool ParkingFacilityAttributeLayer::isParkingLevelAttributeSetsSet() const
{
    return m_parkingLevelAttributeSets_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingLevelAttributeSets()
{
    m_parkingLevelAttributeSets_.reset();
}

::nds::venue::details::instantiations::ParkingSectionAttributeMapList& ParkingFacilityAttributeLayer::getParkingSectionAttributeMaps()
{
    return m_parkingSectionAttributeMaps_.value();
}

const ::nds::venue::details::instantiations::ParkingSectionAttributeMapList& ParkingFacilityAttributeLayer::getParkingSectionAttributeMaps() const
{
    return m_parkingSectionAttributeMaps_.value();
}

void ParkingFacilityAttributeLayer::setParkingSectionAttributeMaps(const ::nds::venue::details::instantiations::ParkingSectionAttributeMapList& parkingSectionAttributeMaps_)
{
    m_parkingSectionAttributeMaps_ = parkingSectionAttributeMaps_;
}

void ParkingFacilityAttributeLayer::setParkingSectionAttributeMaps(::nds::venue::details::instantiations::ParkingSectionAttributeMapList&& parkingSectionAttributeMaps_)
{
    m_parkingSectionAttributeMaps_ = ::std::move(parkingSectionAttributeMaps_);
}

bool ParkingFacilityAttributeLayer::isParkingSectionAttributeMapsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS);
}

bool ParkingFacilityAttributeLayer::isParkingSectionAttributeMapsSet() const
{
    return m_parkingSectionAttributeMaps_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingSectionAttributeMaps()
{
    m_parkingSectionAttributeMaps_.reset();
}

::nds::venue::details::instantiations::ParkingSectionAttributeSetList& ParkingFacilityAttributeLayer::getParkingSectionAttributeSets()
{
    return m_parkingSectionAttributeSets_.value();
}

const ::nds::venue::details::instantiations::ParkingSectionAttributeSetList& ParkingFacilityAttributeLayer::getParkingSectionAttributeSets() const
{
    return m_parkingSectionAttributeSets_.value();
}

void ParkingFacilityAttributeLayer::setParkingSectionAttributeSets(const ::nds::venue::details::instantiations::ParkingSectionAttributeSetList& parkingSectionAttributeSets_)
{
    m_parkingSectionAttributeSets_ = parkingSectionAttributeSets_;
}

void ParkingFacilityAttributeLayer::setParkingSectionAttributeSets(::nds::venue::details::instantiations::ParkingSectionAttributeSetList&& parkingSectionAttributeSets_)
{
    m_parkingSectionAttributeSets_ = ::std::move(parkingSectionAttributeSets_);
}

bool ParkingFacilityAttributeLayer::isParkingSectionAttributeSetsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS);
}

bool ParkingFacilityAttributeLayer::isParkingSectionAttributeSetsSet() const
{
    return m_parkingSectionAttributeSets_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingSectionAttributeSets()
{
    m_parkingSectionAttributeSets_.reset();
}

::nds::venue::details::instantiations::ParkingRowAttributeMapList& ParkingFacilityAttributeLayer::getParkingRowAttributeMaps()
{
    return m_parkingRowAttributeMaps_.value();
}

const ::nds::venue::details::instantiations::ParkingRowAttributeMapList& ParkingFacilityAttributeLayer::getParkingRowAttributeMaps() const
{
    return m_parkingRowAttributeMaps_.value();
}

void ParkingFacilityAttributeLayer::setParkingRowAttributeMaps(const ::nds::venue::details::instantiations::ParkingRowAttributeMapList& parkingRowAttributeMaps_)
{
    m_parkingRowAttributeMaps_ = parkingRowAttributeMaps_;
}

void ParkingFacilityAttributeLayer::setParkingRowAttributeMaps(::nds::venue::details::instantiations::ParkingRowAttributeMapList&& parkingRowAttributeMaps_)
{
    m_parkingRowAttributeMaps_ = ::std::move(parkingRowAttributeMaps_);
}

bool ParkingFacilityAttributeLayer::isParkingRowAttributeMapsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS);
}

bool ParkingFacilityAttributeLayer::isParkingRowAttributeMapsSet() const
{
    return m_parkingRowAttributeMaps_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingRowAttributeMaps()
{
    m_parkingRowAttributeMaps_.reset();
}

::nds::venue::details::instantiations::ParkingRowAttributeSetList& ParkingFacilityAttributeLayer::getParkingRowAttributeSets()
{
    return m_parkingRowAttributeSets_.value();
}

const ::nds::venue::details::instantiations::ParkingRowAttributeSetList& ParkingFacilityAttributeLayer::getParkingRowAttributeSets() const
{
    return m_parkingRowAttributeSets_.value();
}

void ParkingFacilityAttributeLayer::setParkingRowAttributeSets(const ::nds::venue::details::instantiations::ParkingRowAttributeSetList& parkingRowAttributeSets_)
{
    m_parkingRowAttributeSets_ = parkingRowAttributeSets_;
}

void ParkingFacilityAttributeLayer::setParkingRowAttributeSets(::nds::venue::details::instantiations::ParkingRowAttributeSetList&& parkingRowAttributeSets_)
{
    m_parkingRowAttributeSets_ = ::std::move(parkingRowAttributeSets_);
}

bool ParkingFacilityAttributeLayer::isParkingRowAttributeSetsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS);
}

bool ParkingFacilityAttributeLayer::isParkingRowAttributeSetsSet() const
{
    return m_parkingRowAttributeSets_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingRowAttributeSets()
{
    m_parkingRowAttributeSets_.reset();
}

::nds::venue::details::instantiations::ParkingSpotAttributeMapList& ParkingFacilityAttributeLayer::getParkingSpotAttributeMaps()
{
    return m_parkingSpotAttributeMaps_.value();
}

const ::nds::venue::details::instantiations::ParkingSpotAttributeMapList& ParkingFacilityAttributeLayer::getParkingSpotAttributeMaps() const
{
    return m_parkingSpotAttributeMaps_.value();
}

void ParkingFacilityAttributeLayer::setParkingSpotAttributeMaps(const ::nds::venue::details::instantiations::ParkingSpotAttributeMapList& parkingSpotAttributeMaps_)
{
    m_parkingSpotAttributeMaps_ = parkingSpotAttributeMaps_;
}

void ParkingFacilityAttributeLayer::setParkingSpotAttributeMaps(::nds::venue::details::instantiations::ParkingSpotAttributeMapList&& parkingSpotAttributeMaps_)
{
    m_parkingSpotAttributeMaps_ = ::std::move(parkingSpotAttributeMaps_);
}

bool ParkingFacilityAttributeLayer::isParkingSpotAttributeMapsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS);
}

bool ParkingFacilityAttributeLayer::isParkingSpotAttributeMapsSet() const
{
    return m_parkingSpotAttributeMaps_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingSpotAttributeMaps()
{
    m_parkingSpotAttributeMaps_.reset();
}

::nds::venue::details::instantiations::ParkingSpotAttributeSetList& ParkingFacilityAttributeLayer::getParkingSpotAttributeSets()
{
    return m_parkingSpotAttributeSets_.value();
}

const ::nds::venue::details::instantiations::ParkingSpotAttributeSetList& ParkingFacilityAttributeLayer::getParkingSpotAttributeSets() const
{
    return m_parkingSpotAttributeSets_.value();
}

void ParkingFacilityAttributeLayer::setParkingSpotAttributeSets(const ::nds::venue::details::instantiations::ParkingSpotAttributeSetList& parkingSpotAttributeSets_)
{
    m_parkingSpotAttributeSets_ = parkingSpotAttributeSets_;
}

void ParkingFacilityAttributeLayer::setParkingSpotAttributeSets(::nds::venue::details::instantiations::ParkingSpotAttributeSetList&& parkingSpotAttributeSets_)
{
    m_parkingSpotAttributeSets_ = ::std::move(parkingSpotAttributeSets_);
}

bool ParkingFacilityAttributeLayer::isParkingSpotAttributeSetsUsed() const
{
    return ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS);
}

bool ParkingFacilityAttributeLayer::isParkingSpotAttributeSetsSet() const
{
    return m_parkingSpotAttributeSets_.hasValue();
}

void ParkingFacilityAttributeLayer::resetParkingSpotAttributeSets()
{
    m_parkingSpotAttributeSets_.reset();
}

::nds::system::types::LayerType ParkingFacilityAttributeLayer::funcGetLayerType() const
{
    return static_cast<::nds::system::types::LayerType>(::nds::system::types::LayerType::ATTRIBUTE);
}

void ParkingFacilityAttributeLayer::initPackingContext(ParkingFacilityAttributeLayer::ZserioPackingContext& context) const
{
    m_content_.initPackingContext(context.getContent());
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        m_parkingFacilityAttributeMaps_.value().initPackingContext(context.getParkingFacilityAttributeMaps());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        m_parkingFacilityAttributeSets_.value().initPackingContext(context.getParkingFacilityAttributeSets());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        m_parkingLevelAttributeMaps_.value().initPackingContext(context.getParkingLevelAttributeMaps());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        m_parkingLevelAttributeSets_.value().initPackingContext(context.getParkingLevelAttributeSets());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        m_parkingSectionAttributeMaps_.value().initPackingContext(context.getParkingSectionAttributeMaps());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        m_parkingSectionAttributeSets_.value().initPackingContext(context.getParkingSectionAttributeSets());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        m_parkingRowAttributeMaps_.value().initPackingContext(context.getParkingRowAttributeMaps());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        m_parkingRowAttributeSets_.value().initPackingContext(context.getParkingRowAttributeSets());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        m_parkingSpotAttributeMaps_.value().initPackingContext(context.getParkingSpotAttributeMaps());
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        m_parkingSpotAttributeSets_.value().initPackingContext(context.getParkingSpotAttributeSets());
    }
}

size_t ParkingFacilityAttributeLayer::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(endBitPosition);
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        endBitPosition += m_parkingFacilityAttributeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        endBitPosition += m_parkingFacilityAttributeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        endBitPosition += m_parkingLevelAttributeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        endBitPosition += m_parkingLevelAttributeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        endBitPosition += m_parkingSectionAttributeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        endBitPosition += m_parkingSectionAttributeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        endBitPosition += m_parkingRowAttributeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        endBitPosition += m_parkingRowAttributeSets_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        endBitPosition += m_parkingSpotAttributeMaps_.value().bitSizeOf(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        endBitPosition += m_parkingSpotAttributeSets_.value().bitSizeOf(endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t ParkingFacilityAttributeLayer::bitSizeOf(ParkingFacilityAttributeLayer::ZserioPackingContext& context, size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += m_content_.bitSizeOf(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        endBitPosition += m_parkingFacilityAttributeMaps_.value().bitSizeOf(context.getParkingFacilityAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        endBitPosition += m_parkingFacilityAttributeSets_.value().bitSizeOf(context.getParkingFacilityAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        endBitPosition += m_parkingLevelAttributeMaps_.value().bitSizeOf(context.getParkingLevelAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        endBitPosition += m_parkingLevelAttributeSets_.value().bitSizeOf(context.getParkingLevelAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        endBitPosition += m_parkingSectionAttributeMaps_.value().bitSizeOf(context.getParkingSectionAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        endBitPosition += m_parkingSectionAttributeSets_.value().bitSizeOf(context.getParkingSectionAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        endBitPosition += m_parkingRowAttributeMaps_.value().bitSizeOf(context.getParkingRowAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        endBitPosition += m_parkingRowAttributeSets_.value().bitSizeOf(context.getParkingRowAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        endBitPosition += m_parkingSpotAttributeMaps_.value().bitSizeOf(context.getParkingSpotAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        endBitPosition += m_parkingSpotAttributeSets_.value().bitSizeOf(context.getParkingSpotAttributeSets(), endBitPosition);
    }

    return endBitPosition - bitPosition;
}

size_t ParkingFacilityAttributeLayer::initializeOffsets(size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(endBitPosition);
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        endBitPosition = m_parkingFacilityAttributeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        endBitPosition = m_parkingFacilityAttributeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        endBitPosition = m_parkingLevelAttributeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        endBitPosition = m_parkingLevelAttributeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        endBitPosition = m_parkingSectionAttributeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        endBitPosition = m_parkingSectionAttributeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        endBitPosition = m_parkingRowAttributeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        endBitPosition = m_parkingRowAttributeSets_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        endBitPosition = m_parkingSpotAttributeMaps_.value().initializeOffsets(endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        endBitPosition = m_parkingSpotAttributeSets_.value().initializeOffsets(endBitPosition);
    }

    return endBitPosition;
}

size_t ParkingFacilityAttributeLayer::initializeOffsets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, size_t bitPosition)
{
    size_t endBitPosition = bitPosition;

    endBitPosition = m_content_.initializeOffsets(context.getContent(), endBitPosition);
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        endBitPosition = m_parkingFacilityAttributeMaps_.value().initializeOffsets(context.getParkingFacilityAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        endBitPosition = m_parkingFacilityAttributeSets_.value().initializeOffsets(context.getParkingFacilityAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        endBitPosition = m_parkingLevelAttributeMaps_.value().initializeOffsets(context.getParkingLevelAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        endBitPosition = m_parkingLevelAttributeSets_.value().initializeOffsets(context.getParkingLevelAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        endBitPosition = m_parkingSectionAttributeMaps_.value().initializeOffsets(context.getParkingSectionAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        endBitPosition = m_parkingSectionAttributeSets_.value().initializeOffsets(context.getParkingSectionAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        endBitPosition = m_parkingRowAttributeMaps_.value().initializeOffsets(context.getParkingRowAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        endBitPosition = m_parkingRowAttributeSets_.value().initializeOffsets(context.getParkingRowAttributeSets(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        endBitPosition = m_parkingSpotAttributeMaps_.value().initializeOffsets(context.getParkingSpotAttributeMaps(), endBitPosition);
    }
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        endBitPosition = m_parkingSpotAttributeSets_.value().initializeOffsets(context.getParkingSpotAttributeSets(), endBitPosition);
    }

    return endBitPosition;
}

bool ParkingFacilityAttributeLayer::operator==(const ParkingFacilityAttributeLayer& other) const
{
    if (this != &other)
    {
        return
                (m_content_ == other.m_content_) &&
                (!isParkingFacilityAttributeMapsUsed() ? !other.isParkingFacilityAttributeMapsUsed() : (m_parkingFacilityAttributeMaps_ == other.m_parkingFacilityAttributeMaps_)) &&
                (!isParkingFacilityAttributeSetsUsed() ? !other.isParkingFacilityAttributeSetsUsed() : (m_parkingFacilityAttributeSets_ == other.m_parkingFacilityAttributeSets_)) &&
                (!isParkingLevelAttributeMapsUsed() ? !other.isParkingLevelAttributeMapsUsed() : (m_parkingLevelAttributeMaps_ == other.m_parkingLevelAttributeMaps_)) &&
                (!isParkingLevelAttributeSetsUsed() ? !other.isParkingLevelAttributeSetsUsed() : (m_parkingLevelAttributeSets_ == other.m_parkingLevelAttributeSets_)) &&
                (!isParkingSectionAttributeMapsUsed() ? !other.isParkingSectionAttributeMapsUsed() : (m_parkingSectionAttributeMaps_ == other.m_parkingSectionAttributeMaps_)) &&
                (!isParkingSectionAttributeSetsUsed() ? !other.isParkingSectionAttributeSetsUsed() : (m_parkingSectionAttributeSets_ == other.m_parkingSectionAttributeSets_)) &&
                (!isParkingRowAttributeMapsUsed() ? !other.isParkingRowAttributeMapsUsed() : (m_parkingRowAttributeMaps_ == other.m_parkingRowAttributeMaps_)) &&
                (!isParkingRowAttributeSetsUsed() ? !other.isParkingRowAttributeSetsUsed() : (m_parkingRowAttributeSets_ == other.m_parkingRowAttributeSets_)) &&
                (!isParkingSpotAttributeMapsUsed() ? !other.isParkingSpotAttributeMapsUsed() : (m_parkingSpotAttributeMaps_ == other.m_parkingSpotAttributeMaps_)) &&
                (!isParkingSpotAttributeSetsUsed() ? !other.isParkingSpotAttributeSetsUsed() : (m_parkingSpotAttributeSets_ == other.m_parkingSpotAttributeSets_));
    }

    return true;
}

uint32_t ParkingFacilityAttributeLayer::hashCode() const
{
    uint32_t result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_content_);
    if (isParkingFacilityAttributeMapsUsed())
        result = ::zserio::calcHashCode(result, m_parkingFacilityAttributeMaps_);
    if (isParkingFacilityAttributeSetsUsed())
        result = ::zserio::calcHashCode(result, m_parkingFacilityAttributeSets_);
    if (isParkingLevelAttributeMapsUsed())
        result = ::zserio::calcHashCode(result, m_parkingLevelAttributeMaps_);
    if (isParkingLevelAttributeSetsUsed())
        result = ::zserio::calcHashCode(result, m_parkingLevelAttributeSets_);
    if (isParkingSectionAttributeMapsUsed())
        result = ::zserio::calcHashCode(result, m_parkingSectionAttributeMaps_);
    if (isParkingSectionAttributeSetsUsed())
        result = ::zserio::calcHashCode(result, m_parkingSectionAttributeSets_);
    if (isParkingRowAttributeMapsUsed())
        result = ::zserio::calcHashCode(result, m_parkingRowAttributeMaps_);
    if (isParkingRowAttributeSetsUsed())
        result = ::zserio::calcHashCode(result, m_parkingRowAttributeSets_);
    if (isParkingSpotAttributeMapsUsed())
        result = ::zserio::calcHashCode(result, m_parkingSpotAttributeMaps_);
    if (isParkingSpotAttributeSetsUsed())
        result = ::zserio::calcHashCode(result, m_parkingSpotAttributeSets_);

    return result;
}

void ParkingFacilityAttributeLayer::write(::zserio::BitStreamWriter& out) const
{
    m_content_.write(out);

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        // check parameters
        if (m_parkingFacilityAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeMaps: ") <<
                    m_parkingFacilityAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingFacilityAttributeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        // check parameters
        if (m_parkingFacilityAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeSets: ") <<
                    m_parkingFacilityAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingFacilityAttributeSets_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        // check parameters
        if (m_parkingLevelAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeMaps: ") <<
                    m_parkingLevelAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingLevelAttributeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        // check parameters
        if (m_parkingLevelAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeSets: ") <<
                    m_parkingLevelAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingLevelAttributeSets_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        // check parameters
        if (m_parkingSectionAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeMaps: ") <<
                    m_parkingSectionAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSectionAttributeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        // check parameters
        if (m_parkingSectionAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeSets: ") <<
                    m_parkingSectionAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSectionAttributeSets_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        // check parameters
        if (m_parkingRowAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeMaps: ") <<
                    m_parkingRowAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingRowAttributeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        // check parameters
        if (m_parkingRowAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeSets: ") <<
                    m_parkingRowAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingRowAttributeSets_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        // check parameters
        if (m_parkingSpotAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeMaps: ") <<
                    m_parkingSpotAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSpotAttributeMaps_.value().write(out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        // check parameters
        if (m_parkingSpotAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeSets: ") <<
                    m_parkingSpotAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSpotAttributeSets_.value().write(out);
    }
}

void ParkingFacilityAttributeLayer::write(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamWriter& out) const
{
    m_content_.write(context.getContent(), out);

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        // check parameters
        if (m_parkingFacilityAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeMaps: ") <<
                    m_parkingFacilityAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingFacilityAttributeMaps_.value().write(context.getParkingFacilityAttributeMaps(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        // check parameters
        if (m_parkingFacilityAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeSets: ") <<
                    m_parkingFacilityAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingFacilityAttributeSets_.value().write(context.getParkingFacilityAttributeSets(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        // check parameters
        if (m_parkingLevelAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeMaps: ") <<
                    m_parkingLevelAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingLevelAttributeMaps_.value().write(context.getParkingLevelAttributeMaps(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        // check parameters
        if (m_parkingLevelAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeSets: ") <<
                    m_parkingLevelAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingLevelAttributeSets_.value().write(context.getParkingLevelAttributeSets(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        // check parameters
        if (m_parkingSectionAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeMaps: ") <<
                    m_parkingSectionAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSectionAttributeMaps_.value().write(context.getParkingSectionAttributeMaps(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        // check parameters
        if (m_parkingSectionAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeSets: ") <<
                    m_parkingSectionAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSectionAttributeSets_.value().write(context.getParkingSectionAttributeSets(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        // check parameters
        if (m_parkingRowAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeMaps: ") <<
                    m_parkingRowAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingRowAttributeMaps_.value().write(context.getParkingRowAttributeMaps(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        // check parameters
        if (m_parkingRowAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeSets: ") <<
                    m_parkingRowAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingRowAttributeSets_.value().write(context.getParkingRowAttributeSets(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        // check parameters
        if (m_parkingSpotAttributeMaps_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeMaps: ") <<
                    m_parkingSpotAttributeMaps_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSpotAttributeMaps_.value().write(context.getParkingSpotAttributeMaps(), out);
    }

    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        // check parameters
        if (m_parkingSpotAttributeSets_.value().getCoordShift() != static_cast<::nds::core::geometry::CoordShift>(0))
        {
            throw ::zserio::CppRuntimeException("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeSets: ") <<
                    m_parkingSpotAttributeSets_.value().getCoordShift() << " != " << static_cast<::nds::core::geometry::CoordShift>(0) << "!";
        }
        m_parkingSpotAttributeSets_.value().write(context.getParkingSpotAttributeSets(), out);
    }
}

::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent ParkingFacilityAttributeLayer::readContent(::zserio::BitStreamReader& in)
{
    return ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent(in);
}

::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent ParkingFacilityAttributeLayer::readContent(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in)
{
    return ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent(context.getContent(), in);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList> ParkingFacilityAttributeLayer::readParkingFacilityAttributeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList>(::nds::venue::details::instantiations::ParkingFacilityAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList> ParkingFacilityAttributeLayer::readParkingFacilityAttributeMaps(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList>(::nds::venue::details::instantiations::ParkingFacilityAttributeMapList(context.getParkingFacilityAttributeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList> ParkingFacilityAttributeLayer::readParkingFacilityAttributeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList>(::nds::venue::details::instantiations::ParkingFacilityAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList> ParkingFacilityAttributeLayer::readParkingFacilityAttributeSets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_FACILITY_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList>(::nds::venue::details::instantiations::ParkingFacilityAttributeSetList(context.getParkingFacilityAttributeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingFacilityAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList> ParkingFacilityAttributeLayer::readParkingLevelAttributeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList>(::nds::venue::details::instantiations::ParkingLevelAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList> ParkingFacilityAttributeLayer::readParkingLevelAttributeMaps(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList>(::nds::venue::details::instantiations::ParkingLevelAttributeMapList(context.getParkingLevelAttributeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList> ParkingFacilityAttributeLayer::readParkingLevelAttributeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList>(::nds::venue::details::instantiations::ParkingLevelAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList> ParkingFacilityAttributeLayer::readParkingLevelAttributeSets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_LEVEL_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList>(::nds::venue::details::instantiations::ParkingLevelAttributeSetList(context.getParkingLevelAttributeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingLevelAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList> ParkingFacilityAttributeLayer::readParkingSectionAttributeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList>(::nds::venue::details::instantiations::ParkingSectionAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList> ParkingFacilityAttributeLayer::readParkingSectionAttributeMaps(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList>(::nds::venue::details::instantiations::ParkingSectionAttributeMapList(context.getParkingSectionAttributeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList> ParkingFacilityAttributeLayer::readParkingSectionAttributeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList>(::nds::venue::details::instantiations::ParkingSectionAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList> ParkingFacilityAttributeLayer::readParkingSectionAttributeSets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SECTION_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList>(::nds::venue::details::instantiations::ParkingSectionAttributeSetList(context.getParkingSectionAttributeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSectionAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList> ParkingFacilityAttributeLayer::readParkingRowAttributeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList>(::nds::venue::details::instantiations::ParkingRowAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList> ParkingFacilityAttributeLayer::readParkingRowAttributeMaps(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList>(::nds::venue::details::instantiations::ParkingRowAttributeMapList(context.getParkingRowAttributeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList> ParkingFacilityAttributeLayer::readParkingRowAttributeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList>(::nds::venue::details::instantiations::ParkingRowAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList> ParkingFacilityAttributeLayer::readParkingRowAttributeSets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_ROW_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList>(::nds::venue::details::instantiations::ParkingRowAttributeSetList(context.getParkingRowAttributeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingRowAttributeSetList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList> ParkingFacilityAttributeLayer::readParkingSpotAttributeMaps(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList>(::nds::venue::details::instantiations::ParkingSpotAttributeMapList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList> ParkingFacilityAttributeLayer::readParkingSpotAttributeMaps(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_MAPS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList>(::nds::venue::details::instantiations::ParkingSpotAttributeMapList(context.getParkingSpotAttributeMaps(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeMapList>(::zserio::NullOpt);
}
::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList> ParkingFacilityAttributeLayer::readParkingSpotAttributeSets(::zserio::BitStreamReader& in,
        const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList>(::nds::venue::details::instantiations::ParkingSpotAttributeSetList(in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList>(::zserio::NullOpt);
}

::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList> ParkingFacilityAttributeLayer::readParkingSpotAttributeSets(ParkingFacilityAttributeLayer::ZserioPackingContext& context, ::zserio::BitStreamReader& in, const allocator_type& allocator)
{
    if ((getContent() & ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS) == ::nds::venue::details::metadata::ParkingFacilityAttributeLayerContent::Values::PARKING_SPOT_SETS)
    {
        return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList>(::nds::venue::details::instantiations::ParkingSpotAttributeSetList(context.getParkingSpotAttributeSets(), in, static_cast<::nds::core::geometry::CoordShift>(0), allocator));
    }

    return ::zserio::InplaceOptionalHolder<::nds::venue::details::instantiations::ParkingSpotAttributeSetList>(::zserio::NullOpt);
}

} // namespace layer
} // namespace details
} // namespace venue
} // namespace nds
