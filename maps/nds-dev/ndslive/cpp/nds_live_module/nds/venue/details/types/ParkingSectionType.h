/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_VENUE_DETAILS_TYPES_PARKING_SECTION_TYPE_H
#define NDS_VENUE_DETAILS_TYPES_PARKING_SECTION_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace venue
{
namespace details
{
namespace types
{

enum class ParkingSectionType : uint8_t
{
    SELF = UINT8_C(0),
    CUSTOMER = UINT8_C(1),
    RENTAL = UINT8_C(2),
    HOTEL = UINT8_C(3),
    PRIVATE = UINT8_C(4),
    VALET = UINT8_C(5),
    AUTOMATED_VALET = UINT8_C(6),
    AVP_DROP_OFF = UINT8_C(7),
    AVP_PICK_UP = UINT8_C(8),
    AVP_DROP_OFF_PICK_UP = UINT8_C(9)
};

} // namespace types
} // namespace details
} // namespace venue
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for ParkingSectionType enumeration.
template <>
struct EnumTraits<::nds::venue::details::types::ParkingSectionType>
{
    static constexpr ::std::array<const char*, 10> names =
    {{
        "SELF",
        "CUSTOMER",
        "RENTAL",
        "HOTEL",
        "PRIVATE",
        "VALET",
        "AUTOMATED_VALET",
        "AVP_DROP_OFF",
        "AVP_PICK_UP",
        "AVP_DROP_OFF_PICK_UP"
    }};

    static constexpr ::std::array<::nds::venue::details::types::ParkingSectionType, 10> values =
    {{
        ::nds::venue::details::types::ParkingSectionType::SELF,
        ::nds::venue::details::types::ParkingSectionType::CUSTOMER,
        ::nds::venue::details::types::ParkingSectionType::RENTAL,
        ::nds::venue::details::types::ParkingSectionType::HOTEL,
        ::nds::venue::details::types::ParkingSectionType::PRIVATE,
        ::nds::venue::details::types::ParkingSectionType::VALET,
        ::nds::venue::details::types::ParkingSectionType::AUTOMATED_VALET,
        ::nds::venue::details::types::ParkingSectionType::AVP_DROP_OFF,
        ::nds::venue::details::types::ParkingSectionType::AVP_PICK_UP,
        ::nds::venue::details::types::ParkingSectionType::AVP_DROP_OFF_PICK_UP
    }};

    static constexpr const char* enumName = "ParkingSectionType";
};

template <>
size_t enumToOrdinal<::nds::venue::details::types::ParkingSectionType>(::nds::venue::details::types::ParkingSectionType value);

template <>
::nds::venue::details::types::ParkingSectionType valueToEnum<::nds::venue::details::types::ParkingSectionType>(
        typename ::std::underlying_type<::nds::venue::details::types::ParkingSectionType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::venue::details::types::ParkingSectionType>(::nds::venue::details::types::ParkingSectionType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::venue::details::types::ParkingSectionType>(::zserio::DeltaContext& context, ::nds::venue::details::types::ParkingSectionType value);

template <>
size_t bitSizeOf<::nds::venue::details::types::ParkingSectionType>(::nds::venue::details::types::ParkingSectionType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::venue::details::types::ParkingSectionType>(::zserio::DeltaContext& context, ::nds::venue::details::types::ParkingSectionType value);

template <>
size_t initializeOffsets<::nds::venue::details::types::ParkingSectionType>(size_t bitPosition, ::nds::venue::details::types::ParkingSectionType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::venue::details::types::ParkingSectionType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::venue::details::types::ParkingSectionType value);

template <>
::nds::venue::details::types::ParkingSectionType read<::nds::venue::details::types::ParkingSectionType>(::zserio::BitStreamReader& in);

template <>
::nds::venue::details::types::ParkingSectionType read<::nds::venue::details::types::ParkingSectionType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::venue::details::types::ParkingSectionType>(::zserio::BitStreamWriter& out, ::nds::venue::details::types::ParkingSectionType value);

template <>
void write<::zserio::DeltaContext, ::nds::venue::details::types::ParkingSectionType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::venue::details::types::ParkingSectionType value);

} // namespace zserio

#endif // NDS_VENUE_DETAILS_TYPES_PARKING_SECTION_TYPE_H
