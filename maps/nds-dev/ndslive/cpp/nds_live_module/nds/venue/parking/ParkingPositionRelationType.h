/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_VENUE_PARKING_PARKING_POSITION_RELATION_TYPE_H
#define NDS_VENUE_PARKING_PARKING_POSITION_RELATION_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace venue
{
namespace parking
{

enum class ParkingPositionRelationType : uint8_t
{
    PART_OF_SECTION = UINT8_C(0),
    ACCESS_PARKING_SPOT = UINT8_C(1),
    ROAD_NETWORK_ACCESS_ROAD_REFERENCE = UINT8_C(2),
    ROAD_NETWORK_ACCESS_LANE_REFERENCE = UINT8_C(3),
    ROAD_NETWORK_ACCESS = UINT8_C(4)
};

} // namespace parking
} // namespace venue
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for ParkingPositionRelationType enumeration.
template <>
struct EnumTraits<::nds::venue::parking::ParkingPositionRelationType>
{
    static constexpr ::std::array<const char*, 5> names =
    {{
        "PART_OF_SECTION",
        "ACCESS_PARKING_SPOT",
        "ROAD_NETWORK_ACCESS_ROAD_REFERENCE",
        "ROAD_NETWORK_ACCESS_LANE_REFERENCE",
        "ROAD_NETWORK_ACCESS"
    }};

    static constexpr ::std::array<::nds::venue::parking::ParkingPositionRelationType, 5> values =
    {{
        ::nds::venue::parking::ParkingPositionRelationType::PART_OF_SECTION,
        ::nds::venue::parking::ParkingPositionRelationType::ACCESS_PARKING_SPOT,
        ::nds::venue::parking::ParkingPositionRelationType::ROAD_NETWORK_ACCESS_ROAD_REFERENCE,
        ::nds::venue::parking::ParkingPositionRelationType::ROAD_NETWORK_ACCESS_LANE_REFERENCE,
        ::nds::venue::parking::ParkingPositionRelationType::ROAD_NETWORK_ACCESS
    }};

    static constexpr const char* enumName = "ParkingPositionRelationType";
};

template <>
size_t enumToOrdinal<::nds::venue::parking::ParkingPositionRelationType>(::nds::venue::parking::ParkingPositionRelationType value);

template <>
::nds::venue::parking::ParkingPositionRelationType valueToEnum<::nds::venue::parking::ParkingPositionRelationType>(
        typename ::std::underlying_type<::nds::venue::parking::ParkingPositionRelationType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::venue::parking::ParkingPositionRelationType>(::nds::venue::parking::ParkingPositionRelationType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::venue::parking::ParkingPositionRelationType>(::zserio::DeltaContext& context, ::nds::venue::parking::ParkingPositionRelationType value);

template <>
size_t bitSizeOf<::nds::venue::parking::ParkingPositionRelationType>(::nds::venue::parking::ParkingPositionRelationType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::venue::parking::ParkingPositionRelationType>(::zserio::DeltaContext& context, ::nds::venue::parking::ParkingPositionRelationType value);

template <>
size_t initializeOffsets<::nds::venue::parking::ParkingPositionRelationType>(size_t bitPosition, ::nds::venue::parking::ParkingPositionRelationType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::venue::parking::ParkingPositionRelationType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::venue::parking::ParkingPositionRelationType value);

template <>
::nds::venue::parking::ParkingPositionRelationType read<::nds::venue::parking::ParkingPositionRelationType>(::zserio::BitStreamReader& in);

template <>
::nds::venue::parking::ParkingPositionRelationType read<::nds::venue::parking::ParkingPositionRelationType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::venue::parking::ParkingPositionRelationType>(::zserio::BitStreamWriter& out, ::nds::venue::parking::ParkingPositionRelationType value);

template <>
void write<::zserio::DeltaContext, ::nds::venue::parking::ParkingPositionRelationType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::venue::parking::ParkingPositionRelationType value);

} // namespace zserio

#endif // NDS_VENUE_PARKING_PARKING_POSITION_RELATION_TYPE_H
