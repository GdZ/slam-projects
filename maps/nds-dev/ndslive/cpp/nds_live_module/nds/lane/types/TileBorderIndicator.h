/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LANE_TYPES_TILE_BORDER_INDICATOR_H
#define NDS_LANE_TYPES_TILE_BORDER_INDICATOR_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace lane
{
namespace types
{

enum class TileBorderIndicator : uint8_t
{
    NORTH = UINT8_C(0),
    NORTH_EAST = UINT8_C(1),
    EAST = UINT8_C(2),
    SOUTH_EAST = UINT8_C(3),
    SOUTH = UINT8_C(4),
    SOUTH_WEST = UINT8_C(5),
    WEST = UINT8_C(6),
    NORTH_WEST = UINT8_C(7)
};

} // namespace types
} // namespace lane
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for TileBorderIndicator enumeration.
template <>
struct EnumTraits<::nds::lane::types::TileBorderIndicator>
{
    static constexpr ::std::array<const char*, 8> names =
    {{
        "NORTH",
        "NORTH_EAST",
        "EAST",
        "SOUTH_EAST",
        "SOUTH",
        "SOUTH_WEST",
        "WEST",
        "NORTH_WEST"
    }};

    static constexpr ::std::array<::nds::lane::types::TileBorderIndicator, 8> values =
    {{
        ::nds::lane::types::TileBorderIndicator::NORTH,
        ::nds::lane::types::TileBorderIndicator::NORTH_EAST,
        ::nds::lane::types::TileBorderIndicator::EAST,
        ::nds::lane::types::TileBorderIndicator::SOUTH_EAST,
        ::nds::lane::types::TileBorderIndicator::SOUTH,
        ::nds::lane::types::TileBorderIndicator::SOUTH_WEST,
        ::nds::lane::types::TileBorderIndicator::WEST,
        ::nds::lane::types::TileBorderIndicator::NORTH_WEST
    }};

    static constexpr const char* enumName = "TileBorderIndicator";
};

template <>
size_t enumToOrdinal<::nds::lane::types::TileBorderIndicator>(::nds::lane::types::TileBorderIndicator value);

template <>
::nds::lane::types::TileBorderIndicator valueToEnum<::nds::lane::types::TileBorderIndicator>(
        typename ::std::underlying_type<::nds::lane::types::TileBorderIndicator>::type rawValue);

template <>
uint32_t enumHashCode<::nds::lane::types::TileBorderIndicator>(::nds::lane::types::TileBorderIndicator value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::lane::types::TileBorderIndicator>(::zserio::DeltaContext& context, ::nds::lane::types::TileBorderIndicator value);

template <>
size_t bitSizeOf<::nds::lane::types::TileBorderIndicator>(::nds::lane::types::TileBorderIndicator value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::lane::types::TileBorderIndicator>(::zserio::DeltaContext& context, ::nds::lane::types::TileBorderIndicator value);

template <>
size_t initializeOffsets<::nds::lane::types::TileBorderIndicator>(size_t bitPosition, ::nds::lane::types::TileBorderIndicator value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::lane::types::TileBorderIndicator>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::lane::types::TileBorderIndicator value);

template <>
::nds::lane::types::TileBorderIndicator read<::nds::lane::types::TileBorderIndicator>(::zserio::BitStreamReader& in);

template <>
::nds::lane::types::TileBorderIndicator read<::nds::lane::types::TileBorderIndicator, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::lane::types::TileBorderIndicator>(::zserio::BitStreamWriter& out, ::nds::lane::types::TileBorderIndicator value);

template <>
void write<::zserio::DeltaContext, ::nds::lane::types::TileBorderIndicator>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::lane::types::TileBorderIndicator value);

} // namespace zserio

#endif // NDS_LANE_TYPES_TILE_BORDER_INDICATOR_H
