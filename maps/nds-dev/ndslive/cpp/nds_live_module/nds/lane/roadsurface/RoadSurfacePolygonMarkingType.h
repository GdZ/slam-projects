/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_MARKING_TYPE_H
#define NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_MARKING_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace lane
{
namespace roadsurface
{

enum class RoadSurfacePolygonMarkingType : uint32_t
{
    UNKNOWN = UINT32_C(0),
    DASH = UINT32_C(1),
    TEXT = UINT32_C(2),
    ARROW_STRAIGHT = UINT32_C(3),
    ARROW_LEFT = UINT32_C(4),
    ARROW_RIGHT = UINT32_C(5),
    ARROW_STRAIGHT_AND_LEFT = UINT32_C(6),
    ARROW_STRAIGHT_AND_RIGHT = UINT32_C(7),
    ARROW_LEFT_AND_RIGHT = UINT32_C(8),
    ARROW_SLIGHT_LEFT = UINT32_C(9),
    ARROW_SLIGHT_RIGHT = UINT32_C(10),
    ARROW_U_TURN = UINT32_C(11),
    ARROW_STRAIGHT_AND_U_TURN = UINT32_C(12),
    ARROW_LEFT_AND_U_TURN = UINT32_C(13),
    ARROW_RIGHT_AND_U_TURN = UINT32_C(14),
    SIGN = UINT32_C(15),
    YIELD_INDICATION = UINT32_C(16),
    VISUAL_SPEED_BUMP = UINT32_C(17),
    SHADED_AREA = UINT32_C(18)
};

} // namespace roadsurface
} // namespace lane
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for RoadSurfacePolygonMarkingType enumeration.
template <>
struct EnumTraits<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>
{
    static constexpr ::std::array<const char*, 19> names =
    {{
        "UNKNOWN",
        "DASH",
        "TEXT",
        "ARROW_STRAIGHT",
        "ARROW_LEFT",
        "ARROW_RIGHT",
        "ARROW_STRAIGHT_AND_LEFT",
        "ARROW_STRAIGHT_AND_RIGHT",
        "ARROW_LEFT_AND_RIGHT",
        "ARROW_SLIGHT_LEFT",
        "ARROW_SLIGHT_RIGHT",
        "ARROW_U_TURN",
        "ARROW_STRAIGHT_AND_U_TURN",
        "ARROW_LEFT_AND_U_TURN",
        "ARROW_RIGHT_AND_U_TURN",
        "SIGN",
        "YIELD_INDICATION",
        "VISUAL_SPEED_BUMP",
        "SHADED_AREA"
    }};

    static constexpr ::std::array<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType, 19> values =
    {{
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::UNKNOWN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::DASH,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::TEXT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_STRAIGHT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_LEFT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_RIGHT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_STRAIGHT_AND_LEFT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_STRAIGHT_AND_RIGHT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_LEFT_AND_RIGHT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_SLIGHT_LEFT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_SLIGHT_RIGHT,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_U_TURN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_STRAIGHT_AND_U_TURN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_LEFT_AND_U_TURN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::ARROW_RIGHT_AND_U_TURN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::SIGN,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::YIELD_INDICATION,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::VISUAL_SPEED_BUMP,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType::SHADED_AREA
    }};

    static constexpr const char* enumName = "RoadSurfacePolygonMarkingType";
};

template <>
size_t enumToOrdinal<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonMarkingType valueToEnum<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(
        typename ::std::underlying_type<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
size_t bitSizeOf<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
size_t initializeOffsets<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(size_t bitPosition, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonMarkingType read<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::BitStreamReader& in);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonMarkingType read<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::BitStreamWriter& out, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

template <>
void write<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::lane::roadsurface::RoadSurfacePolygonMarkingType value);

} // namespace zserio

#endif // NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_MARKING_TYPE_H
