/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_LOGICAL_TYPE_H
#define NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_LOGICAL_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace lane
{
namespace roadsurface
{

enum class RoadSurfacePolygonLogicalType : uint32_t
{
    UNKNOWN = UINT32_C(0),
    CROSSWALK = UINT32_C(1),
    BICYCLE_CROSSING = UINT32_C(2),
    INTERSECTION = UINT32_C(3),
    MARKING_POLYGON = UINT32_C(4),
    GORE = UINT32_C(5),
    WALKING_AREA = UINT32_C(6),
    DRIVEWAY = UINT32_C(7),
    ROUNDABOUT = UINT32_C(8),
    PEDESTRIAN_WAITING_AREA = UINT32_C(9),
    BICYCLE_WAITING_AREA = UINT32_C(10),
    PARKING = UINT32_C(11),
    CONSTRUCTION_AREA = UINT32_C(12),
    BUS_STOP = UINT32_C(13),
    TRAM_STOP = UINT32_C(14),
    TRAM_CROSSING = UINT32_C(15),
    TRAM_TRACK = UINT32_C(16),
    NO_STOP_ZONE = UINT32_C(17),
    DRIVABLE = UINT32_C(18),
    NON_DRIVABLE = UINT32_C(19),
    UNDESIRABLE = UINT32_C(20)
};

} // namespace roadsurface
} // namespace lane
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for RoadSurfacePolygonLogicalType enumeration.
template <>
struct EnumTraits<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>
{
    static constexpr ::std::array<const char*, 21> names =
    {{
        "UNKNOWN",
        "CROSSWALK",
        "BICYCLE_CROSSING",
        "INTERSECTION",
        "MARKING_POLYGON",
        "GORE",
        "WALKING_AREA",
        "DRIVEWAY",
        "ROUNDABOUT",
        "PEDESTRIAN_WAITING_AREA",
        "BICYCLE_WAITING_AREA",
        "PARKING",
        "CONSTRUCTION_AREA",
        "BUS_STOP",
        "TRAM_STOP",
        "TRAM_CROSSING",
        "TRAM_TRACK",
        "NO_STOP_ZONE",
        "DRIVABLE",
        "NON_DRIVABLE",
        "UNDESIRABLE"
    }};

    static constexpr ::std::array<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType, 21> values =
    {{
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::UNKNOWN,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::CROSSWALK,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::BICYCLE_CROSSING,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::INTERSECTION,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::MARKING_POLYGON,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::GORE,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::WALKING_AREA,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::DRIVEWAY,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::ROUNDABOUT,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::PEDESTRIAN_WAITING_AREA,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::BICYCLE_WAITING_AREA,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::PARKING,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::CONSTRUCTION_AREA,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::BUS_STOP,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::TRAM_STOP,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::TRAM_CROSSING,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::TRAM_TRACK,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::NO_STOP_ZONE,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::DRIVABLE,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::NON_DRIVABLE,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType::UNDESIRABLE
    }};

    static constexpr const char* enumName = "RoadSurfacePolygonLogicalType";
};

template <>
size_t enumToOrdinal<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonLogicalType valueToEnum<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(
        typename ::std::underlying_type<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
size_t bitSizeOf<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
size_t initializeOffsets<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(size_t bitPosition, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonLogicalType read<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::BitStreamReader& in);

template <>
::nds::lane::roadsurface::RoadSurfacePolygonLogicalType read<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::BitStreamWriter& out, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

template <>
void write<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::lane::roadsurface::RoadSurfacePolygonLogicalType value);

} // namespace zserio

#endif // NDS_LANE_ROADSURFACE_ROAD_SURFACE_POLYGON_LOGICAL_TYPE_H
