/**
 * Automatically generated by Zserio C++ extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef NDS_LANE_ROADSURFACE_ROAD_SURFACE_LINE_MARKING_TYPE_H
#define NDS_LANE_ROADSURFACE_ROAD_SURFACE_LINE_MARKING_TYPE_H

#include <zserio/CppRuntimeVersion.h>
#if CPP_EXTENSION_RUNTIME_VERSION_NUMBER != 2012000
    #error Version mismatch between Zserio runtime library and Zserio compiler!
    #error Please update your Zserio runtime library to the version 2.12.0.
#endif

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/DeltaContext.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace nds
{
namespace lane
{
namespace roadsurface
{

enum class RoadSurfaceLineMarkingType : uint32_t
{
    UNKNOWN = UINT32_C(0),
    LINE = UINT32_C(1),
    SOLID_LINE = UINT32_C(2),
    DASHED_LINE = UINT32_C(3),
    STOP_LINE = UINT32_C(4),
    WAITING_LINE = UINT32_C(5)
};

} // namespace roadsurface
} // namespace lane
} // namespace nds

namespace zserio
{

// This is full specialization of enumeration traits and methods for RoadSurfaceLineMarkingType enumeration.
template <>
struct EnumTraits<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>
{
    static constexpr ::std::array<const char*, 6> names =
    {{
        "UNKNOWN",
        "LINE",
        "SOLID_LINE",
        "DASHED_LINE",
        "STOP_LINE",
        "WAITING_LINE"
    }};

    static constexpr ::std::array<::nds::lane::roadsurface::RoadSurfaceLineMarkingType, 6> values =
    {{
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::UNKNOWN,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::LINE,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::SOLID_LINE,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::DASHED_LINE,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::STOP_LINE,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType::WAITING_LINE
    }};

    static constexpr const char* enumName = "RoadSurfaceLineMarkingType";
};

template <>
size_t enumToOrdinal<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
::nds::lane::roadsurface::RoadSurfaceLineMarkingType valueToEnum<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(
        typename ::std::underlying_type<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>::type rawValue);

template <>
uint32_t enumHashCode<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
void initPackingContext<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
size_t bitSizeOf<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
size_t bitSizeOf<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::DeltaContext& context, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
size_t initializeOffsets<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(size_t bitPosition, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
size_t initializeOffsets<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::DeltaContext& context, size_t bitPosition,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
::nds::lane::roadsurface::RoadSurfaceLineMarkingType read<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::BitStreamReader& in);

template <>
::nds::lane::roadsurface::RoadSurfaceLineMarkingType read<::nds::lane::roadsurface::RoadSurfaceLineMarkingType, ::zserio::DeltaContext>(::zserio::DeltaContext& context, ::zserio::BitStreamReader& in);

template <>
void write<::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::BitStreamWriter& out, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

template <>
void write<::zserio::DeltaContext, ::nds::lane::roadsurface::RoadSurfaceLineMarkingType>(::zserio::DeltaContext& context, ::zserio::BitStreamWriter& out,
        ::nds::lane::roadsurface::RoadSurfaceLineMarkingType value);

} // namespace zserio

#endif // NDS_LANE_ROADSURFACE_ROAD_SURFACE_LINE_MARKING_TYPE_H
