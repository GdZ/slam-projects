# Automatically generated by Zserio Python extension version 2.12.0.
# Generator setup: writerCode, pubsubCode, serviceCode, sqlCode

from __future__ import annotations

import typing
import zserio

class DisplayMesh3dType(zserio.Enum):
    MESH_3D = 0
    BUILDING = 1
    PRIVATE_HOME_RESIDENTIAL = 2
    COMMERCIAL_BUILDING = 3
    CONVENTION_EXHIBITION_CENTER = 4
    RETAIL_BUILDING = 5
    SHOPPING_CENTER = 6
    PETROL_STATION = 7
    RESTAURANT = 8
    HOTEL_OR_MOTEL = 9
    DAM = 10
    LIGHT_HOUSE = 11
    NO_WALLS = 12
    MULTI_STOREY = 13
    OTHER_FACILITY = 14
    TOWER = 15
    INDUSTRIAL_BUILDING = 16
    TRANSPORTATION_BUILDING = 17
    PUBLIC_BUILDING = 18
    POLICE_OFFICE = 19
    FIRE_DEPARTMENT = 20
    POST_OFFICE = 21
    THEATER = 22
    MUSEUM = 23
    LIBRARY = 24
    INSTITUTION = 25
    RELIGIOUS_BUILDING = 26
    CHURCH = 27
    SYNAGOGUE = 28
    MOSQUE = 29
    TEMPLE = 30
    SHRINE = 31
    ABBEY = 32
    MONASTERY = 33
    BUILDING_GROUND = 34
    PAVED = 35
    SAND = 36
    MEMORIAL_GROUND = 37
    MUSEUM_GROUND = 38
    HOSPITAL_GROUND = 39
    LIBRARY_GROUND = 40
    SCHOOL_GROUND = 41
    STADIUM_GROUND = 42
    GOVERNMENT_OFFICE = 43
    GOVERNMENT_BUILDING = 44
    CITY_HALL = 45
    COURTHOUSE = 46
    PRISON = 47
    SUBWAY_PLATFORM = 48
    SUBWAY_STATION = 49
    SCHEMATIC_BUILDING = 50
    URBAN = 51
    URBAN_BRIDGE = 52
    URBAN_CARRIAGEWAY_DIVIDER = 53
    URBAN_RAILWAY_BRIDGE = 54
    URBAN_RAILWAY_CROSSING = 55
    URBAN_TUNNEL = 56
    URBAN_WALKWAY = 57
    CONTINUOUS_URBAN = 58
    DISCONTINUOUS_URBAN = 59
    ARTIFICIAL = 60
    INDUSTRIAL_COMMERCIAL_TRANSPORT = 61
    INDUSTRIAL_COMMERCIAL_UNITS = 62
    MILITARY_BASE = 63
    TRAFFIC = 64
    TRAFFIC_PEDESTRIAN = 65
    TRAFFIC_ROAD = 66
    TRAFFIC_RAILWAY = 67
    TRAFFIC_PARKING = 68
    TRAFFIC_PARKING_GARAGE = 69
    TRAFFIC_PARKING_LOT = 70
    CAR_RACETRACK = 71
    UNDERPASS = 72
    CENTER = 73
    CITY_MAP_COVERAGE = 74
    PERIPHERY = 75
    POSTAL_DISTRICT = 76
    GARDEN_PATH = 77
    PORT_FACILITIES = 78
    AIRPORT = 79
    AIRPORT_RUNWAY = 80
    MINE_DUMP = 81
    MINERAL_EXTRACTION_SITE = 82
    DUMP = 83
    CONSTRUCTION = 84
    VEGETATED = 85
    GREEN_URBAN = 86
    PARK = 87
    CEMETERY = 88
    SPORT_LEISURE = 89
    SPORTS_COMPLEX = 90
    AMUSEMENT_PARK = 91
    ARTS_CENTER = 92
    CAMPING_SITE = 93
    GOLF_COURSE = 94
    HIPPODROME = 95
    HOLIDAY = 96
    RECREATIONAL = 97
    REST_AREA = 98
    SPORTS_HALL = 99
    STADIUM = 100
    WALKING_TERRAIN = 101
    ZOO = 102
    SKI = 103
    SWIMMING_POOL = 104
    RAILWAY_STATION = 105
    FERRY_TERMINAL = 106
    BUS_STATION = 107
    MARINA = 108
    AGRICULTURAL = 109
    ARABLE = 110
    NON_IRRIGATED = 111
    PERMANENTLY_IRRIGATED = 112
    RICE_FIELD = 113
    PERMANENT_CROP = 114
    TREE_BERRY_PLANTATION = 115
    VINEYARD = 116
    OLIVE_GROVES = 117
    HETEROGENEOUS = 118
    COMPLEX_CULTIVATION = 119
    ANNUAL_PERMANENT = 120
    AGRO_FORESTRY = 121
    AGRICULTURAL_AND_NATURAL = 122
    PASTURE_RANGELAND = 123
    PASTURE = 124
    RANGELAND = 125
    FOREST_SEMI_NATURAL = 126
    FOREST = 127
    LEAVED_FOREST = 128
    CONIFEROUS = 129
    MIXED_FOREST = 130
    SCRUB = 131
    GRASSLAND = 132
    MOOR_HEATH = 133
    SCLEROPHYLLOUS = 134
    WOODLAND = 135
    OPEN_SPACE = 136
    ROCK = 137
    GLACIER = 138
    BURNT = 139
    SPARSELY_VEGETATED = 140
    BEACH_DUNE = 141
    WETLAND = 142
    INLAND_WETLAND = 143
    INLAND_MARSH = 144
    PEATBOG = 145
    FORESTED_WETLAND = 146
    COASTAL_WETLAND = 147
    SALT_MARSH = 148
    SALINE = 149
    INTERTIDAL_FLAT = 150
    ISLAND = 151
    WATER = 152
    INLAND_WATER = 153
    RIVER = 154
    CANAL = 155
    LAKE = 156
    RESERVOIR = 157
    BASIN = 158
    WADI = 159
    MARINE_WATER = 160
    SEA_OCEAN = 161
    COASTAL_LAGOON = 162
    ESTUARY = 163
    ADMIN = 164
    COUNTRY = 165
    SUB_COUNTRY_SET = 166
    SUB_COUNTRY = 167
    COUNTY = 168
    MUNICIPALITY = 169
    MUNICIPALITY_SUBDIVISION = 170
    NEIGHBORHOOD = 171
    CITY_BLOCK = 172
    ADMIN_AUTONOMOUS = 173
    NATIVE_TRIBE_RESERVATION = 174
    CONTOUR = 175
    NATIONAL_PARK = 176
    ENVIRONMENTAL_ZONE = 177
    TOLL_ZONE = 178
    EDUCATION_BUILDING = 179
    SCHOOL = 180
    UNIVERSITY_OR_COLLEGE = 181
    MEDICAL_BUILDING = 182
    HOSPITAL = 183
    EMERGENCY_SERVICE = 184
    CULTURE_BUILDING = 185
    HISTORICAL_BUILDING = 186
    TOURIST_BUILDING = 187
    CASTLE = 188
    FORTRESS = 189
    MONUMENT = 190
    VIEW = 191
    WATERMILL = 192
    WINDMILL = 193
    LEISURE_BUILDING = 194
    SPORT_BUILDING = 195
    TERRAIN = 196
    TRAFFIC_ROAD_PEDESTRIAN_CROSSING = 197
    TRAFFIC_ROAD_STOP_ZONE = 198
    TRAFFIC_ROAD_DECORATION = 199
    TRAFFIC_ROAD_STOP_LINE = 200
    TRAFFIC_ROAD_RESTRICTION = 201
    TRAFFIC_LANE = 202
    TRAFFIC_LANE_MARKING = 203
    TRAFFIC_LANE_SEPARATOR_MARKING = 204
    TRAFFIC_LANE_BICYCLE = 205
    TRAFFIC_LANE_BUS = 206
    TRAFFIC_LANE_TAXI = 207
    TRAFFIC_LANE_HOV = 208
    TRAFFIC_LANE_TOLL = 209
    TRAFFIC_LANE_TOLL_ETC = 210
    TRAFFIC_PARKING_ROW = 211
    TRAFFIC_PARKING_SPOT = 212

    @classmethod
    def from_name(cls: typing.Type['DisplayMesh3dType'], item_name: str) -> 'DisplayMesh3dType':
        if item_name == 'MESH_3D':
            item = DisplayMesh3dType.MESH_3D
        elif item_name == 'BUILDING':
            item = DisplayMesh3dType.BUILDING
        elif item_name == 'PRIVATE_HOME_RESIDENTIAL':
            item = DisplayMesh3dType.PRIVATE_HOME_RESIDENTIAL
        elif item_name == 'COMMERCIAL_BUILDING':
            item = DisplayMesh3dType.COMMERCIAL_BUILDING
        elif item_name == 'CONVENTION_EXHIBITION_CENTER':
            item = DisplayMesh3dType.CONVENTION_EXHIBITION_CENTER
        elif item_name == 'RETAIL_BUILDING':
            item = DisplayMesh3dType.RETAIL_BUILDING
        elif item_name == 'SHOPPING_CENTER':
            item = DisplayMesh3dType.SHOPPING_CENTER
        elif item_name == 'PETROL_STATION':
            item = DisplayMesh3dType.PETROL_STATION
        elif item_name == 'RESTAURANT':
            item = DisplayMesh3dType.RESTAURANT
        elif item_name == 'HOTEL_OR_MOTEL':
            item = DisplayMesh3dType.HOTEL_OR_MOTEL
        elif item_name == 'DAM':
            item = DisplayMesh3dType.DAM
        elif item_name == 'LIGHT_HOUSE':
            item = DisplayMesh3dType.LIGHT_HOUSE
        elif item_name == 'NO_WALLS':
            item = DisplayMesh3dType.NO_WALLS
        elif item_name == 'MULTI_STOREY':
            item = DisplayMesh3dType.MULTI_STOREY
        elif item_name == 'OTHER_FACILITY':
            item = DisplayMesh3dType.OTHER_FACILITY
        elif item_name == 'TOWER':
            item = DisplayMesh3dType.TOWER
        elif item_name == 'INDUSTRIAL_BUILDING':
            item = DisplayMesh3dType.INDUSTRIAL_BUILDING
        elif item_name == 'TRANSPORTATION_BUILDING':
            item = DisplayMesh3dType.TRANSPORTATION_BUILDING
        elif item_name == 'PUBLIC_BUILDING':
            item = DisplayMesh3dType.PUBLIC_BUILDING
        elif item_name == 'POLICE_OFFICE':
            item = DisplayMesh3dType.POLICE_OFFICE
        elif item_name == 'FIRE_DEPARTMENT':
            item = DisplayMesh3dType.FIRE_DEPARTMENT
        elif item_name == 'POST_OFFICE':
            item = DisplayMesh3dType.POST_OFFICE
        elif item_name == 'THEATER':
            item = DisplayMesh3dType.THEATER
        elif item_name == 'MUSEUM':
            item = DisplayMesh3dType.MUSEUM
        elif item_name == 'LIBRARY':
            item = DisplayMesh3dType.LIBRARY
        elif item_name == 'INSTITUTION':
            item = DisplayMesh3dType.INSTITUTION
        elif item_name == 'RELIGIOUS_BUILDING':
            item = DisplayMesh3dType.RELIGIOUS_BUILDING
        elif item_name == 'CHURCH':
            item = DisplayMesh3dType.CHURCH
        elif item_name == 'SYNAGOGUE':
            item = DisplayMesh3dType.SYNAGOGUE
        elif item_name == 'MOSQUE':
            item = DisplayMesh3dType.MOSQUE
        elif item_name == 'TEMPLE':
            item = DisplayMesh3dType.TEMPLE
        elif item_name == 'SHRINE':
            item = DisplayMesh3dType.SHRINE
        elif item_name == 'ABBEY':
            item = DisplayMesh3dType.ABBEY
        elif item_name == 'MONASTERY':
            item = DisplayMesh3dType.MONASTERY
        elif item_name == 'BUILDING_GROUND':
            item = DisplayMesh3dType.BUILDING_GROUND
        elif item_name == 'PAVED':
            item = DisplayMesh3dType.PAVED
        elif item_name == 'SAND':
            item = DisplayMesh3dType.SAND
        elif item_name == 'MEMORIAL_GROUND':
            item = DisplayMesh3dType.MEMORIAL_GROUND
        elif item_name == 'MUSEUM_GROUND':
            item = DisplayMesh3dType.MUSEUM_GROUND
        elif item_name == 'HOSPITAL_GROUND':
            item = DisplayMesh3dType.HOSPITAL_GROUND
        elif item_name == 'LIBRARY_GROUND':
            item = DisplayMesh3dType.LIBRARY_GROUND
        elif item_name == 'SCHOOL_GROUND':
            item = DisplayMesh3dType.SCHOOL_GROUND
        elif item_name == 'STADIUM_GROUND':
            item = DisplayMesh3dType.STADIUM_GROUND
        elif item_name == 'GOVERNMENT_OFFICE':
            item = DisplayMesh3dType.GOVERNMENT_OFFICE
        elif item_name == 'GOVERNMENT_BUILDING':
            item = DisplayMesh3dType.GOVERNMENT_BUILDING
        elif item_name == 'CITY_HALL':
            item = DisplayMesh3dType.CITY_HALL
        elif item_name == 'COURTHOUSE':
            item = DisplayMesh3dType.COURTHOUSE
        elif item_name == 'PRISON':
            item = DisplayMesh3dType.PRISON
        elif item_name == 'SUBWAY_PLATFORM':
            item = DisplayMesh3dType.SUBWAY_PLATFORM
        elif item_name == 'SUBWAY_STATION':
            item = DisplayMesh3dType.SUBWAY_STATION
        elif item_name == 'SCHEMATIC_BUILDING':
            item = DisplayMesh3dType.SCHEMATIC_BUILDING
        elif item_name == 'URBAN':
            item = DisplayMesh3dType.URBAN
        elif item_name == 'URBAN_BRIDGE':
            item = DisplayMesh3dType.URBAN_BRIDGE
        elif item_name == 'URBAN_CARRIAGEWAY_DIVIDER':
            item = DisplayMesh3dType.URBAN_CARRIAGEWAY_DIVIDER
        elif item_name == 'URBAN_RAILWAY_BRIDGE':
            item = DisplayMesh3dType.URBAN_RAILWAY_BRIDGE
        elif item_name == 'URBAN_RAILWAY_CROSSING':
            item = DisplayMesh3dType.URBAN_RAILWAY_CROSSING
        elif item_name == 'URBAN_TUNNEL':
            item = DisplayMesh3dType.URBAN_TUNNEL
        elif item_name == 'URBAN_WALKWAY':
            item = DisplayMesh3dType.URBAN_WALKWAY
        elif item_name == 'CONTINUOUS_URBAN':
            item = DisplayMesh3dType.CONTINUOUS_URBAN
        elif item_name == 'DISCONTINUOUS_URBAN':
            item = DisplayMesh3dType.DISCONTINUOUS_URBAN
        elif item_name == 'ARTIFICIAL':
            item = DisplayMesh3dType.ARTIFICIAL
        elif item_name == 'INDUSTRIAL_COMMERCIAL_TRANSPORT':
            item = DisplayMesh3dType.INDUSTRIAL_COMMERCIAL_TRANSPORT
        elif item_name == 'INDUSTRIAL_COMMERCIAL_UNITS':
            item = DisplayMesh3dType.INDUSTRIAL_COMMERCIAL_UNITS
        elif item_name == 'MILITARY_BASE':
            item = DisplayMesh3dType.MILITARY_BASE
        elif item_name == 'TRAFFIC':
            item = DisplayMesh3dType.TRAFFIC
        elif item_name == 'TRAFFIC_PEDESTRIAN':
            item = DisplayMesh3dType.TRAFFIC_PEDESTRIAN
        elif item_name == 'TRAFFIC_ROAD':
            item = DisplayMesh3dType.TRAFFIC_ROAD
        elif item_name == 'TRAFFIC_RAILWAY':
            item = DisplayMesh3dType.TRAFFIC_RAILWAY
        elif item_name == 'TRAFFIC_PARKING':
            item = DisplayMesh3dType.TRAFFIC_PARKING
        elif item_name == 'TRAFFIC_PARKING_GARAGE':
            item = DisplayMesh3dType.TRAFFIC_PARKING_GARAGE
        elif item_name == 'TRAFFIC_PARKING_LOT':
            item = DisplayMesh3dType.TRAFFIC_PARKING_LOT
        elif item_name == 'CAR_RACETRACK':
            item = DisplayMesh3dType.CAR_RACETRACK
        elif item_name == 'UNDERPASS':
            item = DisplayMesh3dType.UNDERPASS
        elif item_name == 'CENTER':
            item = DisplayMesh3dType.CENTER
        elif item_name == 'CITY_MAP_COVERAGE':
            item = DisplayMesh3dType.CITY_MAP_COVERAGE
        elif item_name == 'PERIPHERY':
            item = DisplayMesh3dType.PERIPHERY
        elif item_name == 'POSTAL_DISTRICT':
            item = DisplayMesh3dType.POSTAL_DISTRICT
        elif item_name == 'GARDEN_PATH':
            item = DisplayMesh3dType.GARDEN_PATH
        elif item_name == 'PORT_FACILITIES':
            item = DisplayMesh3dType.PORT_FACILITIES
        elif item_name == 'AIRPORT':
            item = DisplayMesh3dType.AIRPORT
        elif item_name == 'AIRPORT_RUNWAY':
            item = DisplayMesh3dType.AIRPORT_RUNWAY
        elif item_name == 'MINE_DUMP':
            item = DisplayMesh3dType.MINE_DUMP
        elif item_name == 'MINERAL_EXTRACTION_SITE':
            item = DisplayMesh3dType.MINERAL_EXTRACTION_SITE
        elif item_name == 'DUMP':
            item = DisplayMesh3dType.DUMP
        elif item_name == 'CONSTRUCTION':
            item = DisplayMesh3dType.CONSTRUCTION
        elif item_name == 'VEGETATED':
            item = DisplayMesh3dType.VEGETATED
        elif item_name == 'GREEN_URBAN':
            item = DisplayMesh3dType.GREEN_URBAN
        elif item_name == 'PARK':
            item = DisplayMesh3dType.PARK
        elif item_name == 'CEMETERY':
            item = DisplayMesh3dType.CEMETERY
        elif item_name == 'SPORT_LEISURE':
            item = DisplayMesh3dType.SPORT_LEISURE
        elif item_name == 'SPORTS_COMPLEX':
            item = DisplayMesh3dType.SPORTS_COMPLEX
        elif item_name == 'AMUSEMENT_PARK':
            item = DisplayMesh3dType.AMUSEMENT_PARK
        elif item_name == 'ARTS_CENTER':
            item = DisplayMesh3dType.ARTS_CENTER
        elif item_name == 'CAMPING_SITE':
            item = DisplayMesh3dType.CAMPING_SITE
        elif item_name == 'GOLF_COURSE':
            item = DisplayMesh3dType.GOLF_COURSE
        elif item_name == 'HIPPODROME':
            item = DisplayMesh3dType.HIPPODROME
        elif item_name == 'HOLIDAY':
            item = DisplayMesh3dType.HOLIDAY
        elif item_name == 'RECREATIONAL':
            item = DisplayMesh3dType.RECREATIONAL
        elif item_name == 'REST_AREA':
            item = DisplayMesh3dType.REST_AREA
        elif item_name == 'SPORTS_HALL':
            item = DisplayMesh3dType.SPORTS_HALL
        elif item_name == 'STADIUM':
            item = DisplayMesh3dType.STADIUM
        elif item_name == 'WALKING_TERRAIN':
            item = DisplayMesh3dType.WALKING_TERRAIN
        elif item_name == 'ZOO':
            item = DisplayMesh3dType.ZOO
        elif item_name == 'SKI':
            item = DisplayMesh3dType.SKI
        elif item_name == 'SWIMMING_POOL':
            item = DisplayMesh3dType.SWIMMING_POOL
        elif item_name == 'RAILWAY_STATION':
            item = DisplayMesh3dType.RAILWAY_STATION
        elif item_name == 'FERRY_TERMINAL':
            item = DisplayMesh3dType.FERRY_TERMINAL
        elif item_name == 'BUS_STATION':
            item = DisplayMesh3dType.BUS_STATION
        elif item_name == 'MARINA':
            item = DisplayMesh3dType.MARINA
        elif item_name == 'AGRICULTURAL':
            item = DisplayMesh3dType.AGRICULTURAL
        elif item_name == 'ARABLE':
            item = DisplayMesh3dType.ARABLE
        elif item_name == 'NON_IRRIGATED':
            item = DisplayMesh3dType.NON_IRRIGATED
        elif item_name == 'PERMANENTLY_IRRIGATED':
            item = DisplayMesh3dType.PERMANENTLY_IRRIGATED
        elif item_name == 'RICE_FIELD':
            item = DisplayMesh3dType.RICE_FIELD
        elif item_name == 'PERMANENT_CROP':
            item = DisplayMesh3dType.PERMANENT_CROP
        elif item_name == 'TREE_BERRY_PLANTATION':
            item = DisplayMesh3dType.TREE_BERRY_PLANTATION
        elif item_name == 'VINEYARD':
            item = DisplayMesh3dType.VINEYARD
        elif item_name == 'OLIVE_GROVES':
            item = DisplayMesh3dType.OLIVE_GROVES
        elif item_name == 'HETEROGENEOUS':
            item = DisplayMesh3dType.HETEROGENEOUS
        elif item_name == 'COMPLEX_CULTIVATION':
            item = DisplayMesh3dType.COMPLEX_CULTIVATION
        elif item_name == 'ANNUAL_PERMANENT':
            item = DisplayMesh3dType.ANNUAL_PERMANENT
        elif item_name == 'AGRO_FORESTRY':
            item = DisplayMesh3dType.AGRO_FORESTRY
        elif item_name == 'AGRICULTURAL_AND_NATURAL':
            item = DisplayMesh3dType.AGRICULTURAL_AND_NATURAL
        elif item_name == 'PASTURE_RANGELAND':
            item = DisplayMesh3dType.PASTURE_RANGELAND
        elif item_name == 'PASTURE':
            item = DisplayMesh3dType.PASTURE
        elif item_name == 'RANGELAND':
            item = DisplayMesh3dType.RANGELAND
        elif item_name == 'FOREST_SEMI_NATURAL':
            item = DisplayMesh3dType.FOREST_SEMI_NATURAL
        elif item_name == 'FOREST':
            item = DisplayMesh3dType.FOREST
        elif item_name == 'LEAVED_FOREST':
            item = DisplayMesh3dType.LEAVED_FOREST
        elif item_name == 'CONIFEROUS':
            item = DisplayMesh3dType.CONIFEROUS
        elif item_name == 'MIXED_FOREST':
            item = DisplayMesh3dType.MIXED_FOREST
        elif item_name == 'SCRUB':
            item = DisplayMesh3dType.SCRUB
        elif item_name == 'GRASSLAND':
            item = DisplayMesh3dType.GRASSLAND
        elif item_name == 'MOOR_HEATH':
            item = DisplayMesh3dType.MOOR_HEATH
        elif item_name == 'SCLEROPHYLLOUS':
            item = DisplayMesh3dType.SCLEROPHYLLOUS
        elif item_name == 'WOODLAND':
            item = DisplayMesh3dType.WOODLAND
        elif item_name == 'OPEN_SPACE':
            item = DisplayMesh3dType.OPEN_SPACE
        elif item_name == 'ROCK':
            item = DisplayMesh3dType.ROCK
        elif item_name == 'GLACIER':
            item = DisplayMesh3dType.GLACIER
        elif item_name == 'BURNT':
            item = DisplayMesh3dType.BURNT
        elif item_name == 'SPARSELY_VEGETATED':
            item = DisplayMesh3dType.SPARSELY_VEGETATED
        elif item_name == 'BEACH_DUNE':
            item = DisplayMesh3dType.BEACH_DUNE
        elif item_name == 'WETLAND':
            item = DisplayMesh3dType.WETLAND
        elif item_name == 'INLAND_WETLAND':
            item = DisplayMesh3dType.INLAND_WETLAND
        elif item_name == 'INLAND_MARSH':
            item = DisplayMesh3dType.INLAND_MARSH
        elif item_name == 'PEATBOG':
            item = DisplayMesh3dType.PEATBOG
        elif item_name == 'FORESTED_WETLAND':
            item = DisplayMesh3dType.FORESTED_WETLAND
        elif item_name == 'COASTAL_WETLAND':
            item = DisplayMesh3dType.COASTAL_WETLAND
        elif item_name == 'SALT_MARSH':
            item = DisplayMesh3dType.SALT_MARSH
        elif item_name == 'SALINE':
            item = DisplayMesh3dType.SALINE
        elif item_name == 'INTERTIDAL_FLAT':
            item = DisplayMesh3dType.INTERTIDAL_FLAT
        elif item_name == 'ISLAND':
            item = DisplayMesh3dType.ISLAND
        elif item_name == 'WATER':
            item = DisplayMesh3dType.WATER
        elif item_name == 'INLAND_WATER':
            item = DisplayMesh3dType.INLAND_WATER
        elif item_name == 'RIVER':
            item = DisplayMesh3dType.RIVER
        elif item_name == 'CANAL':
            item = DisplayMesh3dType.CANAL
        elif item_name == 'LAKE':
            item = DisplayMesh3dType.LAKE
        elif item_name == 'RESERVOIR':
            item = DisplayMesh3dType.RESERVOIR
        elif item_name == 'BASIN':
            item = DisplayMesh3dType.BASIN
        elif item_name == 'WADI':
            item = DisplayMesh3dType.WADI
        elif item_name == 'MARINE_WATER':
            item = DisplayMesh3dType.MARINE_WATER
        elif item_name == 'SEA_OCEAN':
            item = DisplayMesh3dType.SEA_OCEAN
        elif item_name == 'COASTAL_LAGOON':
            item = DisplayMesh3dType.COASTAL_LAGOON
        elif item_name == 'ESTUARY':
            item = DisplayMesh3dType.ESTUARY
        elif item_name == 'ADMIN':
            item = DisplayMesh3dType.ADMIN
        elif item_name == 'COUNTRY':
            item = DisplayMesh3dType.COUNTRY
        elif item_name == 'SUB_COUNTRY_SET':
            item = DisplayMesh3dType.SUB_COUNTRY_SET
        elif item_name == 'SUB_COUNTRY':
            item = DisplayMesh3dType.SUB_COUNTRY
        elif item_name == 'COUNTY':
            item = DisplayMesh3dType.COUNTY
        elif item_name == 'MUNICIPALITY':
            item = DisplayMesh3dType.MUNICIPALITY
        elif item_name == 'MUNICIPALITY_SUBDIVISION':
            item = DisplayMesh3dType.MUNICIPALITY_SUBDIVISION
        elif item_name == 'NEIGHBORHOOD':
            item = DisplayMesh3dType.NEIGHBORHOOD
        elif item_name == 'CITY_BLOCK':
            item = DisplayMesh3dType.CITY_BLOCK
        elif item_name == 'ADMIN_AUTONOMOUS':
            item = DisplayMesh3dType.ADMIN_AUTONOMOUS
        elif item_name == 'NATIVE_TRIBE_RESERVATION':
            item = DisplayMesh3dType.NATIVE_TRIBE_RESERVATION
        elif item_name == 'CONTOUR':
            item = DisplayMesh3dType.CONTOUR
        elif item_name == 'NATIONAL_PARK':
            item = DisplayMesh3dType.NATIONAL_PARK
        elif item_name == 'ENVIRONMENTAL_ZONE':
            item = DisplayMesh3dType.ENVIRONMENTAL_ZONE
        elif item_name == 'TOLL_ZONE':
            item = DisplayMesh3dType.TOLL_ZONE
        elif item_name == 'EDUCATION_BUILDING':
            item = DisplayMesh3dType.EDUCATION_BUILDING
        elif item_name == 'SCHOOL':
            item = DisplayMesh3dType.SCHOOL
        elif item_name == 'UNIVERSITY_OR_COLLEGE':
            item = DisplayMesh3dType.UNIVERSITY_OR_COLLEGE
        elif item_name == 'MEDICAL_BUILDING':
            item = DisplayMesh3dType.MEDICAL_BUILDING
        elif item_name == 'HOSPITAL':
            item = DisplayMesh3dType.HOSPITAL
        elif item_name == 'EMERGENCY_SERVICE':
            item = DisplayMesh3dType.EMERGENCY_SERVICE
        elif item_name == 'CULTURE_BUILDING':
            item = DisplayMesh3dType.CULTURE_BUILDING
        elif item_name == 'HISTORICAL_BUILDING':
            item = DisplayMesh3dType.HISTORICAL_BUILDING
        elif item_name == 'TOURIST_BUILDING':
            item = DisplayMesh3dType.TOURIST_BUILDING
        elif item_name == 'CASTLE':
            item = DisplayMesh3dType.CASTLE
        elif item_name == 'FORTRESS':
            item = DisplayMesh3dType.FORTRESS
        elif item_name == 'MONUMENT':
            item = DisplayMesh3dType.MONUMENT
        elif item_name == 'VIEW':
            item = DisplayMesh3dType.VIEW
        elif item_name == 'WATERMILL':
            item = DisplayMesh3dType.WATERMILL
        elif item_name == 'WINDMILL':
            item = DisplayMesh3dType.WINDMILL
        elif item_name == 'LEISURE_BUILDING':
            item = DisplayMesh3dType.LEISURE_BUILDING
        elif item_name == 'SPORT_BUILDING':
            item = DisplayMesh3dType.SPORT_BUILDING
        elif item_name == 'TERRAIN':
            item = DisplayMesh3dType.TERRAIN
        elif item_name == 'TRAFFIC_ROAD_PEDESTRIAN_CROSSING':
            item = DisplayMesh3dType.TRAFFIC_ROAD_PEDESTRIAN_CROSSING
        elif item_name == 'TRAFFIC_ROAD_STOP_ZONE':
            item = DisplayMesh3dType.TRAFFIC_ROAD_STOP_ZONE
        elif item_name == 'TRAFFIC_ROAD_DECORATION':
            item = DisplayMesh3dType.TRAFFIC_ROAD_DECORATION
        elif item_name == 'TRAFFIC_ROAD_STOP_LINE':
            item = DisplayMesh3dType.TRAFFIC_ROAD_STOP_LINE
        elif item_name == 'TRAFFIC_ROAD_RESTRICTION':
            item = DisplayMesh3dType.TRAFFIC_ROAD_RESTRICTION
        elif item_name == 'TRAFFIC_LANE':
            item = DisplayMesh3dType.TRAFFIC_LANE
        elif item_name == 'TRAFFIC_LANE_MARKING':
            item = DisplayMesh3dType.TRAFFIC_LANE_MARKING
        elif item_name == 'TRAFFIC_LANE_SEPARATOR_MARKING':
            item = DisplayMesh3dType.TRAFFIC_LANE_SEPARATOR_MARKING
        elif item_name == 'TRAFFIC_LANE_BICYCLE':
            item = DisplayMesh3dType.TRAFFIC_LANE_BICYCLE
        elif item_name == 'TRAFFIC_LANE_BUS':
            item = DisplayMesh3dType.TRAFFIC_LANE_BUS
        elif item_name == 'TRAFFIC_LANE_TAXI':
            item = DisplayMesh3dType.TRAFFIC_LANE_TAXI
        elif item_name == 'TRAFFIC_LANE_HOV':
            item = DisplayMesh3dType.TRAFFIC_LANE_HOV
        elif item_name == 'TRAFFIC_LANE_TOLL':
            item = DisplayMesh3dType.TRAFFIC_LANE_TOLL
        elif item_name == 'TRAFFIC_LANE_TOLL_ETC':
            item = DisplayMesh3dType.TRAFFIC_LANE_TOLL_ETC
        elif item_name == 'TRAFFIC_PARKING_ROW':
            item = DisplayMesh3dType.TRAFFIC_PARKING_ROW
        elif item_name == 'TRAFFIC_PARKING_SPOT':
            item = DisplayMesh3dType.TRAFFIC_PARKING_SPOT
        else:
            raise zserio.PythonRuntimeException(f"Enum item '{item_name}' doesn't exist in enum 'DisplayMesh3dType'!")

        return item

    @classmethod
    def from_reader(cls: typing.Type['DisplayMesh3dType'], reader: zserio.BitStreamReader) -> 'DisplayMesh3dType':
        return cls(reader.read_varuint16())

    @classmethod
    def from_reader_packed(cls: typing.Type['DisplayMesh3dType'],
                           delta_context: zserio.array.DeltaContext,
                           reader: zserio.BitStreamReader) -> 'DisplayMesh3dType':
        return cls(delta_context.read(zserio.array.VarUInt16ArrayTraits(),
                                      reader))

    def __hash__(self) -> int:
        result = zserio.hashcode.HASH_SEED
        result = zserio.hashcode.calc_hashcode_int32(result, self.value)
        return result

    @staticmethod
    def create_packing_context() -> zserio.array.DeltaContext:
        return zserio.array.DeltaContext()

    def init_packing_context(self, delta_context: zserio.array.DeltaContext) -> None:
        delta_context.init(zserio.array.VarUInt16ArrayTraits(),
                           self.value)

    def bitsizeof(self, _bitposition: int = 0) -> int:
        return zserio.bitsizeof.bitsizeof_varuint16(self.value)

    def bitsizeof_packed(self, delta_context: zserio.array.DeltaContext, _bitposition: int) -> int:
        return delta_context.bitsizeof(zserio.array.VarUInt16ArrayTraits(),
                                       self.value)

    def initialize_offsets(self, bitposition: int = 0) -> int:
        return bitposition + self.bitsizeof(bitposition)

    def initialize_offsets_packed(self, delta_context: zserio.array.DeltaContext, bitposition: int) -> int:
        return bitposition + self.bitsizeof_packed(delta_context, bitposition)

    def write(self, writer: zserio.BitStreamWriter) -> None:
        writer.write_varuint16(self.value)

    def write_packed(self, delta_context: zserio.array.DeltaContext, writer: zserio.BitStreamWriter) -> None:
        delta_context.write(zserio.array.VarUInt16ArrayTraits(), writer, self.value)
