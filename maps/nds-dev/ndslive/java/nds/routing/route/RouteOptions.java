/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.routing.route;

public class RouteOptions implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            weight_ = new zserio.runtime.array.DeltaContext();
            type_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getWeight()
        {
            return weight_;
        }

        public zserio.runtime.array.DeltaContext getType()
        {
            return type_;
        }

        private zserio.runtime.array.DeltaContext weight_;
        private zserio.runtime.array.DeltaContext type_;
    };

    public RouteOptions()
    {
    }

    public RouteOptions(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RouteOptions(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RouteOptions(
            boolean avoid_,
            java.lang.Short weight_,
            nds.routing.types.RouteOptionType type_)
    {
        setAvoid(avoid_);
        setWeight(weight_);
        setType(type_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        if (isWeightUsed())
        {
            zserioContext.getWeight().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(weight_));
        }
        type_.initPackingContext(zserioContext.getType());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;
        if (isWeightUsed())
        {
            endBitPosition += 8;
        }
        endBitPosition += type_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;
        if (isWeightUsed())
        {
            endBitPosition += zserioContext.getWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(weight_));
        }
        endBitPosition += type_.bitSizeOf(zserioContext.getType(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public boolean getAvoid()
    {
        return avoid_;
    }

    public void setAvoid(boolean avoid_)
    {
        this.avoid_ = avoid_;
    }

    public java.lang.Short getWeight()
    {
        return weight_;
    }

    public void setWeight(java.lang.Short weight_)
    {
        this.weight_ = weight_;
    }

    public boolean isWeightUsed()
    {
        return isWeightSet();
    }

    public boolean isWeightSet()
    {
        return (weight_ != null);
    }

    public void resetWeight()
    {
        this.weight_ = null;
    }

    public nds.routing.types.RouteOptionType getType()
    {
        return type_;
    }

    public void setType(nds.routing.types.RouteOptionType type_)
    {
        this.type_ = type_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RouteOptions)
        {
            final RouteOptions that = (RouteOptions)obj;

            return
                    avoid_ == that.avoid_ &&
                    ((!isWeightUsed()) ? !that.isWeightUsed() :
                        ((weight_ == null) ? that.weight_ == null : weight_.equals(that.weight_))) &&
                    ((type_ == null) ? that.type_ == null : type_.getValue() == that.type_.getValue());
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, avoid_);
        if (isWeightUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, weight_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, type_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        avoid_ = in.readBool();

        if (in.readBool())
        {
            weight_ = in.readUnsignedByte();
        }

        type_ = nds.routing.types.RouteOptionType.readEnum(in);

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        avoid_ = in.readBool();

        if (in.readBool())
        {
            weight_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                    zserioContext.getWeight().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();
        }

        type_ = nds.routing.types.RouteOptionType.readEnum(zserioContext.getType(), in);

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;
        if (isWeightUsed())
        {
            endBitPosition += 8;
        }
        endBitPosition += type_.bitSizeOf(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;
        if (isWeightUsed())
        {
            endBitPosition += zserioContext.getWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(weight_));
        }
        endBitPosition = type_.initializeOffsets(zserioContext.getType(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeBool(avoid_);

        if (isWeightUsed())
        {
            out.writeBool(true);
            out.writeUnsignedByte(weight_);
        }
        else
        {
            out.writeBool(false);
        }

        type_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        out.writeBool(avoid_);

        if (isWeightUsed())
        {
            out.writeBool(true);
            zserioContext.getWeight().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(weight_));
        }
        else
        {
            out.writeBool(false);
        }

        type_.write(zserioContext.getType(), out);
    }

    private void checkConstraints()
    {
        if (isWeightUsed() && !(getWeight() <= 100 && getWeight() != 0))
            throw new zserio.runtime.ConstraintError("Constraint violated at RouteOptions.weight!");
    }

    private boolean avoid_ = true;
    private java.lang.Short weight_;
    private nds.routing.types.RouteOptionType type_;
}
