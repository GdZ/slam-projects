/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.routing.guidance;

public class GuidanceName implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            guidanceNameClass_ = new zserio.runtime.array.DeltaContext();
            numNames_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getGuidanceNameClass()
        {
            return guidanceNameClass_;
        }

        public zserio.runtime.array.DeltaContext getNumNames()
        {
            return numNames_;
        }

        private zserio.runtime.array.DeltaContext guidanceNameClass_;
        private zserio.runtime.array.DeltaContext numNames_;
    };

    public GuidanceName()
    {
    }

    public GuidanceName(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public GuidanceName(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public GuidanceName(
            nds.routing.guidance.GuidanceNameClass guidanceNameClass_,
            short numNames_,
            nds.routing.guidance.GuidanceNameString[] nameStrings_)
    {
        setGuidanceNameClass(guidanceNameClass_);
        setNumNames(numNames_);
        setNameStrings(nameStrings_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        guidanceNameClass_.initPackingContext(zserioContext.getGuidanceNameClass());
        zserioContext.getNumNames().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numNames_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += guidanceNameClass_.bitSizeOf(endBitPosition);
        endBitPosition += 8;
        endBitPosition += nameStrings_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += guidanceNameClass_.bitSizeOf(zserioContext.getGuidanceNameClass(), endBitPosition);
        endBitPosition += zserioContext.getNumNames().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numNames_));
        endBitPosition += nameStrings_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.routing.guidance.GuidanceNameClass getGuidanceNameClass()
    {
        return guidanceNameClass_;
    }

    public void setGuidanceNameClass(nds.routing.guidance.GuidanceNameClass guidanceNameClass_)
    {
        this.guidanceNameClass_ = guidanceNameClass_;
    }

    public short getNumNames()
    {
        return numNames_;
    }

    public void setNumNames(short numNames_)
    {
        this.numNames_ = numNames_;
    }

    public nds.routing.guidance.GuidanceNameString[] getNameStrings()
    {
        return (nameStrings_ == null) ? null : nameStrings_.getRawArray();
    }

    public void setNameStrings(nds.routing.guidance.GuidanceNameString[] nameStrings_)
    {
        this.nameStrings_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.routing.guidance.GuidanceNameString.class, nameStrings_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.routing.guidance.GuidanceNameString>(new ZserioElementFactory_nameStrings()),
                zserio.runtime.array.ArrayType.NORMAL);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof GuidanceName)
        {
            final GuidanceName that = (GuidanceName)obj;

            return
                    ((guidanceNameClass_ == null) ? that.guidanceNameClass_ == null : guidanceNameClass_.getValue() == that.guidanceNameClass_.getValue()) &&
                    numNames_ == that.numNames_ &&
                    ((nameStrings_ == null) ? that.nameStrings_ == null : nameStrings_.equals(that.nameStrings_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, guidanceNameClass_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, numNames_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, nameStrings_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        guidanceNameClass_ = nds.routing.guidance.GuidanceNameClass.readEnum(in);

        numNames_ = in.readUnsignedByte();

        nameStrings_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.routing.guidance.GuidanceNameString.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.routing.guidance.GuidanceNameString>(new ZserioElementFactory_nameStrings()),
                zserio.runtime.array.ArrayType.NORMAL);
        nameStrings_.read(in, (int)(getNumNames()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        guidanceNameClass_ = nds.routing.guidance.GuidanceNameClass.readEnum(zserioContext.getGuidanceNameClass(), in);

        numNames_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getNumNames().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        nameStrings_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.routing.guidance.GuidanceNameString.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.routing.guidance.GuidanceNameString>(new ZserioElementFactory_nameStrings()),
                zserio.runtime.array.ArrayType.NORMAL);
        nameStrings_.readPacked(in, (int)(getNumNames()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += guidanceNameClass_.bitSizeOf(endBitPosition);
        endBitPosition += 8;
        endBitPosition = nameStrings_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = guidanceNameClass_.initializeOffsets(zserioContext.getGuidanceNameClass(), endBitPosition);
        endBitPosition += zserioContext.getNumNames().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numNames_));
        endBitPosition = nameStrings_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        guidanceNameClass_.write(out);

        out.writeUnsignedByte(numNames_);

        if (nameStrings_.size() != (int)(getNumNames()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field GuidanceName.nameStrings: " +
                    nameStrings_.size() + " != " + (int)(getNumNames()) + "!");
        }
        nameStrings_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        guidanceNameClass_.write(zserioContext.getGuidanceNameClass(), out);

        zserioContext.getNumNames().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numNames_));

        if (nameStrings_.size() != (int)(getNumNames()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field GuidanceName.nameStrings: " +
                    nameStrings_.size() + " != " + (int)(getNumNames()) + "!");
        }
        nameStrings_.writePacked(out);
    }

    private final class ZserioElementFactory_nameStrings implements zserio.runtime.array.PackableElementFactory<nds.routing.guidance.GuidanceNameString>
    {
        @Override
        public nds.routing.guidance.GuidanceNameString create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.routing.guidance.GuidanceNameString(in, (short)(getNumNames()));
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.routing.guidance.GuidanceNameString.ZserioPackingContext();
        }

        @Override
        public nds.routing.guidance.GuidanceNameString create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.routing.guidance.GuidanceNameString(context, in, (short)(getNumNames()));
        }
    }

    private nds.routing.guidance.GuidanceNameClass guidanceNameClass_;
    private short numNames_;
    private zserio.runtime.array.Array nameStrings_;
}
