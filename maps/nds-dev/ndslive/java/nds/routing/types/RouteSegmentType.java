/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.routing.types;

public enum RouteSegmentType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    DELAY((short)0),
    POLLUTION((short)1),
    TUNNEL((short)2),
    BRIDGE((short)3),
    FERRY((short)4),
    CAR_TRAIN((short)5),
    PUBLIC_TRANSPORT((short)6),
    MOTORWAY((short)7),
    UNPAVED((short)8),
    AUTOMATED_DRIVING_L3((short)9),
    AUTOMATED_DRIVING_L4((short)10),
    AUTOMATED_DRIVING_L5((short)11),
    LIMITED_MOBILE_DATA_COVERAGE((short)12),
    TRAFFIC_ENFORCEMENT_CAMERA((short)13),
    TRAFFIC_ENFORCEMENT_ZONE((short)14),
    TOLL((short)15),
    VIGNETTE((short)16),
    PEDESTRIAN((short)17),
    BIKE((short)18),
    SCOOTER((short)19),
    ENVIRONMENT_ZONE((short)20),
    USER_RESTRICTED_ACCESS((short)21),
    PHYSICAL_RESTRICTED_ACCESS((short)22),
    LEGAL_RESTRICTED_ACCESS((short)23);

    private RouteSegmentType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return 8;
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static RouteSegmentType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readUnsignedByte());
    }

    public static RouteSegmentType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), in)).get());
    }

    public static RouteSegmentType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return DELAY;
            case (short)1:
                return POLLUTION;
            case (short)2:
                return TUNNEL;
            case (short)3:
                return BRIDGE;
            case (short)4:
                return FERRY;
            case (short)5:
                return CAR_TRAIN;
            case (short)6:
                return PUBLIC_TRANSPORT;
            case (short)7:
                return MOTORWAY;
            case (short)8:
                return UNPAVED;
            case (short)9:
                return AUTOMATED_DRIVING_L3;
            case (short)10:
                return AUTOMATED_DRIVING_L4;
            case (short)11:
                return AUTOMATED_DRIVING_L5;
            case (short)12:
                return LIMITED_MOBILE_DATA_COVERAGE;
            case (short)13:
                return TRAFFIC_ENFORCEMENT_CAMERA;
            case (short)14:
                return TRAFFIC_ENFORCEMENT_ZONE;
            case (short)15:
                return TOLL;
            case (short)16:
                return VIGNETTE;
            case (short)17:
                return PEDESTRIAN;
            case (short)18:
                return BIKE;
            case (short)19:
                return SCOOTER;
            case (short)20:
                return ENVIRONMENT_ZONE;
            case (short)21:
                return USER_RESTRICTED_ACCESS;
            case (short)22:
                return PHYSICAL_RESTRICTED_ACCESS;
            case (short)23:
                return LEGAL_RESTRICTED_ACCESS;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration RouteSegmentType: " + value + "!");
        }
    }

    public static RouteSegmentType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("DELAY"))
            return DELAY;
        if (itemName.equals("POLLUTION"))
            return POLLUTION;
        if (itemName.equals("TUNNEL"))
            return TUNNEL;
        if (itemName.equals("BRIDGE"))
            return BRIDGE;
        if (itemName.equals("FERRY"))
            return FERRY;
        if (itemName.equals("CAR_TRAIN"))
            return CAR_TRAIN;
        if (itemName.equals("PUBLIC_TRANSPORT"))
            return PUBLIC_TRANSPORT;
        if (itemName.equals("MOTORWAY"))
            return MOTORWAY;
        if (itemName.equals("UNPAVED"))
            return UNPAVED;
        if (itemName.equals("AUTOMATED_DRIVING_L3"))
            return AUTOMATED_DRIVING_L3;
        if (itemName.equals("AUTOMATED_DRIVING_L4"))
            return AUTOMATED_DRIVING_L4;
        if (itemName.equals("AUTOMATED_DRIVING_L5"))
            return AUTOMATED_DRIVING_L5;
        if (itemName.equals("LIMITED_MOBILE_DATA_COVERAGE"))
            return LIMITED_MOBILE_DATA_COVERAGE;
        if (itemName.equals("TRAFFIC_ENFORCEMENT_CAMERA"))
            return TRAFFIC_ENFORCEMENT_CAMERA;
        if (itemName.equals("TRAFFIC_ENFORCEMENT_ZONE"))
            return TRAFFIC_ENFORCEMENT_ZONE;
        if (itemName.equals("TOLL"))
            return TOLL;
        if (itemName.equals("VIGNETTE"))
            return VIGNETTE;
        if (itemName.equals("PEDESTRIAN"))
            return PEDESTRIAN;
        if (itemName.equals("BIKE"))
            return BIKE;
        if (itemName.equals("SCOOTER"))
            return SCOOTER;
        if (itemName.equals("ENVIRONMENT_ZONE"))
            return ENVIRONMENT_ZONE;
        if (itemName.equals("USER_RESTRICTED_ACCESS"))
            return USER_RESTRICTED_ACCESS;
        if (itemName.equals("PHYSICAL_RESTRICTED_ACCESS"))
            return PHYSICAL_RESTRICTED_ACCESS;
        if (itemName.equals("LEGAL_RESTRICTED_ACCESS"))
            return LEGAL_RESTRICTED_ACCESS;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration RouteSegmentType!");
    }

    private short value;
}
