/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.localization.types;

public enum LandmarkMeshType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    TRAFFIC_LIGHT_BOX((short)0),
    BOX((short)1),
    PILLAR((short)2),
    STREET_LIGHTS((short)3),
    WALL((short)4),
    ACCESS_BOOTH((short)5),
    TICKET_MACHINE((short)6),
    BUILDING_CEILING_BEAM((short)7),
    BUILDING_COLUMN((short)8),
    BUILDING_CONNECTING_RAMP((short)9),
    BUILDING_STAIRS((short)10);

    private LandmarkMeshType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return 8;
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static LandmarkMeshType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readUnsignedByte());
    }

    public static LandmarkMeshType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), in)).get());
    }

    public static LandmarkMeshType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return TRAFFIC_LIGHT_BOX;
            case (short)1:
                return BOX;
            case (short)2:
                return PILLAR;
            case (short)3:
                return STREET_LIGHTS;
            case (short)4:
                return WALL;
            case (short)5:
                return ACCESS_BOOTH;
            case (short)6:
                return TICKET_MACHINE;
            case (short)7:
                return BUILDING_CEILING_BEAM;
            case (short)8:
                return BUILDING_COLUMN;
            case (short)9:
                return BUILDING_CONNECTING_RAMP;
            case (short)10:
                return BUILDING_STAIRS;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration LandmarkMeshType: " + value + "!");
        }
    }

    public static LandmarkMeshType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("TRAFFIC_LIGHT_BOX"))
            return TRAFFIC_LIGHT_BOX;
        if (itemName.equals("BOX"))
            return BOX;
        if (itemName.equals("PILLAR"))
            return PILLAR;
        if (itemName.equals("STREET_LIGHTS"))
            return STREET_LIGHTS;
        if (itemName.equals("WALL"))
            return WALL;
        if (itemName.equals("ACCESS_BOOTH"))
            return ACCESS_BOOTH;
        if (itemName.equals("TICKET_MACHINE"))
            return TICKET_MACHINE;
        if (itemName.equals("BUILDING_CEILING_BEAM"))
            return BUILDING_CEILING_BEAM;
        if (itemName.equals("BUILDING_COLUMN"))
            return BUILDING_COLUMN;
        if (itemName.equals("BUILDING_CONNECTING_RAMP"))
            return BUILDING_CONNECTING_RAMP;
        if (itemName.equals("BUILDING_STAIRS"))
            return BUILDING_STAIRS;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration LandmarkMeshType!");
    }

    private short value;
}
