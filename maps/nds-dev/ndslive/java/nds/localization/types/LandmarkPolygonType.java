/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.localization.types;

public enum LandmarkPolygonType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    SIGN_BOUNDING_BOX((short)0),
    SIGN((short)1),
    PERPENDICULAR_WALL((short)2),
    OVERHEAD_STRUCTURE((short)3),
    SPEED_BUMP((short)4),
    BUILDING_DOOR((short)5),
    BUILDING_WINDOW((short)6),
    BUILDING_ROOF((short)7),
    BUILDING_BRACE((short)8),
    FIDUCIAL_MARKER((short)9);

    private LandmarkPolygonType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return 8;
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static LandmarkPolygonType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readUnsignedByte());
    }

    public static LandmarkPolygonType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), in)).get());
    }

    public static LandmarkPolygonType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return SIGN_BOUNDING_BOX;
            case (short)1:
                return SIGN;
            case (short)2:
                return PERPENDICULAR_WALL;
            case (short)3:
                return OVERHEAD_STRUCTURE;
            case (short)4:
                return SPEED_BUMP;
            case (short)5:
                return BUILDING_DOOR;
            case (short)6:
                return BUILDING_WINDOW;
            case (short)7:
                return BUILDING_ROOF;
            case (short)8:
                return BUILDING_BRACE;
            case (short)9:
                return FIDUCIAL_MARKER;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration LandmarkPolygonType: " + value + "!");
        }
    }

    public static LandmarkPolygonType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("SIGN_BOUNDING_BOX"))
            return SIGN_BOUNDING_BOX;
        if (itemName.equals("SIGN"))
            return SIGN;
        if (itemName.equals("PERPENDICULAR_WALL"))
            return PERPENDICULAR_WALL;
        if (itemName.equals("OVERHEAD_STRUCTURE"))
            return OVERHEAD_STRUCTURE;
        if (itemName.equals("SPEED_BUMP"))
            return SPEED_BUMP;
        if (itemName.equals("BUILDING_DOOR"))
            return BUILDING_DOOR;
        if (itemName.equals("BUILDING_WINDOW"))
            return BUILDING_WINDOW;
        if (itemName.equals("BUILDING_ROOF"))
            return BUILDING_ROOF;
        if (itemName.equals("BUILDING_BRACE"))
            return BUILDING_BRACE;
        if (itemName.equals("FIDUCIAL_MARKER"))
            return FIDUCIAL_MARKER;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration LandmarkPolygonType!");
    }

    private short value;
}
