/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.localization.layer;

public class RoadOccupancyGridLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            shift_ = new zserio.runtime.array.DeltaContext();
            roadAttributeMaps_ = new nds.localization.instantiations.OccupancyGridRoadAttributeMapList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getShift()
        {
            return shift_;
        }

        public nds.localization.instantiations.OccupancyGridRoadAttributeMapList.ZserioPackingContext getRoadAttributeMaps()
        {
            return roadAttributeMaps_;
        }

        private zserio.runtime.array.DeltaContext shift_;
        private nds.localization.instantiations.OccupancyGridRoadAttributeMapList.ZserioPackingContext roadAttributeMaps_;
    };

    public RoadOccupancyGridLayer()
    {
    }

    public RoadOccupancyGridLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadOccupancyGridLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadOccupancyGridLayer(
            byte shift_,
            nds.localization.instantiations.OccupancyGridRoadAttributeMapList roadAttributeMaps_)
    {
        setShift(shift_);
        setRoadAttributeMaps(roadAttributeMaps_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getShift().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        roadAttributeMaps_.initPackingContext(zserioContext.getRoadAttributeMaps());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 5;
        endBitPosition += roadAttributeMaps_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        endBitPosition += roadAttributeMaps_.bitSizeOf(zserioContext.getRoadAttributeMaps(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public byte getShift()
    {
        return shift_;
    }

    public void setShift(byte shift_)
    {
        this.shift_ = shift_;
    }

    public nds.localization.instantiations.OccupancyGridRoadAttributeMapList getRoadAttributeMaps()
    {
        return roadAttributeMaps_;
    }

    public void setRoadAttributeMaps(nds.localization.instantiations.OccupancyGridRoadAttributeMapList roadAttributeMaps_)
    {
        this.roadAttributeMaps_ = roadAttributeMaps_;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.RELATION);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadOccupancyGridLayer)
        {
            final RoadOccupancyGridLayer that = (RoadOccupancyGridLayer)obj;

            return
                    shift_ == that.shift_ &&
                    ((roadAttributeMaps_ == null) ? that.roadAttributeMaps_ == null : roadAttributeMaps_.equals(that.roadAttributeMaps_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shift_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadAttributeMaps_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        shift_ = (byte)in.readBits(5);

        roadAttributeMaps_ = new nds.localization.instantiations.OccupancyGridRoadAttributeMapList(in, (byte)(getShift()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        shift_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShift().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        roadAttributeMaps_ = new nds.localization.instantiations.OccupancyGridRoadAttributeMapList(zserioContext.getRoadAttributeMaps(), in, (byte)(getShift()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 5;
        endBitPosition = roadAttributeMaps_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        endBitPosition = roadAttributeMaps_.initializeOffsets(zserioContext.getRoadAttributeMaps(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeBits(shift_, 5);

        // check parameters
        if (roadAttributeMaps_.getCoordShift() != (byte)(getShift()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field RoadOccupancyGridLayer.roadAttributeMaps: " +
                    roadAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
        }
        roadAttributeMaps_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getShift().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));

        roadAttributeMaps_.write(zserioContext.getRoadAttributeMaps(), out);
    }

    private byte shift_;
    private nds.localization.instantiations.OccupancyGridRoadAttributeMapList roadAttributeMaps_;
}
