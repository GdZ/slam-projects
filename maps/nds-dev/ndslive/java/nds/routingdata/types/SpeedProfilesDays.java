/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.routingdata.types;

public class SpeedProfilesDays implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            numDays_ = new zserio.runtime.array.DeltaContext();
            baseSpeed_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getNumDays()
        {
            return numDays_;
        }

        public zserio.runtime.array.DeltaContext getBaseSpeed()
        {
            return baseSpeed_;
        }

        private zserio.runtime.array.DeltaContext numDays_;
        private zserio.runtime.array.DeltaContext baseSpeed_;
    };

    public SpeedProfilesDays()
    {
    }

    public SpeedProfilesDays(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public SpeedProfilesDays(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public SpeedProfilesDays(
            short numDays_,
            short baseSpeed_,
            short[] profiles_)
    {
        setNumDays(numDays_);
        setBaseSpeed(baseSpeed_);
        setProfiles(profiles_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNumDays().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numDays_));
        zserioContext.getBaseSpeed().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(baseSpeed_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += 8;
        endBitPosition += profiles_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumDays().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numDays_));
        endBitPosition += zserioContext.getBaseSpeed().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(baseSpeed_));
        endBitPosition += profiles_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public short getNumDays()
    {
        return numDays_;
    }

    public void setNumDays(short numDays_)
    {
        this.numDays_ = numDays_;
    }

    public short getBaseSpeed()
    {
        return baseSpeed_;
    }

    public void setBaseSpeed(short baseSpeed_)
    {
        this.baseSpeed_ = baseSpeed_;
    }

    public short[] getProfiles()
    {
        return (profiles_ == null) ? null : profiles_.getRawArray();
    }

    public void setProfiles(short[] profiles_)
    {
        this.profiles_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(profiles_),
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SpeedProfilesDays)
        {
            final SpeedProfilesDays that = (SpeedProfilesDays)obj;

            return
                    numDays_ == that.numDays_ &&
                    baseSpeed_ == that.baseSpeed_ &&
                    ((profiles_ == null) ? that.profiles_ == null : profiles_.equals(that.profiles_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, numDays_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, baseSpeed_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, profiles_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        numDays_ = in.readUnsignedByte();

        baseSpeed_ = in.readUnsignedByte();

        profiles_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(),
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
        profiles_.read(in, (int)(getNumDays()));

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        numDays_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getNumDays().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        baseSpeed_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getBaseSpeed().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        profiles_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(),
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
        profiles_.readPacked(in, (int)(getNumDays()));

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += 8;
        endBitPosition = profiles_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumDays().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numDays_));
        endBitPosition += zserioContext.getBaseSpeed().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(baseSpeed_));
        endBitPosition = profiles_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeUnsignedByte(numDays_);

        out.writeUnsignedByte(baseSpeed_);

        if (profiles_.size() != (int)(getNumDays()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field SpeedProfilesDays.profiles: " +
                    profiles_.size() + " != " + (int)(getNumDays()) + "!");
        }
        profiles_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        zserioContext.getNumDays().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numDays_));

        zserioContext.getBaseSpeed().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(baseSpeed_));

        if (profiles_.size() != (int)(getNumDays()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field SpeedProfilesDays.profiles: " +
                    profiles_.size() + " != " + (int)(getNumDays()) + "!");
        }
        profiles_.writePacked(out);
    }

    private void checkConstraints()
    {
        if (!(getBaseSpeed() > 0))
            throw new zserio.runtime.ConstraintError("Constraint violated at SpeedProfilesDays.baseSpeed!");
    }

    private short numDays_;
    private short baseSpeed_;
    private zserio.runtime.array.Array profiles_;
}
