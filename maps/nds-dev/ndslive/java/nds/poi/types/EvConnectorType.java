/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.types;

public enum EvConnectorType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    VDE_AR_E_2623_2_2((short)0),
    SAE_J1772((short)1),
    SMALL_PADDLE_INDUCTIVE((short)2),
    LARGE_PADDLE_INDUCTIVE((short)3),
    AVCON((short)4),
    TESLA((short)5),
    NEMA_5_20((short)6),
    TEPCO((short)7),
    HOUSEHOLD((short)8),
    SINGLE_PHASE_60309((short)9),
    IEC62196_2_T2O((short)10),
    IEC62196_2_T3O_16A((short)11),
    IEC62196_2_T3O_32A((short)12),
    IEC62196_2_T3O_32A_3PHASE((short)13),
    IEC62196_2_T1C((short)14),
    IEC62196_2_T2C_M13((short)15),
    IEC62196_2_T2C_M23((short)16),
    IEC62196_2_T3C_16A((short)17),
    IEC62196_2_T3C_32A((short)18),
    IEC62196_2_T3C_32A_3PHASE((short)19),
    COMBO_T1((short)20),
    COMBO_T2((short)21),
    GB_P2((short)22),
    GB_P3((short)23),
    BETTER_PLACE((short)24),
    MARECHAL((short)25),
    IEC309_2((short)26),
    GBT20234_M13_1P((short)27),
    GBT20234_M13_3P((short)28),
    GBT20234_M3_7P((short)29),
    GBT20234_M4_9P((short)30),
    DC_CHADEMO((short)31),
    DC_COMBO((short)32),
    AC_3PHASE((short)33),
    AC_SLOW((short)34),
    DOMESTIC_B_5_15((short)35),
    DOMESTIC_B_5_20((short)36),
    DOMESTIC_D((short)37),
    DOMESTIC_E((short)38),
    DOMESTIC_F((short)39),
    DOMESTIC_EF((short)40),
    DOMESTIC_G((short)41),
    DOMESTIC_H((short)42),
    DOMESTIC_I_ASNZ((short)43),
    DOMESTIC_I_CPCS((short)44),
    DOMESTIC_I_IRAM((short)45),
    DOMESTIC_J_TX3((short)46),
    DOMESTIC_J_T15((short)47),
    DOMESTIC_K((short)48),
    DOMESTIC_K_TH((short)49),
    DOMESTIC_L((short)50),
    DOMESTIC_M((short)51),
    DOMESTIC_IEC((short)52),
    TESLA_HIGH((short)53),
    TESLA_UNI((short)54),
    TESLA_SPARE((short)55),
    IEC61851_1((short)56),
    IEC60309_PNE((short)57),
    IEC60309_PNE_CEEPLUS((short)58),
    IEC60309_2PE((short)59),
    IEC60309_3PEN((short)60),
    IEC60309_3PNE((short)61),
    IEC60309_ASNZ((short)62),
    UNSPECIFIED((short)63);

    private EvConnectorType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(value);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt16(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static EvConnectorType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readVarUInt16());
    }

    public static EvConnectorType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get());
    }

    public static EvConnectorType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return VDE_AR_E_2623_2_2;
            case (short)1:
                return SAE_J1772;
            case (short)2:
                return SMALL_PADDLE_INDUCTIVE;
            case (short)3:
                return LARGE_PADDLE_INDUCTIVE;
            case (short)4:
                return AVCON;
            case (short)5:
                return TESLA;
            case (short)6:
                return NEMA_5_20;
            case (short)7:
                return TEPCO;
            case (short)8:
                return HOUSEHOLD;
            case (short)9:
                return SINGLE_PHASE_60309;
            case (short)10:
                return IEC62196_2_T2O;
            case (short)11:
                return IEC62196_2_T3O_16A;
            case (short)12:
                return IEC62196_2_T3O_32A;
            case (short)13:
                return IEC62196_2_T3O_32A_3PHASE;
            case (short)14:
                return IEC62196_2_T1C;
            case (short)15:
                return IEC62196_2_T2C_M13;
            case (short)16:
                return IEC62196_2_T2C_M23;
            case (short)17:
                return IEC62196_2_T3C_16A;
            case (short)18:
                return IEC62196_2_T3C_32A;
            case (short)19:
                return IEC62196_2_T3C_32A_3PHASE;
            case (short)20:
                return COMBO_T1;
            case (short)21:
                return COMBO_T2;
            case (short)22:
                return GB_P2;
            case (short)23:
                return GB_P3;
            case (short)24:
                return BETTER_PLACE;
            case (short)25:
                return MARECHAL;
            case (short)26:
                return IEC309_2;
            case (short)27:
                return GBT20234_M13_1P;
            case (short)28:
                return GBT20234_M13_3P;
            case (short)29:
                return GBT20234_M3_7P;
            case (short)30:
                return GBT20234_M4_9P;
            case (short)31:
                return DC_CHADEMO;
            case (short)32:
                return DC_COMBO;
            case (short)33:
                return AC_3PHASE;
            case (short)34:
                return AC_SLOW;
            case (short)35:
                return DOMESTIC_B_5_15;
            case (short)36:
                return DOMESTIC_B_5_20;
            case (short)37:
                return DOMESTIC_D;
            case (short)38:
                return DOMESTIC_E;
            case (short)39:
                return DOMESTIC_F;
            case (short)40:
                return DOMESTIC_EF;
            case (short)41:
                return DOMESTIC_G;
            case (short)42:
                return DOMESTIC_H;
            case (short)43:
                return DOMESTIC_I_ASNZ;
            case (short)44:
                return DOMESTIC_I_CPCS;
            case (short)45:
                return DOMESTIC_I_IRAM;
            case (short)46:
                return DOMESTIC_J_TX3;
            case (short)47:
                return DOMESTIC_J_T15;
            case (short)48:
                return DOMESTIC_K;
            case (short)49:
                return DOMESTIC_K_TH;
            case (short)50:
                return DOMESTIC_L;
            case (short)51:
                return DOMESTIC_M;
            case (short)52:
                return DOMESTIC_IEC;
            case (short)53:
                return TESLA_HIGH;
            case (short)54:
                return TESLA_UNI;
            case (short)55:
                return TESLA_SPARE;
            case (short)56:
                return IEC61851_1;
            case (short)57:
                return IEC60309_PNE;
            case (short)58:
                return IEC60309_PNE_CEEPLUS;
            case (short)59:
                return IEC60309_2PE;
            case (short)60:
                return IEC60309_3PEN;
            case (short)61:
                return IEC60309_3PNE;
            case (short)62:
                return IEC60309_ASNZ;
            case (short)63:
                return UNSPECIFIED;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration EvConnectorType: " + value + "!");
        }
    }

    public static EvConnectorType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("VDE_AR_E_2623_2_2"))
            return VDE_AR_E_2623_2_2;
        if (itemName.equals("SAE_J1772"))
            return SAE_J1772;
        if (itemName.equals("SMALL_PADDLE_INDUCTIVE"))
            return SMALL_PADDLE_INDUCTIVE;
        if (itemName.equals("LARGE_PADDLE_INDUCTIVE"))
            return LARGE_PADDLE_INDUCTIVE;
        if (itemName.equals("AVCON"))
            return AVCON;
        if (itemName.equals("TESLA"))
            return TESLA;
        if (itemName.equals("NEMA_5_20"))
            return NEMA_5_20;
        if (itemName.equals("TEPCO"))
            return TEPCO;
        if (itemName.equals("HOUSEHOLD"))
            return HOUSEHOLD;
        if (itemName.equals("SINGLE_PHASE_60309"))
            return SINGLE_PHASE_60309;
        if (itemName.equals("IEC62196_2_T2O"))
            return IEC62196_2_T2O;
        if (itemName.equals("IEC62196_2_T3O_16A"))
            return IEC62196_2_T3O_16A;
        if (itemName.equals("IEC62196_2_T3O_32A"))
            return IEC62196_2_T3O_32A;
        if (itemName.equals("IEC62196_2_T3O_32A_3PHASE"))
            return IEC62196_2_T3O_32A_3PHASE;
        if (itemName.equals("IEC62196_2_T1C"))
            return IEC62196_2_T1C;
        if (itemName.equals("IEC62196_2_T2C_M13"))
            return IEC62196_2_T2C_M13;
        if (itemName.equals("IEC62196_2_T2C_M23"))
            return IEC62196_2_T2C_M23;
        if (itemName.equals("IEC62196_2_T3C_16A"))
            return IEC62196_2_T3C_16A;
        if (itemName.equals("IEC62196_2_T3C_32A"))
            return IEC62196_2_T3C_32A;
        if (itemName.equals("IEC62196_2_T3C_32A_3PHASE"))
            return IEC62196_2_T3C_32A_3PHASE;
        if (itemName.equals("COMBO_T1"))
            return COMBO_T1;
        if (itemName.equals("COMBO_T2"))
            return COMBO_T2;
        if (itemName.equals("GB_P2"))
            return GB_P2;
        if (itemName.equals("GB_P3"))
            return GB_P3;
        if (itemName.equals("BETTER_PLACE"))
            return BETTER_PLACE;
        if (itemName.equals("MARECHAL"))
            return MARECHAL;
        if (itemName.equals("IEC309_2"))
            return IEC309_2;
        if (itemName.equals("GBT20234_M13_1P"))
            return GBT20234_M13_1P;
        if (itemName.equals("GBT20234_M13_3P"))
            return GBT20234_M13_3P;
        if (itemName.equals("GBT20234_M3_7P"))
            return GBT20234_M3_7P;
        if (itemName.equals("GBT20234_M4_9P"))
            return GBT20234_M4_9P;
        if (itemName.equals("DC_CHADEMO"))
            return DC_CHADEMO;
        if (itemName.equals("DC_COMBO"))
            return DC_COMBO;
        if (itemName.equals("AC_3PHASE"))
            return AC_3PHASE;
        if (itemName.equals("AC_SLOW"))
            return AC_SLOW;
        if (itemName.equals("DOMESTIC_B_5_15"))
            return DOMESTIC_B_5_15;
        if (itemName.equals("DOMESTIC_B_5_20"))
            return DOMESTIC_B_5_20;
        if (itemName.equals("DOMESTIC_D"))
            return DOMESTIC_D;
        if (itemName.equals("DOMESTIC_E"))
            return DOMESTIC_E;
        if (itemName.equals("DOMESTIC_F"))
            return DOMESTIC_F;
        if (itemName.equals("DOMESTIC_EF"))
            return DOMESTIC_EF;
        if (itemName.equals("DOMESTIC_G"))
            return DOMESTIC_G;
        if (itemName.equals("DOMESTIC_H"))
            return DOMESTIC_H;
        if (itemName.equals("DOMESTIC_I_ASNZ"))
            return DOMESTIC_I_ASNZ;
        if (itemName.equals("DOMESTIC_I_CPCS"))
            return DOMESTIC_I_CPCS;
        if (itemName.equals("DOMESTIC_I_IRAM"))
            return DOMESTIC_I_IRAM;
        if (itemName.equals("DOMESTIC_J_TX3"))
            return DOMESTIC_J_TX3;
        if (itemName.equals("DOMESTIC_J_T15"))
            return DOMESTIC_J_T15;
        if (itemName.equals("DOMESTIC_K"))
            return DOMESTIC_K;
        if (itemName.equals("DOMESTIC_K_TH"))
            return DOMESTIC_K_TH;
        if (itemName.equals("DOMESTIC_L"))
            return DOMESTIC_L;
        if (itemName.equals("DOMESTIC_M"))
            return DOMESTIC_M;
        if (itemName.equals("DOMESTIC_IEC"))
            return DOMESTIC_IEC;
        if (itemName.equals("TESLA_HIGH"))
            return TESLA_HIGH;
        if (itemName.equals("TESLA_UNI"))
            return TESLA_UNI;
        if (itemName.equals("TESLA_SPARE"))
            return TESLA_SPARE;
        if (itemName.equals("IEC61851_1"))
            return IEC61851_1;
        if (itemName.equals("IEC60309_PNE"))
            return IEC60309_PNE;
        if (itemName.equals("IEC60309_PNE_CEEPLUS"))
            return IEC60309_PNE_CEEPLUS;
        if (itemName.equals("IEC60309_2PE"))
            return IEC60309_2PE;
        if (itemName.equals("IEC60309_3PEN"))
            return IEC60309_3PEN;
        if (itemName.equals("IEC60309_3PNE"))
            return IEC60309_3PNE;
        if (itemName.equals("IEC60309_ASNZ"))
            return IEC60309_ASNZ;
        if (itemName.equals("UNSPECIFIED"))
            return UNSPECIFIED;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration EvConnectorType!");
    }

    private short value;
}
