/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.types;

public class AcceptedPaymentMethods implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            numMethods_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getNumMethods()
        {
            return numMethods_;
        }

        private zserio.runtime.array.DeltaContext numMethods_;
    };

    public AcceptedPaymentMethods()
    {
    }

    public AcceptedPaymentMethods(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public AcceptedPaymentMethods(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public AcceptedPaymentMethods(
            short numMethods_,
            nds.poi.types.PaymentMethod[] methods_)
    {
        setNumMethods(numMethods_);
        setMethods(methods_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNumMethods().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numMethods_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += methods_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumMethods().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numMethods_));
        endBitPosition += methods_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public short getNumMethods()
    {
        return numMethods_;
    }

    public void setNumMethods(short numMethods_)
    {
        this.numMethods_ = numMethods_;
    }

    public nds.poi.types.PaymentMethod[] getMethods()
    {
        return (methods_ == null) ? null : methods_.getRawArray();
    }

    public void setMethods(nds.poi.types.PaymentMethod[] methods_)
    {
        this.methods_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.types.PaymentMethod.class, methods_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.types.PaymentMethod>(new ZserioElementFactory_methods()),
                zserio.runtime.array.ArrayType.NORMAL);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof AcceptedPaymentMethods)
        {
            final AcceptedPaymentMethods that = (AcceptedPaymentMethods)obj;

            return
                    numMethods_ == that.numMethods_ &&
                    ((methods_ == null) ? that.methods_ == null : methods_.equals(that.methods_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, numMethods_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, methods_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        numMethods_ = in.readUnsignedByte();

        methods_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.types.PaymentMethod.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.types.PaymentMethod>(new ZserioElementFactory_methods()),
                zserio.runtime.array.ArrayType.NORMAL);
        methods_.read(in, (int)(getNumMethods()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        numMethods_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getNumMethods().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        methods_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.types.PaymentMethod.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.types.PaymentMethod>(new ZserioElementFactory_methods()),
                zserio.runtime.array.ArrayType.NORMAL);
        methods_.readPacked(in, (int)(getNumMethods()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition = methods_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumMethods().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numMethods_));
        endBitPosition = methods_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(numMethods_);

        if (methods_.size() != (int)(getNumMethods()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field AcceptedPaymentMethods.methods: " +
                    methods_.size() + " != " + (int)(getNumMethods()) + "!");
        }
        methods_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNumMethods().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numMethods_));

        if (methods_.size() != (int)(getNumMethods()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field AcceptedPaymentMethods.methods: " +
                    methods_.size() + " != " + (int)(getNumMethods()) + "!");
        }
        methods_.writePacked(out);
    }

    private static final class ZserioElementFactory_methods implements zserio.runtime.array.PackableElementFactory<nds.poi.types.PaymentMethod>
    {
        @Override
        public nds.poi.types.PaymentMethod create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.poi.types.PaymentMethod(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.poi.types.PaymentMethod.ZserioPackingContext();
        }

        @Override
        public nds.poi.types.PaymentMethod create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.poi.types.PaymentMethod(context, in);
        }
    }

    private short numMethods_;
    private zserio.runtime.array.Array methods_;
}
