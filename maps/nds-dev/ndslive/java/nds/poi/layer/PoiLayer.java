/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.layer;

public class PoiLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
    };

    public PoiLayer()
    {
    }

    public PoiLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiLayer(
            nds.poi.poi.Poi[] poiList_)
    {
        setPoiList(poiList_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += poiList_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += poiList_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.poi.poi.Poi[] getPoiList()
    {
        return (poiList_ == null) ? null : poiList_.getRawArray();
    }

    public void setPoiList(nds.poi.poi.Poi[] poiList_)
    {
        this.poiList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.poi.Poi.class, poiList_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.poi.Poi>(new ZserioElementFactory_poiList()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.FEATURE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiLayer)
        {
            final PoiLayer that = (PoiLayer)obj;

            return
                    ((poiList_ == null) ? that.poiList_ == null : poiList_.equals(that.poiList_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, poiList_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        poiList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.poi.Poi.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.poi.Poi>(new ZserioElementFactory_poiList()),
                zserio.runtime.array.ArrayType.AUTO);
        poiList_.readPacked(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        poiList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.poi.Poi.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.poi.Poi>(new ZserioElementFactory_poiList()),
                zserio.runtime.array.ArrayType.AUTO);
        poiList_.readPacked(in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = poiList_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = poiList_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        poiList_.writePacked(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        poiList_.writePacked(out);
    }

    private static final class ZserioElementFactory_poiList implements zserio.runtime.array.PackableElementFactory<nds.poi.poi.Poi>
    {
        @Override
        public nds.poi.poi.Poi create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.poi.poi.Poi(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.poi.poi.Poi.ZserioPackingContext();
        }

        @Override
        public nds.poi.poi.Poi create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.poi.poi.Poi(context, in);
        }
    }

    private zserio.runtime.array.Array poiList_;
}
