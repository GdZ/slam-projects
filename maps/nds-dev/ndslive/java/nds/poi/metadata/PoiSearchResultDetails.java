/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.metadata;

public class PoiSearchResultDetails implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            categoryId_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getCategoryId()
        {
            return categoryId_;
        }

        private zserio.runtime.array.DeltaContext categoryId_;
    };

    public PoiSearchResultDetails()
    {
    }

    public PoiSearchResultDetails(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiSearchResultDetails(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiSearchResultDetails(
            int categoryId_,
            nds.poi.instantiations.PoiFullAttribute[] attributes_)
    {
        setCategoryId(categoryId_);
        setAttributes(attributes_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getCategoryId().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(categoryId_);
        endBitPosition += 1;
        if (isAttributesUsed())
        {
            endBitPosition += attributes_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getCategoryId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
        endBitPosition += 1;
        if (isAttributesUsed())
        {
            endBitPosition += attributes_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public int getCategoryId()
    {
        return categoryId_;
    }

    public void setCategoryId(int categoryId_)
    {
        this.categoryId_ = categoryId_;
    }

    public nds.poi.instantiations.PoiFullAttribute[] getAttributes()
    {
        return (attributes_ == null) ? null : attributes_.getRawArray();
    }

    public void setAttributes(nds.poi.instantiations.PoiFullAttribute[] attributes_)
    {
        if (attributes_ == null)
        {
            this.attributes_ = null;
        }
        else
        {
            this.attributes_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.instantiations.PoiFullAttribute.class, attributes_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.instantiations.PoiFullAttribute>(new ZserioElementFactory_attributes()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isAttributesUsed()
    {
        return isAttributesSet();
    }

    public boolean isAttributesSet()
    {
        return (attributes_ != null);
    }

    public void resetAttributes()
    {
        this.attributes_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiSearchResultDetails)
        {
            final PoiSearchResultDetails that = (PoiSearchResultDetails)obj;

            return
                    categoryId_ == that.categoryId_ &&
                    ((!isAttributesUsed()) ? !that.isAttributesUsed() :
                        ((attributes_ == null) ? that.attributes_ == null : attributes_.equals(that.attributes_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, categoryId_);
        if (isAttributesUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, attributes_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        categoryId_ = in.readVarUInt32();

        if (in.readBool())
        {
            attributes_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.instantiations.PoiFullAttribute.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.instantiations.PoiFullAttribute>(new ZserioElementFactory_attributes()),
                    zserio.runtime.array.ArrayType.AUTO);
            attributes_.read(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        categoryId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getCategoryId().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        if (in.readBool())
        {
            attributes_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.instantiations.PoiFullAttribute.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.instantiations.PoiFullAttribute>(new ZserioElementFactory_attributes()),
                    zserio.runtime.array.ArrayType.AUTO);
            attributes_.readPacked(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(categoryId_);
        endBitPosition += 1;
        if (isAttributesUsed())
        {
            endBitPosition = attributes_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getCategoryId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
        endBitPosition += 1;
        if (isAttributesUsed())
        {
            endBitPosition = attributes_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(categoryId_);

        if (isAttributesUsed())
        {
            out.writeBool(true);
            attributes_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getCategoryId().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));

        if (isAttributesUsed())
        {
            out.writeBool(true);
            attributes_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private static final class ZserioElementFactory_attributes implements zserio.runtime.array.PackableElementFactory<nds.poi.instantiations.PoiFullAttribute>
    {
        @Override
        public nds.poi.instantiations.PoiFullAttribute create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.poi.instantiations.PoiFullAttribute(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.poi.instantiations.PoiFullAttribute.ZserioPackingContext();
        }

        @Override
        public nds.poi.instantiations.PoiFullAttribute create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.poi.instantiations.PoiFullAttribute(context, in);
        }
    }

    private int categoryId_;
    private zserio.runtime.array.Array attributes_;
}
