/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.metadata;

public class PoiSearchMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            supportedFilter_ = new zserio.runtime.array.DeltaContext();
            availableAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext();
            availableLanguages_ = new nds.core.language.AvailableLanguages.ZserioPackingContext();
            filterAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getSupportedFilter()
        {
            return supportedFilter_;
        }

        public nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext getAvailableAttributes()
        {
            return availableAttributes_;
        }

        public nds.core.language.AvailableLanguages.ZserioPackingContext getAvailableLanguages()
        {
            return availableLanguages_;
        }

        public nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext getFilterAttributes()
        {
            return filterAttributes_;
        }

        private zserio.runtime.array.DeltaContext supportedFilter_;
        private nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext availableAttributes_;
        private nds.core.language.AvailableLanguages.ZserioPackingContext availableLanguages_;
        private nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext filterAttributes_;
    };

    public PoiSearchMetadata()
    {
    }

    public PoiSearchMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiSearchMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiSearchMetadata(
            nds.poi.metadata.PoiSearchFilterOptions supportedFilter_,
            nds.poi.metadata.PoiCategory[] availableCategories_,
            nds.poi.instantiations.PoiAttributeMetadata availableAttributes_,
            nds.core.language.AvailableLanguages availableLanguages_,
            nds.poi.metadata.PoiCategory[] filterCategories_,
            nds.poi.instantiations.PoiAttributeMetadata filterAttributes_)
    {
        setSupportedFilter(supportedFilter_);
        setAvailableCategories(availableCategories_);
        setAvailableAttributes(availableAttributes_);
        setAvailableLanguages(availableLanguages_);
        setFilterCategories(filterCategories_);
        setFilterAttributes(filterAttributes_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        supportedFilter_.initPackingContext(zserioContext.getSupportedFilter());
        availableAttributes_.initPackingContext(zserioContext.getAvailableAttributes());
        availableLanguages_.initPackingContext(zserioContext.getAvailableLanguages());
        if (isFilterAttributesUsed())
        {
            filterAttributes_.initPackingContext(zserioContext.getFilterAttributes());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += supportedFilter_.bitSizeOf(endBitPosition);
        endBitPosition += availableCategories_.bitSizeOf(endBitPosition);
        endBitPosition += availableAttributes_.bitSizeOf(endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(endBitPosition);
        if (isFilterCategoriesUsed())
        {
            endBitPosition += filterCategories_.bitSizeOf(endBitPosition);
        }
        if (isFilterAttributesUsed())
        {
            endBitPosition += filterAttributes_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += supportedFilter_.bitSizeOf(zserioContext.getSupportedFilter(), endBitPosition);
        endBitPosition += availableCategories_.bitSizeOfPacked(endBitPosition);
        endBitPosition += availableAttributes_.bitSizeOf(zserioContext.getAvailableAttributes(), endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(zserioContext.getAvailableLanguages(), endBitPosition);
        if (isFilterCategoriesUsed())
        {
            endBitPosition += filterCategories_.bitSizeOfPacked(endBitPosition);
        }
        if (isFilterAttributesUsed())
        {
            endBitPosition += filterAttributes_.bitSizeOf(zserioContext.getFilterAttributes(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.poi.metadata.PoiSearchFilterOptions getSupportedFilter()
    {
        return supportedFilter_;
    }

    public void setSupportedFilter(nds.poi.metadata.PoiSearchFilterOptions supportedFilter_)
    {
        this.supportedFilter_ = supportedFilter_;
    }

    public nds.poi.metadata.PoiCategory[] getAvailableCategories()
    {
        return (availableCategories_ == null) ? null : availableCategories_.getRawArray();
    }

    public void setAvailableCategories(nds.poi.metadata.PoiCategory[] availableCategories_)
    {
        this.availableCategories_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class, availableCategories_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_availableCategories()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    public nds.poi.instantiations.PoiAttributeMetadata getAvailableAttributes()
    {
        return availableAttributes_;
    }

    public void setAvailableAttributes(nds.poi.instantiations.PoiAttributeMetadata availableAttributes_)
    {
        this.availableAttributes_ = availableAttributes_;
    }

    public nds.core.language.AvailableLanguages getAvailableLanguages()
    {
        return availableLanguages_;
    }

    public void setAvailableLanguages(nds.core.language.AvailableLanguages availableLanguages_)
    {
        this.availableLanguages_ = availableLanguages_;
    }

    public nds.poi.metadata.PoiCategory[] getFilterCategories()
    {
        return (filterCategories_ == null) ? null : filterCategories_.getRawArray();
    }

    public void setFilterCategories(nds.poi.metadata.PoiCategory[] filterCategories_)
    {
        if (filterCategories_ == null)
        {
            this.filterCategories_ = null;
        }
        else
        {
            this.filterCategories_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class, filterCategories_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_filterCategories()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isFilterCategoriesUsed()
    {
        return ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER));
    }

    public boolean isFilterCategoriesSet()
    {
        return (filterCategories_ != null);
    }

    public void resetFilterCategories()
    {
        this.filterCategories_ = null;
    }

    public nds.poi.instantiations.PoiAttributeMetadata getFilterAttributes()
    {
        return filterAttributes_;
    }

    public void setFilterAttributes(nds.poi.instantiations.PoiAttributeMetadata filterAttributes_)
    {
        this.filterAttributes_ = filterAttributes_;
    }

    public boolean isFilterAttributesUsed()
    {
        return ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER));
    }

    public boolean isFilterAttributesSet()
    {
        return (filterAttributes_ != null);
    }

    public void resetFilterAttributes()
    {
        this.filterAttributes_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiSearchMetadata)
        {
            final PoiSearchMetadata that = (PoiSearchMetadata)obj;

            return
                    ((supportedFilter_ == null) ? that.supportedFilter_ == null : supportedFilter_.equals(that.supportedFilter_)) &&
                    ((availableCategories_ == null) ? that.availableCategories_ == null : availableCategories_.equals(that.availableCategories_)) &&
                    ((availableAttributes_ == null) ? that.availableAttributes_ == null : availableAttributes_.equals(that.availableAttributes_)) &&
                    ((availableLanguages_ == null) ? that.availableLanguages_ == null : availableLanguages_.equals(that.availableLanguages_)) &&
                    ((!isFilterCategoriesUsed()) ? !that.isFilterCategoriesUsed() :
                        ((filterCategories_ == null) ? that.filterCategories_ == null : filterCategories_.equals(that.filterCategories_))) &&
                    ((!isFilterAttributesUsed()) ? !that.isFilterAttributesUsed() :
                        ((filterAttributes_ == null) ? that.filterAttributes_ == null : filterAttributes_.equals(that.filterAttributes_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, supportedFilter_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableCategories_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableAttributes_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableLanguages_);
        if (isFilterCategoriesUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, filterCategories_);
        if (isFilterAttributesUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, filterAttributes_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        supportedFilter_ = new nds.poi.metadata.PoiSearchFilterOptions(in);

        availableCategories_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_availableCategories()),
                zserio.runtime.array.ArrayType.AUTO);
        availableCategories_.read(in);

        availableAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata(in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(in);

        if ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER))
        {
            filterCategories_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_filterCategories()),
                    zserio.runtime.array.ArrayType.AUTO);
            filterCategories_.read(in);
        }

        if ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER))
        {
            filterAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        supportedFilter_ = new nds.poi.metadata.PoiSearchFilterOptions(zserioContext.getSupportedFilter(), in);

        availableCategories_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_availableCategories()),
                zserio.runtime.array.ArrayType.AUTO);
        availableCategories_.readPacked(in);

        availableAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata(zserioContext.getAvailableAttributes(), in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(zserioContext.getAvailableLanguages(), in);

        if ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.CATEGORY_FILTER))
        {
            filterCategories_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.poi.metadata.PoiCategory.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.poi.metadata.PoiCategory>(new ZserioElementFactory_filterCategories()),
                    zserio.runtime.array.ArrayType.AUTO);
            filterCategories_.readPacked(in);
        }

        if ((getSupportedFilter().and(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER)).equals(nds.poi.metadata.PoiSearchFilterOptions.Values.ATTRIBUTE_FILTER))
        {
            filterAttributes_ = new nds.poi.instantiations.PoiAttributeMetadata(zserioContext.getFilterAttributes(), in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += supportedFilter_.bitSizeOf(endBitPosition);
        endBitPosition = availableCategories_.initializeOffsets(endBitPosition);
        endBitPosition = availableAttributes_.initializeOffsets(endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(endBitPosition);
        if (isFilterCategoriesUsed())
        {
            endBitPosition = filterCategories_.initializeOffsets(endBitPosition);
        }
        if (isFilterAttributesUsed())
        {
            endBitPosition = filterAttributes_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = supportedFilter_.initializeOffsets(zserioContext.getSupportedFilter(), endBitPosition);
        endBitPosition = availableCategories_.initializeOffsetsPacked(endBitPosition);
        endBitPosition = availableAttributes_.initializeOffsets(zserioContext.getAvailableAttributes(), endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(zserioContext.getAvailableLanguages(), endBitPosition);
        if (isFilterCategoriesUsed())
        {
            endBitPosition = filterCategories_.initializeOffsetsPacked(endBitPosition);
        }
        if (isFilterAttributesUsed())
        {
            endBitPosition = filterAttributes_.initializeOffsets(zserioContext.getFilterAttributes(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        supportedFilter_.write(out);

        availableCategories_.write(out);

        availableAttributes_.write(out);

        availableLanguages_.write(out);

        if (isFilterCategoriesUsed())
        {
            filterCategories_.write(out);
        }

        if (isFilterAttributesUsed())
        {
            filterAttributes_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        supportedFilter_.write(zserioContext.getSupportedFilter(), out);

        availableCategories_.writePacked(out);

        availableAttributes_.write(zserioContext.getAvailableAttributes(), out);

        availableLanguages_.write(zserioContext.getAvailableLanguages(), out);

        if (isFilterCategoriesUsed())
        {
            filterCategories_.writePacked(out);
        }

        if (isFilterAttributesUsed())
        {
            filterAttributes_.write(zserioContext.getFilterAttributes(), out);
        }
    }

    private static final class ZserioElementFactory_availableCategories implements zserio.runtime.array.PackableElementFactory<nds.poi.metadata.PoiCategory>
    {
        @Override
        public nds.poi.metadata.PoiCategory create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.poi.metadata.PoiCategory(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.poi.metadata.PoiCategory.ZserioPackingContext();
        }

        @Override
        public nds.poi.metadata.PoiCategory create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.poi.metadata.PoiCategory(context, in);
        }
    }

    private static final class ZserioElementFactory_filterCategories implements zserio.runtime.array.PackableElementFactory<nds.poi.metadata.PoiCategory>
    {
        @Override
        public nds.poi.metadata.PoiCategory create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.poi.metadata.PoiCategory(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.poi.metadata.PoiCategory.ZserioPackingContext();
        }

        @Override
        public nds.poi.metadata.PoiCategory create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.poi.metadata.PoiCategory(context, in);
        }
    }

    private nds.poi.metadata.PoiSearchFilterOptions supportedFilter_;
    private zserio.runtime.array.Array availableCategories_;
    private nds.poi.instantiations.PoiAttributeMetadata availableAttributes_;
    private nds.core.language.AvailableLanguages availableLanguages_;
    private zserio.runtime.array.Array filterCategories_;
    private nds.poi.instantiations.PoiAttributeMetadata filterAttributes_;
}
