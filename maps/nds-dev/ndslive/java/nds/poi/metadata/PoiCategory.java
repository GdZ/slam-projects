/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.metadata;

public class PoiCategory implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            categoryId_ = new zserio.runtime.array.DeltaContext();
            standardCategory_ = new zserio.runtime.array.DeltaContext();
            categoryNameStringCollection_ = new nds.poi.types.NameStringCollection.ZserioPackingContext();
            iconSetReference_ = new zserio.runtime.array.DeltaContext();
            activationRadius_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getCategoryId()
        {
            return categoryId_;
        }

        public zserio.runtime.array.DeltaContext getStandardCategory()
        {
            return standardCategory_;
        }

        public nds.poi.types.NameStringCollection.ZserioPackingContext getCategoryNameStringCollection()
        {
            return categoryNameStringCollection_;
        }

        public zserio.runtime.array.DeltaContext getIconSetReference()
        {
            return iconSetReference_;
        }

        public zserio.runtime.array.DeltaContext getActivationRadius()
        {
            return activationRadius_;
        }

        private zserio.runtime.array.DeltaContext categoryId_;
        private zserio.runtime.array.DeltaContext standardCategory_;
        private nds.poi.types.NameStringCollection.ZserioPackingContext categoryNameStringCollection_;
        private zserio.runtime.array.DeltaContext iconSetReference_;
        private zserio.runtime.array.DeltaContext activationRadius_;
    };

    public PoiCategory()
    {
    }

    public PoiCategory(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiCategory(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiCategory(
            int categoryId_,
            nds.poi.reference.types.PoiStandardCategory standardCategory_,
            nds.poi.types.NameStringCollection categoryNameStringCollection_,
            boolean selectionEntry_,
            boolean showInSearchTree_,
            boolean isBrand_,
            boolean isCollective_,
            java.math.BigInteger iconSetReference_,
            int[] scaleRangeIds_,
            java.lang.Integer activationRadius_,
            int[] parents_,
            int[] children_)
    {
        setCategoryId(categoryId_);
        setStandardCategory(standardCategory_);
        setCategoryNameStringCollection(categoryNameStringCollection_);
        setSelectionEntry(selectionEntry_);
        setShowInSearchTree(showInSearchTree_);
        setIsBrand(isBrand_);
        setIsCollective(isCollective_);
        setIconSetReference(iconSetReference_);
        setScaleRangeIds(scaleRangeIds_);
        setActivationRadius(activationRadius_);
        setParents(parents_);
        setChildren(children_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getCategoryId().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
        standardCategory_.initPackingContext(zserioContext.getStandardCategory());
        categoryNameStringCollection_.initPackingContext(zserioContext.getCategoryNameStringCollection());
        if (isIconSetReferenceUsed())
        {
            zserioContext.getIconSetReference().init(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(iconSetReference_));
        }
        if (isActivationRadiusUsed())
        {
            zserioContext.getActivationRadius().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(activationRadius_));
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(categoryId_);
        endBitPosition += standardCategory_.bitSizeOf(endBitPosition);
        endBitPosition += categoryNameStringCollection_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        if (isIconSetReferenceUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(iconSetReference_);
        }
        endBitPosition += 1;
        if (isScaleRangeIdsUsed())
        {
            endBitPosition += scaleRangeIds_.bitSizeOf(endBitPosition);
        }
        endBitPosition += 1;
        if (isActivationRadiusUsed())
        {
            endBitPosition += 16;
        }
        endBitPosition += 1;
        if (isParentsUsed())
        {
            endBitPosition += parents_.bitSizeOf(endBitPosition);
        }
        endBitPosition += 1;
        if (isChildrenUsed())
        {
            endBitPosition += children_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getCategoryId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
        endBitPosition += standardCategory_.bitSizeOf(zserioContext.getStandardCategory(), endBitPosition);
        endBitPosition += categoryNameStringCollection_.bitSizeOf(zserioContext.getCategoryNameStringCollection(), endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        if (isIconSetReferenceUsed())
        {
            endBitPosition += zserioContext.getIconSetReference().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(iconSetReference_));
        }
        endBitPosition += 1;
        if (isScaleRangeIdsUsed())
        {
            endBitPosition += scaleRangeIds_.bitSizeOfPacked(endBitPosition);
        }
        endBitPosition += 1;
        if (isActivationRadiusUsed())
        {
            endBitPosition += zserioContext.getActivationRadius().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(activationRadius_));
        }
        endBitPosition += 1;
        if (isParentsUsed())
        {
            endBitPosition += parents_.bitSizeOfPacked(endBitPosition);
        }
        endBitPosition += 1;
        if (isChildrenUsed())
        {
            endBitPosition += children_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public int getCategoryId()
    {
        return categoryId_;
    }

    public void setCategoryId(int categoryId_)
    {
        this.categoryId_ = categoryId_;
    }

    public nds.poi.reference.types.PoiStandardCategory getStandardCategory()
    {
        return standardCategory_;
    }

    public void setStandardCategory(nds.poi.reference.types.PoiStandardCategory standardCategory_)
    {
        this.standardCategory_ = standardCategory_;
    }

    public nds.poi.types.NameStringCollection getCategoryNameStringCollection()
    {
        return categoryNameStringCollection_;
    }

    public void setCategoryNameStringCollection(nds.poi.types.NameStringCollection categoryNameStringCollection_)
    {
        this.categoryNameStringCollection_ = categoryNameStringCollection_;
    }

    public boolean getSelectionEntry()
    {
        return selectionEntry_;
    }

    public void setSelectionEntry(boolean selectionEntry_)
    {
        this.selectionEntry_ = selectionEntry_;
    }

    public boolean getShowInSearchTree()
    {
        return showInSearchTree_;
    }

    public void setShowInSearchTree(boolean showInSearchTree_)
    {
        this.showInSearchTree_ = showInSearchTree_;
    }

    public boolean getIsBrand()
    {
        return isBrand_;
    }

    public void setIsBrand(boolean isBrand_)
    {
        this.isBrand_ = isBrand_;
    }

    public boolean getIsCollective()
    {
        return isCollective_;
    }

    public void setIsCollective(boolean isCollective_)
    {
        this.isCollective_ = isCollective_;
    }

    public java.math.BigInteger getIconSetReference()
    {
        return iconSetReference_;
    }

    public void setIconSetReference(java.math.BigInteger iconSetReference_)
    {
        this.iconSetReference_ = iconSetReference_;
    }

    public boolean isIconSetReferenceUsed()
    {
        return isIconSetReferenceSet();
    }

    public boolean isIconSetReferenceSet()
    {
        return (iconSetReference_ != null);
    }

    public void resetIconSetReference()
    {
        this.iconSetReference_ = null;
    }

    public int[] getScaleRangeIds()
    {
        return (scaleRangeIds_ == null) ? null : scaleRangeIds_.getRawArray();
    }

    public void setScaleRangeIds(int[] scaleRangeIds_)
    {
        if (scaleRangeIds_ == null)
        {
            this.scaleRangeIds_ = null;
        }
        else
        {
            this.scaleRangeIds_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(scaleRangeIds_),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isScaleRangeIdsUsed()
    {
        return isScaleRangeIdsSet();
    }

    public boolean isScaleRangeIdsSet()
    {
        return (scaleRangeIds_ != null);
    }

    public void resetScaleRangeIds()
    {
        this.scaleRangeIds_ = null;
    }

    public java.lang.Integer getActivationRadius()
    {
        return activationRadius_;
    }

    public void setActivationRadius(java.lang.Integer activationRadius_)
    {
        this.activationRadius_ = activationRadius_;
    }

    public boolean isActivationRadiusUsed()
    {
        return isActivationRadiusSet();
    }

    public boolean isActivationRadiusSet()
    {
        return (activationRadius_ != null);
    }

    public void resetActivationRadius()
    {
        this.activationRadius_ = null;
    }

    public int[] getParents()
    {
        return (parents_ == null) ? null : parents_.getRawArray();
    }

    public void setParents(int[] parents_)
    {
        if (parents_ == null)
        {
            this.parents_ = null;
        }
        else
        {
            this.parents_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(parents_),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isParentsUsed()
    {
        return isParentsSet();
    }

    public boolean isParentsSet()
    {
        return (parents_ != null);
    }

    public void resetParents()
    {
        this.parents_ = null;
    }

    public int[] getChildren()
    {
        return (children_ == null) ? null : children_.getRawArray();
    }

    public void setChildren(int[] children_)
    {
        if (children_ == null)
        {
            this.children_ = null;
        }
        else
        {
            this.children_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(children_),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isChildrenUsed()
    {
        return isChildrenSet();
    }

    public boolean isChildrenSet()
    {
        return (children_ != null);
    }

    public void resetChildren()
    {
        this.children_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiCategory)
        {
            final PoiCategory that = (PoiCategory)obj;

            return
                    categoryId_ == that.categoryId_ &&
                    ((standardCategory_ == null) ? that.standardCategory_ == null : standardCategory_.getValue() == that.standardCategory_.getValue()) &&
                    ((categoryNameStringCollection_ == null) ? that.categoryNameStringCollection_ == null : categoryNameStringCollection_.equals(that.categoryNameStringCollection_)) &&
                    selectionEntry_ == that.selectionEntry_ &&
                    showInSearchTree_ == that.showInSearchTree_ &&
                    isBrand_ == that.isBrand_ &&
                    isCollective_ == that.isCollective_ &&
                    ((!isIconSetReferenceUsed()) ? !that.isIconSetReferenceUsed() :
                        ((iconSetReference_ == null) ? that.iconSetReference_ == null : iconSetReference_.equals(that.iconSetReference_))) &&
                    ((!isScaleRangeIdsUsed()) ? !that.isScaleRangeIdsUsed() :
                        ((scaleRangeIds_ == null) ? that.scaleRangeIds_ == null : scaleRangeIds_.equals(that.scaleRangeIds_))) &&
                    ((!isActivationRadiusUsed()) ? !that.isActivationRadiusUsed() :
                        ((activationRadius_ == null) ? that.activationRadius_ == null : activationRadius_.equals(that.activationRadius_))) &&
                    ((!isParentsUsed()) ? !that.isParentsUsed() :
                        ((parents_ == null) ? that.parents_ == null : parents_.equals(that.parents_))) &&
                    ((!isChildrenUsed()) ? !that.isChildrenUsed() :
                        ((children_ == null) ? that.children_ == null : children_.equals(that.children_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, categoryId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, standardCategory_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, categoryNameStringCollection_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, selectionEntry_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, showInSearchTree_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, isBrand_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, isCollective_);
        if (isIconSetReferenceUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, iconSetReference_);
        if (isScaleRangeIdsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, scaleRangeIds_);
        if (isActivationRadiusUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, activationRadius_);
        if (isParentsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parents_);
        if (isChildrenUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, children_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        categoryId_ = in.readVarUInt32();

        standardCategory_ = nds.poi.reference.types.PoiStandardCategory.readEnum(in);

        categoryNameStringCollection_ = new nds.poi.types.NameStringCollection(in);

        selectionEntry_ = in.readBool();

        showInSearchTree_ = in.readBool();

        isBrand_ = in.readBool();

        isCollective_ = in.readBool();

        if (in.readBool())
        {
            iconSetReference_ = in.readVarUInt();
        }

        if (in.readBool())
        {
            scaleRangeIds_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            scaleRangeIds_.read(in);
        }

        if (in.readBool())
        {
            activationRadius_ = in.readUnsignedShort();
        }

        if (in.readBool())
        {
            parents_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            parents_.read(in);
        }

        if (in.readBool())
        {
            children_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            children_.read(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        categoryId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getCategoryId().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        standardCategory_ = nds.poi.reference.types.PoiStandardCategory.readEnum(zserioContext.getStandardCategory(), in);

        categoryNameStringCollection_ = new nds.poi.types.NameStringCollection(zserioContext.getCategoryNameStringCollection(), in);

        selectionEntry_ = in.readBool();

        showInSearchTree_ = in.readBool();

        isBrand_ = in.readBool();

        isCollective_ = in.readBool();

        if (in.readBool())
        {
            iconSetReference_ = ((zserio.runtime.array.ArrayElement.BigIntegerArrayElement)
                    zserioContext.getIconSetReference().read(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), in)).get();
        }

        if (in.readBool())
        {
            scaleRangeIds_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            scaleRangeIds_.readPacked(in);
        }

        if (in.readBool())
        {
            activationRadius_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getActivationRadius().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), in)).get();
        }

        if (in.readBool())
        {
            parents_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            parents_.readPacked(in);
        }

        if (in.readBool())
        {
            children_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.IntRawArray(),
                    new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            children_.readPacked(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(categoryId_);
        endBitPosition += standardCategory_.bitSizeOf(endBitPosition);
        endBitPosition = categoryNameStringCollection_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        if (isIconSetReferenceUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(iconSetReference_);
        }
        endBitPosition += 1;
        if (isScaleRangeIdsUsed())
        {
            endBitPosition = scaleRangeIds_.initializeOffsets(endBitPosition);
        }
        endBitPosition += 1;
        if (isActivationRadiusUsed())
        {
            endBitPosition += 16;
        }
        endBitPosition += 1;
        if (isParentsUsed())
        {
            endBitPosition = parents_.initializeOffsets(endBitPosition);
        }
        endBitPosition += 1;
        if (isChildrenUsed())
        {
            endBitPosition = children_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getCategoryId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));
        endBitPosition = standardCategory_.initializeOffsets(zserioContext.getStandardCategory(), endBitPosition);
        endBitPosition = categoryNameStringCollection_.initializeOffsets(zserioContext.getCategoryNameStringCollection(), endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        if (isIconSetReferenceUsed())
        {
            endBitPosition += zserioContext.getIconSetReference().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(iconSetReference_));
        }
        endBitPosition += 1;
        if (isScaleRangeIdsUsed())
        {
            endBitPosition = scaleRangeIds_.initializeOffsetsPacked(endBitPosition);
        }
        endBitPosition += 1;
        if (isActivationRadiusUsed())
        {
            endBitPosition += zserioContext.getActivationRadius().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(activationRadius_));
        }
        endBitPosition += 1;
        if (isParentsUsed())
        {
            endBitPosition = parents_.initializeOffsetsPacked(endBitPosition);
        }
        endBitPosition += 1;
        if (isChildrenUsed())
        {
            endBitPosition = children_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(categoryId_);

        standardCategory_.write(out);

        categoryNameStringCollection_.write(out);

        out.writeBool(selectionEntry_);

        out.writeBool(showInSearchTree_);

        out.writeBool(isBrand_);

        out.writeBool(isCollective_);

        if (isIconSetReferenceUsed())
        {
            out.writeBool(true);
            out.writeVarUInt(iconSetReference_);
        }
        else
        {
            out.writeBool(false);
        }

        if (isScaleRangeIdsUsed())
        {
            out.writeBool(true);
            scaleRangeIds_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isActivationRadiusUsed())
        {
            out.writeBool(true);
            out.writeUnsignedShort(activationRadius_);
        }
        else
        {
            out.writeBool(false);
        }

        if (isParentsUsed())
        {
            out.writeBool(true);
            parents_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isChildrenUsed())
        {
            out.writeBool(true);
            children_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getCategoryId().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(categoryId_));

        standardCategory_.write(zserioContext.getStandardCategory(), out);

        categoryNameStringCollection_.write(zserioContext.getCategoryNameStringCollection(), out);

        out.writeBool(selectionEntry_);

        out.writeBool(showInSearchTree_);

        out.writeBool(isBrand_);

        out.writeBool(isCollective_);

        if (isIconSetReferenceUsed())
        {
            out.writeBool(true);
            zserioContext.getIconSetReference().write(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(iconSetReference_));
        }
        else
        {
            out.writeBool(false);
        }

        if (isScaleRangeIdsUsed())
        {
            out.writeBool(true);
            scaleRangeIds_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isActivationRadiusUsed())
        {
            out.writeBool(true);
            zserioContext.getActivationRadius().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(activationRadius_));
        }
        else
        {
            out.writeBool(false);
        }

        if (isParentsUsed())
        {
            out.writeBool(true);
            parents_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isChildrenUsed())
        {
            out.writeBool(true);
            children_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private int categoryId_;
    private nds.poi.reference.types.PoiStandardCategory standardCategory_;
    private nds.poi.types.NameStringCollection categoryNameStringCollection_;
    private boolean selectionEntry_;
    private boolean showInSearchTree_;
    private boolean isBrand_;
    private boolean isCollective_;
    private java.math.BigInteger iconSetReference_;
    private zserio.runtime.array.Array scaleRangeIds_;
    private java.lang.Integer activationRadius_;
    private zserio.runtime.array.Array parents_;
    private zserio.runtime.array.Array children_;
}
