/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.poi.metadata;

public class PoiAttributeLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            attributeValueIconMap_ = new nds.poi.metadata.AttributeValueIconMap.ZserioPackingContext();
            poiAttributeMetadata_ = new nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext();
            availableLanguages_ = new nds.core.language.AvailableLanguages.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.poi.metadata.AttributeValueIconMap.ZserioPackingContext getAttributeValueIconMap()
        {
            return attributeValueIconMap_;
        }

        public nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext getPoiAttributeMetadata()
        {
            return poiAttributeMetadata_;
        }

        public nds.core.language.AvailableLanguages.ZserioPackingContext getAvailableLanguages()
        {
            return availableLanguages_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.poi.metadata.AttributeValueIconMap.ZserioPackingContext attributeValueIconMap_;
        private nds.poi.instantiations.PoiAttributeMetadata.ZserioPackingContext poiAttributeMetadata_;
        private nds.core.language.AvailableLanguages.ZserioPackingContext availableLanguages_;
    };

    public PoiAttributeLayerMetadata()
    {
    }

    public PoiAttributeLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiAttributeLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiAttributeLayerMetadata(
            nds.poi.metadata.PoiAttributeLayerContent content_,
            nds.poi.metadata.AttributeValueIconMap attributeValueIconMap_,
            nds.poi.instantiations.PoiAttributeMetadata poiAttributeMetadata_,
            nds.core.language.AvailableLanguages availableLanguages_,
            boolean globalIconSetReferences_)
    {
        setContent(content_);
        setAttributeValueIconMap(attributeValueIconMap_);
        setPoiAttributeMetadata(poiAttributeMetadata_);
        setAvailableLanguages(availableLanguages_);
        setGlobalIconSetReferences(globalIconSetReferences_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        attributeValueIconMap_.initPackingContext(zserioContext.getAttributeValueIconMap());
        poiAttributeMetadata_.initPackingContext(zserioContext.getPoiAttributeMetadata());
        availableLanguages_.initPackingContext(zserioContext.getAvailableLanguages());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += attributeValueIconMap_.bitSizeOf(endBitPosition);
        endBitPosition += poiAttributeMetadata_.bitSizeOf(endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(endBitPosition);
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += attributeValueIconMap_.bitSizeOf(zserioContext.getAttributeValueIconMap(), endBitPosition);
        endBitPosition += poiAttributeMetadata_.bitSizeOf(zserioContext.getPoiAttributeMetadata(), endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(zserioContext.getAvailableLanguages(), endBitPosition);
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    public nds.poi.metadata.PoiAttributeLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.poi.metadata.PoiAttributeLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.poi.metadata.AttributeValueIconMap getAttributeValueIconMap()
    {
        return attributeValueIconMap_;
    }

    public void setAttributeValueIconMap(nds.poi.metadata.AttributeValueIconMap attributeValueIconMap_)
    {
        this.attributeValueIconMap_ = attributeValueIconMap_;
    }

    public nds.poi.instantiations.PoiAttributeMetadata getPoiAttributeMetadata()
    {
        return poiAttributeMetadata_;
    }

    public void setPoiAttributeMetadata(nds.poi.instantiations.PoiAttributeMetadata poiAttributeMetadata_)
    {
        this.poiAttributeMetadata_ = poiAttributeMetadata_;
    }

    public nds.core.language.AvailableLanguages getAvailableLanguages()
    {
        return availableLanguages_;
    }

    public void setAvailableLanguages(nds.core.language.AvailableLanguages availableLanguages_)
    {
        this.availableLanguages_ = availableLanguages_;
    }

    public boolean getGlobalIconSetReferences()
    {
        return globalIconSetReferences_;
    }

    public void setGlobalIconSetReferences(boolean globalIconSetReferences_)
    {
        this.globalIconSetReferences_ = globalIconSetReferences_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiAttributeLayerMetadata)
        {
            final PoiAttributeLayerMetadata that = (PoiAttributeLayerMetadata)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((attributeValueIconMap_ == null) ? that.attributeValueIconMap_ == null : attributeValueIconMap_.equals(that.attributeValueIconMap_)) &&
                    ((poiAttributeMetadata_ == null) ? that.poiAttributeMetadata_ == null : poiAttributeMetadata_.equals(that.poiAttributeMetadata_)) &&
                    ((availableLanguages_ == null) ? that.availableLanguages_ == null : availableLanguages_.equals(that.availableLanguages_)) &&
                    globalIconSetReferences_ == that.globalIconSetReferences_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, attributeValueIconMap_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, poiAttributeMetadata_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableLanguages_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, globalIconSetReferences_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.poi.metadata.PoiAttributeLayerContent(in);

        attributeValueIconMap_ = new nds.poi.metadata.AttributeValueIconMap(in);

        poiAttributeMetadata_ = new nds.poi.instantiations.PoiAttributeMetadata(in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(in);

        globalIconSetReferences_ = in.readBool();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.poi.metadata.PoiAttributeLayerContent(zserioContext.getContent(), in);

        attributeValueIconMap_ = new nds.poi.metadata.AttributeValueIconMap(zserioContext.getAttributeValueIconMap(), in);

        poiAttributeMetadata_ = new nds.poi.instantiations.PoiAttributeMetadata(zserioContext.getPoiAttributeMetadata(), in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(zserioContext.getAvailableLanguages(), in);

        globalIconSetReferences_ = in.readBool();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition = attributeValueIconMap_.initializeOffsets(endBitPosition);
        endBitPosition = poiAttributeMetadata_.initializeOffsets(endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(endBitPosition);
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition = attributeValueIconMap_.initializeOffsets(zserioContext.getAttributeValueIconMap(), endBitPosition);
        endBitPosition = poiAttributeMetadata_.initializeOffsets(zserioContext.getPoiAttributeMetadata(), endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(zserioContext.getAvailableLanguages(), endBitPosition);
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        attributeValueIconMap_.write(out);

        poiAttributeMetadata_.write(out);

        availableLanguages_.write(out);

        out.writeBool(globalIconSetReferences_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        attributeValueIconMap_.write(zserioContext.getAttributeValueIconMap(), out);

        poiAttributeMetadata_.write(zserioContext.getPoiAttributeMetadata(), out);

        availableLanguages_.write(zserioContext.getAvailableLanguages(), out);

        out.writeBool(globalIconSetReferences_);
    }

    private nds.poi.metadata.PoiAttributeLayerContent content_;
    private nds.poi.metadata.AttributeValueIconMap attributeValueIconMap_;
    private nds.poi.instantiations.PoiAttributeMetadata poiAttributeMetadata_;
    private nds.core.language.AvailableLanguages availableLanguages_;
    private boolean globalIconSetReferences_;
}
