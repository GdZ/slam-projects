/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.rules.layer;

public class DisplayLineRulesLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            shift_ = new zserio.runtime.array.DeltaContext();
            displayLineRangeAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList.ZserioPackingContext();
            displayLinePositionAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList.ZserioPackingContext();
            displayLineRangeAttributeSets_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList.ZserioPackingContext();
            displayLinePositionAttributeSets_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getShift()
        {
            return shift_;
        }

        public nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList.ZserioPackingContext getDisplayLineRangeAttributeMaps()
        {
            return displayLineRangeAttributeMaps_;
        }

        public nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList.ZserioPackingContext getDisplayLinePositionAttributeMaps()
        {
            return displayLinePositionAttributeMaps_;
        }

        public nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList.ZserioPackingContext getDisplayLineRangeAttributeSets()
        {
            return displayLineRangeAttributeSets_;
        }

        public nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList.ZserioPackingContext getDisplayLinePositionAttributeSets()
        {
            return displayLinePositionAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext shift_;
        private nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList.ZserioPackingContext displayLineRangeAttributeMaps_;
        private nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList.ZserioPackingContext displayLinePositionAttributeMaps_;
        private nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList.ZserioPackingContext displayLineRangeAttributeSets_;
        private nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList.ZserioPackingContext displayLinePositionAttributeSets_;
    };

    public DisplayLineRulesLayer()
    {
    }

    public DisplayLineRulesLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DisplayLineRulesLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DisplayLineRulesLayer(
            nds.rules.metadata.DisplayLineRulesLayerContent content_,
            byte shift_,
            nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_,
            nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList displayLinePositionAttributeMaps_,
            nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_,
            nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList displayLinePositionAttributeSets_)
    {
        setContent(content_);
        setShift(shift_);
        setDisplayLineRangeAttributeMaps(displayLineRangeAttributeMaps_);
        setDisplayLinePositionAttributeMaps(displayLinePositionAttributeMaps_);
        setDisplayLineRangeAttributeSets(displayLineRangeAttributeSets_);
        setDisplayLinePositionAttributeSets(displayLinePositionAttributeSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        zserioContext.getShift().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            displayLineRangeAttributeMaps_.initPackingContext(zserioContext.getDisplayLineRangeAttributeMaps());
        }
        if (isDisplayLinePositionAttributeMapsUsed())
        {
            displayLinePositionAttributeMaps_.initPackingContext(zserioContext.getDisplayLinePositionAttributeMaps());
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            displayLineRangeAttributeSets_.initPackingContext(zserioContext.getDisplayLineRangeAttributeSets());
        }
        if (isDisplayLinePositionAttributeSetsUsed())
        {
            displayLinePositionAttributeSets_.initPackingContext(zserioContext.getDisplayLinePositionAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition += displayLineRangeAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLinePositionAttributeMapsUsed())
        {
            endBitPosition += displayLinePositionAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition += displayLineRangeAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLinePositionAttributeSetsUsed())
        {
            endBitPosition += displayLinePositionAttributeSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition += displayLineRangeAttributeMaps_.bitSizeOf(zserioContext.getDisplayLineRangeAttributeMaps(), endBitPosition);
        }
        if (isDisplayLinePositionAttributeMapsUsed())
        {
            endBitPosition += displayLinePositionAttributeMaps_.bitSizeOf(zserioContext.getDisplayLinePositionAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition += displayLineRangeAttributeSets_.bitSizeOf(zserioContext.getDisplayLineRangeAttributeSets(), endBitPosition);
        }
        if (isDisplayLinePositionAttributeSetsUsed())
        {
            endBitPosition += displayLinePositionAttributeSets_.bitSizeOf(zserioContext.getDisplayLinePositionAttributeSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.rules.metadata.DisplayLineRulesLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.rules.metadata.DisplayLineRulesLayerContent content_)
    {
        this.content_ = content_;
    }

    public byte getShift()
    {
        return shift_;
    }

    public void setShift(byte shift_)
    {
        this.shift_ = shift_;
    }

    public nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList getDisplayLineRangeAttributeMaps()
    {
        return displayLineRangeAttributeMaps_;
    }

    public void setDisplayLineRangeAttributeMaps(nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_)
    {
        this.displayLineRangeAttributeMaps_ = displayLineRangeAttributeMaps_;
    }

    public boolean isDisplayLineRangeAttributeMapsUsed()
    {
        return ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS));
    }

    public boolean isDisplayLineRangeAttributeMapsSet()
    {
        return (displayLineRangeAttributeMaps_ != null);
    }

    public void resetDisplayLineRangeAttributeMaps()
    {
        this.displayLineRangeAttributeMaps_ = null;
    }

    public nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList getDisplayLinePositionAttributeMaps()
    {
        return displayLinePositionAttributeMaps_;
    }

    public void setDisplayLinePositionAttributeMaps(nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList displayLinePositionAttributeMaps_)
    {
        this.displayLinePositionAttributeMaps_ = displayLinePositionAttributeMaps_;
    }

    public boolean isDisplayLinePositionAttributeMapsUsed()
    {
        return ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS));
    }

    public boolean isDisplayLinePositionAttributeMapsSet()
    {
        return (displayLinePositionAttributeMaps_ != null);
    }

    public void resetDisplayLinePositionAttributeMaps()
    {
        this.displayLinePositionAttributeMaps_ = null;
    }

    public nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList getDisplayLineRangeAttributeSets()
    {
        return displayLineRangeAttributeSets_;
    }

    public void setDisplayLineRangeAttributeSets(nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_)
    {
        this.displayLineRangeAttributeSets_ = displayLineRangeAttributeSets_;
    }

    public boolean isDisplayLineRangeAttributeSetsUsed()
    {
        return ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS));
    }

    public boolean isDisplayLineRangeAttributeSetsSet()
    {
        return (displayLineRangeAttributeSets_ != null);
    }

    public void resetDisplayLineRangeAttributeSets()
    {
        this.displayLineRangeAttributeSets_ = null;
    }

    public nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList getDisplayLinePositionAttributeSets()
    {
        return displayLinePositionAttributeSets_;
    }

    public void setDisplayLinePositionAttributeSets(nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList displayLinePositionAttributeSets_)
    {
        this.displayLinePositionAttributeSets_ = displayLinePositionAttributeSets_;
    }

    public boolean isDisplayLinePositionAttributeSetsUsed()
    {
        return ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS));
    }

    public boolean isDisplayLinePositionAttributeSetsSet()
    {
        return (displayLinePositionAttributeSets_ != null);
    }

    public void resetDisplayLinePositionAttributeSets()
    {
        this.displayLinePositionAttributeSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DisplayLineRulesLayer)
        {
            final DisplayLineRulesLayer that = (DisplayLineRulesLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    shift_ == that.shift_ &&
                    ((!isDisplayLineRangeAttributeMapsUsed()) ? !that.isDisplayLineRangeAttributeMapsUsed() :
                        ((displayLineRangeAttributeMaps_ == null) ? that.displayLineRangeAttributeMaps_ == null : displayLineRangeAttributeMaps_.equals(that.displayLineRangeAttributeMaps_))) &&
                    ((!isDisplayLinePositionAttributeMapsUsed()) ? !that.isDisplayLinePositionAttributeMapsUsed() :
                        ((displayLinePositionAttributeMaps_ == null) ? that.displayLinePositionAttributeMaps_ == null : displayLinePositionAttributeMaps_.equals(that.displayLinePositionAttributeMaps_))) &&
                    ((!isDisplayLineRangeAttributeSetsUsed()) ? !that.isDisplayLineRangeAttributeSetsUsed() :
                        ((displayLineRangeAttributeSets_ == null) ? that.displayLineRangeAttributeSets_ == null : displayLineRangeAttributeSets_.equals(that.displayLineRangeAttributeSets_))) &&
                    ((!isDisplayLinePositionAttributeSetsUsed()) ? !that.isDisplayLinePositionAttributeSetsUsed() :
                        ((displayLinePositionAttributeSets_ == null) ? that.displayLinePositionAttributeSets_ == null : displayLinePositionAttributeSets_.equals(that.displayLinePositionAttributeSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shift_);
        if (isDisplayLineRangeAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineRangeAttributeMaps_);
        if (isDisplayLinePositionAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLinePositionAttributeMaps_);
        if (isDisplayLineRangeAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineRangeAttributeSets_);
        if (isDisplayLinePositionAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLinePositionAttributeSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.rules.metadata.DisplayLineRulesLayerContent(in);

        shift_ = (byte)in.readBits(5);

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS))
        {
            displayLineRangeAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS))
        {
            displayLinePositionAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeSets_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS))
        {
            displayLinePositionAttributeSets_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList(in, (byte)(getShift()));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.rules.metadata.DisplayLineRulesLayerContent(zserioContext.getContent(), in);

        shift_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShift().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_MAPS))
        {
            displayLineRangeAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList(zserioContext.getDisplayLineRangeAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_MAPS))
        {
            displayLinePositionAttributeMaps_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList(zserioContext.getDisplayLinePositionAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeSets_ = new nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList(zserioContext.getDisplayLineRangeAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS)).equals(nds.rules.metadata.DisplayLineRulesLayerContent.Values.DISPLAY_LINE_POSITION_SETS))
        {
            displayLinePositionAttributeSets_ = new nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList(zserioContext.getDisplayLinePositionAttributeSets(), in, (byte)(getShift()));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition = displayLineRangeAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLinePositionAttributeMapsUsed())
        {
            endBitPosition = displayLinePositionAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition = displayLineRangeAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLinePositionAttributeSetsUsed())
        {
            endBitPosition = displayLinePositionAttributeSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition = displayLineRangeAttributeMaps_.initializeOffsets(zserioContext.getDisplayLineRangeAttributeMaps(), endBitPosition);
        }
        if (isDisplayLinePositionAttributeMapsUsed())
        {
            endBitPosition = displayLinePositionAttributeMaps_.initializeOffsets(zserioContext.getDisplayLinePositionAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition = displayLineRangeAttributeSets_.initializeOffsets(zserioContext.getDisplayLineRangeAttributeSets(), endBitPosition);
        }
        if (isDisplayLinePositionAttributeSetsUsed())
        {
            endBitPosition = displayLinePositionAttributeSets_.initializeOffsets(zserioContext.getDisplayLinePositionAttributeSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        out.writeBits(shift_, 5);

        if (isDisplayLineRangeAttributeMapsUsed())
        {
            // check parameters
            if (displayLineRangeAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayLineRulesLayer.displayLineRangeAttributeMaps: " +
                        displayLineRangeAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLineRangeAttributeMaps_.write(out);
        }

        if (isDisplayLinePositionAttributeMapsUsed())
        {
            // check parameters
            if (displayLinePositionAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayLineRulesLayer.displayLinePositionAttributeMaps: " +
                        displayLinePositionAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLinePositionAttributeMaps_.write(out);
        }

        if (isDisplayLineRangeAttributeSetsUsed())
        {
            // check parameters
            if (displayLineRangeAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayLineRulesLayer.displayLineRangeAttributeSets: " +
                        displayLineRangeAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLineRangeAttributeSets_.write(out);
        }

        if (isDisplayLinePositionAttributeSetsUsed())
        {
            // check parameters
            if (displayLinePositionAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayLineRulesLayer.displayLinePositionAttributeSets: " +
                        displayLinePositionAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLinePositionAttributeSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        zserioContext.getShift().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));

        if (isDisplayLineRangeAttributeMapsUsed())
        {
            displayLineRangeAttributeMaps_.write(zserioContext.getDisplayLineRangeAttributeMaps(), out);
        }

        if (isDisplayLinePositionAttributeMapsUsed())
        {
            displayLinePositionAttributeMaps_.write(zserioContext.getDisplayLinePositionAttributeMaps(), out);
        }

        if (isDisplayLineRangeAttributeSetsUsed())
        {
            displayLineRangeAttributeSets_.write(zserioContext.getDisplayLineRangeAttributeSets(), out);
        }

        if (isDisplayLinePositionAttributeSetsUsed())
        {
            displayLinePositionAttributeSets_.write(zserioContext.getDisplayLinePositionAttributeSets(), out);
        }
    }

    private nds.rules.metadata.DisplayLineRulesLayerContent content_;
    private byte shift_;
    private nds.rules.instantiations.RulesDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_;
    private nds.rules.instantiations.RulesDisplayLinePositionAttributeMapList displayLinePositionAttributeMaps_;
    private nds.rules.instantiations.RulesDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_;
    private nds.rules.instantiations.RulesDisplayLinePositionAttributeSetList displayLinePositionAttributeSets_;
}
