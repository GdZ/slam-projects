/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.rules.types;

public class TrafficEnforcementZone implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            trafficEnforcementZoneType_ = new zserio.runtime.array.DeltaContext();
            zoneLength_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getTrafficEnforcementZoneType()
        {
            return trafficEnforcementZoneType_;
        }

        public zserio.runtime.array.DeltaContext getZoneLength()
        {
            return zoneLength_;
        }

        private zserio.runtime.array.DeltaContext trafficEnforcementZoneType_;
        private zserio.runtime.array.DeltaContext zoneLength_;
    };

    public TrafficEnforcementZone()
    {
    }

    public TrafficEnforcementZone(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TrafficEnforcementZone(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TrafficEnforcementZone(
            nds.core.types.TrafficEnforcementZoneType trafficEnforcementZoneType_,
            int zoneLength_)
    {
        setTrafficEnforcementZoneType(trafficEnforcementZoneType_);
        setZoneLength(zoneLength_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        trafficEnforcementZoneType_.initPackingContext(zserioContext.getTrafficEnforcementZoneType());
        zserioContext.getZoneLength().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(zoneLength_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += trafficEnforcementZoneType_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(zoneLength_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += trafficEnforcementZoneType_.bitSizeOf(zserioContext.getTrafficEnforcementZoneType(), endBitPosition);
        endBitPosition += zserioContext.getZoneLength().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(zoneLength_));

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.types.TrafficEnforcementZoneType getTrafficEnforcementZoneType()
    {
        return trafficEnforcementZoneType_;
    }

    public void setTrafficEnforcementZoneType(nds.core.types.TrafficEnforcementZoneType trafficEnforcementZoneType_)
    {
        this.trafficEnforcementZoneType_ = trafficEnforcementZoneType_;
    }

    public int getZoneLength()
    {
        return zoneLength_;
    }

    public void setZoneLength(int zoneLength_)
    {
        this.zoneLength_ = zoneLength_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TrafficEnforcementZone)
        {
            final TrafficEnforcementZone that = (TrafficEnforcementZone)obj;

            return
                    ((trafficEnforcementZoneType_ == null) ? that.trafficEnforcementZoneType_ == null : trafficEnforcementZoneType_.getValue() == that.trafficEnforcementZoneType_.getValue()) &&
                    zoneLength_ == that.zoneLength_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, trafficEnforcementZoneType_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, zoneLength_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        trafficEnforcementZoneType_ = nds.core.types.TrafficEnforcementZoneType.readEnum(in);

        zoneLength_ = in.readVarUInt32();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        trafficEnforcementZoneType_ = nds.core.types.TrafficEnforcementZoneType.readEnum(zserioContext.getTrafficEnforcementZoneType(), in);

        zoneLength_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getZoneLength().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += trafficEnforcementZoneType_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(zoneLength_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = trafficEnforcementZoneType_.initializeOffsets(zserioContext.getTrafficEnforcementZoneType(), endBitPosition);
        endBitPosition += zserioContext.getZoneLength().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(zoneLength_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        trafficEnforcementZoneType_.write(out);

        out.writeVarUInt32(zoneLength_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        trafficEnforcementZoneType_.write(zserioContext.getTrafficEnforcementZoneType(), out);

        zserioContext.getZoneLength().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(zoneLength_));
    }

    private nds.core.types.TrafficEnforcementZoneType trafficEnforcementZoneType_;
    private int zoneLength_;
}
