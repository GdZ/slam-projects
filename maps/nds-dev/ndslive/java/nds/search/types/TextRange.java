/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.search.types;

public class TextRange implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            startIndex_ = new zserio.runtime.array.DeltaContext();
            endIndex_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getStartIndex()
        {
            return startIndex_;
        }

        public zserio.runtime.array.DeltaContext getEndIndex()
        {
            return endIndex_;
        }

        private zserio.runtime.array.DeltaContext startIndex_;
        private zserio.runtime.array.DeltaContext endIndex_;
    };

    public TextRange()
    {
    }

    public TextRange(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TextRange(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TextRange(
            int startIndex_,
            int endIndex_)
    {
        setStartIndex(startIndex_);
        setEndIndex(endIndex_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getStartIndex().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startIndex_));
        zserioContext.getEndIndex().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endIndex_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startIndex_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endIndex_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getStartIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startIndex_));
        endBitPosition += zserioContext.getEndIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endIndex_));

        return (int)(endBitPosition - bitPosition);
    }

    public int getStartIndex()
    {
        return startIndex_;
    }

    public void setStartIndex(int startIndex_)
    {
        this.startIndex_ = startIndex_;
    }

    public int getEndIndex()
    {
        return endIndex_;
    }

    public void setEndIndex(int endIndex_)
    {
        this.endIndex_ = endIndex_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TextRange)
        {
            final TextRange that = (TextRange)obj;

            return
                    startIndex_ == that.startIndex_ &&
                    endIndex_ == that.endIndex_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, startIndex_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, endIndex_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        startIndex_ = in.readVarUInt32();

        endIndex_ = in.readVarUInt32();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startIndex_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getStartIndex().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        endIndex_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getEndIndex().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startIndex_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endIndex_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getStartIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startIndex_));
        endBitPosition += zserioContext.getEndIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endIndex_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(startIndex_);

        out.writeVarUInt32(endIndex_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getStartIndex().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(startIndex_));

        zserioContext.getEndIndex().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(endIndex_));
    }

    private int startIndex_;
    private int endIndex_;
}
