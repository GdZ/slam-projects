/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.search.types;

public class SearchResult implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            position_ = new nds.core.geometry.Position2D.ZserioPackingContext();
            path_ = new nds.core.location.RoadLocationPath.ZserioPackingContext();
            distanceToOrigin_ = new zserio.runtime.array.DeltaContext();
            travelDistanceToOrigin_ = new zserio.runtime.array.DeltaContext();
            type_ = new zserio.runtime.array.DeltaContext();
        }

        public nds.core.geometry.Position2D.ZserioPackingContext getPosition()
        {
            return position_;
        }

        public nds.core.location.RoadLocationPath.ZserioPackingContext getPath()
        {
            return path_;
        }

        public zserio.runtime.array.DeltaContext getDistanceToOrigin()
        {
            return distanceToOrigin_;
        }

        public zserio.runtime.array.DeltaContext getTravelDistanceToOrigin()
        {
            return travelDistanceToOrigin_;
        }

        public zserio.runtime.array.DeltaContext getType()
        {
            return type_;
        }

        private nds.core.geometry.Position2D.ZserioPackingContext position_;
        private nds.core.location.RoadLocationPath.ZserioPackingContext path_;
        private zserio.runtime.array.DeltaContext distanceToOrigin_;
        private zserio.runtime.array.DeltaContext travelDistanceToOrigin_;
        private zserio.runtime.array.DeltaContext type_;
    };

    public SearchResult(
            boolean hasDistanceInfo_)
    {
        this.hasDistanceInfo_ = hasDistanceInfo_;
    }

    public SearchResult(zserio.runtime.io.BitStreamReader in,
            boolean hasDistanceInfo_)
            throws java.io.IOException
    {
        this.hasDistanceInfo_ = hasDistanceInfo_;

        read(in);
    }

    public SearchResult(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            boolean hasDistanceInfo_)
            throws java.io.IOException
    {
        this.hasDistanceInfo_ = hasDistanceInfo_;

        read(context, in);
    }

    public SearchResult(
            boolean hasDistanceInfo_,
            nds.core.geometry.Position2D position_,
            nds.core.location.RoadLocationPath path_,
            java.lang.Integer distanceToOrigin_,
            java.lang.Boolean hasTravelDistance_,
            java.lang.Integer travelDistanceToOrigin_,
            java.lang.String displayString_,
            nds.search.types.TextRange[] highlight_,
            nds.search.types.SearchResultType type_,
            java.lang.String globalSourceId_,
            nds.system.types.ExternData detailedResultInformation_)
    {
        this(hasDistanceInfo_);

        setPosition(position_);
        setPath(path_);
        setDistanceToOrigin(distanceToOrigin_);
        setHasTravelDistance(hasTravelDistance_);
        setTravelDistanceToOrigin(travelDistanceToOrigin_);
        setDisplayString(displayString_);
        setHighlight(highlight_);
        setType(type_);
        setGlobalSourceId(globalSourceId_);
        setDetailedResultInformation(detailedResultInformation_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        position_.initPackingContext(zserioContext.getPosition());
        if (isPathUsed())
        {
            path_.initPackingContext(zserioContext.getPath());
        }
        if (isDistanceToOriginUsed())
        {
            zserioContext.getDistanceToOrigin().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(distanceToOrigin_));
        }
        if (isTravelDistanceToOriginUsed())
        {
            zserioContext.getTravelDistanceToOrigin().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(travelDistanceToOrigin_));
        }
        type_.initPackingContext(zserioContext.getType());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += position_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isPathUsed())
        {
            endBitPosition += path_.bitSizeOf(endBitPosition);
        }
        if (isDistanceToOriginUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(distanceToOrigin_);
        }
        if (isHasTravelDistanceUsed())
        {
            endBitPosition += 1;
        }
        if (isTravelDistanceToOriginUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(travelDistanceToOrigin_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(displayString_);
        endBitPosition += 1;
        if (isHighlightUsed())
        {
            endBitPosition += highlight_.bitSizeOf(endBitPosition);
        }
        endBitPosition += type_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isGlobalSourceIdUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(globalSourceId_);
        }
        endBitPosition += 1;
        if (isDetailedResultInformationUsed())
        {
            endBitPosition += detailedResultInformation_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += position_.bitSizeOf(zserioContext.getPosition(), endBitPosition);
        endBitPosition += 1;
        if (isPathUsed())
        {
            endBitPosition += path_.bitSizeOf(zserioContext.getPath(), endBitPosition);
        }
        if (isDistanceToOriginUsed())
        {
            endBitPosition += zserioContext.getDistanceToOrigin().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(distanceToOrigin_));
        }
        if (isHasTravelDistanceUsed())
        {
            endBitPosition += 1;
        }
        if (isTravelDistanceToOriginUsed())
        {
            endBitPosition += zserioContext.getTravelDistanceToOrigin().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(travelDistanceToOrigin_));
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(displayString_);
        endBitPosition += 1;
        if (isHighlightUsed())
        {
            endBitPosition += highlight_.bitSizeOfPacked(endBitPosition);
        }
        endBitPosition += type_.bitSizeOf(zserioContext.getType(), endBitPosition);
        endBitPosition += 1;
        if (isGlobalSourceIdUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(globalSourceId_);
        }
        endBitPosition += 1;
        if (isDetailedResultInformationUsed())
        {
            endBitPosition += detailedResultInformation_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public boolean getHasDistanceInfo()
    {
        return this.hasDistanceInfo_;
    }

    public nds.core.geometry.Position2D getPosition()
    {
        return position_;
    }

    public void setPosition(nds.core.geometry.Position2D position_)
    {
        this.position_ = position_;
    }

    public nds.core.location.RoadLocationPath getPath()
    {
        return path_;
    }

    public void setPath(nds.core.location.RoadLocationPath path_)
    {
        this.path_ = path_;
    }

    public boolean isPathUsed()
    {
        return isPathSet();
    }

    public boolean isPathSet()
    {
        return (path_ != null);
    }

    public void resetPath()
    {
        this.path_ = null;
    }

    public java.lang.Integer getDistanceToOrigin()
    {
        return distanceToOrigin_;
    }

    public void setDistanceToOrigin(java.lang.Integer distanceToOrigin_)
    {
        this.distanceToOrigin_ = distanceToOrigin_;
    }

    public boolean isDistanceToOriginUsed()
    {
        return (getHasDistanceInfo());
    }

    public boolean isDistanceToOriginSet()
    {
        return (distanceToOrigin_ != null);
    }

    public void resetDistanceToOrigin()
    {
        this.distanceToOrigin_ = null;
    }

    public java.lang.Boolean getHasTravelDistance()
    {
        return hasTravelDistance_;
    }

    public void setHasTravelDistance(java.lang.Boolean hasTravelDistance_)
    {
        this.hasTravelDistance_ = hasTravelDistance_;
    }

    public boolean isHasTravelDistanceUsed()
    {
        return (getHasDistanceInfo());
    }

    public boolean isHasTravelDistanceSet()
    {
        return (hasTravelDistance_ != null);
    }

    public void resetHasTravelDistance()
    {
        this.hasTravelDistance_ = null;
    }

    public java.lang.Integer getTravelDistanceToOrigin()
    {
        return travelDistanceToOrigin_;
    }

    public void setTravelDistanceToOrigin(java.lang.Integer travelDistanceToOrigin_)
    {
        this.travelDistanceToOrigin_ = travelDistanceToOrigin_;
    }

    public boolean isTravelDistanceToOriginUsed()
    {
        return (getHasDistanceInfo() && getHasTravelDistance());
    }

    public boolean isTravelDistanceToOriginSet()
    {
        return (travelDistanceToOrigin_ != null);
    }

    public void resetTravelDistanceToOrigin()
    {
        this.travelDistanceToOrigin_ = null;
    }

    public java.lang.String getDisplayString()
    {
        return displayString_;
    }

    public void setDisplayString(java.lang.String displayString_)
    {
        this.displayString_ = displayString_;
    }

    public nds.search.types.TextRange[] getHighlight()
    {
        return (highlight_ == null) ? null : highlight_.getRawArray();
    }

    public void setHighlight(nds.search.types.TextRange[] highlight_)
    {
        if (highlight_ == null)
        {
            this.highlight_ = null;
        }
        else
        {
            this.highlight_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.search.types.TextRange.class, highlight_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.search.types.TextRange>(new ZserioElementFactory_highlight()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isHighlightUsed()
    {
        return isHighlightSet();
    }

    public boolean isHighlightSet()
    {
        return (highlight_ != null);
    }

    public void resetHighlight()
    {
        this.highlight_ = null;
    }

    public nds.search.types.SearchResultType getType()
    {
        return type_;
    }

    public void setType(nds.search.types.SearchResultType type_)
    {
        this.type_ = type_;
    }

    public java.lang.String getGlobalSourceId()
    {
        return globalSourceId_;
    }

    public void setGlobalSourceId(java.lang.String globalSourceId_)
    {
        this.globalSourceId_ = globalSourceId_;
    }

    public boolean isGlobalSourceIdUsed()
    {
        return isGlobalSourceIdSet();
    }

    public boolean isGlobalSourceIdSet()
    {
        return (globalSourceId_ != null);
    }

    public void resetGlobalSourceId()
    {
        this.globalSourceId_ = null;
    }

    public nds.system.types.ExternData getDetailedResultInformation()
    {
        return detailedResultInformation_;
    }

    public void setDetailedResultInformation(nds.system.types.ExternData detailedResultInformation_)
    {
        this.detailedResultInformation_ = detailedResultInformation_;
    }

    public boolean isDetailedResultInformationUsed()
    {
        return isDetailedResultInformationSet();
    }

    public boolean isDetailedResultInformationSet()
    {
        return (detailedResultInformation_ != null);
    }

    public void resetDetailedResultInformation()
    {
        this.detailedResultInformation_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SearchResult)
        {
            final SearchResult that = (SearchResult)obj;

            return
                    this.hasDistanceInfo_ == that.hasDistanceInfo_ &&
                    ((position_ == null) ? that.position_ == null : position_.equals(that.position_)) &&
                    ((!isPathUsed()) ? !that.isPathUsed() :
                        ((path_ == null) ? that.path_ == null : path_.equals(that.path_))) &&
                    ((!isDistanceToOriginUsed()) ? !that.isDistanceToOriginUsed() :
                        ((distanceToOrigin_ == null) ? that.distanceToOrigin_ == null : distanceToOrigin_.equals(that.distanceToOrigin_))) &&
                    ((!isHasTravelDistanceUsed()) ? !that.isHasTravelDistanceUsed() :
                        ((hasTravelDistance_ == null) ? that.hasTravelDistance_ == null : hasTravelDistance_.equals(that.hasTravelDistance_))) &&
                    ((!isTravelDistanceToOriginUsed()) ? !that.isTravelDistanceToOriginUsed() :
                        ((travelDistanceToOrigin_ == null) ? that.travelDistanceToOrigin_ == null : travelDistanceToOrigin_.equals(that.travelDistanceToOrigin_))) &&
                    ((displayString_ == null) ? that.displayString_ == null : displayString_.equals(that.displayString_)) &&
                    ((!isHighlightUsed()) ? !that.isHighlightUsed() :
                        ((highlight_ == null) ? that.highlight_ == null : highlight_.equals(that.highlight_))) &&
                    ((type_ == null) ? that.type_ == null : type_.getValue() == that.type_.getValue()) &&
                    ((!isGlobalSourceIdUsed()) ? !that.isGlobalSourceIdUsed() :
                        ((globalSourceId_ == null) ? that.globalSourceId_ == null : globalSourceId_.equals(that.globalSourceId_))) &&
                    ((!isDetailedResultInformationUsed()) ? !that.isDetailedResultInformationUsed() :
                        ((detailedResultInformation_ == null) ? that.detailedResultInformation_ == null : detailedResultInformation_.equals(that.detailedResultInformation_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getHasDistanceInfo());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, position_);
        if (isPathUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, path_);
        if (isDistanceToOriginUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, distanceToOrigin_);
        if (isHasTravelDistanceUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, hasTravelDistance_);
        if (isTravelDistanceToOriginUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, travelDistanceToOrigin_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayString_);
        if (isHighlightUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, highlight_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, type_);
        if (isGlobalSourceIdUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, globalSourceId_);
        if (isDetailedResultInformationUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, detailedResultInformation_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        position_ = new nds.core.geometry.Position2D(in, (byte)(0));

        if (in.readBool())
        {
            path_ = new nds.core.location.RoadLocationPath(in);
        }

        if (getHasDistanceInfo())
        {
            distanceToOrigin_ = in.readVarUInt32();
        }

        if (getHasDistanceInfo())
        {
            hasTravelDistance_ = in.readBool();
        }

        if (getHasDistanceInfo() && getHasTravelDistance())
        {
            travelDistanceToOrigin_ = in.readVarUInt32();
        }

        displayString_ = in.readString();

        if (in.readBool())
        {
            highlight_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.search.types.TextRange.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.search.types.TextRange>(new ZserioElementFactory_highlight()),
                    zserio.runtime.array.ArrayType.AUTO);
            highlight_.read(in);
        }

        type_ = nds.search.types.SearchResultType.readEnum(in);

        if (in.readBool())
        {
            globalSourceId_ = in.readString();
        }

        if (in.readBool())
        {
            detailedResultInformation_ = new nds.system.types.ExternData(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        position_ = new nds.core.geometry.Position2D(zserioContext.getPosition(), in, (byte)(0));

        if (in.readBool())
        {
            path_ = new nds.core.location.RoadLocationPath(zserioContext.getPath(), in);
        }

        if (getHasDistanceInfo())
        {
            distanceToOrigin_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getDistanceToOrigin().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
        }

        if (getHasDistanceInfo())
        {
            hasTravelDistance_ = in.readBool();
        }

        if (getHasDistanceInfo() && getHasTravelDistance())
        {
            travelDistanceToOrigin_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getTravelDistanceToOrigin().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
        }

        displayString_ = in.readString();

        if (in.readBool())
        {
            highlight_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.search.types.TextRange.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.search.types.TextRange>(new ZserioElementFactory_highlight()),
                    zserio.runtime.array.ArrayType.AUTO);
            highlight_.readPacked(in);
        }

        type_ = nds.search.types.SearchResultType.readEnum(zserioContext.getType(), in);

        if (in.readBool())
        {
            globalSourceId_ = in.readString();
        }

        if (in.readBool())
        {
            detailedResultInformation_ = new nds.system.types.ExternData(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = position_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        if (isPathUsed())
        {
            endBitPosition = path_.initializeOffsets(endBitPosition);
        }
        if (isDistanceToOriginUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(distanceToOrigin_);
        }
        if (isHasTravelDistanceUsed())
        {
            endBitPosition += 1;
        }
        if (isTravelDistanceToOriginUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(travelDistanceToOrigin_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(displayString_);
        endBitPosition += 1;
        if (isHighlightUsed())
        {
            endBitPosition = highlight_.initializeOffsets(endBitPosition);
        }
        endBitPosition += type_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isGlobalSourceIdUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(globalSourceId_);
        }
        endBitPosition += 1;
        if (isDetailedResultInformationUsed())
        {
            endBitPosition = detailedResultInformation_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = position_.initializeOffsets(zserioContext.getPosition(), endBitPosition);
        endBitPosition += 1;
        if (isPathUsed())
        {
            endBitPosition = path_.initializeOffsets(zserioContext.getPath(), endBitPosition);
        }
        if (isDistanceToOriginUsed())
        {
            endBitPosition += zserioContext.getDistanceToOrigin().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(distanceToOrigin_));
        }
        if (isHasTravelDistanceUsed())
        {
            endBitPosition += 1;
        }
        if (isTravelDistanceToOriginUsed())
        {
            endBitPosition += zserioContext.getTravelDistanceToOrigin().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(travelDistanceToOrigin_));
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(displayString_);
        endBitPosition += 1;
        if (isHighlightUsed())
        {
            endBitPosition = highlight_.initializeOffsetsPacked(endBitPosition);
        }
        endBitPosition = type_.initializeOffsets(zserioContext.getType(), endBitPosition);
        endBitPosition += 1;
        if (isGlobalSourceIdUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(globalSourceId_);
        }
        endBitPosition += 1;
        if (isDetailedResultInformationUsed())
        {
            endBitPosition = detailedResultInformation_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        // check parameters
        if (position_.getShift() != (byte)(0))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field SearchResult.position: " +
                    position_.getShift() + " != " + (byte)(0) + "!");
        }
        position_.write(out);

        if (isPathUsed())
        {
            out.writeBool(true);
            path_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isDistanceToOriginUsed())
        {
            out.writeVarUInt32(distanceToOrigin_);
        }

        if (isHasTravelDistanceUsed())
        {
            out.writeBool(hasTravelDistance_);
        }

        if (isTravelDistanceToOriginUsed())
        {
            out.writeVarUInt32(travelDistanceToOrigin_);
        }

        out.writeString(displayString_);

        if (isHighlightUsed())
        {
            out.writeBool(true);
            highlight_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        type_.write(out);

        if (isGlobalSourceIdUsed())
        {
            out.writeBool(true);
            out.writeString(globalSourceId_);
        }
        else
        {
            out.writeBool(false);
        }

        if (isDetailedResultInformationUsed())
        {
            out.writeBool(true);
            detailedResultInformation_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        position_.write(zserioContext.getPosition(), out);

        if (isPathUsed())
        {
            out.writeBool(true);
            path_.write(zserioContext.getPath(), out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isDistanceToOriginUsed())
        {
            zserioContext.getDistanceToOrigin().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(distanceToOrigin_));
        }

        if (isHasTravelDistanceUsed())
        {
            out.writeBool(hasTravelDistance_);
        }

        if (isTravelDistanceToOriginUsed())
        {
            zserioContext.getTravelDistanceToOrigin().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(travelDistanceToOrigin_));
        }

        out.writeString(displayString_);

        if (isHighlightUsed())
        {
            out.writeBool(true);
            highlight_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }

        type_.write(zserioContext.getType(), out);

        if (isGlobalSourceIdUsed())
        {
            out.writeBool(true);
            out.writeString(globalSourceId_);
        }
        else
        {
            out.writeBool(false);
        }

        if (isDetailedResultInformationUsed())
        {
            out.writeBool(true);
            detailedResultInformation_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private static final class ZserioElementFactory_highlight implements zserio.runtime.array.PackableElementFactory<nds.search.types.TextRange>
    {
        @Override
        public nds.search.types.TextRange create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.search.types.TextRange(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.search.types.TextRange.ZserioPackingContext();
        }

        @Override
        public nds.search.types.TextRange create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.search.types.TextRange(context, in);
        }
    }

    private final boolean hasDistanceInfo_;
    private nds.core.geometry.Position2D position_;
    private nds.core.location.RoadLocationPath path_;
    private java.lang.Integer distanceToOrigin_;
    private java.lang.Boolean hasTravelDistance_;
    private java.lang.Integer travelDistanceToOrigin_;
    private java.lang.String displayString_;
    private zserio.runtime.array.Array highlight_;
    private nds.search.types.SearchResultType type_;
    private java.lang.String globalSourceId_;
    private nds.system.types.ExternData detailedResultInformation_;
}
