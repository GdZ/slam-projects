/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.adas.layer;

public class AdasRoadLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            shift_ = new zserio.runtime.array.DeltaContext();
            adasGeometryList_ = new nds.adas.types.AdasGeometryList.ZserioPackingContext();
            adasRoadAttributeMaps_ = new nds.adas.instantiations.AdasRoadAttributeMapList.ZserioPackingContext();
            adasRoadAttributeSets_ = new nds.adas.instantiations.AdasRoadAttributeSetList.ZserioPackingContext();
            adasTransitionAttributeMaps_ = new nds.adas.instantiations.AdasTransitionAttributeMapList.ZserioPackingContext();
            adasTransitionAttributeSets_ = new nds.adas.instantiations.AdasTransitionAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getShift()
        {
            return shift_;
        }

        public nds.adas.types.AdasGeometryList.ZserioPackingContext getAdasGeometryList()
        {
            return adasGeometryList_;
        }

        public nds.adas.instantiations.AdasRoadAttributeMapList.ZserioPackingContext getAdasRoadAttributeMaps()
        {
            return adasRoadAttributeMaps_;
        }

        public nds.adas.instantiations.AdasRoadAttributeSetList.ZserioPackingContext getAdasRoadAttributeSets()
        {
            return adasRoadAttributeSets_;
        }

        public nds.adas.instantiations.AdasTransitionAttributeMapList.ZserioPackingContext getAdasTransitionAttributeMaps()
        {
            return adasTransitionAttributeMaps_;
        }

        public nds.adas.instantiations.AdasTransitionAttributeSetList.ZserioPackingContext getAdasTransitionAttributeSets()
        {
            return adasTransitionAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext shift_;
        private nds.adas.types.AdasGeometryList.ZserioPackingContext adasGeometryList_;
        private nds.adas.instantiations.AdasRoadAttributeMapList.ZserioPackingContext adasRoadAttributeMaps_;
        private nds.adas.instantiations.AdasRoadAttributeSetList.ZserioPackingContext adasRoadAttributeSets_;
        private nds.adas.instantiations.AdasTransitionAttributeMapList.ZserioPackingContext adasTransitionAttributeMaps_;
        private nds.adas.instantiations.AdasTransitionAttributeSetList.ZserioPackingContext adasTransitionAttributeSets_;
    };

    public AdasRoadLayer()
    {
    }

    public AdasRoadLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public AdasRoadLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public AdasRoadLayer(
            nds.adas.metadata.AdasRoadLayerContent content_,
            byte shift_,
            nds.adas.types.AdasGeometryList adasGeometryList_,
            nds.adas.instantiations.AdasRoadAttributeMapList adasRoadAttributeMaps_,
            nds.adas.instantiations.AdasRoadAttributeSetList adasRoadAttributeSets_,
            nds.adas.instantiations.AdasTransitionAttributeMapList adasTransitionAttributeMaps_,
            nds.adas.instantiations.AdasTransitionAttributeSetList adasTransitionAttributeSets_)
    {
        setContent(content_);
        setShift(shift_);
        setAdasGeometryList(adasGeometryList_);
        setAdasRoadAttributeMaps(adasRoadAttributeMaps_);
        setAdasRoadAttributeSets(adasRoadAttributeSets_);
        setAdasTransitionAttributeMaps(adasTransitionAttributeMaps_);
        setAdasTransitionAttributeSets(adasTransitionAttributeSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        zserioContext.getShift().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        adasGeometryList_.initPackingContext(zserioContext.getAdasGeometryList());
        if (isAdasRoadAttributeMapsUsed())
        {
            adasRoadAttributeMaps_.initPackingContext(zserioContext.getAdasRoadAttributeMaps());
        }
        if (isAdasRoadAttributeSetsUsed())
        {
            adasRoadAttributeSets_.initPackingContext(zserioContext.getAdasRoadAttributeSets());
        }
        if (isAdasTransitionAttributeMapsUsed())
        {
            adasTransitionAttributeMaps_.initPackingContext(zserioContext.getAdasTransitionAttributeMaps());
        }
        if (isAdasTransitionAttributeSetsUsed())
        {
            adasTransitionAttributeSets_.initPackingContext(zserioContext.getAdasTransitionAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        endBitPosition += adasGeometryList_.bitSizeOf(endBitPosition);
        if (isAdasRoadAttributeMapsUsed())
        {
            endBitPosition += adasRoadAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isAdasRoadAttributeSetsUsed())
        {
            endBitPosition += adasRoadAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isAdasTransitionAttributeMapsUsed())
        {
            endBitPosition += adasTransitionAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isAdasTransitionAttributeSetsUsed())
        {
            endBitPosition += adasTransitionAttributeSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        endBitPosition += adasGeometryList_.bitSizeOf(zserioContext.getAdasGeometryList(), endBitPosition);
        if (isAdasRoadAttributeMapsUsed())
        {
            endBitPosition += adasRoadAttributeMaps_.bitSizeOf(zserioContext.getAdasRoadAttributeMaps(), endBitPosition);
        }
        if (isAdasRoadAttributeSetsUsed())
        {
            endBitPosition += adasRoadAttributeSets_.bitSizeOf(zserioContext.getAdasRoadAttributeSets(), endBitPosition);
        }
        if (isAdasTransitionAttributeMapsUsed())
        {
            endBitPosition += adasTransitionAttributeMaps_.bitSizeOf(zserioContext.getAdasTransitionAttributeMaps(), endBitPosition);
        }
        if (isAdasTransitionAttributeSetsUsed())
        {
            endBitPosition += adasTransitionAttributeSets_.bitSizeOf(zserioContext.getAdasTransitionAttributeSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.adas.metadata.AdasRoadLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.adas.metadata.AdasRoadLayerContent content_)
    {
        this.content_ = content_;
    }

    public byte getShift()
    {
        return shift_;
    }

    public void setShift(byte shift_)
    {
        this.shift_ = shift_;
    }

    public nds.adas.types.AdasGeometryList getAdasGeometryList()
    {
        return adasGeometryList_;
    }

    public void setAdasGeometryList(nds.adas.types.AdasGeometryList adasGeometryList_)
    {
        this.adasGeometryList_ = adasGeometryList_;
    }

    public nds.adas.instantiations.AdasRoadAttributeMapList getAdasRoadAttributeMaps()
    {
        return adasRoadAttributeMaps_;
    }

    public void setAdasRoadAttributeMaps(nds.adas.instantiations.AdasRoadAttributeMapList adasRoadAttributeMaps_)
    {
        this.adasRoadAttributeMaps_ = adasRoadAttributeMaps_;
    }

    public boolean isAdasRoadAttributeMapsUsed()
    {
        return ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS));
    }

    public boolean isAdasRoadAttributeMapsSet()
    {
        return (adasRoadAttributeMaps_ != null);
    }

    public void resetAdasRoadAttributeMaps()
    {
        this.adasRoadAttributeMaps_ = null;
    }

    public nds.adas.instantiations.AdasRoadAttributeSetList getAdasRoadAttributeSets()
    {
        return adasRoadAttributeSets_;
    }

    public void setAdasRoadAttributeSets(nds.adas.instantiations.AdasRoadAttributeSetList adasRoadAttributeSets_)
    {
        this.adasRoadAttributeSets_ = adasRoadAttributeSets_;
    }

    public boolean isAdasRoadAttributeSetsUsed()
    {
        return ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS));
    }

    public boolean isAdasRoadAttributeSetsSet()
    {
        return (adasRoadAttributeSets_ != null);
    }

    public void resetAdasRoadAttributeSets()
    {
        this.adasRoadAttributeSets_ = null;
    }

    public nds.adas.instantiations.AdasTransitionAttributeMapList getAdasTransitionAttributeMaps()
    {
        return adasTransitionAttributeMaps_;
    }

    public void setAdasTransitionAttributeMaps(nds.adas.instantiations.AdasTransitionAttributeMapList adasTransitionAttributeMaps_)
    {
        this.adasTransitionAttributeMaps_ = adasTransitionAttributeMaps_;
    }

    public boolean isAdasTransitionAttributeMapsUsed()
    {
        return ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS));
    }

    public boolean isAdasTransitionAttributeMapsSet()
    {
        return (adasTransitionAttributeMaps_ != null);
    }

    public void resetAdasTransitionAttributeMaps()
    {
        this.adasTransitionAttributeMaps_ = null;
    }

    public nds.adas.instantiations.AdasTransitionAttributeSetList getAdasTransitionAttributeSets()
    {
        return adasTransitionAttributeSets_;
    }

    public void setAdasTransitionAttributeSets(nds.adas.instantiations.AdasTransitionAttributeSetList adasTransitionAttributeSets_)
    {
        this.adasTransitionAttributeSets_ = adasTransitionAttributeSets_;
    }

    public boolean isAdasTransitionAttributeSetsUsed()
    {
        return ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS));
    }

    public boolean isAdasTransitionAttributeSetsSet()
    {
        return (adasTransitionAttributeSets_ != null);
    }

    public void resetAdasTransitionAttributeSets()
    {
        this.adasTransitionAttributeSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof AdasRoadLayer)
        {
            final AdasRoadLayer that = (AdasRoadLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    shift_ == that.shift_ &&
                    ((adasGeometryList_ == null) ? that.adasGeometryList_ == null : adasGeometryList_.equals(that.adasGeometryList_)) &&
                    ((!isAdasRoadAttributeMapsUsed()) ? !that.isAdasRoadAttributeMapsUsed() :
                        ((adasRoadAttributeMaps_ == null) ? that.adasRoadAttributeMaps_ == null : adasRoadAttributeMaps_.equals(that.adasRoadAttributeMaps_))) &&
                    ((!isAdasRoadAttributeSetsUsed()) ? !that.isAdasRoadAttributeSetsUsed() :
                        ((adasRoadAttributeSets_ == null) ? that.adasRoadAttributeSets_ == null : adasRoadAttributeSets_.equals(that.adasRoadAttributeSets_))) &&
                    ((!isAdasTransitionAttributeMapsUsed()) ? !that.isAdasTransitionAttributeMapsUsed() :
                        ((adasTransitionAttributeMaps_ == null) ? that.adasTransitionAttributeMaps_ == null : adasTransitionAttributeMaps_.equals(that.adasTransitionAttributeMaps_))) &&
                    ((!isAdasTransitionAttributeSetsUsed()) ? !that.isAdasTransitionAttributeSetsUsed() :
                        ((adasTransitionAttributeSets_ == null) ? that.adasTransitionAttributeSets_ == null : adasTransitionAttributeSets_.equals(that.adasTransitionAttributeSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shift_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, adasGeometryList_);
        if (isAdasRoadAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adasRoadAttributeMaps_);
        if (isAdasRoadAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adasRoadAttributeSets_);
        if (isAdasTransitionAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adasTransitionAttributeMaps_);
        if (isAdasTransitionAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adasTransitionAttributeSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.adas.metadata.AdasRoadLayerContent(in);

        shift_ = (byte)in.readBits(5);

        adasGeometryList_ = new nds.adas.types.AdasGeometryList(in, (byte)(getShift()));

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS))
        {
            adasRoadAttributeMaps_ = new nds.adas.instantiations.AdasRoadAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS))
        {
            adasRoadAttributeSets_ = new nds.adas.instantiations.AdasRoadAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS))
        {
            adasTransitionAttributeMaps_ = new nds.adas.instantiations.AdasTransitionAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS))
        {
            adasTransitionAttributeSets_ = new nds.adas.instantiations.AdasTransitionAttributeSetList(in, (byte)(getShift()));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.adas.metadata.AdasRoadLayerContent(zserioContext.getContent(), in);

        shift_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShift().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        adasGeometryList_ = new nds.adas.types.AdasGeometryList(zserioContext.getAdasGeometryList(), in, (byte)(getShift()));

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_MAPS))
        {
            adasRoadAttributeMaps_ = new nds.adas.instantiations.AdasRoadAttributeMapList(zserioContext.getAdasRoadAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.ROAD_SETS))
        {
            adasRoadAttributeSets_ = new nds.adas.instantiations.AdasRoadAttributeSetList(zserioContext.getAdasRoadAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_MAPS))
        {
            adasTransitionAttributeMaps_ = new nds.adas.instantiations.AdasTransitionAttributeMapList(zserioContext.getAdasTransitionAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS)).equals(nds.adas.metadata.AdasRoadLayerContent.Values.TRANSITION_SETS))
        {
            adasTransitionAttributeSets_ = new nds.adas.instantiations.AdasTransitionAttributeSetList(zserioContext.getAdasTransitionAttributeSets(), in, (byte)(getShift()));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        endBitPosition = adasGeometryList_.initializeOffsets(endBitPosition);
        if (isAdasRoadAttributeMapsUsed())
        {
            endBitPosition = adasRoadAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isAdasRoadAttributeSetsUsed())
        {
            endBitPosition = adasRoadAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isAdasTransitionAttributeMapsUsed())
        {
            endBitPosition = adasTransitionAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isAdasTransitionAttributeSetsUsed())
        {
            endBitPosition = adasTransitionAttributeSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        endBitPosition = adasGeometryList_.initializeOffsets(zserioContext.getAdasGeometryList(), endBitPosition);
        if (isAdasRoadAttributeMapsUsed())
        {
            endBitPosition = adasRoadAttributeMaps_.initializeOffsets(zserioContext.getAdasRoadAttributeMaps(), endBitPosition);
        }
        if (isAdasRoadAttributeSetsUsed())
        {
            endBitPosition = adasRoadAttributeSets_.initializeOffsets(zserioContext.getAdasRoadAttributeSets(), endBitPosition);
        }
        if (isAdasTransitionAttributeMapsUsed())
        {
            endBitPosition = adasTransitionAttributeMaps_.initializeOffsets(zserioContext.getAdasTransitionAttributeMaps(), endBitPosition);
        }
        if (isAdasTransitionAttributeSetsUsed())
        {
            endBitPosition = adasTransitionAttributeSets_.initializeOffsets(zserioContext.getAdasTransitionAttributeSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        out.writeBits(shift_, 5);

        // check parameters
        if (adasGeometryList_.getShift() != (byte)(getShift()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field AdasRoadLayer.adasGeometryList: " +
                    adasGeometryList_.getShift() + " != " + (byte)(getShift()) + "!");
        }
        adasGeometryList_.write(out);

        if (isAdasRoadAttributeMapsUsed())
        {
            // check parameters
            if (adasRoadAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field AdasRoadLayer.adasRoadAttributeMaps: " +
                        adasRoadAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            adasRoadAttributeMaps_.write(out);
        }

        if (isAdasRoadAttributeSetsUsed())
        {
            // check parameters
            if (adasRoadAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field AdasRoadLayer.adasRoadAttributeSets: " +
                        adasRoadAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            adasRoadAttributeSets_.write(out);
        }

        if (isAdasTransitionAttributeMapsUsed())
        {
            // check parameters
            if (adasTransitionAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field AdasRoadLayer.adasTransitionAttributeMaps: " +
                        adasTransitionAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            adasTransitionAttributeMaps_.write(out);
        }

        if (isAdasTransitionAttributeSetsUsed())
        {
            // check parameters
            if (adasTransitionAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field AdasRoadLayer.adasTransitionAttributeSets: " +
                        adasTransitionAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            adasTransitionAttributeSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        zserioContext.getShift().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));

        adasGeometryList_.write(zserioContext.getAdasGeometryList(), out);

        if (isAdasRoadAttributeMapsUsed())
        {
            adasRoadAttributeMaps_.write(zserioContext.getAdasRoadAttributeMaps(), out);
        }

        if (isAdasRoadAttributeSetsUsed())
        {
            adasRoadAttributeSets_.write(zserioContext.getAdasRoadAttributeSets(), out);
        }

        if (isAdasTransitionAttributeMapsUsed())
        {
            adasTransitionAttributeMaps_.write(zserioContext.getAdasTransitionAttributeMaps(), out);
        }

        if (isAdasTransitionAttributeSetsUsed())
        {
            adasTransitionAttributeSets_.write(zserioContext.getAdasTransitionAttributeSets(), out);
        }
    }

    private nds.adas.metadata.AdasRoadLayerContent content_;
    private byte shift_;
    private nds.adas.types.AdasGeometryList adasGeometryList_;
    private nds.adas.instantiations.AdasRoadAttributeMapList adasRoadAttributeMaps_;
    private nds.adas.instantiations.AdasRoadAttributeSetList adasRoadAttributeSets_;
    private nds.adas.instantiations.AdasTransitionAttributeMapList adasTransitionAttributeMaps_;
    private nds.adas.instantiations.AdasTransitionAttributeSetList adasTransitionAttributeSets_;
}
