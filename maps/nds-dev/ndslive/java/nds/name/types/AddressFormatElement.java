/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.types;

public class AddressFormatElement implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            type_ = new zserio.runtime.array.DeltaContext();
            adminHierarchyElementType_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getType()
        {
            return type_;
        }

        public zserio.runtime.array.DeltaContext getAdminHierarchyElementType()
        {
            return adminHierarchyElementType_;
        }

        private zserio.runtime.array.DeltaContext type_;
        private zserio.runtime.array.DeltaContext adminHierarchyElementType_;
    };

    public AddressFormatElement()
    {
    }

    public AddressFormatElement(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public AddressFormatElement(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public AddressFormatElement(
            nds.name.types.AddressFormatElementType type_,
            nds.name.types.AdminHierarchyElementType adminHierarchyElementType_,
            java.lang.String elementSeparator_)
    {
        setType(type_);
        setAdminHierarchyElementType(adminHierarchyElementType_);
        setElementSeparator(elementSeparator_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_.initPackingContext(zserioContext.getType());
        if (isAdminHierarchyElementTypeUsed())
        {
            adminHierarchyElementType_.initPackingContext(zserioContext.getAdminHierarchyElementType());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(endBitPosition);
        if (isAdminHierarchyElementTypeUsed())
        {
            endBitPosition += adminHierarchyElementType_.bitSizeOf(endBitPosition);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(elementSeparator_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(zserioContext.getType(), endBitPosition);
        if (isAdminHierarchyElementTypeUsed())
        {
            endBitPosition += adminHierarchyElementType_.bitSizeOf(zserioContext.getAdminHierarchyElementType(), endBitPosition);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(elementSeparator_);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.name.types.AddressFormatElementType getType()
    {
        return type_;
    }

    public void setType(nds.name.types.AddressFormatElementType type_)
    {
        this.type_ = type_;
    }

    public nds.name.types.AdminHierarchyElementType getAdminHierarchyElementType()
    {
        return adminHierarchyElementType_;
    }

    public void setAdminHierarchyElementType(nds.name.types.AdminHierarchyElementType adminHierarchyElementType_)
    {
        this.adminHierarchyElementType_ = adminHierarchyElementType_;
    }

    public boolean isAdminHierarchyElementTypeUsed()
    {
        return (getType() == nds.name.types.AddressFormatElementType.ADMINISTRATIVE_HIERARCHY_ELEMENT);
    }

    public boolean isAdminHierarchyElementTypeSet()
    {
        return (adminHierarchyElementType_ != null);
    }

    public void resetAdminHierarchyElementType()
    {
        this.adminHierarchyElementType_ = null;
    }

    public java.lang.String getElementSeparator()
    {
        return elementSeparator_;
    }

    public void setElementSeparator(java.lang.String elementSeparator_)
    {
        this.elementSeparator_ = elementSeparator_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof AddressFormatElement)
        {
            final AddressFormatElement that = (AddressFormatElement)obj;

            return
                    ((type_ == null) ? that.type_ == null : type_.getValue() == that.type_.getValue()) &&
                    ((!isAdminHierarchyElementTypeUsed()) ? !that.isAdminHierarchyElementTypeUsed() :
                        ((adminHierarchyElementType_ == null) ? that.adminHierarchyElementType_ == null : adminHierarchyElementType_.getValue() == that.adminHierarchyElementType_.getValue())) &&
                    ((elementSeparator_ == null) ? that.elementSeparator_ == null : elementSeparator_.equals(that.elementSeparator_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, type_);
        if (isAdminHierarchyElementTypeUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adminHierarchyElementType_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, elementSeparator_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        type_ = nds.name.types.AddressFormatElementType.readEnum(in);

        if (getType() == nds.name.types.AddressFormatElementType.ADMINISTRATIVE_HIERARCHY_ELEMENT)
        {
            adminHierarchyElementType_ = nds.name.types.AdminHierarchyElementType.readEnum(in);
        }

        elementSeparator_ = in.readString();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_ = nds.name.types.AddressFormatElementType.readEnum(zserioContext.getType(), in);

        if (getType() == nds.name.types.AddressFormatElementType.ADMINISTRATIVE_HIERARCHY_ELEMENT)
        {
            adminHierarchyElementType_ = nds.name.types.AdminHierarchyElementType.readEnum(zserioContext.getAdminHierarchyElementType(), in);
        }

        elementSeparator_ = in.readString();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(endBitPosition);
        if (isAdminHierarchyElementTypeUsed())
        {
            endBitPosition += adminHierarchyElementType_.bitSizeOf(endBitPosition);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(elementSeparator_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = type_.initializeOffsets(zserioContext.getType(), endBitPosition);
        if (isAdminHierarchyElementTypeUsed())
        {
            endBitPosition = adminHierarchyElementType_.initializeOffsets(zserioContext.getAdminHierarchyElementType(), endBitPosition);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(elementSeparator_);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        type_.write(out);

        if (isAdminHierarchyElementTypeUsed())
        {
            adminHierarchyElementType_.write(out);
        }

        out.writeString(elementSeparator_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_.write(zserioContext.getType(), out);

        if (isAdminHierarchyElementTypeUsed())
        {
            adminHierarchyElementType_.write(zserioContext.getAdminHierarchyElementType(), out);
        }

        out.writeString(elementSeparator_);
    }

    private nds.name.types.AddressFormatElementType type_;
    private nds.name.types.AdminHierarchyElementType adminHierarchyElementType_;
    private java.lang.String elementSeparator_;
}
