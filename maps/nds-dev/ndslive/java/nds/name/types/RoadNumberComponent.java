/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.types;

public class RoadNumberComponent implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            localPriority_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getLocalPriority()
        {
            return localPriority_;
        }

        private zserio.runtime.array.DeltaContext localPriority_;
    };

    public RoadNumberComponent()
    {
    }

    public RoadNumberComponent(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadNumberComponent(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadNumberComponent(
            java.lang.String componentString_,
            boolean onIcon_,
            boolean acousticOutput_,
            boolean textOutput_,
            byte localPriority_)
    {
        setComponentString(componentString_);
        setOnIcon(onIcon_);
        setAcousticOutput(acousticOutput_);
        setTextOutput(textOutput_);
        setLocalPriority(localPriority_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getLocalPriority().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(localPriority_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(componentString_);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 5;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(componentString_);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += zserioContext.getLocalPriority().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(localPriority_));

        return (int)(endBitPosition - bitPosition);
    }

    public java.lang.String getComponentString()
    {
        return componentString_;
    }

    public void setComponentString(java.lang.String componentString_)
    {
        this.componentString_ = componentString_;
    }

    public boolean getOnIcon()
    {
        return onIcon_;
    }

    public void setOnIcon(boolean onIcon_)
    {
        this.onIcon_ = onIcon_;
    }

    public boolean getAcousticOutput()
    {
        return acousticOutput_;
    }

    public void setAcousticOutput(boolean acousticOutput_)
    {
        this.acousticOutput_ = acousticOutput_;
    }

    public boolean getTextOutput()
    {
        return textOutput_;
    }

    public void setTextOutput(boolean textOutput_)
    {
        this.textOutput_ = textOutput_;
    }

    public byte getLocalPriority()
    {
        return localPriority_;
    }

    public void setLocalPriority(byte localPriority_)
    {
        this.localPriority_ = localPriority_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadNumberComponent)
        {
            final RoadNumberComponent that = (RoadNumberComponent)obj;

            return
                    ((componentString_ == null) ? that.componentString_ == null : componentString_.equals(that.componentString_)) &&
                    onIcon_ == that.onIcon_ &&
                    acousticOutput_ == that.acousticOutput_ &&
                    textOutput_ == that.textOutput_ &&
                    localPriority_ == that.localPriority_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, componentString_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, onIcon_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, acousticOutput_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, textOutput_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, localPriority_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        componentString_ = in.readString();

        onIcon_ = in.readBool();

        acousticOutput_ = in.readBool();

        textOutput_ = in.readBool();

        localPriority_ = (byte)in.readBits(5);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        componentString_ = in.readString();

        onIcon_ = in.readBool();

        acousticOutput_ = in.readBool();

        textOutput_ = in.readBool();

        localPriority_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getLocalPriority().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(componentString_);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 5;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(componentString_);
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += 1;
        endBitPosition += zserioContext.getLocalPriority().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(localPriority_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeString(componentString_);

        out.writeBool(onIcon_);

        out.writeBool(acousticOutput_);

        out.writeBool(textOutput_);

        out.writeBits(localPriority_, 5);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        out.writeString(componentString_);

        out.writeBool(onIcon_);

        out.writeBool(acousticOutput_);

        out.writeBool(textOutput_);

        zserioContext.getLocalPriority().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(localPriority_));
    }

    private java.lang.String componentString_;
    private boolean onIcon_;
    private boolean acousticOutput_;
    private boolean textOutput_;
    private byte localPriority_;
}
