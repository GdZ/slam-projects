/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.attributes;

public class NameLanePositionAttributeValue implements zserio.runtime.io.Writer, zserio.runtime.SizeOf
{
    public NameLanePositionAttributeValue(
            nds.name.attributes.NameLanePositionAttributeType type_)
    {
        this.type_ = type_;
    }

    public NameLanePositionAttributeValue(zserio.runtime.io.BitStreamReader in,
            nds.name.attributes.NameLanePositionAttributeType type_)
            throws java.io.IOException
    {
        this.type_ = type_;

        read(in);
    }

    public int choiceTag()
    {
        switch (getType())
        {
        case HOUSE_NUMBER:
            return CHOICE_houseNumber;
        case TOLL_STATION_NAME:
            return CHOICE_tollStationName;
        default:
            return UNDEFINED_CHOICE;
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case HOUSE_NUMBER:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(getHouseNumber());
            break;
        case TOLL_STATION_NAME:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(getTollStationName());
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice NameLanePositionAttributeValue: " + getType() + "!");
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.name.attributes.NameLanePositionAttributeType getType()
    {
        return this.type_;
    }

    public java.lang.String getHouseNumber()
    {
        return (java.lang.String)objectChoice;
    }

    public void setHouseNumber(java.lang.String houseNumber_)
    {
        objectChoice = houseNumber_;
    }

    public java.lang.String getTollStationName()
    {
        return (java.lang.String)objectChoice;
    }

    public void setTollStationName(java.lang.String tollStationName_)
    {
        objectChoice = tollStationName_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof NameLanePositionAttributeValue)
        {
            final NameLanePositionAttributeValue that = (NameLanePositionAttributeValue)obj;

            return
                    ((this.type_ == null) ? that.type_ == null : this.type_.getValue() == that.type_.getValue()) &&
                    (
                        (objectChoice == null && that.objectChoice == null) ||
                        (objectChoice != null && objectChoice.equals(that.objectChoice))
                    );
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getType());
        if (objectChoice != null)
        {
            switch (getType())
            {
            case HOUSE_NUMBER:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.lang.String)objectChoice);
                break;
            case TOLL_STATION_NAME:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.lang.String)objectChoice);
                break;
            default:
                break;
            }
        }

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        switch (getType())
        {
        case HOUSE_NUMBER:
            objectChoice = in.readString();
            break;
        case TOLL_STATION_NAME:
            objectChoice = in.readString();
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice NameLanePositionAttributeValue: " + getType() + "!");
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case HOUSE_NUMBER:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(getHouseNumber());
            }
            break;
        case TOLL_STATION_NAME:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(getTollStationName());
            }
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice NameLanePositionAttributeValue: " + getType() + "!");
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        switch (getType())
        {
        case HOUSE_NUMBER:
            out.writeString(getHouseNumber());
            break;
        case TOLL_STATION_NAME:
            out.writeString(getTollStationName());
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice NameLanePositionAttributeValue: " + getType() + "!");
        }
    }

    public static final int CHOICE_houseNumber = 0;
    public static final int CHOICE_tollStationName = 1;
    public static final int UNDEFINED_CHOICE = -1;

    private final nds.name.attributes.NameLanePositionAttributeType type_;
    private java.lang.Object objectChoice;
}
