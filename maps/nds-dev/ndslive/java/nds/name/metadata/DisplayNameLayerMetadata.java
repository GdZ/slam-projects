/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.metadata;

public class DisplayNameLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            displayLineRangeAttributeMetadata_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMetadata.ZserioPackingContext();
            displayAreaAttributeMetadata_ = new nds.name.instantiations.NameDisplayAreaAttributeMetadata.ZserioPackingContext();
            displayPointAttributeMetadata_ = new nds.name.instantiations.NameDisplayPointAttributeMetadata.ZserioPackingContext();
            availableLanguages_ = new nds.core.language.AvailableLanguages.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.name.instantiations.NameDisplayLineRangeAttributeMetadata.ZserioPackingContext getDisplayLineRangeAttributeMetadata()
        {
            return displayLineRangeAttributeMetadata_;
        }

        public nds.name.instantiations.NameDisplayAreaAttributeMetadata.ZserioPackingContext getDisplayAreaAttributeMetadata()
        {
            return displayAreaAttributeMetadata_;
        }

        public nds.name.instantiations.NameDisplayPointAttributeMetadata.ZserioPackingContext getDisplayPointAttributeMetadata()
        {
            return displayPointAttributeMetadata_;
        }

        public nds.core.language.AvailableLanguages.ZserioPackingContext getAvailableLanguages()
        {
            return availableLanguages_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.name.instantiations.NameDisplayLineRangeAttributeMetadata.ZserioPackingContext displayLineRangeAttributeMetadata_;
        private nds.name.instantiations.NameDisplayAreaAttributeMetadata.ZserioPackingContext displayAreaAttributeMetadata_;
        private nds.name.instantiations.NameDisplayPointAttributeMetadata.ZserioPackingContext displayPointAttributeMetadata_;
        private nds.core.language.AvailableLanguages.ZserioPackingContext availableLanguages_;
    };

    public DisplayNameLayerMetadata()
    {
    }

    public DisplayNameLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DisplayNameLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DisplayNameLayerMetadata(
            nds.name.metadata.DisplayNameLayerContent content_,
            nds.name.instantiations.NameDisplayLineRangeAttributeMetadata displayLineRangeAttributeMetadata_,
            nds.name.instantiations.NameDisplayAreaAttributeMetadata displayAreaAttributeMetadata_,
            nds.name.instantiations.NameDisplayPointAttributeMetadata displayPointAttributeMetadata_,
            nds.core.language.AvailableLanguages availableLanguages_)
    {
        setContent(content_);
        setDisplayLineRangeAttributeMetadata(displayLineRangeAttributeMetadata_);
        setDisplayAreaAttributeMetadata(displayAreaAttributeMetadata_);
        setDisplayPointAttributeMetadata(displayPointAttributeMetadata_);
        setAvailableLanguages(availableLanguages_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            displayLineRangeAttributeMetadata_.initPackingContext(zserioContext.getDisplayLineRangeAttributeMetadata());
        }
        if (isDisplayAreaAttributeMetadataUsed())
        {
            displayAreaAttributeMetadata_.initPackingContext(zserioContext.getDisplayAreaAttributeMetadata());
        }
        if (isDisplayPointAttributeMetadataUsed())
        {
            displayPointAttributeMetadata_.initPackingContext(zserioContext.getDisplayPointAttributeMetadata());
        }
        availableLanguages_.initPackingContext(zserioContext.getAvailableLanguages());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            endBitPosition += displayLineRangeAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        if (isDisplayAreaAttributeMetadataUsed())
        {
            endBitPosition += displayAreaAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        if (isDisplayPointAttributeMetadataUsed())
        {
            endBitPosition += displayPointAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        endBitPosition += availableLanguages_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            endBitPosition += displayLineRangeAttributeMetadata_.bitSizeOf(zserioContext.getDisplayLineRangeAttributeMetadata(), endBitPosition);
        }
        if (isDisplayAreaAttributeMetadataUsed())
        {
            endBitPosition += displayAreaAttributeMetadata_.bitSizeOf(zserioContext.getDisplayAreaAttributeMetadata(), endBitPosition);
        }
        if (isDisplayPointAttributeMetadataUsed())
        {
            endBitPosition += displayPointAttributeMetadata_.bitSizeOf(zserioContext.getDisplayPointAttributeMetadata(), endBitPosition);
        }
        endBitPosition += availableLanguages_.bitSizeOf(zserioContext.getAvailableLanguages(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.name.metadata.DisplayNameLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.name.metadata.DisplayNameLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.name.instantiations.NameDisplayLineRangeAttributeMetadata getDisplayLineRangeAttributeMetadata()
    {
        return displayLineRangeAttributeMetadata_;
    }

    public void setDisplayLineRangeAttributeMetadata(nds.name.instantiations.NameDisplayLineRangeAttributeMetadata displayLineRangeAttributeMetadata_)
    {
        this.displayLineRangeAttributeMetadata_ = displayLineRangeAttributeMetadata_;
    }

    public boolean isDisplayLineRangeAttributeMetadataUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS));
    }

    public boolean isDisplayLineRangeAttributeMetadataSet()
    {
        return (displayLineRangeAttributeMetadata_ != null);
    }

    public void resetDisplayLineRangeAttributeMetadata()
    {
        this.displayLineRangeAttributeMetadata_ = null;
    }

    public nds.name.instantiations.NameDisplayAreaAttributeMetadata getDisplayAreaAttributeMetadata()
    {
        return displayAreaAttributeMetadata_;
    }

    public void setDisplayAreaAttributeMetadata(nds.name.instantiations.NameDisplayAreaAttributeMetadata displayAreaAttributeMetadata_)
    {
        this.displayAreaAttributeMetadata_ = displayAreaAttributeMetadata_;
    }

    public boolean isDisplayAreaAttributeMetadataUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS));
    }

    public boolean isDisplayAreaAttributeMetadataSet()
    {
        return (displayAreaAttributeMetadata_ != null);
    }

    public void resetDisplayAreaAttributeMetadata()
    {
        this.displayAreaAttributeMetadata_ = null;
    }

    public nds.name.instantiations.NameDisplayPointAttributeMetadata getDisplayPointAttributeMetadata()
    {
        return displayPointAttributeMetadata_;
    }

    public void setDisplayPointAttributeMetadata(nds.name.instantiations.NameDisplayPointAttributeMetadata displayPointAttributeMetadata_)
    {
        this.displayPointAttributeMetadata_ = displayPointAttributeMetadata_;
    }

    public boolean isDisplayPointAttributeMetadataUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS));
    }

    public boolean isDisplayPointAttributeMetadataSet()
    {
        return (displayPointAttributeMetadata_ != null);
    }

    public void resetDisplayPointAttributeMetadata()
    {
        this.displayPointAttributeMetadata_ = null;
    }

    public nds.core.language.AvailableLanguages getAvailableLanguages()
    {
        return availableLanguages_;
    }

    public void setAvailableLanguages(nds.core.language.AvailableLanguages availableLanguages_)
    {
        this.availableLanguages_ = availableLanguages_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DisplayNameLayerMetadata)
        {
            final DisplayNameLayerMetadata that = (DisplayNameLayerMetadata)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isDisplayLineRangeAttributeMetadataUsed()) ? !that.isDisplayLineRangeAttributeMetadataUsed() :
                        ((displayLineRangeAttributeMetadata_ == null) ? that.displayLineRangeAttributeMetadata_ == null : displayLineRangeAttributeMetadata_.equals(that.displayLineRangeAttributeMetadata_))) &&
                    ((!isDisplayAreaAttributeMetadataUsed()) ? !that.isDisplayAreaAttributeMetadataUsed() :
                        ((displayAreaAttributeMetadata_ == null) ? that.displayAreaAttributeMetadata_ == null : displayAreaAttributeMetadata_.equals(that.displayAreaAttributeMetadata_))) &&
                    ((!isDisplayPointAttributeMetadataUsed()) ? !that.isDisplayPointAttributeMetadataUsed() :
                        ((displayPointAttributeMetadata_ == null) ? that.displayPointAttributeMetadata_ == null : displayPointAttributeMetadata_.equals(that.displayPointAttributeMetadata_))) &&
                    ((availableLanguages_ == null) ? that.availableLanguages_ == null : availableLanguages_.equals(that.availableLanguages_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isDisplayLineRangeAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineRangeAttributeMetadata_);
        if (isDisplayAreaAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayAreaAttributeMetadata_);
        if (isDisplayPointAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayPointAttributeMetadata_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableLanguages_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.name.metadata.DisplayNameLayerContent(in);

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeMetadata_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMetadata(in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeMetadata_ = new nds.name.instantiations.NameDisplayAreaAttributeMetadata(in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeMetadata_ = new nds.name.instantiations.NameDisplayPointAttributeMetadata(in);
        }

        availableLanguages_ = new nds.core.language.AvailableLanguages(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.name.metadata.DisplayNameLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeMetadata_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMetadata(zserioContext.getDisplayLineRangeAttributeMetadata(), in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeMetadata_ = new nds.name.instantiations.NameDisplayAreaAttributeMetadata(zserioContext.getDisplayAreaAttributeMetadata(), in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS) || (getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeMetadata_ = new nds.name.instantiations.NameDisplayPointAttributeMetadata(zserioContext.getDisplayPointAttributeMetadata(), in);
        }

        availableLanguages_ = new nds.core.language.AvailableLanguages(zserioContext.getAvailableLanguages(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            endBitPosition = displayLineRangeAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        if (isDisplayAreaAttributeMetadataUsed())
        {
            endBitPosition = displayAreaAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        if (isDisplayPointAttributeMetadataUsed())
        {
            endBitPosition = displayPointAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        endBitPosition = availableLanguages_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            endBitPosition = displayLineRangeAttributeMetadata_.initializeOffsets(zserioContext.getDisplayLineRangeAttributeMetadata(), endBitPosition);
        }
        if (isDisplayAreaAttributeMetadataUsed())
        {
            endBitPosition = displayAreaAttributeMetadata_.initializeOffsets(zserioContext.getDisplayAreaAttributeMetadata(), endBitPosition);
        }
        if (isDisplayPointAttributeMetadataUsed())
        {
            endBitPosition = displayPointAttributeMetadata_.initializeOffsets(zserioContext.getDisplayPointAttributeMetadata(), endBitPosition);
        }
        endBitPosition = availableLanguages_.initializeOffsets(zserioContext.getAvailableLanguages(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            displayLineRangeAttributeMetadata_.write(out);
        }

        if (isDisplayAreaAttributeMetadataUsed())
        {
            displayAreaAttributeMetadata_.write(out);
        }

        if (isDisplayPointAttributeMetadataUsed())
        {
            displayPointAttributeMetadata_.write(out);
        }

        availableLanguages_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isDisplayLineRangeAttributeMetadataUsed())
        {
            displayLineRangeAttributeMetadata_.write(zserioContext.getDisplayLineRangeAttributeMetadata(), out);
        }

        if (isDisplayAreaAttributeMetadataUsed())
        {
            displayAreaAttributeMetadata_.write(zserioContext.getDisplayAreaAttributeMetadata(), out);
        }

        if (isDisplayPointAttributeMetadataUsed())
        {
            displayPointAttributeMetadata_.write(zserioContext.getDisplayPointAttributeMetadata(), out);
        }

        availableLanguages_.write(zserioContext.getAvailableLanguages(), out);
    }

    private nds.name.metadata.DisplayNameLayerContent content_;
    private nds.name.instantiations.NameDisplayLineRangeAttributeMetadata displayLineRangeAttributeMetadata_;
    private nds.name.instantiations.NameDisplayAreaAttributeMetadata displayAreaAttributeMetadata_;
    private nds.name.instantiations.NameDisplayPointAttributeMetadata displayPointAttributeMetadata_;
    private nds.core.language.AvailableLanguages availableLanguages_;
}
