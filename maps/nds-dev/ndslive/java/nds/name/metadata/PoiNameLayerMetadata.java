/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.metadata;

public class PoiNameLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            poiAttributeMetadata_ = new nds.name.instantiations.NamePoiAttributeMetadata.ZserioPackingContext();
            availableLanguages_ = new nds.core.language.AvailableLanguages.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.name.instantiations.NamePoiAttributeMetadata.ZserioPackingContext getPoiAttributeMetadata()
        {
            return poiAttributeMetadata_;
        }

        public nds.core.language.AvailableLanguages.ZserioPackingContext getAvailableLanguages()
        {
            return availableLanguages_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.name.instantiations.NamePoiAttributeMetadata.ZserioPackingContext poiAttributeMetadata_;
        private nds.core.language.AvailableLanguages.ZserioPackingContext availableLanguages_;
    };

    public PoiNameLayerMetadata()
    {
    }

    public PoiNameLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PoiNameLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public PoiNameLayerMetadata(
            nds.name.metadata.PoiNameLayerContent content_,
            nds.name.instantiations.NamePoiAttributeMetadata poiAttributeMetadata_,
            nds.name.types.AddressFormat[] addressFormats_,
            nds.core.language.AvailableLanguages availableLanguages_)
    {
        setContent(content_);
        setPoiAttributeMetadata(poiAttributeMetadata_);
        setAddressFormats(addressFormats_);
        setAvailableLanguages(availableLanguages_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isPoiAttributeMetadataUsed())
        {
            poiAttributeMetadata_.initPackingContext(zserioContext.getPoiAttributeMetadata());
        }
        availableLanguages_.initPackingContext(zserioContext.getAvailableLanguages());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isPoiAttributeMetadataUsed())
        {
            endBitPosition += poiAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        endBitPosition += addressFormats_.bitSizeOf(endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isPoiAttributeMetadataUsed())
        {
            endBitPosition += poiAttributeMetadata_.bitSizeOf(zserioContext.getPoiAttributeMetadata(), endBitPosition);
        }
        endBitPosition += addressFormats_.bitSizeOfPacked(endBitPosition);
        endBitPosition += availableLanguages_.bitSizeOf(zserioContext.getAvailableLanguages(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.name.metadata.PoiNameLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.name.metadata.PoiNameLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.name.instantiations.NamePoiAttributeMetadata getPoiAttributeMetadata()
    {
        return poiAttributeMetadata_;
    }

    public void setPoiAttributeMetadata(nds.name.instantiations.NamePoiAttributeMetadata poiAttributeMetadata_)
    {
        this.poiAttributeMetadata_ = poiAttributeMetadata_;
    }

    public boolean isPoiAttributeMetadataUsed()
    {
        return ((getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS) || (getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS));
    }

    public boolean isPoiAttributeMetadataSet()
    {
        return (poiAttributeMetadata_ != null);
    }

    public void resetPoiAttributeMetadata()
    {
        this.poiAttributeMetadata_ = null;
    }

    public nds.name.types.AddressFormat[] getAddressFormats()
    {
        return (addressFormats_ == null) ? null : addressFormats_.getRawArray();
    }

    public void setAddressFormats(nds.name.types.AddressFormat[] addressFormats_)
    {
        this.addressFormats_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class, addressFormats_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    public nds.core.language.AvailableLanguages getAvailableLanguages()
    {
        return availableLanguages_;
    }

    public void setAvailableLanguages(nds.core.language.AvailableLanguages availableLanguages_)
    {
        this.availableLanguages_ = availableLanguages_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PoiNameLayerMetadata)
        {
            final PoiNameLayerMetadata that = (PoiNameLayerMetadata)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isPoiAttributeMetadataUsed()) ? !that.isPoiAttributeMetadataUsed() :
                        ((poiAttributeMetadata_ == null) ? that.poiAttributeMetadata_ == null : poiAttributeMetadata_.equals(that.poiAttributeMetadata_))) &&
                    ((addressFormats_ == null) ? that.addressFormats_ == null : addressFormats_.equals(that.addressFormats_)) &&
                    ((availableLanguages_ == null) ? that.availableLanguages_ == null : availableLanguages_.equals(that.availableLanguages_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isPoiAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, poiAttributeMetadata_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, addressFormats_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, availableLanguages_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.name.metadata.PoiNameLayerContent(in);

        if ((getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS) || (getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS))
        {
            poiAttributeMetadata_ = new nds.name.instantiations.NamePoiAttributeMetadata(in);
        }

        addressFormats_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                zserio.runtime.array.ArrayType.AUTO);
        addressFormats_.read(in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.name.metadata.PoiNameLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_MAPS) || (getContent().and(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS)).equals(nds.name.metadata.PoiNameLayerContent.Values.POI_SETS))
        {
            poiAttributeMetadata_ = new nds.name.instantiations.NamePoiAttributeMetadata(zserioContext.getPoiAttributeMetadata(), in);
        }

        addressFormats_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                zserio.runtime.array.ArrayType.AUTO);
        addressFormats_.readPacked(in);

        availableLanguages_ = new nds.core.language.AvailableLanguages(zserioContext.getAvailableLanguages(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isPoiAttributeMetadataUsed())
        {
            endBitPosition = poiAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        endBitPosition = addressFormats_.initializeOffsets(endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isPoiAttributeMetadataUsed())
        {
            endBitPosition = poiAttributeMetadata_.initializeOffsets(zserioContext.getPoiAttributeMetadata(), endBitPosition);
        }
        endBitPosition = addressFormats_.initializeOffsetsPacked(endBitPosition);
        endBitPosition = availableLanguages_.initializeOffsets(zserioContext.getAvailableLanguages(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isPoiAttributeMetadataUsed())
        {
            poiAttributeMetadata_.write(out);
        }

        addressFormats_.write(out);

        availableLanguages_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isPoiAttributeMetadataUsed())
        {
            poiAttributeMetadata_.write(zserioContext.getPoiAttributeMetadata(), out);
        }

        addressFormats_.writePacked(out);

        availableLanguages_.write(zserioContext.getAvailableLanguages(), out);
    }

    private static final class ZserioElementFactory_addressFormats implements zserio.runtime.array.PackableElementFactory<nds.name.types.AddressFormat>
    {
        @Override
        public nds.name.types.AddressFormat create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.name.types.AddressFormat(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.name.types.AddressFormat.ZserioPackingContext();
        }

        @Override
        public nds.name.types.AddressFormat create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.name.types.AddressFormat(context, in);
        }
    }

    private nds.name.metadata.PoiNameLayerContent content_;
    private nds.name.instantiations.NamePoiAttributeMetadata poiAttributeMetadata_;
    private zserio.runtime.array.Array addressFormats_;
    private nds.core.language.AvailableLanguages availableLanguages_;
}
