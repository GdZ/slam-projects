/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.name.layer;

public class DisplayNameLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            shift_ = new zserio.runtime.array.DeltaContext();
            displayLineRangeAttributeMaps_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMapList.ZserioPackingContext();
            displayAreaAttributeMaps_ = new nds.name.instantiations.NameDisplayAreaAttributeMapList.ZserioPackingContext();
            displayPointAttributeMaps_ = new nds.name.instantiations.NameDisplayPointAttributeMapList.ZserioPackingContext();
            displayLineRangeAttributeSets_ = new nds.name.instantiations.NameDisplayLineRangeAttributeSetList.ZserioPackingContext();
            displayAreaAttributeSets_ = new nds.name.instantiations.NameDisplayAreaAttributeSetList.ZserioPackingContext();
            displayPointAttributeSets_ = new nds.name.instantiations.NameDisplayPointAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getShift()
        {
            return shift_;
        }

        public nds.name.instantiations.NameDisplayLineRangeAttributeMapList.ZserioPackingContext getDisplayLineRangeAttributeMaps()
        {
            return displayLineRangeAttributeMaps_;
        }

        public nds.name.instantiations.NameDisplayAreaAttributeMapList.ZserioPackingContext getDisplayAreaAttributeMaps()
        {
            return displayAreaAttributeMaps_;
        }

        public nds.name.instantiations.NameDisplayPointAttributeMapList.ZserioPackingContext getDisplayPointAttributeMaps()
        {
            return displayPointAttributeMaps_;
        }

        public nds.name.instantiations.NameDisplayLineRangeAttributeSetList.ZserioPackingContext getDisplayLineRangeAttributeSets()
        {
            return displayLineRangeAttributeSets_;
        }

        public nds.name.instantiations.NameDisplayAreaAttributeSetList.ZserioPackingContext getDisplayAreaAttributeSets()
        {
            return displayAreaAttributeSets_;
        }

        public nds.name.instantiations.NameDisplayPointAttributeSetList.ZserioPackingContext getDisplayPointAttributeSets()
        {
            return displayPointAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext shift_;
        private nds.name.instantiations.NameDisplayLineRangeAttributeMapList.ZserioPackingContext displayLineRangeAttributeMaps_;
        private nds.name.instantiations.NameDisplayAreaAttributeMapList.ZserioPackingContext displayAreaAttributeMaps_;
        private nds.name.instantiations.NameDisplayPointAttributeMapList.ZserioPackingContext displayPointAttributeMaps_;
        private nds.name.instantiations.NameDisplayLineRangeAttributeSetList.ZserioPackingContext displayLineRangeAttributeSets_;
        private nds.name.instantiations.NameDisplayAreaAttributeSetList.ZserioPackingContext displayAreaAttributeSets_;
        private nds.name.instantiations.NameDisplayPointAttributeSetList.ZserioPackingContext displayPointAttributeSets_;
    };

    public DisplayNameLayer()
    {
    }

    public DisplayNameLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DisplayNameLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DisplayNameLayer(
            nds.name.metadata.DisplayNameLayerContent content_,
            byte shift_,
            nds.name.instantiations.NameDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_,
            nds.name.instantiations.NameDisplayAreaAttributeMapList displayAreaAttributeMaps_,
            nds.name.instantiations.NameDisplayPointAttributeMapList displayPointAttributeMaps_,
            nds.name.instantiations.NameDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_,
            nds.name.instantiations.NameDisplayAreaAttributeSetList displayAreaAttributeSets_,
            nds.name.instantiations.NameDisplayPointAttributeSetList displayPointAttributeSets_,
            nds.name.types.AdministrativeHierarchyElement[] adminHierarchyElementDefinitions_,
            nds.name.types.AddressFormat[] addressFormats_)
    {
        setContent(content_);
        setShift(shift_);
        setDisplayLineRangeAttributeMaps(displayLineRangeAttributeMaps_);
        setDisplayAreaAttributeMaps(displayAreaAttributeMaps_);
        setDisplayPointAttributeMaps(displayPointAttributeMaps_);
        setDisplayLineRangeAttributeSets(displayLineRangeAttributeSets_);
        setDisplayAreaAttributeSets(displayAreaAttributeSets_);
        setDisplayPointAttributeSets(displayPointAttributeSets_);
        setAdminHierarchyElementDefinitions(adminHierarchyElementDefinitions_);
        setAddressFormats(addressFormats_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        zserioContext.getShift().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            displayLineRangeAttributeMaps_.initPackingContext(zserioContext.getDisplayLineRangeAttributeMaps());
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            displayAreaAttributeMaps_.initPackingContext(zserioContext.getDisplayAreaAttributeMaps());
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            displayPointAttributeMaps_.initPackingContext(zserioContext.getDisplayPointAttributeMaps());
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            displayLineRangeAttributeSets_.initPackingContext(zserioContext.getDisplayLineRangeAttributeSets());
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            displayAreaAttributeSets_.initPackingContext(zserioContext.getDisplayAreaAttributeSets());
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            displayPointAttributeSets_.initPackingContext(zserioContext.getDisplayPointAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition += displayLineRangeAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition += displayAreaAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition += displayPointAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition += displayLineRangeAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition += displayAreaAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition += displayPointAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isAdminHierarchyElementDefinitionsUsed())
        {
            endBitPosition += adminHierarchyElementDefinitions_.bitSizeOf(endBitPosition);
        }
        if (isAddressFormatsUsed())
        {
            endBitPosition += addressFormats_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition += displayLineRangeAttributeMaps_.bitSizeOf(zserioContext.getDisplayLineRangeAttributeMaps(), endBitPosition);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition += displayAreaAttributeMaps_.bitSizeOf(zserioContext.getDisplayAreaAttributeMaps(), endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition += displayPointAttributeMaps_.bitSizeOf(zserioContext.getDisplayPointAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition += displayLineRangeAttributeSets_.bitSizeOf(zserioContext.getDisplayLineRangeAttributeSets(), endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition += displayAreaAttributeSets_.bitSizeOf(zserioContext.getDisplayAreaAttributeSets(), endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition += displayPointAttributeSets_.bitSizeOf(zserioContext.getDisplayPointAttributeSets(), endBitPosition);
        }
        if (isAdminHierarchyElementDefinitionsUsed())
        {
            endBitPosition += adminHierarchyElementDefinitions_.bitSizeOfPacked(endBitPosition);
        }
        if (isAddressFormatsUsed())
        {
            endBitPosition += addressFormats_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.name.metadata.DisplayNameLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.name.metadata.DisplayNameLayerContent content_)
    {
        this.content_ = content_;
    }

    public byte getShift()
    {
        return shift_;
    }

    public void setShift(byte shift_)
    {
        this.shift_ = shift_;
    }

    public nds.name.instantiations.NameDisplayLineRangeAttributeMapList getDisplayLineRangeAttributeMaps()
    {
        return displayLineRangeAttributeMaps_;
    }

    public void setDisplayLineRangeAttributeMaps(nds.name.instantiations.NameDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_)
    {
        this.displayLineRangeAttributeMaps_ = displayLineRangeAttributeMaps_;
    }

    public boolean isDisplayLineRangeAttributeMapsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS));
    }

    public boolean isDisplayLineRangeAttributeMapsSet()
    {
        return (displayLineRangeAttributeMaps_ != null);
    }

    public void resetDisplayLineRangeAttributeMaps()
    {
        this.displayLineRangeAttributeMaps_ = null;
    }

    public nds.name.instantiations.NameDisplayAreaAttributeMapList getDisplayAreaAttributeMaps()
    {
        return displayAreaAttributeMaps_;
    }

    public void setDisplayAreaAttributeMaps(nds.name.instantiations.NameDisplayAreaAttributeMapList displayAreaAttributeMaps_)
    {
        this.displayAreaAttributeMaps_ = displayAreaAttributeMaps_;
    }

    public boolean isDisplayAreaAttributeMapsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS));
    }

    public boolean isDisplayAreaAttributeMapsSet()
    {
        return (displayAreaAttributeMaps_ != null);
    }

    public void resetDisplayAreaAttributeMaps()
    {
        this.displayAreaAttributeMaps_ = null;
    }

    public nds.name.instantiations.NameDisplayPointAttributeMapList getDisplayPointAttributeMaps()
    {
        return displayPointAttributeMaps_;
    }

    public void setDisplayPointAttributeMaps(nds.name.instantiations.NameDisplayPointAttributeMapList displayPointAttributeMaps_)
    {
        this.displayPointAttributeMaps_ = displayPointAttributeMaps_;
    }

    public boolean isDisplayPointAttributeMapsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS));
    }

    public boolean isDisplayPointAttributeMapsSet()
    {
        return (displayPointAttributeMaps_ != null);
    }

    public void resetDisplayPointAttributeMaps()
    {
        this.displayPointAttributeMaps_ = null;
    }

    public nds.name.instantiations.NameDisplayLineRangeAttributeSetList getDisplayLineRangeAttributeSets()
    {
        return displayLineRangeAttributeSets_;
    }

    public void setDisplayLineRangeAttributeSets(nds.name.instantiations.NameDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_)
    {
        this.displayLineRangeAttributeSets_ = displayLineRangeAttributeSets_;
    }

    public boolean isDisplayLineRangeAttributeSetsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS));
    }

    public boolean isDisplayLineRangeAttributeSetsSet()
    {
        return (displayLineRangeAttributeSets_ != null);
    }

    public void resetDisplayLineRangeAttributeSets()
    {
        this.displayLineRangeAttributeSets_ = null;
    }

    public nds.name.instantiations.NameDisplayAreaAttributeSetList getDisplayAreaAttributeSets()
    {
        return displayAreaAttributeSets_;
    }

    public void setDisplayAreaAttributeSets(nds.name.instantiations.NameDisplayAreaAttributeSetList displayAreaAttributeSets_)
    {
        this.displayAreaAttributeSets_ = displayAreaAttributeSets_;
    }

    public boolean isDisplayAreaAttributeSetsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS));
    }

    public boolean isDisplayAreaAttributeSetsSet()
    {
        return (displayAreaAttributeSets_ != null);
    }

    public void resetDisplayAreaAttributeSets()
    {
        this.displayAreaAttributeSets_ = null;
    }

    public nds.name.instantiations.NameDisplayPointAttributeSetList getDisplayPointAttributeSets()
    {
        return displayPointAttributeSets_;
    }

    public void setDisplayPointAttributeSets(nds.name.instantiations.NameDisplayPointAttributeSetList displayPointAttributeSets_)
    {
        this.displayPointAttributeSets_ = displayPointAttributeSets_;
    }

    public boolean isDisplayPointAttributeSetsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS));
    }

    public boolean isDisplayPointAttributeSetsSet()
    {
        return (displayPointAttributeSets_ != null);
    }

    public void resetDisplayPointAttributeSets()
    {
        this.displayPointAttributeSets_ = null;
    }

    public nds.name.types.AdministrativeHierarchyElement[] getAdminHierarchyElementDefinitions()
    {
        return (adminHierarchyElementDefinitions_ == null) ? null : adminHierarchyElementDefinitions_.getRawArray();
    }

    public void setAdminHierarchyElementDefinitions(nds.name.types.AdministrativeHierarchyElement[] adminHierarchyElementDefinitions_)
    {
        if (adminHierarchyElementDefinitions_ == null)
        {
            this.adminHierarchyElementDefinitions_ = null;
        }
        else
        {
            this.adminHierarchyElementDefinitions_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AdministrativeHierarchyElement.class, adminHierarchyElementDefinitions_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AdministrativeHierarchyElement>(new ZserioElementFactory_adminHierarchyElementDefinitions()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isAdminHierarchyElementDefinitionsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY));
    }

    public boolean isAdminHierarchyElementDefinitionsSet()
    {
        return (adminHierarchyElementDefinitions_ != null);
    }

    public void resetAdminHierarchyElementDefinitions()
    {
        this.adminHierarchyElementDefinitions_ = null;
    }

    public nds.name.types.AddressFormat[] getAddressFormats()
    {
        return (addressFormats_ == null) ? null : addressFormats_.getRawArray();
    }

    public void setAddressFormats(nds.name.types.AddressFormat[] addressFormats_)
    {
        if (addressFormats_ == null)
        {
            this.addressFormats_ = null;
        }
        else
        {
            this.addressFormats_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class, addressFormats_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isAddressFormatsUsed()
    {
        return ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT));
    }

    public boolean isAddressFormatsSet()
    {
        return (addressFormats_ != null);
    }

    public void resetAddressFormats()
    {
        this.addressFormats_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DisplayNameLayer)
        {
            final DisplayNameLayer that = (DisplayNameLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    shift_ == that.shift_ &&
                    ((!isDisplayLineRangeAttributeMapsUsed()) ? !that.isDisplayLineRangeAttributeMapsUsed() :
                        ((displayLineRangeAttributeMaps_ == null) ? that.displayLineRangeAttributeMaps_ == null : displayLineRangeAttributeMaps_.equals(that.displayLineRangeAttributeMaps_))) &&
                    ((!isDisplayAreaAttributeMapsUsed()) ? !that.isDisplayAreaAttributeMapsUsed() :
                        ((displayAreaAttributeMaps_ == null) ? that.displayAreaAttributeMaps_ == null : displayAreaAttributeMaps_.equals(that.displayAreaAttributeMaps_))) &&
                    ((!isDisplayPointAttributeMapsUsed()) ? !that.isDisplayPointAttributeMapsUsed() :
                        ((displayPointAttributeMaps_ == null) ? that.displayPointAttributeMaps_ == null : displayPointAttributeMaps_.equals(that.displayPointAttributeMaps_))) &&
                    ((!isDisplayLineRangeAttributeSetsUsed()) ? !that.isDisplayLineRangeAttributeSetsUsed() :
                        ((displayLineRangeAttributeSets_ == null) ? that.displayLineRangeAttributeSets_ == null : displayLineRangeAttributeSets_.equals(that.displayLineRangeAttributeSets_))) &&
                    ((!isDisplayAreaAttributeSetsUsed()) ? !that.isDisplayAreaAttributeSetsUsed() :
                        ((displayAreaAttributeSets_ == null) ? that.displayAreaAttributeSets_ == null : displayAreaAttributeSets_.equals(that.displayAreaAttributeSets_))) &&
                    ((!isDisplayPointAttributeSetsUsed()) ? !that.isDisplayPointAttributeSetsUsed() :
                        ((displayPointAttributeSets_ == null) ? that.displayPointAttributeSets_ == null : displayPointAttributeSets_.equals(that.displayPointAttributeSets_))) &&
                    ((!isAdminHierarchyElementDefinitionsUsed()) ? !that.isAdminHierarchyElementDefinitionsUsed() :
                        ((adminHierarchyElementDefinitions_ == null) ? that.adminHierarchyElementDefinitions_ == null : adminHierarchyElementDefinitions_.equals(that.adminHierarchyElementDefinitions_))) &&
                    ((!isAddressFormatsUsed()) ? !that.isAddressFormatsUsed() :
                        ((addressFormats_ == null) ? that.addressFormats_ == null : addressFormats_.equals(that.addressFormats_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shift_);
        if (isDisplayLineRangeAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineRangeAttributeMaps_);
        if (isDisplayAreaAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayAreaAttributeMaps_);
        if (isDisplayPointAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayPointAttributeMaps_);
        if (isDisplayLineRangeAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineRangeAttributeSets_);
        if (isDisplayAreaAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayAreaAttributeSets_);
        if (isDisplayPointAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayPointAttributeSets_);
        if (isAdminHierarchyElementDefinitionsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, adminHierarchyElementDefinitions_);
        if (isAddressFormatsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, addressFormats_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.name.metadata.DisplayNameLayerContent(in);

        shift_ = (byte)in.readBits(5);

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS))
        {
            displayLineRangeAttributeMaps_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS))
        {
            displayAreaAttributeMaps_ = new nds.name.instantiations.NameDisplayAreaAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS))
        {
            displayPointAttributeMaps_ = new nds.name.instantiations.NameDisplayPointAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeSets_ = new nds.name.instantiations.NameDisplayLineRangeAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeSets_ = new nds.name.instantiations.NameDisplayAreaAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeSets_ = new nds.name.instantiations.NameDisplayPointAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY))
        {
            adminHierarchyElementDefinitions_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AdministrativeHierarchyElement.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AdministrativeHierarchyElement>(new ZserioElementFactory_adminHierarchyElementDefinitions()),
                    zserio.runtime.array.ArrayType.AUTO);
            adminHierarchyElementDefinitions_.read(in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT))
        {
            addressFormats_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                    zserio.runtime.array.ArrayType.AUTO);
            addressFormats_.read(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.name.metadata.DisplayNameLayerContent(zserioContext.getContent(), in);

        shift_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShift().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_MAPS))
        {
            displayLineRangeAttributeMaps_ = new nds.name.instantiations.NameDisplayLineRangeAttributeMapList(zserioContext.getDisplayLineRangeAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_MAPS))
        {
            displayAreaAttributeMaps_ = new nds.name.instantiations.NameDisplayAreaAttributeMapList(zserioContext.getDisplayAreaAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_MAPS))
        {
            displayPointAttributeMaps_ = new nds.name.instantiations.NameDisplayPointAttributeMapList(zserioContext.getDisplayPointAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_LINE_RANGE_SETS))
        {
            displayLineRangeAttributeSets_ = new nds.name.instantiations.NameDisplayLineRangeAttributeSetList(zserioContext.getDisplayLineRangeAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeSets_ = new nds.name.instantiations.NameDisplayAreaAttributeSetList(zserioContext.getDisplayAreaAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.name.metadata.DisplayNameLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeSets_ = new nds.name.instantiations.NameDisplayPointAttributeSetList(zserioContext.getDisplayPointAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADMIN_HIERARCHY))
        {
            adminHierarchyElementDefinitions_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AdministrativeHierarchyElement.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AdministrativeHierarchyElement>(new ZserioElementFactory_adminHierarchyElementDefinitions()),
                    zserio.runtime.array.ArrayType.AUTO);
            adminHierarchyElementDefinitions_.readPacked(in);
        }

        if ((getContent().and(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT)).equals(nds.name.metadata.DisplayNameLayerContent.Values.ADDRESS_FORMAT))
        {
            addressFormats_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.name.types.AddressFormat.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.name.types.AddressFormat>(new ZserioElementFactory_addressFormats()),
                    zserio.runtime.array.ArrayType.AUTO);
            addressFormats_.readPacked(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition = displayLineRangeAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition = displayAreaAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition = displayPointAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition = displayLineRangeAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition = displayAreaAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition = displayPointAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isAdminHierarchyElementDefinitionsUsed())
        {
            endBitPosition = adminHierarchyElementDefinitions_.initializeOffsets(endBitPosition);
        }
        if (isAddressFormatsUsed())
        {
            endBitPosition = addressFormats_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isDisplayLineRangeAttributeMapsUsed())
        {
            endBitPosition = displayLineRangeAttributeMaps_.initializeOffsets(zserioContext.getDisplayLineRangeAttributeMaps(), endBitPosition);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition = displayAreaAttributeMaps_.initializeOffsets(zserioContext.getDisplayAreaAttributeMaps(), endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition = displayPointAttributeMaps_.initializeOffsets(zserioContext.getDisplayPointAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineRangeAttributeSetsUsed())
        {
            endBitPosition = displayLineRangeAttributeSets_.initializeOffsets(zserioContext.getDisplayLineRangeAttributeSets(), endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition = displayAreaAttributeSets_.initializeOffsets(zserioContext.getDisplayAreaAttributeSets(), endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition = displayPointAttributeSets_.initializeOffsets(zserioContext.getDisplayPointAttributeSets(), endBitPosition);
        }
        if (isAdminHierarchyElementDefinitionsUsed())
        {
            endBitPosition = adminHierarchyElementDefinitions_.initializeOffsetsPacked(endBitPosition);
        }
        if (isAddressFormatsUsed())
        {
            endBitPosition = addressFormats_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        out.writeBits(shift_, 5);

        if (isDisplayLineRangeAttributeMapsUsed())
        {
            // check parameters
            if (displayLineRangeAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayLineRangeAttributeMaps: " +
                        displayLineRangeAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLineRangeAttributeMaps_.write(out);
        }

        if (isDisplayAreaAttributeMapsUsed())
        {
            // check parameters
            if (displayAreaAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayAreaAttributeMaps: " +
                        displayAreaAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayAreaAttributeMaps_.write(out);
        }

        if (isDisplayPointAttributeMapsUsed())
        {
            // check parameters
            if (displayPointAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayPointAttributeMaps: " +
                        displayPointAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayPointAttributeMaps_.write(out);
        }

        if (isDisplayLineRangeAttributeSetsUsed())
        {
            // check parameters
            if (displayLineRangeAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayLineRangeAttributeSets: " +
                        displayLineRangeAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayLineRangeAttributeSets_.write(out);
        }

        if (isDisplayAreaAttributeSetsUsed())
        {
            // check parameters
            if (displayAreaAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayAreaAttributeSets: " +
                        displayAreaAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayAreaAttributeSets_.write(out);
        }

        if (isDisplayPointAttributeSetsUsed())
        {
            // check parameters
            if (displayPointAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayNameLayer.displayPointAttributeSets: " +
                        displayPointAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            displayPointAttributeSets_.write(out);
        }

        if (isAdminHierarchyElementDefinitionsUsed())
        {
            adminHierarchyElementDefinitions_.write(out);
        }

        if (isAddressFormatsUsed())
        {
            addressFormats_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        zserioContext.getShift().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));

        if (isDisplayLineRangeAttributeMapsUsed())
        {
            displayLineRangeAttributeMaps_.write(zserioContext.getDisplayLineRangeAttributeMaps(), out);
        }

        if (isDisplayAreaAttributeMapsUsed())
        {
            displayAreaAttributeMaps_.write(zserioContext.getDisplayAreaAttributeMaps(), out);
        }

        if (isDisplayPointAttributeMapsUsed())
        {
            displayPointAttributeMaps_.write(zserioContext.getDisplayPointAttributeMaps(), out);
        }

        if (isDisplayLineRangeAttributeSetsUsed())
        {
            displayLineRangeAttributeSets_.write(zserioContext.getDisplayLineRangeAttributeSets(), out);
        }

        if (isDisplayAreaAttributeSetsUsed())
        {
            displayAreaAttributeSets_.write(zserioContext.getDisplayAreaAttributeSets(), out);
        }

        if (isDisplayPointAttributeSetsUsed())
        {
            displayPointAttributeSets_.write(zserioContext.getDisplayPointAttributeSets(), out);
        }

        if (isAdminHierarchyElementDefinitionsUsed())
        {
            adminHierarchyElementDefinitions_.writePacked(out);
        }

        if (isAddressFormatsUsed())
        {
            addressFormats_.writePacked(out);
        }
    }

    private static final class ZserioElementFactory_adminHierarchyElementDefinitions implements zserio.runtime.array.PackableElementFactory<nds.name.types.AdministrativeHierarchyElement>
    {
        @Override
        public nds.name.types.AdministrativeHierarchyElement create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.name.types.AdministrativeHierarchyElement(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.name.types.AdministrativeHierarchyElement.ZserioPackingContext();
        }

        @Override
        public nds.name.types.AdministrativeHierarchyElement create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.name.types.AdministrativeHierarchyElement(context, in);
        }
    }

    private static final class ZserioElementFactory_addressFormats implements zserio.runtime.array.PackableElementFactory<nds.name.types.AddressFormat>
    {
        @Override
        public nds.name.types.AddressFormat create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.name.types.AddressFormat(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.name.types.AddressFormat.ZserioPackingContext();
        }

        @Override
        public nds.name.types.AddressFormat create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.name.types.AddressFormat(context, in);
        }
    }

    private nds.name.metadata.DisplayNameLayerContent content_;
    private byte shift_;
    private nds.name.instantiations.NameDisplayLineRangeAttributeMapList displayLineRangeAttributeMaps_;
    private nds.name.instantiations.NameDisplayAreaAttributeMapList displayAreaAttributeMaps_;
    private nds.name.instantiations.NameDisplayPointAttributeMapList displayPointAttributeMaps_;
    private nds.name.instantiations.NameDisplayLineRangeAttributeSetList displayLineRangeAttributeSets_;
    private nds.name.instantiations.NameDisplayAreaAttributeSetList displayAreaAttributeSets_;
    private nds.name.instantiations.NameDisplayPointAttributeSetList displayPointAttributeSets_;
    private zserio.runtime.array.Array adminHierarchyElementDefinitions_;
    private zserio.runtime.array.Array addressFormats_;
}
