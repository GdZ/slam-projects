/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.registry.node;

public class ServiceInformation implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            servicePriority_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getServicePriority()
        {
            return servicePriority_;
        }

        private zserio.runtime.array.DeltaContext servicePriority_;
    };

    public ServiceInformation()
    {
    }

    public ServiceInformation(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public ServiceInformation(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public ServiceInformation(
            nds.system.types.ModuleDefinition moduleDefinition_,
            java.lang.String moduleService_,
            short servicePriority_,
            nds.system.types.ExternData serviceMetadata_,
            zserio.runtime.io.BitBuffer serviceCertificationMetadata_)
    {
        setModuleDefinition(moduleDefinition_);
        setModuleService(moduleService_);
        setServicePriority(servicePriority_);
        setServiceMetadata(serviceMetadata_);
        setServiceCertificationMetadata(serviceCertificationMetadata_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getServicePriority().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(servicePriority_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += moduleDefinition_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(moduleService_);
        endBitPosition += 8;
        endBitPosition += 1;
        if (isServiceMetadataUsed())
        {
            endBitPosition += serviceMetadata_.bitSizeOf(endBitPosition);
        }
        endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(serviceCertificationMetadata_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += moduleDefinition_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(moduleService_);
        endBitPosition += zserioContext.getServicePriority().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(servicePriority_));
        endBitPosition += 1;
        if (isServiceMetadataUsed())
        {
            endBitPosition += serviceMetadata_.bitSizeOf(endBitPosition);
        }
        endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(serviceCertificationMetadata_);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.system.types.ModuleDefinition getModuleDefinition()
    {
        return moduleDefinition_;
    }

    public void setModuleDefinition(nds.system.types.ModuleDefinition moduleDefinition_)
    {
        this.moduleDefinition_ = moduleDefinition_;
    }

    public java.lang.String getModuleService()
    {
        return moduleService_;
    }

    public void setModuleService(java.lang.String moduleService_)
    {
        this.moduleService_ = moduleService_;
    }

    public short getServicePriority()
    {
        return servicePriority_;
    }

    public void setServicePriority(short servicePriority_)
    {
        this.servicePriority_ = servicePriority_;
    }

    public nds.system.types.ExternData getServiceMetadata()
    {
        return serviceMetadata_;
    }

    public void setServiceMetadata(nds.system.types.ExternData serviceMetadata_)
    {
        this.serviceMetadata_ = serviceMetadata_;
    }

    public boolean isServiceMetadataUsed()
    {
        return isServiceMetadataSet();
    }

    public boolean isServiceMetadataSet()
    {
        return (serviceMetadata_ != null);
    }

    public void resetServiceMetadata()
    {
        this.serviceMetadata_ = null;
    }

    public zserio.runtime.io.BitBuffer getServiceCertificationMetadata()
    {
        return serviceCertificationMetadata_;
    }

    public void setServiceCertificationMetadata(zserio.runtime.io.BitBuffer serviceCertificationMetadata_)
    {
        this.serviceCertificationMetadata_ = serviceCertificationMetadata_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof ServiceInformation)
        {
            final ServiceInformation that = (ServiceInformation)obj;

            return
                    ((moduleDefinition_ == null) ? that.moduleDefinition_ == null : moduleDefinition_.equals(that.moduleDefinition_)) &&
                    ((moduleService_ == null) ? that.moduleService_ == null : moduleService_.equals(that.moduleService_)) &&
                    servicePriority_ == that.servicePriority_ &&
                    ((!isServiceMetadataUsed()) ? !that.isServiceMetadataUsed() :
                        ((serviceMetadata_ == null) ? that.serviceMetadata_ == null : serviceMetadata_.equals(that.serviceMetadata_))) &&
                    ((serviceCertificationMetadata_ == null) ? that.serviceCertificationMetadata_ == null : serviceCertificationMetadata_.equals(that.serviceCertificationMetadata_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, moduleDefinition_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, moduleService_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, servicePriority_);
        if (isServiceMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, serviceMetadata_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, serviceCertificationMetadata_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        moduleDefinition_ = new nds.system.types.ModuleDefinition(in);

        moduleService_ = in.readString();

        servicePriority_ = in.readUnsignedByte();

        if (in.readBool())
        {
            serviceMetadata_ = new nds.system.types.ExternData(in);
        }

        in.alignTo(8);
        serviceCertificationMetadata_ = in.readBitBuffer();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        moduleDefinition_ = new nds.system.types.ModuleDefinition(in);

        moduleService_ = in.readString();

        servicePriority_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getServicePriority().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        if (in.readBool())
        {
            serviceMetadata_ = new nds.system.types.ExternData(in);
        }

        in.alignTo(8);
        serviceCertificationMetadata_ = in.readBitBuffer();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = moduleDefinition_.initializeOffsets(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(moduleService_);
        endBitPosition += 8;
        endBitPosition += 1;
        if (isServiceMetadataUsed())
        {
            endBitPosition = serviceMetadata_.initializeOffsets(endBitPosition);
        }
        endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(serviceCertificationMetadata_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = moduleDefinition_.initializeOffsets(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(moduleService_);
        endBitPosition += zserioContext.getServicePriority().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(servicePriority_));
        endBitPosition += 1;
        if (isServiceMetadataUsed())
        {
            endBitPosition = serviceMetadata_.initializeOffsets(endBitPosition);
        }
        endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(serviceCertificationMetadata_);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        moduleDefinition_.write(out);

        out.writeString(moduleService_);

        out.writeUnsignedByte(servicePriority_);

        if (isServiceMetadataUsed())
        {
            out.writeBool(true);
            serviceMetadata_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        out.alignTo(8);
        out.writeBitBuffer(serviceCertificationMetadata_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        moduleDefinition_.write(out);

        out.writeString(moduleService_);

        zserioContext.getServicePriority().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(servicePriority_));

        if (isServiceMetadataUsed())
        {
            out.writeBool(true);
            serviceMetadata_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        out.alignTo(8);
        out.writeBitBuffer(serviceCertificationMetadata_);
    }

    private nds.system.types.ModuleDefinition moduleDefinition_;
    private java.lang.String moduleService_;
    private short servicePriority_;
    private nds.system.types.ExternData serviceMetadata_;
    private zserio.runtime.io.BitBuffer serviceCertificationMetadata_;
}
