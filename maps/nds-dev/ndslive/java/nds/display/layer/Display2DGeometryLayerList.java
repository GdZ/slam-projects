/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.layer;

public class Display2DGeometryLayerList implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            areaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext();
            lineDisplayGeometryLayer_ = new nds.display.instantiations.LineDisplayGeometryLayer.ZserioPackingContext();
            pointDisplayGeometryLayer_ = new nds.display.instantiations.PointDisplayGeometryLayer.ZserioPackingContext();
            simpleAreaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext();
            simpleAreaSetDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext();
        }

        public nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext getAreaDisplayGeometryLayer()
        {
            return areaDisplayGeometryLayer_;
        }

        public nds.display.instantiations.LineDisplayGeometryLayer.ZserioPackingContext getLineDisplayGeometryLayer()
        {
            return lineDisplayGeometryLayer_;
        }

        public nds.display.instantiations.PointDisplayGeometryLayer.ZserioPackingContext getPointDisplayGeometryLayer()
        {
            return pointDisplayGeometryLayer_;
        }

        public nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext getSimpleAreaDisplayGeometryLayer()
        {
            return simpleAreaDisplayGeometryLayer_;
        }

        public nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext getSimpleAreaSetDisplayGeometryLayer()
        {
            return simpleAreaSetDisplayGeometryLayer_;
        }

        private nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext areaDisplayGeometryLayer_;
        private nds.display.instantiations.LineDisplayGeometryLayer.ZserioPackingContext lineDisplayGeometryLayer_;
        private nds.display.instantiations.PointDisplayGeometryLayer.ZserioPackingContext pointDisplayGeometryLayer_;
        private nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext simpleAreaDisplayGeometryLayer_;
        private nds.display.instantiations.AreaDisplayGeometryLayer.ZserioPackingContext simpleAreaSetDisplayGeometryLayer_;
    };

    public Display2DGeometryLayerList(
            nds.display.metadata.Display2DContent content_)
    {
        this.content_ = content_;
    }

    public Display2DGeometryLayerList(zserio.runtime.io.BitStreamReader in,
            nds.display.metadata.Display2DContent content_)
            throws java.io.IOException
    {
        this.content_ = content_;

        read(in);
    }

    public Display2DGeometryLayerList(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            nds.display.metadata.Display2DContent content_)
            throws java.io.IOException
    {
        this.content_ = content_;

        read(context, in);
    }

    public Display2DGeometryLayerList(
            nds.display.metadata.Display2DContent content_,
            nds.display.instantiations.AreaDisplayGeometryLayer areaDisplayGeometryLayer_,
            nds.display.instantiations.LineDisplayGeometryLayer lineDisplayGeometryLayer_,
            nds.display.instantiations.PointDisplayGeometryLayer pointDisplayGeometryLayer_,
            nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaDisplayGeometryLayer_,
            nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaSetDisplayGeometryLayer_)
    {
        this(content_);

        setAreaDisplayGeometryLayer(areaDisplayGeometryLayer_);
        setLineDisplayGeometryLayer(lineDisplayGeometryLayer_);
        setPointDisplayGeometryLayer(pointDisplayGeometryLayer_);
        setSimpleAreaDisplayGeometryLayer(simpleAreaDisplayGeometryLayer_);
        setSimpleAreaSetDisplayGeometryLayer(simpleAreaSetDisplayGeometryLayer_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        if (isAreaDisplayGeometryLayerUsed())
        {
            areaDisplayGeometryLayer_.initPackingContext(zserioContext.getAreaDisplayGeometryLayer());
        }
        if (isLineDisplayGeometryLayerUsed())
        {
            lineDisplayGeometryLayer_.initPackingContext(zserioContext.getLineDisplayGeometryLayer());
        }
        if (isPointDisplayGeometryLayerUsed())
        {
            pointDisplayGeometryLayer_.initPackingContext(zserioContext.getPointDisplayGeometryLayer());
        }
        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            simpleAreaDisplayGeometryLayer_.initPackingContext(zserioContext.getSimpleAreaDisplayGeometryLayer());
        }
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            simpleAreaSetDisplayGeometryLayer_.initPackingContext(zserioContext.getSimpleAreaSetDisplayGeometryLayer());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        if (isAreaDisplayGeometryLayerUsed())
        {
            endBitPosition += areaDisplayGeometryLayer_.bitSizeOf(endBitPosition);
        }
        if (isLineDisplayGeometryLayerUsed())
        {
            endBitPosition += lineDisplayGeometryLayer_.bitSizeOf(endBitPosition);
        }
        if (isPointDisplayGeometryLayerUsed())
        {
            endBitPosition += pointDisplayGeometryLayer_.bitSizeOf(endBitPosition);
        }
        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            endBitPosition += simpleAreaDisplayGeometryLayer_.bitSizeOf(endBitPosition);
        }
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            endBitPosition += simpleAreaSetDisplayGeometryLayer_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        if (isAreaDisplayGeometryLayerUsed())
        {
            endBitPosition += areaDisplayGeometryLayer_.bitSizeOf(zserioContext.getAreaDisplayGeometryLayer(), endBitPosition);
        }
        if (isLineDisplayGeometryLayerUsed())
        {
            endBitPosition += lineDisplayGeometryLayer_.bitSizeOf(zserioContext.getLineDisplayGeometryLayer(), endBitPosition);
        }
        if (isPointDisplayGeometryLayerUsed())
        {
            endBitPosition += pointDisplayGeometryLayer_.bitSizeOf(zserioContext.getPointDisplayGeometryLayer(), endBitPosition);
        }
        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            endBitPosition += simpleAreaDisplayGeometryLayer_.bitSizeOf(zserioContext.getSimpleAreaDisplayGeometryLayer(), endBitPosition);
        }
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            endBitPosition += simpleAreaSetDisplayGeometryLayer_.bitSizeOf(zserioContext.getSimpleAreaSetDisplayGeometryLayer(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.display.metadata.Display2DContent getContent()
    {
        return this.content_;
    }

    public nds.display.instantiations.AreaDisplayGeometryLayer getAreaDisplayGeometryLayer()
    {
        return areaDisplayGeometryLayer_;
    }

    public void setAreaDisplayGeometryLayer(nds.display.instantiations.AreaDisplayGeometryLayer areaDisplayGeometryLayer_)
    {
        this.areaDisplayGeometryLayer_ = areaDisplayGeometryLayer_;
    }

    public boolean isAreaDisplayGeometryLayerUsed()
    {
        return ((getContent().and(nds.display.metadata.Display2DContent.Values.AREAS)).equals(nds.display.metadata.Display2DContent.Values.AREAS));
    }

    public boolean isAreaDisplayGeometryLayerSet()
    {
        return (areaDisplayGeometryLayer_ != null);
    }

    public void resetAreaDisplayGeometryLayer()
    {
        this.areaDisplayGeometryLayer_ = null;
    }

    public nds.display.instantiations.LineDisplayGeometryLayer getLineDisplayGeometryLayer()
    {
        return lineDisplayGeometryLayer_;
    }

    public void setLineDisplayGeometryLayer(nds.display.instantiations.LineDisplayGeometryLayer lineDisplayGeometryLayer_)
    {
        this.lineDisplayGeometryLayer_ = lineDisplayGeometryLayer_;
    }

    public boolean isLineDisplayGeometryLayerUsed()
    {
        return ((getContent().and(nds.display.metadata.Display2DContent.Values.LINES)).equals(nds.display.metadata.Display2DContent.Values.LINES));
    }

    public boolean isLineDisplayGeometryLayerSet()
    {
        return (lineDisplayGeometryLayer_ != null);
    }

    public void resetLineDisplayGeometryLayer()
    {
        this.lineDisplayGeometryLayer_ = null;
    }

    public nds.display.instantiations.PointDisplayGeometryLayer getPointDisplayGeometryLayer()
    {
        return pointDisplayGeometryLayer_;
    }

    public void setPointDisplayGeometryLayer(nds.display.instantiations.PointDisplayGeometryLayer pointDisplayGeometryLayer_)
    {
        this.pointDisplayGeometryLayer_ = pointDisplayGeometryLayer_;
    }

    public boolean isPointDisplayGeometryLayerUsed()
    {
        return ((getContent().and(nds.display.metadata.Display2DContent.Values.POINTS)).equals(nds.display.metadata.Display2DContent.Values.POINTS));
    }

    public boolean isPointDisplayGeometryLayerSet()
    {
        return (pointDisplayGeometryLayer_ != null);
    }

    public void resetPointDisplayGeometryLayer()
    {
        this.pointDisplayGeometryLayer_ = null;
    }

    public nds.display.instantiations.AreaDisplayGeometryLayer getSimpleAreaDisplayGeometryLayer()
    {
        return simpleAreaDisplayGeometryLayer_;
    }

    public void setSimpleAreaDisplayGeometryLayer(nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaDisplayGeometryLayer_)
    {
        this.simpleAreaDisplayGeometryLayer_ = simpleAreaDisplayGeometryLayer_;
    }

    public boolean isSimpleAreaDisplayGeometryLayerUsed()
    {
        return ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS));
    }

    public boolean isSimpleAreaDisplayGeometryLayerSet()
    {
        return (simpleAreaDisplayGeometryLayer_ != null);
    }

    public void resetSimpleAreaDisplayGeometryLayer()
    {
        this.simpleAreaDisplayGeometryLayer_ = null;
    }

    public nds.display.instantiations.AreaDisplayGeometryLayer getSimpleAreaSetDisplayGeometryLayer()
    {
        return simpleAreaSetDisplayGeometryLayer_;
    }

    public void setSimpleAreaSetDisplayGeometryLayer(nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaSetDisplayGeometryLayer_)
    {
        this.simpleAreaSetDisplayGeometryLayer_ = simpleAreaSetDisplayGeometryLayer_;
    }

    public boolean isSimpleAreaSetDisplayGeometryLayerUsed()
    {
        return ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS));
    }

    public boolean isSimpleAreaSetDisplayGeometryLayerSet()
    {
        return (simpleAreaSetDisplayGeometryLayer_ != null);
    }

    public void resetSimpleAreaSetDisplayGeometryLayer()
    {
        this.simpleAreaSetDisplayGeometryLayer_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Display2DGeometryLayerList)
        {
            final Display2DGeometryLayerList that = (Display2DGeometryLayerList)obj;

            return
                    ((this.content_ == null) ? that.content_ == null : this.content_.equals(that.content_)) &&
                    ((!isAreaDisplayGeometryLayerUsed()) ? !that.isAreaDisplayGeometryLayerUsed() :
                        ((areaDisplayGeometryLayer_ == null) ? that.areaDisplayGeometryLayer_ == null : areaDisplayGeometryLayer_.equals(that.areaDisplayGeometryLayer_))) &&
                    ((!isLineDisplayGeometryLayerUsed()) ? !that.isLineDisplayGeometryLayerUsed() :
                        ((lineDisplayGeometryLayer_ == null) ? that.lineDisplayGeometryLayer_ == null : lineDisplayGeometryLayer_.equals(that.lineDisplayGeometryLayer_))) &&
                    ((!isPointDisplayGeometryLayerUsed()) ? !that.isPointDisplayGeometryLayerUsed() :
                        ((pointDisplayGeometryLayer_ == null) ? that.pointDisplayGeometryLayer_ == null : pointDisplayGeometryLayer_.equals(that.pointDisplayGeometryLayer_))) &&
                    ((!isSimpleAreaDisplayGeometryLayerUsed()) ? !that.isSimpleAreaDisplayGeometryLayerUsed() :
                        ((simpleAreaDisplayGeometryLayer_ == null) ? that.simpleAreaDisplayGeometryLayer_ == null : simpleAreaDisplayGeometryLayer_.equals(that.simpleAreaDisplayGeometryLayer_))) &&
                    ((!isSimpleAreaSetDisplayGeometryLayerUsed()) ? !that.isSimpleAreaSetDisplayGeometryLayerUsed() :
                        ((simpleAreaSetDisplayGeometryLayer_ == null) ? that.simpleAreaSetDisplayGeometryLayer_ == null : simpleAreaSetDisplayGeometryLayer_.equals(that.simpleAreaSetDisplayGeometryLayer_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getContent());
        if (isAreaDisplayGeometryLayerUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, areaDisplayGeometryLayer_);
        if (isLineDisplayGeometryLayerUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, lineDisplayGeometryLayer_);
        if (isPointDisplayGeometryLayerUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, pointDisplayGeometryLayer_);
        if (isSimpleAreaDisplayGeometryLayerUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, simpleAreaDisplayGeometryLayer_);
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, simpleAreaSetDisplayGeometryLayer_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        if ((getContent().and(nds.display.metadata.Display2DContent.Values.AREAS)).equals(nds.display.metadata.Display2DContent.Values.AREAS))
        {
            areaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(in, nds.core.geometry.GeometryLayerType.POLYGON_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.LINES)).equals(nds.display.metadata.Display2DContent.Values.LINES))
        {
            lineDisplayGeometryLayer_ = new nds.display.instantiations.LineDisplayGeometryLayer(in, nds.core.geometry.GeometryLayerType.LINE_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.POINTS)).equals(nds.display.metadata.Display2DContent.Values.POINTS))
        {
            pointDisplayGeometryLayer_ = new nds.display.instantiations.PointDisplayGeometryLayer(in, nds.core.geometry.GeometryLayerType.POSITION_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS))
        {
            simpleAreaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(in, nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS))
        {
            simpleAreaSetDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(in, nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_SET_2D, (boolean)(true), (boolean)(true));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        if ((getContent().and(nds.display.metadata.Display2DContent.Values.AREAS)).equals(nds.display.metadata.Display2DContent.Values.AREAS))
        {
            areaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(zserioContext.getAreaDisplayGeometryLayer(), in, nds.core.geometry.GeometryLayerType.POLYGON_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.LINES)).equals(nds.display.metadata.Display2DContent.Values.LINES))
        {
            lineDisplayGeometryLayer_ = new nds.display.instantiations.LineDisplayGeometryLayer(zserioContext.getLineDisplayGeometryLayer(), in, nds.core.geometry.GeometryLayerType.LINE_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.POINTS)).equals(nds.display.metadata.Display2DContent.Values.POINTS))
        {
            pointDisplayGeometryLayer_ = new nds.display.instantiations.PointDisplayGeometryLayer(zserioContext.getPointDisplayGeometryLayer(), in, nds.core.geometry.GeometryLayerType.POSITION_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREAS))
        {
            simpleAreaDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(zserioContext.getSimpleAreaDisplayGeometryLayer(), in, nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_2D, (boolean)(true), (boolean)(true));
        }

        if ((getContent().and(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS)).equals(nds.display.metadata.Display2DContent.Values.SIMPLE_AREA_SETS))
        {
            simpleAreaSetDisplayGeometryLayer_ = new nds.display.instantiations.AreaDisplayGeometryLayer(zserioContext.getSimpleAreaSetDisplayGeometryLayer(), in, nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_SET_2D, (boolean)(true), (boolean)(true));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        if (isAreaDisplayGeometryLayerUsed())
        {
            endBitPosition = areaDisplayGeometryLayer_.initializeOffsets(endBitPosition);
        }
        if (isLineDisplayGeometryLayerUsed())
        {
            endBitPosition = lineDisplayGeometryLayer_.initializeOffsets(endBitPosition);
        }
        if (isPointDisplayGeometryLayerUsed())
        {
            endBitPosition = pointDisplayGeometryLayer_.initializeOffsets(endBitPosition);
        }
        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            endBitPosition = simpleAreaDisplayGeometryLayer_.initializeOffsets(endBitPosition);
        }
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            endBitPosition = simpleAreaSetDisplayGeometryLayer_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        if (isAreaDisplayGeometryLayerUsed())
        {
            endBitPosition = areaDisplayGeometryLayer_.initializeOffsets(zserioContext.getAreaDisplayGeometryLayer(), endBitPosition);
        }
        if (isLineDisplayGeometryLayerUsed())
        {
            endBitPosition = lineDisplayGeometryLayer_.initializeOffsets(zserioContext.getLineDisplayGeometryLayer(), endBitPosition);
        }
        if (isPointDisplayGeometryLayerUsed())
        {
            endBitPosition = pointDisplayGeometryLayer_.initializeOffsets(zserioContext.getPointDisplayGeometryLayer(), endBitPosition);
        }
        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            endBitPosition = simpleAreaDisplayGeometryLayer_.initializeOffsets(zserioContext.getSimpleAreaDisplayGeometryLayer(), endBitPosition);
        }
        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            endBitPosition = simpleAreaSetDisplayGeometryLayer_.initializeOffsets(zserioContext.getSimpleAreaSetDisplayGeometryLayer(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        if (isAreaDisplayGeometryLayerUsed())
        {
            // check parameters
            if (areaDisplayGeometryLayer_.getType() != (nds.core.geometry.GeometryLayerType.POLYGON_2D))
            {
                throw new zserio.runtime.ZserioError("Write: Inconsistent parameter type for field Display2DGeometryLayerList.areaDisplayGeometryLayer!");
            }
            if (areaDisplayGeometryLayer_.getHasIds() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasIds for field Display2DGeometryLayerList.areaDisplayGeometryLayer: " +
                        areaDisplayGeometryLayer_.getHasIds() + " != " + (boolean)(true) + "!");
            }
            if (areaDisplayGeometryLayer_.getHasTypes() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasTypes for field Display2DGeometryLayerList.areaDisplayGeometryLayer: " +
                        areaDisplayGeometryLayer_.getHasTypes() + " != " + (boolean)(true) + "!");
            }
            areaDisplayGeometryLayer_.write(out);
        }

        if (isLineDisplayGeometryLayerUsed())
        {
            // check parameters
            if (lineDisplayGeometryLayer_.getType() != (nds.core.geometry.GeometryLayerType.LINE_2D))
            {
                throw new zserio.runtime.ZserioError("Write: Inconsistent parameter type for field Display2DGeometryLayerList.lineDisplayGeometryLayer!");
            }
            if (lineDisplayGeometryLayer_.getHasIds() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasIds for field Display2DGeometryLayerList.lineDisplayGeometryLayer: " +
                        lineDisplayGeometryLayer_.getHasIds() + " != " + (boolean)(true) + "!");
            }
            if (lineDisplayGeometryLayer_.getHasTypes() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasTypes for field Display2DGeometryLayerList.lineDisplayGeometryLayer: " +
                        lineDisplayGeometryLayer_.getHasTypes() + " != " + (boolean)(true) + "!");
            }
            lineDisplayGeometryLayer_.write(out);
        }

        if (isPointDisplayGeometryLayerUsed())
        {
            // check parameters
            if (pointDisplayGeometryLayer_.getType() != (nds.core.geometry.GeometryLayerType.POSITION_2D))
            {
                throw new zserio.runtime.ZserioError("Write: Inconsistent parameter type for field Display2DGeometryLayerList.pointDisplayGeometryLayer!");
            }
            if (pointDisplayGeometryLayer_.getHasIds() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasIds for field Display2DGeometryLayerList.pointDisplayGeometryLayer: " +
                        pointDisplayGeometryLayer_.getHasIds() + " != " + (boolean)(true) + "!");
            }
            if (pointDisplayGeometryLayer_.getHasTypes() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasTypes for field Display2DGeometryLayerList.pointDisplayGeometryLayer: " +
                        pointDisplayGeometryLayer_.getHasTypes() + " != " + (boolean)(true) + "!");
            }
            pointDisplayGeometryLayer_.write(out);
        }

        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            // check parameters
            if (simpleAreaDisplayGeometryLayer_.getType() != (nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_2D))
            {
                throw new zserio.runtime.ZserioError("Write: Inconsistent parameter type for field Display2DGeometryLayerList.simpleAreaDisplayGeometryLayer!");
            }
            if (simpleAreaDisplayGeometryLayer_.getHasIds() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasIds for field Display2DGeometryLayerList.simpleAreaDisplayGeometryLayer: " +
                        simpleAreaDisplayGeometryLayer_.getHasIds() + " != " + (boolean)(true) + "!");
            }
            if (simpleAreaDisplayGeometryLayer_.getHasTypes() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasTypes for field Display2DGeometryLayerList.simpleAreaDisplayGeometryLayer: " +
                        simpleAreaDisplayGeometryLayer_.getHasTypes() + " != " + (boolean)(true) + "!");
            }
            simpleAreaDisplayGeometryLayer_.write(out);
        }

        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            // check parameters
            if (simpleAreaSetDisplayGeometryLayer_.getType() != (nds.core.geometry.GeometryLayerType.SIMPLE_POLYGON_SET_2D))
            {
                throw new zserio.runtime.ZserioError("Write: Inconsistent parameter type for field Display2DGeometryLayerList.simpleAreaSetDisplayGeometryLayer!");
            }
            if (simpleAreaSetDisplayGeometryLayer_.getHasIds() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasIds for field Display2DGeometryLayerList.simpleAreaSetDisplayGeometryLayer: " +
                        simpleAreaSetDisplayGeometryLayer_.getHasIds() + " != " + (boolean)(true) + "!");
            }
            if (simpleAreaSetDisplayGeometryLayer_.getHasTypes() != (boolean)(true))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter hasTypes for field Display2DGeometryLayerList.simpleAreaSetDisplayGeometryLayer: " +
                        simpleAreaSetDisplayGeometryLayer_.getHasTypes() + " != " + (boolean)(true) + "!");
            }
            simpleAreaSetDisplayGeometryLayer_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        if (isAreaDisplayGeometryLayerUsed())
        {
            areaDisplayGeometryLayer_.write(zserioContext.getAreaDisplayGeometryLayer(), out);
        }

        if (isLineDisplayGeometryLayerUsed())
        {
            lineDisplayGeometryLayer_.write(zserioContext.getLineDisplayGeometryLayer(), out);
        }

        if (isPointDisplayGeometryLayerUsed())
        {
            pointDisplayGeometryLayer_.write(zserioContext.getPointDisplayGeometryLayer(), out);
        }

        if (isSimpleAreaDisplayGeometryLayerUsed())
        {
            simpleAreaDisplayGeometryLayer_.write(zserioContext.getSimpleAreaDisplayGeometryLayer(), out);
        }

        if (isSimpleAreaSetDisplayGeometryLayerUsed())
        {
            simpleAreaSetDisplayGeometryLayer_.write(zserioContext.getSimpleAreaSetDisplayGeometryLayer(), out);
        }
    }

    private final nds.display.metadata.Display2DContent content_;
    private nds.display.instantiations.AreaDisplayGeometryLayer areaDisplayGeometryLayer_;
    private nds.display.instantiations.LineDisplayGeometryLayer lineDisplayGeometryLayer_;
    private nds.display.instantiations.PointDisplayGeometryLayer pointDisplayGeometryLayer_;
    private nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaDisplayGeometryLayer_;
    private nds.display.instantiations.AreaDisplayGeometryLayer simpleAreaSetDisplayGeometryLayer_;
}
