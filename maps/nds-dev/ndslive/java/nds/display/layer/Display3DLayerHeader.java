/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.layer;

public class Display3DLayerHeader implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            minScaleDenominator_ = new zserio.runtime.array.DeltaContext();
            maxScaleDenominator_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getMinScaleDenominator()
        {
            return minScaleDenominator_;
        }

        public zserio.runtime.array.DeltaContext getMaxScaleDenominator()
        {
            return maxScaleDenominator_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext minScaleDenominator_;
        private zserio.runtime.array.DeltaContext maxScaleDenominator_;
    };

    public Display3DLayerHeader()
    {
    }

    public Display3DLayerHeader(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public Display3DLayerHeader(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public Display3DLayerHeader(
            nds.display.metadata.Display3DContent content_,
            long minScaleDenominator_,
            long maxScaleDenominator_)
    {
        setContent(content_);
        setMinScaleDenominator(minScaleDenominator_);
        setMaxScaleDenominator(maxScaleDenominator_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        zserioContext.getMinScaleDenominator().init(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(minScaleDenominator_));
        zserioContext.getMaxScaleDenominator().init(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(maxScaleDenominator_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 32;
        endBitPosition += 32;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getMinScaleDenominator().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(minScaleDenominator_));
        endBitPosition += zserioContext.getMaxScaleDenominator().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(maxScaleDenominator_));

        return (int)(endBitPosition - bitPosition);
    }

    public nds.display.metadata.Display3DContent getContent()
    {
        return content_;
    }

    public void setContent(nds.display.metadata.Display3DContent content_)
    {
        this.content_ = content_;
    }

    public long getMinScaleDenominator()
    {
        return minScaleDenominator_;
    }

    public void setMinScaleDenominator(long minScaleDenominator_)
    {
        this.minScaleDenominator_ = minScaleDenominator_;
    }

    public long getMaxScaleDenominator()
    {
        return maxScaleDenominator_;
    }

    public void setMaxScaleDenominator(long maxScaleDenominator_)
    {
        this.maxScaleDenominator_ = maxScaleDenominator_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Display3DLayerHeader)
        {
            final Display3DLayerHeader that = (Display3DLayerHeader)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    minScaleDenominator_ == that.minScaleDenominator_ &&
                    maxScaleDenominator_ == that.maxScaleDenominator_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, minScaleDenominator_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, maxScaleDenominator_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.display.metadata.Display3DContent(in);

        minScaleDenominator_ = in.readUnsignedInt();

        maxScaleDenominator_ = in.readUnsignedInt();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.display.metadata.Display3DContent(zserioContext.getContent(), in);

        minScaleDenominator_ = ((zserio.runtime.array.ArrayElement.LongArrayElement)
                zserioContext.getMinScaleDenominator().read(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), in)).get();

        maxScaleDenominator_ = ((zserio.runtime.array.ArrayElement.LongArrayElement)
                zserioContext.getMaxScaleDenominator().read(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 32;
        endBitPosition += 32;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getMinScaleDenominator().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(minScaleDenominator_));
        endBitPosition += zserioContext.getMaxScaleDenominator().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.LongArrayElement(maxScaleDenominator_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        out.writeUnsignedInt(minScaleDenominator_);

        out.writeUnsignedInt(maxScaleDenominator_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        zserioContext.getMinScaleDenominator().write(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), out,
                new zserio.runtime.array.ArrayElement.LongArrayElement(minScaleDenominator_));

        zserioContext.getMaxScaleDenominator().write(new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)), out,
                new zserio.runtime.array.ArrayElement.LongArrayElement(maxScaleDenominator_));
    }

    private nds.display.metadata.Display3DContent content_;
    private long minScaleDenominator_;
    private long maxScaleDenominator_;
}
