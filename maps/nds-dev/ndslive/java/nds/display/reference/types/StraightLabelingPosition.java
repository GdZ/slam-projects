/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.reference.types;

public class StraightLabelingPosition implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            centerPosition_ = new nds.core.geometry.Position2D.ZserioPackingContext();
            radiusPosition_ = new nds.core.geometry.PositionOffset2D.ZserioPackingContext();
        }

        public nds.core.geometry.Position2D.ZserioPackingContext getCenterPosition()
        {
            return centerPosition_;
        }

        public nds.core.geometry.PositionOffset2D.ZserioPackingContext getRadiusPosition()
        {
            return radiusPosition_;
        }

        private nds.core.geometry.Position2D.ZserioPackingContext centerPosition_;
        private nds.core.geometry.PositionOffset2D.ZserioPackingContext radiusPosition_;
    };

    public StraightLabelingPosition(
            byte shift_,
            byte width_)
    {
        this.shift_ = shift_;
        this.width_ = width_;
    }

    public StraightLabelingPosition(zserio.runtime.io.BitStreamReader in,
            byte shift_,
            byte width_)
            throws java.io.IOException
    {
        this.shift_ = shift_;
        this.width_ = width_;

        read(in);
    }

    public StraightLabelingPosition(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            byte shift_,
            byte width_)
            throws java.io.IOException
    {
        this.shift_ = shift_;
        this.width_ = width_;

        read(context, in);
    }

    public StraightLabelingPosition(
            byte shift_,
            byte width_,
            nds.core.geometry.Position2D centerPosition_,
            nds.core.geometry.PositionOffset2D radiusPosition_)
    {
        this(shift_, width_);

        setCenterPosition(centerPosition_);
        setRadiusPosition(radiusPosition_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        centerPosition_.initPackingContext(zserioContext.getCenterPosition());
        radiusPosition_.initPackingContext(zserioContext.getRadiusPosition());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += centerPosition_.bitSizeOf(endBitPosition);
        endBitPosition += radiusPosition_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += centerPosition_.bitSizeOf(zserioContext.getCenterPosition(), endBitPosition);
        endBitPosition += radiusPosition_.bitSizeOf(zserioContext.getRadiusPosition(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public byte getShift()
    {
        return this.shift_;
    }

    public byte getWidth()
    {
        return this.width_;
    }

    public nds.core.geometry.Position2D getCenterPosition()
    {
        return centerPosition_;
    }

    public void setCenterPosition(nds.core.geometry.Position2D centerPosition_)
    {
        this.centerPosition_ = centerPosition_;
    }

    public nds.core.geometry.PositionOffset2D getRadiusPosition()
    {
        return radiusPosition_;
    }

    public void setRadiusPosition(nds.core.geometry.PositionOffset2D radiusPosition_)
    {
        this.radiusPosition_ = radiusPosition_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof StraightLabelingPosition)
        {
            final StraightLabelingPosition that = (StraightLabelingPosition)obj;

            return
                    this.shift_ == that.shift_ &&
                    this.width_ == that.width_ &&
                    ((centerPosition_ == null) ? that.centerPosition_ == null : centerPosition_.equals(that.centerPosition_)) &&
                    ((radiusPosition_ == null) ? that.radiusPosition_ == null : radiusPosition_.equals(that.radiusPosition_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getShift());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getWidth());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, centerPosition_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, radiusPosition_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        centerPosition_ = new nds.core.geometry.Position2D(in, (byte)(getShift()));

        radiusPosition_ = new nds.core.geometry.PositionOffset2D(in, (byte)(getWidth()), (byte)(getShift()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        centerPosition_ = new nds.core.geometry.Position2D(zserioContext.getCenterPosition(), in, (byte)(getShift()));

        radiusPosition_ = new nds.core.geometry.PositionOffset2D(zserioContext.getRadiusPosition(), in, (byte)(getWidth()), (byte)(getShift()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = centerPosition_.initializeOffsets(endBitPosition);
        endBitPosition = radiusPosition_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = centerPosition_.initializeOffsets(zserioContext.getCenterPosition(), endBitPosition);
        endBitPosition = radiusPosition_.initializeOffsets(zserioContext.getRadiusPosition(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        // check parameters
        if (centerPosition_.getShift() != (byte)(getShift()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field StraightLabelingPosition.centerPosition: " +
                    centerPosition_.getShift() + " != " + (byte)(getShift()) + "!");
        }
        centerPosition_.write(out);

        // check parameters
        if (radiusPosition_.getNumBits() != (byte)(getWidth()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter numBits for field StraightLabelingPosition.radiusPosition: " +
                    radiusPosition_.getNumBits() + " != " + (byte)(getWidth()) + "!");
        }
        if (radiusPosition_.getShift() != (byte)(getShift()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field StraightLabelingPosition.radiusPosition: " +
                    radiusPosition_.getShift() + " != " + (byte)(getShift()) + "!");
        }
        radiusPosition_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        centerPosition_.write(zserioContext.getCenterPosition(), out);

        radiusPosition_.write(zserioContext.getRadiusPosition(), out);
    }

    private final byte shift_;
    private final byte width_;
    private nds.core.geometry.Position2D centerPosition_;
    private nds.core.geometry.PositionOffset2D radiusPosition_;
}
