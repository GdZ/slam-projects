/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.metadata;

public class Display2DContent implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioBitmask
{
    public Display2DContent()
    {
        this((int)0);
    }

    public Display2DContent(int value)
    {
        if (value < 0 || value > 536870911)
        {
            throw new java.lang.IllegalArgumentException(
                    "Value for bitmask 'Display2DContent' out of bounds: " + value + "!");
        }
        this.value = value;
    }

    public Display2DContent(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        value = in.readVarUInt32();
    }

    public Display2DContent(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        value = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(value);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public boolean equals(java.lang.Object other)
    {
        if (!(other instanceof Display2DContent))
            return false;

        final Display2DContent otherDisplay2DContent = (Display2DContent)other;
        return value == otherDisplay2DContent.value;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, value);
        return result;
    }

    @Override
    public java.lang.String toString()
    {
        final java.lang.StringBuilder builder = new java.lang.StringBuilder();

        if (this.and(Display2DContent.Values.POINTS).equals(Display2DContent.Values.POINTS))
            builder.append(builder.length() == 0 ? "POINTS" : " | POINTS");
        if (this.and(Display2DContent.Values.LINES).equals(Display2DContent.Values.LINES))
            builder.append(builder.length() == 0 ? "LINES" : " | LINES");
        if (this.and(Display2DContent.Values.AREAS).equals(Display2DContent.Values.AREAS))
            builder.append(builder.length() == 0 ? "AREAS" : " | AREAS");
        if (this.and(Display2DContent.Values.AREA_TYPE_RELATIONS).equals(Display2DContent.Values.AREA_TYPE_RELATIONS))
            builder.append(builder.length() == 0 ? "AREA_TYPE_RELATIONS" : " | AREA_TYPE_RELATIONS");
        if (this.and(Display2DContent.Values.LINE_TYPE_RELATIONS).equals(Display2DContent.Values.LINE_TYPE_RELATIONS))
            builder.append(builder.length() == 0 ? "LINE_TYPE_RELATIONS" : " | LINE_TYPE_RELATIONS");
        if (this.and(Display2DContent.Values.POINT_TYPE_RELATIONS).equals(Display2DContent.Values.POINT_TYPE_RELATIONS))
            builder.append(builder.length() == 0 ? "POINT_TYPE_RELATIONS" : " | POINT_TYPE_RELATIONS");
        if (this.and(Display2DContent.Values.SIMPLE_AREAS).equals(Display2DContent.Values.SIMPLE_AREAS))
            builder.append(builder.length() == 0 ? "SIMPLE_AREAS" : " | SIMPLE_AREAS");
        if (this.and(Display2DContent.Values.SIMPLE_AREA_SETS).equals(Display2DContent.Values.SIMPLE_AREA_SETS))
            builder.append(builder.length() == 0 ? "SIMPLE_AREA_SETS" : " | SIMPLE_AREA_SETS");

        return java.lang.String.valueOf(value) + "[" + builder.toString() + "]";
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(value);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(value));
    }

    public int getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    public Display2DContent or(Display2DContent other)
    {
        return new Display2DContent((int)(value | other.value));
    }

    public Display2DContent and(Display2DContent other)
    {
        return new Display2DContent((int)(value & other.value));
    }

    public Display2DContent xor(Display2DContent other)
    {
        return new Display2DContent((int)(value ^ other.value));
    }

    public Display2DContent not()
    {
        return new Display2DContent((int)(~value & 536870911));
    }

    public static final class Values
    {
        public static final Display2DContent POINTS = new Display2DContent(1);
        public static final Display2DContent LINES = new Display2DContent(2);
        public static final Display2DContent AREAS = new Display2DContent(4);
        public static final Display2DContent AREA_TYPE_RELATIONS = new Display2DContent(8);
        public static final Display2DContent LINE_TYPE_RELATIONS = new Display2DContent(16);
        public static final Display2DContent POINT_TYPE_RELATIONS = new Display2DContent(32);
        public static final Display2DContent SIMPLE_AREAS = new Display2DContent(64);
        public static final Display2DContent SIMPLE_AREA_SETS = new Display2DContent(128);
    }

    private int value;
}
