/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.metadata;

public class GltfLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            gltfVersion_ = new zserio.runtime.array.DeltaContext();
            displayScaleTileLevelMapping_ = new nds.display.metadata.DisplayScaleTileLevelMapping.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getGltfVersion()
        {
            return gltfVersion_;
        }

        public nds.display.metadata.DisplayScaleTileLevelMapping.ZserioPackingContext getDisplayScaleTileLevelMapping()
        {
            return displayScaleTileLevelMapping_;
        }

        private zserio.runtime.array.DeltaContext gltfVersion_;
        private nds.display.metadata.DisplayScaleTileLevelMapping.ZserioPackingContext displayScaleTileLevelMapping_;
    };

    public GltfLayerMetadata()
    {
    }

    public GltfLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public GltfLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public GltfLayerMetadata(
            nds.display.types.GltfVersion gltfVersion_,
            java.lang.String[] usedExtensions_,
            nds.display.metadata.DisplayScaleTileLevelMapping displayScaleTileLevelMapping_)
    {
        setGltfVersion(gltfVersion_);
        setUsedExtensions(usedExtensions_);
        setDisplayScaleTileLevelMapping(displayScaleTileLevelMapping_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        gltfVersion_.initPackingContext(zserioContext.getGltfVersion());
        displayScaleTileLevelMapping_.initPackingContext(zserioContext.getDisplayScaleTileLevelMapping());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += gltfVersion_.bitSizeOf(endBitPosition);
        endBitPosition += usedExtensions_.bitSizeOf(endBitPosition);
        endBitPosition += displayScaleTileLevelMapping_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += gltfVersion_.bitSizeOf(zserioContext.getGltfVersion(), endBitPosition);
        endBitPosition += usedExtensions_.bitSizeOf(endBitPosition);
        endBitPosition += displayScaleTileLevelMapping_.bitSizeOf(zserioContext.getDisplayScaleTileLevelMapping(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.display.types.GltfVersion getGltfVersion()
    {
        return gltfVersion_;
    }

    public void setGltfVersion(nds.display.types.GltfVersion gltfVersion_)
    {
        this.gltfVersion_ = gltfVersion_;
    }

    public java.lang.String[] getUsedExtensions()
    {
        return (usedExtensions_ == null) ? null : usedExtensions_.getRawArray();
    }

    public void setUsedExtensions(java.lang.String[] usedExtensions_)
    {
        this.usedExtensions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.StringRawArray(usedExtensions_),
                new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                zserio.runtime.array.ArrayType.AUTO);
    }

    public nds.display.metadata.DisplayScaleTileLevelMapping getDisplayScaleTileLevelMapping()
    {
        return displayScaleTileLevelMapping_;
    }

    public void setDisplayScaleTileLevelMapping(nds.display.metadata.DisplayScaleTileLevelMapping displayScaleTileLevelMapping_)
    {
        this.displayScaleTileLevelMapping_ = displayScaleTileLevelMapping_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof GltfLayerMetadata)
        {
            final GltfLayerMetadata that = (GltfLayerMetadata)obj;

            return
                    ((gltfVersion_ == null) ? that.gltfVersion_ == null : gltfVersion_.getValue() == that.gltfVersion_.getValue()) &&
                    ((usedExtensions_ == null) ? that.usedExtensions_ == null : usedExtensions_.equals(that.usedExtensions_)) &&
                    ((displayScaleTileLevelMapping_ == null) ? that.displayScaleTileLevelMapping_ == null : displayScaleTileLevelMapping_.equals(that.displayScaleTileLevelMapping_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, gltfVersion_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, usedExtensions_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayScaleTileLevelMapping_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        gltfVersion_ = nds.display.types.GltfVersion.readEnum(in);

        usedExtensions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.StringRawArray(),
                new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                zserio.runtime.array.ArrayType.AUTO);
        usedExtensions_.read(in);

        displayScaleTileLevelMapping_ = new nds.display.metadata.DisplayScaleTileLevelMapping(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        gltfVersion_ = nds.display.types.GltfVersion.readEnum(zserioContext.getGltfVersion(), in);

        usedExtensions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.StringRawArray(),
                new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                zserio.runtime.array.ArrayType.AUTO);
        usedExtensions_.read(in);

        displayScaleTileLevelMapping_ = new nds.display.metadata.DisplayScaleTileLevelMapping(zserioContext.getDisplayScaleTileLevelMapping(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += gltfVersion_.bitSizeOf(endBitPosition);
        endBitPosition = usedExtensions_.initializeOffsets(endBitPosition);
        endBitPosition = displayScaleTileLevelMapping_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = gltfVersion_.initializeOffsets(zserioContext.getGltfVersion(), endBitPosition);
        endBitPosition = usedExtensions_.initializeOffsets(endBitPosition);
        endBitPosition = displayScaleTileLevelMapping_.initializeOffsets(zserioContext.getDisplayScaleTileLevelMapping(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        gltfVersion_.write(out);

        usedExtensions_.write(out);

        displayScaleTileLevelMapping_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        gltfVersion_.write(zserioContext.getGltfVersion(), out);

        usedExtensions_.write(out);

        displayScaleTileLevelMapping_.write(zserioContext.getDisplayScaleTileLevelMapping(), out);
    }

    private nds.display.types.GltfVersion gltfVersion_;
    private zserio.runtime.array.Array usedExtensions_;
    private nds.display.metadata.DisplayScaleTileLevelMapping displayScaleTileLevelMapping_;
}
