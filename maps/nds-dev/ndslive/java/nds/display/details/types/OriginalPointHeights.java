/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.details.types;

public class OriginalPointHeights implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
    };

    public OriginalPointHeights()
    {
    }

    public OriginalPointHeights(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public OriginalPointHeights(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public OriginalPointHeights(
            short[] pointHeight_)
    {
        setPointHeight(pointHeight_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += pointHeight_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += pointHeight_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public short[] getPointHeight()
    {
        return (pointHeight_ == null) ? null : pointHeight_.getRawArray();
    }

    public void setPointHeight(short[] pointHeight_)
    {
        this.pointHeight_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(pointHeight_),
                new zserio.runtime.array.ArrayTraits.VarInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof OriginalPointHeights)
        {
            final OriginalPointHeights that = (OriginalPointHeights)obj;

            return
                    ((pointHeight_ == null) ? that.pointHeight_ == null : pointHeight_.equals(that.pointHeight_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, pointHeight_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        pointHeight_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(),
                new zserio.runtime.array.ArrayTraits.VarInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
        pointHeight_.read(in, (int)(2));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        pointHeight_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ShortRawArray(),
                new zserio.runtime.array.ArrayTraits.VarInt16ArrayTraits(),
                zserio.runtime.array.ArrayType.NORMAL);
        pointHeight_.readPacked(in, (int)(2));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = pointHeight_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = pointHeight_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        if (pointHeight_.size() != (int)(2))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field OriginalPointHeights.pointHeight: " +
                    pointHeight_.size() + " != " + (int)(2) + "!");
        }
        pointHeight_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        if (pointHeight_.size() != (int)(2))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field OriginalPointHeights.pointHeight: " +
                    pointHeight_.size() + " != " + (int)(2) + "!");
        }
        pointHeight_.writePacked(out);
    }

    private zserio.runtime.array.Array pointHeight_;
}
