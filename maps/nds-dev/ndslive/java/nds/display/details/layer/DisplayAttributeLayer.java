/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.details.layer;

public class DisplayAttributeLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            baseElevation_ = new zserio.runtime.array.DeltaContext();
            displayAreaAttributeMaps_ = new nds.display.details.instantiations.DisplayAreaAttributeMapList.ZserioPackingContext();
            displayAreaAttributeSets_ = new nds.display.details.instantiations.DisplayAreaAttributeSetList.ZserioPackingContext();
            displayLineAttributeMaps_ = new nds.display.details.instantiations.DisplayLineAttributeMapList.ZserioPackingContext();
            displayLineAttributeSets_ = new nds.display.details.instantiations.DisplayLineAttributeSetList.ZserioPackingContext();
            displayPointAttributeMaps_ = new nds.display.details.instantiations.DisplayPointAttributeMapList.ZserioPackingContext();
            displayPointAttributeSets_ = new nds.display.details.instantiations.DisplayPointAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getBaseElevation()
        {
            return baseElevation_;
        }

        public nds.display.details.instantiations.DisplayAreaAttributeMapList.ZserioPackingContext getDisplayAreaAttributeMaps()
        {
            return displayAreaAttributeMaps_;
        }

        public nds.display.details.instantiations.DisplayAreaAttributeSetList.ZserioPackingContext getDisplayAreaAttributeSets()
        {
            return displayAreaAttributeSets_;
        }

        public nds.display.details.instantiations.DisplayLineAttributeMapList.ZserioPackingContext getDisplayLineAttributeMaps()
        {
            return displayLineAttributeMaps_;
        }

        public nds.display.details.instantiations.DisplayLineAttributeSetList.ZserioPackingContext getDisplayLineAttributeSets()
        {
            return displayLineAttributeSets_;
        }

        public nds.display.details.instantiations.DisplayPointAttributeMapList.ZserioPackingContext getDisplayPointAttributeMaps()
        {
            return displayPointAttributeMaps_;
        }

        public nds.display.details.instantiations.DisplayPointAttributeSetList.ZserioPackingContext getDisplayPointAttributeSets()
        {
            return displayPointAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext baseElevation_;
        private nds.display.details.instantiations.DisplayAreaAttributeMapList.ZserioPackingContext displayAreaAttributeMaps_;
        private nds.display.details.instantiations.DisplayAreaAttributeSetList.ZserioPackingContext displayAreaAttributeSets_;
        private nds.display.details.instantiations.DisplayLineAttributeMapList.ZserioPackingContext displayLineAttributeMaps_;
        private nds.display.details.instantiations.DisplayLineAttributeSetList.ZserioPackingContext displayLineAttributeSets_;
        private nds.display.details.instantiations.DisplayPointAttributeMapList.ZserioPackingContext displayPointAttributeMaps_;
        private nds.display.details.instantiations.DisplayPointAttributeSetList.ZserioPackingContext displayPointAttributeSets_;
    };

    public DisplayAttributeLayer()
    {
    }

    public DisplayAttributeLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DisplayAttributeLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DisplayAttributeLayer(
            nds.display.details.metadata.DisplayAttributeLayerContent content_,
            java.lang.Integer baseElevation_,
            nds.display.details.instantiations.DisplayAreaAttributeMapList displayAreaAttributeMaps_,
            nds.display.details.instantiations.DisplayAreaAttributeSetList displayAreaAttributeSets_,
            nds.display.details.instantiations.DisplayLineAttributeMapList displayLineAttributeMaps_,
            nds.display.details.instantiations.DisplayLineAttributeSetList displayLineAttributeSets_,
            nds.display.details.instantiations.DisplayPointAttributeMapList displayPointAttributeMaps_,
            nds.display.details.instantiations.DisplayPointAttributeSetList displayPointAttributeSets_)
    {
        setContent(content_);
        setBaseElevation(baseElevation_);
        setDisplayAreaAttributeMaps(displayAreaAttributeMaps_);
        setDisplayAreaAttributeSets(displayAreaAttributeSets_);
        setDisplayLineAttributeMaps(displayLineAttributeMaps_);
        setDisplayLineAttributeSets(displayLineAttributeSets_);
        setDisplayPointAttributeMaps(displayPointAttributeMaps_);
        setDisplayPointAttributeSets(displayPointAttributeSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isBaseElevationUsed())
        {
            zserioContext.getBaseElevation().init(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(baseElevation_));
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            displayAreaAttributeMaps_.initPackingContext(zserioContext.getDisplayAreaAttributeMaps());
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            displayAreaAttributeSets_.initPackingContext(zserioContext.getDisplayAreaAttributeSets());
        }
        if (isDisplayLineAttributeMapsUsed())
        {
            displayLineAttributeMaps_.initPackingContext(zserioContext.getDisplayLineAttributeMaps());
        }
        if (isDisplayLineAttributeSetsUsed())
        {
            displayLineAttributeSets_.initPackingContext(zserioContext.getDisplayLineAttributeSets());
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            displayPointAttributeMaps_.initPackingContext(zserioContext.getDisplayPointAttributeMaps());
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            displayPointAttributeSets_.initPackingContext(zserioContext.getDisplayPointAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isBaseElevationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(baseElevation_);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition += displayAreaAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition += displayAreaAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLineAttributeMapsUsed())
        {
            endBitPosition += displayLineAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayLineAttributeSetsUsed())
        {
            endBitPosition += displayLineAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition += displayPointAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition += displayPointAttributeSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += 1;
        if (isBaseElevationUsed())
        {
            endBitPosition += zserioContext.getBaseElevation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(baseElevation_));
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition += displayAreaAttributeMaps_.bitSizeOf(zserioContext.getDisplayAreaAttributeMaps(), endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition += displayAreaAttributeSets_.bitSizeOf(zserioContext.getDisplayAreaAttributeSets(), endBitPosition);
        }
        if (isDisplayLineAttributeMapsUsed())
        {
            endBitPosition += displayLineAttributeMaps_.bitSizeOf(zserioContext.getDisplayLineAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineAttributeSetsUsed())
        {
            endBitPosition += displayLineAttributeSets_.bitSizeOf(zserioContext.getDisplayLineAttributeSets(), endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition += displayPointAttributeMaps_.bitSizeOf(zserioContext.getDisplayPointAttributeMaps(), endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition += displayPointAttributeSets_.bitSizeOf(zserioContext.getDisplayPointAttributeSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.display.details.metadata.DisplayAttributeLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.display.details.metadata.DisplayAttributeLayerContent content_)
    {
        this.content_ = content_;
    }

    public java.lang.Integer getBaseElevation()
    {
        return baseElevation_;
    }

    public void setBaseElevation(java.lang.Integer baseElevation_)
    {
        this.baseElevation_ = baseElevation_;
    }

    public boolean isBaseElevationUsed()
    {
        return isBaseElevationSet();
    }

    public boolean isBaseElevationSet()
    {
        return (baseElevation_ != null);
    }

    public void resetBaseElevation()
    {
        this.baseElevation_ = null;
    }

    public nds.display.details.instantiations.DisplayAreaAttributeMapList getDisplayAreaAttributeMaps()
    {
        return displayAreaAttributeMaps_;
    }

    public void setDisplayAreaAttributeMaps(nds.display.details.instantiations.DisplayAreaAttributeMapList displayAreaAttributeMaps_)
    {
        this.displayAreaAttributeMaps_ = displayAreaAttributeMaps_;
    }

    public boolean isDisplayAreaAttributeMapsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS));
    }

    public boolean isDisplayAreaAttributeMapsSet()
    {
        return (displayAreaAttributeMaps_ != null);
    }

    public void resetDisplayAreaAttributeMaps()
    {
        this.displayAreaAttributeMaps_ = null;
    }

    public nds.display.details.instantiations.DisplayAreaAttributeSetList getDisplayAreaAttributeSets()
    {
        return displayAreaAttributeSets_;
    }

    public void setDisplayAreaAttributeSets(nds.display.details.instantiations.DisplayAreaAttributeSetList displayAreaAttributeSets_)
    {
        this.displayAreaAttributeSets_ = displayAreaAttributeSets_;
    }

    public boolean isDisplayAreaAttributeSetsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS));
    }

    public boolean isDisplayAreaAttributeSetsSet()
    {
        return (displayAreaAttributeSets_ != null);
    }

    public void resetDisplayAreaAttributeSets()
    {
        this.displayAreaAttributeSets_ = null;
    }

    public nds.display.details.instantiations.DisplayLineAttributeMapList getDisplayLineAttributeMaps()
    {
        return displayLineAttributeMaps_;
    }

    public void setDisplayLineAttributeMaps(nds.display.details.instantiations.DisplayLineAttributeMapList displayLineAttributeMaps_)
    {
        this.displayLineAttributeMaps_ = displayLineAttributeMaps_;
    }

    public boolean isDisplayLineAttributeMapsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS));
    }

    public boolean isDisplayLineAttributeMapsSet()
    {
        return (displayLineAttributeMaps_ != null);
    }

    public void resetDisplayLineAttributeMaps()
    {
        this.displayLineAttributeMaps_ = null;
    }

    public nds.display.details.instantiations.DisplayLineAttributeSetList getDisplayLineAttributeSets()
    {
        return displayLineAttributeSets_;
    }

    public void setDisplayLineAttributeSets(nds.display.details.instantiations.DisplayLineAttributeSetList displayLineAttributeSets_)
    {
        this.displayLineAttributeSets_ = displayLineAttributeSets_;
    }

    public boolean isDisplayLineAttributeSetsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS));
    }

    public boolean isDisplayLineAttributeSetsSet()
    {
        return (displayLineAttributeSets_ != null);
    }

    public void resetDisplayLineAttributeSets()
    {
        this.displayLineAttributeSets_ = null;
    }

    public nds.display.details.instantiations.DisplayPointAttributeMapList getDisplayPointAttributeMaps()
    {
        return displayPointAttributeMaps_;
    }

    public void setDisplayPointAttributeMaps(nds.display.details.instantiations.DisplayPointAttributeMapList displayPointAttributeMaps_)
    {
        this.displayPointAttributeMaps_ = displayPointAttributeMaps_;
    }

    public boolean isDisplayPointAttributeMapsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS));
    }

    public boolean isDisplayPointAttributeMapsSet()
    {
        return (displayPointAttributeMaps_ != null);
    }

    public void resetDisplayPointAttributeMaps()
    {
        this.displayPointAttributeMaps_ = null;
    }

    public nds.display.details.instantiations.DisplayPointAttributeSetList getDisplayPointAttributeSets()
    {
        return displayPointAttributeSets_;
    }

    public void setDisplayPointAttributeSets(nds.display.details.instantiations.DisplayPointAttributeSetList displayPointAttributeSets_)
    {
        this.displayPointAttributeSets_ = displayPointAttributeSets_;
    }

    public boolean isDisplayPointAttributeSetsUsed()
    {
        return ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS));
    }

    public boolean isDisplayPointAttributeSetsSet()
    {
        return (displayPointAttributeSets_ != null);
    }

    public void resetDisplayPointAttributeSets()
    {
        this.displayPointAttributeSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DisplayAttributeLayer)
        {
            final DisplayAttributeLayer that = (DisplayAttributeLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isBaseElevationUsed()) ? !that.isBaseElevationUsed() :
                        ((baseElevation_ == null) ? that.baseElevation_ == null : baseElevation_.equals(that.baseElevation_))) &&
                    ((!isDisplayAreaAttributeMapsUsed()) ? !that.isDisplayAreaAttributeMapsUsed() :
                        ((displayAreaAttributeMaps_ == null) ? that.displayAreaAttributeMaps_ == null : displayAreaAttributeMaps_.equals(that.displayAreaAttributeMaps_))) &&
                    ((!isDisplayAreaAttributeSetsUsed()) ? !that.isDisplayAreaAttributeSetsUsed() :
                        ((displayAreaAttributeSets_ == null) ? that.displayAreaAttributeSets_ == null : displayAreaAttributeSets_.equals(that.displayAreaAttributeSets_))) &&
                    ((!isDisplayLineAttributeMapsUsed()) ? !that.isDisplayLineAttributeMapsUsed() :
                        ((displayLineAttributeMaps_ == null) ? that.displayLineAttributeMaps_ == null : displayLineAttributeMaps_.equals(that.displayLineAttributeMaps_))) &&
                    ((!isDisplayLineAttributeSetsUsed()) ? !that.isDisplayLineAttributeSetsUsed() :
                        ((displayLineAttributeSets_ == null) ? that.displayLineAttributeSets_ == null : displayLineAttributeSets_.equals(that.displayLineAttributeSets_))) &&
                    ((!isDisplayPointAttributeMapsUsed()) ? !that.isDisplayPointAttributeMapsUsed() :
                        ((displayPointAttributeMaps_ == null) ? that.displayPointAttributeMaps_ == null : displayPointAttributeMaps_.equals(that.displayPointAttributeMaps_))) &&
                    ((!isDisplayPointAttributeSetsUsed()) ? !that.isDisplayPointAttributeSetsUsed() :
                        ((displayPointAttributeSets_ == null) ? that.displayPointAttributeSets_ == null : displayPointAttributeSets_.equals(that.displayPointAttributeSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isBaseElevationUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, baseElevation_);
        if (isDisplayAreaAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayAreaAttributeMaps_);
        if (isDisplayAreaAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayAreaAttributeSets_);
        if (isDisplayLineAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineAttributeMaps_);
        if (isDisplayLineAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayLineAttributeSets_);
        if (isDisplayPointAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayPointAttributeMaps_);
        if (isDisplayPointAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, displayPointAttributeSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.display.details.metadata.DisplayAttributeLayerContent(in);

        if (in.readBool())
        {
            baseElevation_ = in.readVarInt32();
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS))
        {
            displayAreaAttributeMaps_ = new nds.display.details.instantiations.DisplayAreaAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeSets_ = new nds.display.details.instantiations.DisplayAreaAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS))
        {
            displayLineAttributeMaps_ = new nds.display.details.instantiations.DisplayLineAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS))
        {
            displayLineAttributeSets_ = new nds.display.details.instantiations.DisplayLineAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS))
        {
            displayPointAttributeMaps_ = new nds.display.details.instantiations.DisplayPointAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeSets_ = new nds.display.details.instantiations.DisplayPointAttributeSetList(in, (byte)(0));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.display.details.metadata.DisplayAttributeLayerContent(zserioContext.getContent(), in);

        if (in.readBool())
        {
            baseElevation_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getBaseElevation().read(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), in)).get();
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_MAPS))
        {
            displayAreaAttributeMaps_ = new nds.display.details.instantiations.DisplayAreaAttributeMapList(zserioContext.getDisplayAreaAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_AREA_SETS))
        {
            displayAreaAttributeSets_ = new nds.display.details.instantiations.DisplayAreaAttributeSetList(zserioContext.getDisplayAreaAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_MAPS))
        {
            displayLineAttributeMaps_ = new nds.display.details.instantiations.DisplayLineAttributeMapList(zserioContext.getDisplayLineAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_LINE_SETS))
        {
            displayLineAttributeSets_ = new nds.display.details.instantiations.DisplayLineAttributeSetList(zserioContext.getDisplayLineAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_MAPS))
        {
            displayPointAttributeMaps_ = new nds.display.details.instantiations.DisplayPointAttributeMapList(zserioContext.getDisplayPointAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS)).equals(nds.display.details.metadata.DisplayAttributeLayerContent.Values.DISPLAY_POINT_SETS))
        {
            displayPointAttributeSets_ = new nds.display.details.instantiations.DisplayPointAttributeSetList(zserioContext.getDisplayPointAttributeSets(), in, (byte)(0));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isBaseElevationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(baseElevation_);
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition = displayAreaAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition = displayAreaAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLineAttributeMapsUsed())
        {
            endBitPosition = displayLineAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayLineAttributeSetsUsed())
        {
            endBitPosition = displayLineAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition = displayPointAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition = displayPointAttributeSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += 1;
        if (isBaseElevationUsed())
        {
            endBitPosition += zserioContext.getBaseElevation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(baseElevation_));
        }
        if (isDisplayAreaAttributeMapsUsed())
        {
            endBitPosition = displayAreaAttributeMaps_.initializeOffsets(zserioContext.getDisplayAreaAttributeMaps(), endBitPosition);
        }
        if (isDisplayAreaAttributeSetsUsed())
        {
            endBitPosition = displayAreaAttributeSets_.initializeOffsets(zserioContext.getDisplayAreaAttributeSets(), endBitPosition);
        }
        if (isDisplayLineAttributeMapsUsed())
        {
            endBitPosition = displayLineAttributeMaps_.initializeOffsets(zserioContext.getDisplayLineAttributeMaps(), endBitPosition);
        }
        if (isDisplayLineAttributeSetsUsed())
        {
            endBitPosition = displayLineAttributeSets_.initializeOffsets(zserioContext.getDisplayLineAttributeSets(), endBitPosition);
        }
        if (isDisplayPointAttributeMapsUsed())
        {
            endBitPosition = displayPointAttributeMaps_.initializeOffsets(zserioContext.getDisplayPointAttributeMaps(), endBitPosition);
        }
        if (isDisplayPointAttributeSetsUsed())
        {
            endBitPosition = displayPointAttributeSets_.initializeOffsets(zserioContext.getDisplayPointAttributeSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isBaseElevationUsed())
        {
            out.writeBool(true);
            out.writeVarInt32(baseElevation_);
        }
        else
        {
            out.writeBool(false);
        }

        if (isDisplayAreaAttributeMapsUsed())
        {
            // check parameters
            if (displayAreaAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayAreaAttributeMaps: " +
                        displayAreaAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayAreaAttributeMaps_.write(out);
        }

        if (isDisplayAreaAttributeSetsUsed())
        {
            // check parameters
            if (displayAreaAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayAreaAttributeSets: " +
                        displayAreaAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayAreaAttributeSets_.write(out);
        }

        if (isDisplayLineAttributeMapsUsed())
        {
            // check parameters
            if (displayLineAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayLineAttributeMaps: " +
                        displayLineAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayLineAttributeMaps_.write(out);
        }

        if (isDisplayLineAttributeSetsUsed())
        {
            // check parameters
            if (displayLineAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayLineAttributeSets: " +
                        displayLineAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayLineAttributeSets_.write(out);
        }

        if (isDisplayPointAttributeMapsUsed())
        {
            // check parameters
            if (displayPointAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayPointAttributeMaps: " +
                        displayPointAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayPointAttributeMaps_.write(out);
        }

        if (isDisplayPointAttributeSetsUsed())
        {
            // check parameters
            if (displayPointAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field DisplayAttributeLayer.displayPointAttributeSets: " +
                        displayPointAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            displayPointAttributeSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isBaseElevationUsed())
        {
            out.writeBool(true);
            zserioContext.getBaseElevation().write(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(baseElevation_));
        }
        else
        {
            out.writeBool(false);
        }

        if (isDisplayAreaAttributeMapsUsed())
        {
            displayAreaAttributeMaps_.write(zserioContext.getDisplayAreaAttributeMaps(), out);
        }

        if (isDisplayAreaAttributeSetsUsed())
        {
            displayAreaAttributeSets_.write(zserioContext.getDisplayAreaAttributeSets(), out);
        }

        if (isDisplayLineAttributeMapsUsed())
        {
            displayLineAttributeMaps_.write(zserioContext.getDisplayLineAttributeMaps(), out);
        }

        if (isDisplayLineAttributeSetsUsed())
        {
            displayLineAttributeSets_.write(zserioContext.getDisplayLineAttributeSets(), out);
        }

        if (isDisplayPointAttributeMapsUsed())
        {
            displayPointAttributeMaps_.write(zserioContext.getDisplayPointAttributeMaps(), out);
        }

        if (isDisplayPointAttributeSetsUsed())
        {
            displayPointAttributeSets_.write(zserioContext.getDisplayPointAttributeSets(), out);
        }
    }

    private nds.display.details.metadata.DisplayAttributeLayerContent content_;
    private java.lang.Integer baseElevation_;
    private nds.display.details.instantiations.DisplayAreaAttributeMapList displayAreaAttributeMaps_;
    private nds.display.details.instantiations.DisplayAreaAttributeSetList displayAreaAttributeSets_;
    private nds.display.details.instantiations.DisplayLineAttributeMapList displayLineAttributeMaps_;
    private nds.display.details.instantiations.DisplayLineAttributeSetList displayLineAttributeSets_;
    private nds.display.details.instantiations.DisplayPointAttributeMapList displayPointAttributeMaps_;
    private nds.display.details.instantiations.DisplayPointAttributeSetList displayPointAttributeSets_;
}
