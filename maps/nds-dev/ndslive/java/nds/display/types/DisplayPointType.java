/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.types;

public enum DisplayPointType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    DISPLAY_POINT((short)0),
    POINT_MUNICIPALITY_CENTER((short)1),
    POINT_MUNICIPALITY_SUBDIVISION_CENTER((short)2),
    POINT_HAMLET((short)3),
    POINT_MOUNTAIN_PEAK((short)4),
    POINT_NEIGHBORHOOD((short)5),
    POINT_CONTROLLED_ACCESS_EXIT((short)6),
    POINT_CONTROLLED_ACCESS_ENTRY((short)7),
    POINT_CONTROLLED_ACCESS_INTERSECTION((short)8),
    POINT_COUNTRY((short)9),
    POINT_SUB_COUNTRY((short)10),
    POINT_TRAFFIC_LIGHT((short)11),
    POINT_SEA_OCEAN((short)12),
    POINT_SUB_COUNTRY_SET((short)13),
    POINT_COUNTY((short)14),
    POINT_CITY_BLOCK((short)15),
    POINT_ISLAND((short)16),
    POINT_AUTONOMOUS_REGION((short)17),
    POINT_MUNICIPALITY_CENTER_CAPITAL((short)18),
    POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY((short)19),
    POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY((short)20),
    POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTY((short)21),
    POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY_SET((short)22),
    POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY_SET((short)23),
    POINT_MUNICIPALITY_CENTER_CAPITAL_ZONE((short)24);

    private DisplayPointType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(value);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt16(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static DisplayPointType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readVarUInt16());
    }

    public static DisplayPointType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get());
    }

    public static DisplayPointType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return DISPLAY_POINT;
            case (short)1:
                return POINT_MUNICIPALITY_CENTER;
            case (short)2:
                return POINT_MUNICIPALITY_SUBDIVISION_CENTER;
            case (short)3:
                return POINT_HAMLET;
            case (short)4:
                return POINT_MOUNTAIN_PEAK;
            case (short)5:
                return POINT_NEIGHBORHOOD;
            case (short)6:
                return POINT_CONTROLLED_ACCESS_EXIT;
            case (short)7:
                return POINT_CONTROLLED_ACCESS_ENTRY;
            case (short)8:
                return POINT_CONTROLLED_ACCESS_INTERSECTION;
            case (short)9:
                return POINT_COUNTRY;
            case (short)10:
                return POINT_SUB_COUNTRY;
            case (short)11:
                return POINT_TRAFFIC_LIGHT;
            case (short)12:
                return POINT_SEA_OCEAN;
            case (short)13:
                return POINT_SUB_COUNTRY_SET;
            case (short)14:
                return POINT_COUNTY;
            case (short)15:
                return POINT_CITY_BLOCK;
            case (short)16:
                return POINT_ISLAND;
            case (short)17:
                return POINT_AUTONOMOUS_REGION;
            case (short)18:
                return POINT_MUNICIPALITY_CENTER_CAPITAL;
            case (short)19:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY;
            case (short)20:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY;
            case (short)21:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTY;
            case (short)22:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY_SET;
            case (short)23:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY_SET;
            case (short)24:
                return POINT_MUNICIPALITY_CENTER_CAPITAL_ZONE;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration DisplayPointType: " + value + "!");
        }
    }

    public static DisplayPointType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("DISPLAY_POINT"))
            return DISPLAY_POINT;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER"))
            return POINT_MUNICIPALITY_CENTER;
        if (itemName.equals("POINT_MUNICIPALITY_SUBDIVISION_CENTER"))
            return POINT_MUNICIPALITY_SUBDIVISION_CENTER;
        if (itemName.equals("POINT_HAMLET"))
            return POINT_HAMLET;
        if (itemName.equals("POINT_MOUNTAIN_PEAK"))
            return POINT_MOUNTAIN_PEAK;
        if (itemName.equals("POINT_NEIGHBORHOOD"))
            return POINT_NEIGHBORHOOD;
        if (itemName.equals("POINT_CONTROLLED_ACCESS_EXIT"))
            return POINT_CONTROLLED_ACCESS_EXIT;
        if (itemName.equals("POINT_CONTROLLED_ACCESS_ENTRY"))
            return POINT_CONTROLLED_ACCESS_ENTRY;
        if (itemName.equals("POINT_CONTROLLED_ACCESS_INTERSECTION"))
            return POINT_CONTROLLED_ACCESS_INTERSECTION;
        if (itemName.equals("POINT_COUNTRY"))
            return POINT_COUNTRY;
        if (itemName.equals("POINT_SUB_COUNTRY"))
            return POINT_SUB_COUNTRY;
        if (itemName.equals("POINT_TRAFFIC_LIGHT"))
            return POINT_TRAFFIC_LIGHT;
        if (itemName.equals("POINT_SEA_OCEAN"))
            return POINT_SEA_OCEAN;
        if (itemName.equals("POINT_SUB_COUNTRY_SET"))
            return POINT_SUB_COUNTRY_SET;
        if (itemName.equals("POINT_COUNTY"))
            return POINT_COUNTY;
        if (itemName.equals("POINT_CITY_BLOCK"))
            return POINT_CITY_BLOCK;
        if (itemName.equals("POINT_ISLAND"))
            return POINT_ISLAND;
        if (itemName.equals("POINT_AUTONOMOUS_REGION"))
            return POINT_AUTONOMOUS_REGION;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTY"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTY;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY_SET"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_COUNTRY_SET;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY_SET"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_SUB_COUNTRY_SET;
        if (itemName.equals("POINT_MUNICIPALITY_CENTER_CAPITAL_ZONE"))
            return POINT_MUNICIPALITY_CENTER_CAPITAL_ZONE;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration DisplayPointType!");
    }

    private short value;
}
