/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.types;

public class TextureSection implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            top_ = new zserio.runtime.array.DeltaContext();
            left_ = new zserio.runtime.array.DeltaContext();
            height_ = new zserio.runtime.array.DeltaContext();
            width_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getTop()
        {
            return top_;
        }

        public zserio.runtime.array.DeltaContext getLeft()
        {
            return left_;
        }

        public zserio.runtime.array.DeltaContext getHeight()
        {
            return height_;
        }

        public zserio.runtime.array.DeltaContext getWidth()
        {
            return width_;
        }

        private zserio.runtime.array.DeltaContext top_;
        private zserio.runtime.array.DeltaContext left_;
        private zserio.runtime.array.DeltaContext height_;
        private zserio.runtime.array.DeltaContext width_;
    };

    public TextureSection()
    {
    }

    public TextureSection(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TextureSection(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TextureSection(
            int top_,
            int left_,
            int height_,
            int width_)
    {
        setTop(top_);
        setLeft(left_);
        setHeight(height_);
        setWidth(width_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getTop().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(top_));
        zserioContext.getLeft().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(left_));
        zserioContext.getHeight().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(height_));
        zserioContext.getWidth().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(width_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 16;
        endBitPosition += 16;
        endBitPosition += 16;
        endBitPosition += 16;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getTop().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(top_));
        endBitPosition += zserioContext.getLeft().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(left_));
        endBitPosition += zserioContext.getHeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(height_));
        endBitPosition += zserioContext.getWidth().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(width_));

        return (int)(endBitPosition - bitPosition);
    }

    public int getTop()
    {
        return top_;
    }

    public void setTop(int top_)
    {
        this.top_ = top_;
    }

    public int getLeft()
    {
        return left_;
    }

    public void setLeft(int left_)
    {
        this.left_ = left_;
    }

    public int getHeight()
    {
        return height_;
    }

    public void setHeight(int height_)
    {
        this.height_ = height_;
    }

    public int getWidth()
    {
        return width_;
    }

    public void setWidth(int width_)
    {
        this.width_ = width_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TextureSection)
        {
            final TextureSection that = (TextureSection)obj;

            return
                    top_ == that.top_ &&
                    left_ == that.left_ &&
                    height_ == that.height_ &&
                    width_ == that.width_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, top_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, left_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, height_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, width_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        top_ = in.readUnsignedShort();

        left_ = in.readUnsignedShort();

        height_ = in.readUnsignedShort();

        width_ = in.readUnsignedShort();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        top_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getTop().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), in)).get();

        left_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getLeft().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), in)).get();

        height_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getHeight().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), in)).get();

        width_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getWidth().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 16;
        endBitPosition += 16;
        endBitPosition += 16;
        endBitPosition += 16;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getTop().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(top_));
        endBitPosition += zserioContext.getLeft().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(left_));
        endBitPosition += zserioContext.getHeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(height_));
        endBitPosition += zserioContext.getWidth().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(width_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedShort(top_);

        out.writeUnsignedShort(left_);

        out.writeUnsignedShort(height_);

        out.writeUnsignedShort(width_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getTop().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(top_));

        zserioContext.getLeft().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(left_));

        zserioContext.getHeight().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(height_));

        zserioContext.getWidth().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(16)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(width_));
    }

    private int top_;
    private int left_;
    private int height_;
    private int width_;
}
