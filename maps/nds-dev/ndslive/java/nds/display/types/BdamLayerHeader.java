/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.types;

public class BdamLayerHeader implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            shiftXY_ = new zserio.runtime.array.DeltaContext();
            shiftZ_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getShiftXY()
        {
            return shiftXY_;
        }

        public zserio.runtime.array.DeltaContext getShiftZ()
        {
            return shiftZ_;
        }

        private zserio.runtime.array.DeltaContext shiftXY_;
        private zserio.runtime.array.DeltaContext shiftZ_;
    };

    public BdamLayerHeader()
    {
    }

    public BdamLayerHeader(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public BdamLayerHeader(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public BdamLayerHeader(
            byte shiftXY_,
            byte shiftZ_,
            boolean hasTexture_)
    {
        setShiftXY(shiftXY_);
        setShiftZ(shiftZ_);
        setHasTexture(hasTexture_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getShiftXY().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftXY_));
        zserioContext.getShiftZ().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftZ_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 5;
        endBitPosition += 5;
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getShiftXY().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftXY_));
        endBitPosition += zserioContext.getShiftZ().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftZ_));
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    public byte getShiftXY()
    {
        return shiftXY_;
    }

    public void setShiftXY(byte shiftXY_)
    {
        this.shiftXY_ = shiftXY_;
    }

    public byte getShiftZ()
    {
        return shiftZ_;
    }

    public void setShiftZ(byte shiftZ_)
    {
        this.shiftZ_ = shiftZ_;
    }

    public boolean getHasTexture()
    {
        return hasTexture_;
    }

    public void setHasTexture(boolean hasTexture_)
    {
        this.hasTexture_ = hasTexture_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof BdamLayerHeader)
        {
            final BdamLayerHeader that = (BdamLayerHeader)obj;

            return
                    shiftXY_ == that.shiftXY_ &&
                    shiftZ_ == that.shiftZ_ &&
                    hasTexture_ == that.hasTexture_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shiftXY_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shiftZ_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, hasTexture_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        shiftXY_ = (byte)in.readBits(5);

        shiftZ_ = (byte)in.readBits(5);

        hasTexture_ = in.readBool();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        shiftXY_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShiftXY().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        shiftZ_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShiftZ().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        hasTexture_ = in.readBool();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 5;
        endBitPosition += 5;
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getShiftXY().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftXY_));
        endBitPosition += zserioContext.getShiftZ().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftZ_));
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeBits(shiftXY_, 5);

        out.writeBits(shiftZ_, 5);

        out.writeBool(hasTexture_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getShiftXY().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftXY_));

        zserioContext.getShiftZ().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shiftZ_));

        out.writeBool(hasTexture_);
    }

    private byte shiftXY_;
    private byte shiftZ_;
    private boolean hasTexture_;
}
