/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.display.types;

public class TextureData implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            TextureSectionArray_ = new nds.display.types.TextureSectionArray.ZserioPackingContext();
        }

        public nds.display.types.TextureSectionArray.ZserioPackingContext getTextureSectionArray()
        {
            return TextureSectionArray_;
        }

        private nds.display.types.TextureSectionArray.ZserioPackingContext TextureSectionArray_;
    };

    public TextureData()
    {
    }

    public TextureData(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TextureData(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TextureData(
            zserio.runtime.io.BitBuffer textureData_,
            nds.display.types.TextureSectionArray TextureSectionArray_)
    {
        setTextureData(textureData_);
        setTextureSectionArray(TextureSectionArray_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        TextureSectionArray_.initPackingContext(zserioContext.getTextureSectionArray());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(textureData_);
        endBitPosition += TextureSectionArray_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(textureData_);
        endBitPosition += TextureSectionArray_.bitSizeOf(zserioContext.getTextureSectionArray(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public zserio.runtime.io.BitBuffer getTextureData()
    {
        return textureData_;
    }

    public void setTextureData(zserio.runtime.io.BitBuffer textureData_)
    {
        this.textureData_ = textureData_;
    }

    public nds.display.types.TextureSectionArray getTextureSectionArray()
    {
        return TextureSectionArray_;
    }

    public void setTextureSectionArray(nds.display.types.TextureSectionArray TextureSectionArray_)
    {
        this.TextureSectionArray_ = TextureSectionArray_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TextureData)
        {
            final TextureData that = (TextureData)obj;

            return
                    ((textureData_ == null) ? that.textureData_ == null : textureData_.equals(that.textureData_)) &&
                    ((TextureSectionArray_ == null) ? that.TextureSectionArray_ == null : TextureSectionArray_.equals(that.TextureSectionArray_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, textureData_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, TextureSectionArray_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        textureData_ = in.readBitBuffer();

        TextureSectionArray_ = new nds.display.types.TextureSectionArray(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        textureData_ = in.readBitBuffer();

        TextureSectionArray_ = new nds.display.types.TextureSectionArray(zserioContext.getTextureSectionArray(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(textureData_);
        endBitPosition = TextureSectionArray_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(textureData_);
        endBitPosition = TextureSectionArray_.initializeOffsets(zserioContext.getTextureSectionArray(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeBitBuffer(textureData_);

        TextureSectionArray_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        out.writeBitBuffer(textureData_);

        TextureSectionArray_.write(zserioContext.getTextureSectionArray(), out);
    }

    private zserio.runtime.io.BitBuffer textureData_;
    private nds.display.types.TextureSectionArray TextureSectionArray_;
}
