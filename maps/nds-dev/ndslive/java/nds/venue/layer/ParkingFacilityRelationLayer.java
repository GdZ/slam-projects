/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.venue.layer;

public class ParkingFacilityRelationLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            parkingLaneRangeRelationMapList_ = new nds.venue.instantiations.ParkingLaneRangeRelationMapList.ZserioPackingContext();
            parkingLanePositionRelationMapList_ = new nds.venue.instantiations.ParkingLanePositionRelationMapList.ZserioPackingContext();
            parkingRoadSurfaceRelationMapList_ = new nds.venue.instantiations.ParkingRoadSurfaceRelationMapList.ZserioPackingContext();
            parkingPoiRelationMapList_ = new nds.venue.instantiations.ParkingPoiRelationMapList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.venue.instantiations.ParkingLaneRangeRelationMapList.ZserioPackingContext getParkingLaneRangeRelationMapList()
        {
            return parkingLaneRangeRelationMapList_;
        }

        public nds.venue.instantiations.ParkingLanePositionRelationMapList.ZserioPackingContext getParkingLanePositionRelationMapList()
        {
            return parkingLanePositionRelationMapList_;
        }

        public nds.venue.instantiations.ParkingRoadSurfaceRelationMapList.ZserioPackingContext getParkingRoadSurfaceRelationMapList()
        {
            return parkingRoadSurfaceRelationMapList_;
        }

        public nds.venue.instantiations.ParkingPoiRelationMapList.ZserioPackingContext getParkingPoiRelationMapList()
        {
            return parkingPoiRelationMapList_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.venue.instantiations.ParkingLaneRangeRelationMapList.ZserioPackingContext parkingLaneRangeRelationMapList_;
        private nds.venue.instantiations.ParkingLanePositionRelationMapList.ZserioPackingContext parkingLanePositionRelationMapList_;
        private nds.venue.instantiations.ParkingRoadSurfaceRelationMapList.ZserioPackingContext parkingRoadSurfaceRelationMapList_;
        private nds.venue.instantiations.ParkingPoiRelationMapList.ZserioPackingContext parkingPoiRelationMapList_;
    };

    public ParkingFacilityRelationLayer()
    {
    }

    public ParkingFacilityRelationLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public ParkingFacilityRelationLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public ParkingFacilityRelationLayer(
            nds.venue.metadata.ParkingFacilityRelationLayerContent content_,
            nds.venue.instantiations.ParkingLaneRangeRelationMapList parkingLaneRangeRelationMapList_,
            nds.venue.instantiations.ParkingLanePositionRelationMapList parkingLanePositionRelationMapList_,
            nds.venue.instantiations.ParkingRoadSurfaceRelationMapList parkingRoadSurfaceRelationMapList_,
            nds.venue.instantiations.ParkingPoiRelationMapList parkingPoiRelationMapList_)
    {
        setContent(content_);
        setParkingLaneRangeRelationMapList(parkingLaneRangeRelationMapList_);
        setParkingLanePositionRelationMapList(parkingLanePositionRelationMapList_);
        setParkingRoadSurfaceRelationMapList(parkingRoadSurfaceRelationMapList_);
        setParkingPoiRelationMapList(parkingPoiRelationMapList_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isParkingLaneRangeRelationMapListUsed())
        {
            parkingLaneRangeRelationMapList_.initPackingContext(zserioContext.getParkingLaneRangeRelationMapList());
        }
        if (isParkingLanePositionRelationMapListUsed())
        {
            parkingLanePositionRelationMapList_.initPackingContext(zserioContext.getParkingLanePositionRelationMapList());
        }
        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            parkingRoadSurfaceRelationMapList_.initPackingContext(zserioContext.getParkingRoadSurfaceRelationMapList());
        }
        if (isParkingPoiRelationMapListUsed())
        {
            parkingPoiRelationMapList_.initPackingContext(zserioContext.getParkingPoiRelationMapList());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingLaneRangeRelationMapListUsed())
        {
            endBitPosition += parkingLaneRangeRelationMapList_.bitSizeOf(endBitPosition);
        }
        if (isParkingLanePositionRelationMapListUsed())
        {
            endBitPosition += parkingLanePositionRelationMapList_.bitSizeOf(endBitPosition);
        }
        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            endBitPosition += parkingRoadSurfaceRelationMapList_.bitSizeOf(endBitPosition);
        }
        if (isParkingPoiRelationMapListUsed())
        {
            endBitPosition += parkingPoiRelationMapList_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isParkingLaneRangeRelationMapListUsed())
        {
            endBitPosition += parkingLaneRangeRelationMapList_.bitSizeOf(zserioContext.getParkingLaneRangeRelationMapList(), endBitPosition);
        }
        if (isParkingLanePositionRelationMapListUsed())
        {
            endBitPosition += parkingLanePositionRelationMapList_.bitSizeOf(zserioContext.getParkingLanePositionRelationMapList(), endBitPosition);
        }
        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            endBitPosition += parkingRoadSurfaceRelationMapList_.bitSizeOf(zserioContext.getParkingRoadSurfaceRelationMapList(), endBitPosition);
        }
        if (isParkingPoiRelationMapListUsed())
        {
            endBitPosition += parkingPoiRelationMapList_.bitSizeOf(zserioContext.getParkingPoiRelationMapList(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.venue.metadata.ParkingFacilityRelationLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.venue.metadata.ParkingFacilityRelationLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.venue.instantiations.ParkingLaneRangeRelationMapList getParkingLaneRangeRelationMapList()
    {
        return parkingLaneRangeRelationMapList_;
    }

    public void setParkingLaneRangeRelationMapList(nds.venue.instantiations.ParkingLaneRangeRelationMapList parkingLaneRangeRelationMapList_)
    {
        this.parkingLaneRangeRelationMapList_ = parkingLaneRangeRelationMapList_;
    }

    public boolean isParkingLaneRangeRelationMapListUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS));
    }

    public boolean isParkingLaneRangeRelationMapListSet()
    {
        return (parkingLaneRangeRelationMapList_ != null);
    }

    public void resetParkingLaneRangeRelationMapList()
    {
        this.parkingLaneRangeRelationMapList_ = null;
    }

    public nds.venue.instantiations.ParkingLanePositionRelationMapList getParkingLanePositionRelationMapList()
    {
        return parkingLanePositionRelationMapList_;
    }

    public void setParkingLanePositionRelationMapList(nds.venue.instantiations.ParkingLanePositionRelationMapList parkingLanePositionRelationMapList_)
    {
        this.parkingLanePositionRelationMapList_ = parkingLanePositionRelationMapList_;
    }

    public boolean isParkingLanePositionRelationMapListUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS));
    }

    public boolean isParkingLanePositionRelationMapListSet()
    {
        return (parkingLanePositionRelationMapList_ != null);
    }

    public void resetParkingLanePositionRelationMapList()
    {
        this.parkingLanePositionRelationMapList_ = null;
    }

    public nds.venue.instantiations.ParkingRoadSurfaceRelationMapList getParkingRoadSurfaceRelationMapList()
    {
        return parkingRoadSurfaceRelationMapList_;
    }

    public void setParkingRoadSurfaceRelationMapList(nds.venue.instantiations.ParkingRoadSurfaceRelationMapList parkingRoadSurfaceRelationMapList_)
    {
        this.parkingRoadSurfaceRelationMapList_ = parkingRoadSurfaceRelationMapList_;
    }

    public boolean isParkingRoadSurfaceRelationMapListUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS));
    }

    public boolean isParkingRoadSurfaceRelationMapListSet()
    {
        return (parkingRoadSurfaceRelationMapList_ != null);
    }

    public void resetParkingRoadSurfaceRelationMapList()
    {
        this.parkingRoadSurfaceRelationMapList_ = null;
    }

    public nds.venue.instantiations.ParkingPoiRelationMapList getParkingPoiRelationMapList()
    {
        return parkingPoiRelationMapList_;
    }

    public void setParkingPoiRelationMapList(nds.venue.instantiations.ParkingPoiRelationMapList parkingPoiRelationMapList_)
    {
        this.parkingPoiRelationMapList_ = parkingPoiRelationMapList_;
    }

    public boolean isParkingPoiRelationMapListUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS));
    }

    public boolean isParkingPoiRelationMapListSet()
    {
        return (parkingPoiRelationMapList_ != null);
    }

    public void resetParkingPoiRelationMapList()
    {
        this.parkingPoiRelationMapList_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.RELATION);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof ParkingFacilityRelationLayer)
        {
            final ParkingFacilityRelationLayer that = (ParkingFacilityRelationLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isParkingLaneRangeRelationMapListUsed()) ? !that.isParkingLaneRangeRelationMapListUsed() :
                        ((parkingLaneRangeRelationMapList_ == null) ? that.parkingLaneRangeRelationMapList_ == null : parkingLaneRangeRelationMapList_.equals(that.parkingLaneRangeRelationMapList_))) &&
                    ((!isParkingLanePositionRelationMapListUsed()) ? !that.isParkingLanePositionRelationMapListUsed() :
                        ((parkingLanePositionRelationMapList_ == null) ? that.parkingLanePositionRelationMapList_ == null : parkingLanePositionRelationMapList_.equals(that.parkingLanePositionRelationMapList_))) &&
                    ((!isParkingRoadSurfaceRelationMapListUsed()) ? !that.isParkingRoadSurfaceRelationMapListUsed() :
                        ((parkingRoadSurfaceRelationMapList_ == null) ? that.parkingRoadSurfaceRelationMapList_ == null : parkingRoadSurfaceRelationMapList_.equals(that.parkingRoadSurfaceRelationMapList_))) &&
                    ((!isParkingPoiRelationMapListUsed()) ? !that.isParkingPoiRelationMapListUsed() :
                        ((parkingPoiRelationMapList_ == null) ? that.parkingPoiRelationMapList_ == null : parkingPoiRelationMapList_.equals(that.parkingPoiRelationMapList_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isParkingLaneRangeRelationMapListUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingLaneRangeRelationMapList_);
        if (isParkingLanePositionRelationMapListUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingLanePositionRelationMapList_);
        if (isParkingRoadSurfaceRelationMapListUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingRoadSurfaceRelationMapList_);
        if (isParkingPoiRelationMapListUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingPoiRelationMapList_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.venue.metadata.ParkingFacilityRelationLayerContent(in);

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS))
        {
            parkingLaneRangeRelationMapList_ = new nds.venue.instantiations.ParkingLaneRangeRelationMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS))
        {
            parkingLanePositionRelationMapList_ = new nds.venue.instantiations.ParkingLanePositionRelationMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS))
        {
            parkingRoadSurfaceRelationMapList_ = new nds.venue.instantiations.ParkingRoadSurfaceRelationMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS))
        {
            parkingPoiRelationMapList_ = new nds.venue.instantiations.ParkingPoiRelationMapList(in, (byte)(0));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.venue.metadata.ParkingFacilityRelationLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS))
        {
            parkingLaneRangeRelationMapList_ = new nds.venue.instantiations.ParkingLaneRangeRelationMapList(zserioContext.getParkingLaneRangeRelationMapList(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS))
        {
            parkingLanePositionRelationMapList_ = new nds.venue.instantiations.ParkingLanePositionRelationMapList(zserioContext.getParkingLanePositionRelationMapList(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS))
        {
            parkingRoadSurfaceRelationMapList_ = new nds.venue.instantiations.ParkingRoadSurfaceRelationMapList(zserioContext.getParkingRoadSurfaceRelationMapList(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS))
        {
            parkingPoiRelationMapList_ = new nds.venue.instantiations.ParkingPoiRelationMapList(zserioContext.getParkingPoiRelationMapList(), in, (byte)(0));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingLaneRangeRelationMapListUsed())
        {
            endBitPosition = parkingLaneRangeRelationMapList_.initializeOffsets(endBitPosition);
        }
        if (isParkingLanePositionRelationMapListUsed())
        {
            endBitPosition = parkingLanePositionRelationMapList_.initializeOffsets(endBitPosition);
        }
        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            endBitPosition = parkingRoadSurfaceRelationMapList_.initializeOffsets(endBitPosition);
        }
        if (isParkingPoiRelationMapListUsed())
        {
            endBitPosition = parkingPoiRelationMapList_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isParkingLaneRangeRelationMapListUsed())
        {
            endBitPosition = parkingLaneRangeRelationMapList_.initializeOffsets(zserioContext.getParkingLaneRangeRelationMapList(), endBitPosition);
        }
        if (isParkingLanePositionRelationMapListUsed())
        {
            endBitPosition = parkingLanePositionRelationMapList_.initializeOffsets(zserioContext.getParkingLanePositionRelationMapList(), endBitPosition);
        }
        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            endBitPosition = parkingRoadSurfaceRelationMapList_.initializeOffsets(zserioContext.getParkingRoadSurfaceRelationMapList(), endBitPosition);
        }
        if (isParkingPoiRelationMapListUsed())
        {
            endBitPosition = parkingPoiRelationMapList_.initializeOffsets(zserioContext.getParkingPoiRelationMapList(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isParkingLaneRangeRelationMapListUsed())
        {
            // check parameters
            if (parkingLaneRangeRelationMapList_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityRelationLayer.parkingLaneRangeRelationMapList: " +
                        parkingLaneRangeRelationMapList_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingLaneRangeRelationMapList_.write(out);
        }

        if (isParkingLanePositionRelationMapListUsed())
        {
            // check parameters
            if (parkingLanePositionRelationMapList_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityRelationLayer.parkingLanePositionRelationMapList: " +
                        parkingLanePositionRelationMapList_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingLanePositionRelationMapList_.write(out);
        }

        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            // check parameters
            if (parkingRoadSurfaceRelationMapList_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityRelationLayer.parkingRoadSurfaceRelationMapList: " +
                        parkingRoadSurfaceRelationMapList_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingRoadSurfaceRelationMapList_.write(out);
        }

        if (isParkingPoiRelationMapListUsed())
        {
            // check parameters
            if (parkingPoiRelationMapList_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityRelationLayer.parkingPoiRelationMapList: " +
                        parkingPoiRelationMapList_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingPoiRelationMapList_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isParkingLaneRangeRelationMapListUsed())
        {
            parkingLaneRangeRelationMapList_.write(zserioContext.getParkingLaneRangeRelationMapList(), out);
        }

        if (isParkingLanePositionRelationMapListUsed())
        {
            parkingLanePositionRelationMapList_.write(zserioContext.getParkingLanePositionRelationMapList(), out);
        }

        if (isParkingRoadSurfaceRelationMapListUsed())
        {
            parkingRoadSurfaceRelationMapList_.write(zserioContext.getParkingRoadSurfaceRelationMapList(), out);
        }

        if (isParkingPoiRelationMapListUsed())
        {
            parkingPoiRelationMapList_.write(zserioContext.getParkingPoiRelationMapList(), out);
        }
    }

    private nds.venue.metadata.ParkingFacilityRelationLayerContent content_;
    private nds.venue.instantiations.ParkingLaneRangeRelationMapList parkingLaneRangeRelationMapList_;
    private nds.venue.instantiations.ParkingLanePositionRelationMapList parkingLanePositionRelationMapList_;
    private nds.venue.instantiations.ParkingRoadSurfaceRelationMapList parkingRoadSurfaceRelationMapList_;
    private nds.venue.instantiations.ParkingPoiRelationMapList parkingPoiRelationMapList_;
}
