/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.venue.metadata;

public class ParkingFacilityRelationLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            parkingRoadSurfaceRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext();
            parkingRangeRelationMetadata_ = new nds.venue.instantiations.ParkingRangeRelationMetadata.ZserioPackingContext();
            parkingPositionRelationMetadata_ = new nds.venue.instantiations.ParkingPositionRelationMetadata.ZserioPackingContext();
            parkingPoiRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext getParkingRoadSurfaceRelationMetadata()
        {
            return parkingRoadSurfaceRelationMetadata_;
        }

        public nds.venue.instantiations.ParkingRangeRelationMetadata.ZserioPackingContext getParkingRangeRelationMetadata()
        {
            return parkingRangeRelationMetadata_;
        }

        public nds.venue.instantiations.ParkingPositionRelationMetadata.ZserioPackingContext getParkingPositionRelationMetadata()
        {
            return parkingPositionRelationMetadata_;
        }

        public nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext getParkingPoiRelationMetadata()
        {
            return parkingPoiRelationMetadata_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext parkingRoadSurfaceRelationMetadata_;
        private nds.venue.instantiations.ParkingRangeRelationMetadata.ZserioPackingContext parkingRangeRelationMetadata_;
        private nds.venue.instantiations.ParkingPositionRelationMetadata.ZserioPackingContext parkingPositionRelationMetadata_;
        private nds.venue.instantiations.ParkingRelationMetadata.ZserioPackingContext parkingPoiRelationMetadata_;
    };

    public ParkingFacilityRelationLayerMetadata()
    {
    }

    public ParkingFacilityRelationLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public ParkingFacilityRelationLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public ParkingFacilityRelationLayerMetadata(
            nds.venue.metadata.ParkingFacilityRelationLayerContent content_,
            nds.venue.instantiations.ParkingRelationMetadata parkingRoadSurfaceRelationMetadata_,
            nds.venue.instantiations.ParkingRangeRelationMetadata parkingRangeRelationMetadata_,
            nds.venue.instantiations.ParkingPositionRelationMetadata parkingPositionRelationMetadata_,
            nds.venue.instantiations.ParkingRelationMetadata parkingPoiRelationMetadata_)
    {
        setContent(content_);
        setParkingRoadSurfaceRelationMetadata(parkingRoadSurfaceRelationMetadata_);
        setParkingRangeRelationMetadata(parkingRangeRelationMetadata_);
        setParkingPositionRelationMetadata(parkingPositionRelationMetadata_);
        setParkingPoiRelationMetadata(parkingPoiRelationMetadata_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            parkingRoadSurfaceRelationMetadata_.initPackingContext(zserioContext.getParkingRoadSurfaceRelationMetadata());
        }
        if (isParkingRangeRelationMetadataUsed())
        {
            parkingRangeRelationMetadata_.initPackingContext(zserioContext.getParkingRangeRelationMetadata());
        }
        if (isParkingPositionRelationMetadataUsed())
        {
            parkingPositionRelationMetadata_.initPackingContext(zserioContext.getParkingPositionRelationMetadata());
        }
        if (isParkingPoiRelationMetadataUsed())
        {
            parkingPoiRelationMetadata_.initPackingContext(zserioContext.getParkingPoiRelationMetadata());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            endBitPosition += parkingRoadSurfaceRelationMetadata_.bitSizeOf(endBitPosition);
        }
        if (isParkingRangeRelationMetadataUsed())
        {
            endBitPosition += parkingRangeRelationMetadata_.bitSizeOf(endBitPosition);
        }
        if (isParkingPositionRelationMetadataUsed())
        {
            endBitPosition += parkingPositionRelationMetadata_.bitSizeOf(endBitPosition);
        }
        if (isParkingPoiRelationMetadataUsed())
        {
            endBitPosition += parkingPoiRelationMetadata_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            endBitPosition += parkingRoadSurfaceRelationMetadata_.bitSizeOf(zserioContext.getParkingRoadSurfaceRelationMetadata(), endBitPosition);
        }
        if (isParkingRangeRelationMetadataUsed())
        {
            endBitPosition += parkingRangeRelationMetadata_.bitSizeOf(zserioContext.getParkingRangeRelationMetadata(), endBitPosition);
        }
        if (isParkingPositionRelationMetadataUsed())
        {
            endBitPosition += parkingPositionRelationMetadata_.bitSizeOf(zserioContext.getParkingPositionRelationMetadata(), endBitPosition);
        }
        if (isParkingPoiRelationMetadataUsed())
        {
            endBitPosition += parkingPoiRelationMetadata_.bitSizeOf(zserioContext.getParkingPoiRelationMetadata(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.venue.metadata.ParkingFacilityRelationLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.venue.metadata.ParkingFacilityRelationLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.venue.instantiations.ParkingRelationMetadata getParkingRoadSurfaceRelationMetadata()
    {
        return parkingRoadSurfaceRelationMetadata_;
    }

    public void setParkingRoadSurfaceRelationMetadata(nds.venue.instantiations.ParkingRelationMetadata parkingRoadSurfaceRelationMetadata_)
    {
        this.parkingRoadSurfaceRelationMetadata_ = parkingRoadSurfaceRelationMetadata_;
    }

    public boolean isParkingRoadSurfaceRelationMetadataUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS));
    }

    public boolean isParkingRoadSurfaceRelationMetadataSet()
    {
        return (parkingRoadSurfaceRelationMetadata_ != null);
    }

    public void resetParkingRoadSurfaceRelationMetadata()
    {
        this.parkingRoadSurfaceRelationMetadata_ = null;
    }

    public nds.venue.instantiations.ParkingRangeRelationMetadata getParkingRangeRelationMetadata()
    {
        return parkingRangeRelationMetadata_;
    }

    public void setParkingRangeRelationMetadata(nds.venue.instantiations.ParkingRangeRelationMetadata parkingRangeRelationMetadata_)
    {
        this.parkingRangeRelationMetadata_ = parkingRangeRelationMetadata_;
    }

    public boolean isParkingRangeRelationMetadataUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS));
    }

    public boolean isParkingRangeRelationMetadataSet()
    {
        return (parkingRangeRelationMetadata_ != null);
    }

    public void resetParkingRangeRelationMetadata()
    {
        this.parkingRangeRelationMetadata_ = null;
    }

    public nds.venue.instantiations.ParkingPositionRelationMetadata getParkingPositionRelationMetadata()
    {
        return parkingPositionRelationMetadata_;
    }

    public void setParkingPositionRelationMetadata(nds.venue.instantiations.ParkingPositionRelationMetadata parkingPositionRelationMetadata_)
    {
        this.parkingPositionRelationMetadata_ = parkingPositionRelationMetadata_;
    }

    public boolean isParkingPositionRelationMetadataUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS));
    }

    public boolean isParkingPositionRelationMetadataSet()
    {
        return (parkingPositionRelationMetadata_ != null);
    }

    public void resetParkingPositionRelationMetadata()
    {
        this.parkingPositionRelationMetadata_ = null;
    }

    public nds.venue.instantiations.ParkingRelationMetadata getParkingPoiRelationMetadata()
    {
        return parkingPoiRelationMetadata_;
    }

    public void setParkingPoiRelationMetadata(nds.venue.instantiations.ParkingRelationMetadata parkingPoiRelationMetadata_)
    {
        this.parkingPoiRelationMetadata_ = parkingPoiRelationMetadata_;
    }

    public boolean isParkingPoiRelationMetadataUsed()
    {
        return ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS));
    }

    public boolean isParkingPoiRelationMetadataSet()
    {
        return (parkingPoiRelationMetadata_ != null);
    }

    public void resetParkingPoiRelationMetadata()
    {
        this.parkingPoiRelationMetadata_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof ParkingFacilityRelationLayerMetadata)
        {
            final ParkingFacilityRelationLayerMetadata that = (ParkingFacilityRelationLayerMetadata)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isParkingRoadSurfaceRelationMetadataUsed()) ? !that.isParkingRoadSurfaceRelationMetadataUsed() :
                        ((parkingRoadSurfaceRelationMetadata_ == null) ? that.parkingRoadSurfaceRelationMetadata_ == null : parkingRoadSurfaceRelationMetadata_.equals(that.parkingRoadSurfaceRelationMetadata_))) &&
                    ((!isParkingRangeRelationMetadataUsed()) ? !that.isParkingRangeRelationMetadataUsed() :
                        ((parkingRangeRelationMetadata_ == null) ? that.parkingRangeRelationMetadata_ == null : parkingRangeRelationMetadata_.equals(that.parkingRangeRelationMetadata_))) &&
                    ((!isParkingPositionRelationMetadataUsed()) ? !that.isParkingPositionRelationMetadataUsed() :
                        ((parkingPositionRelationMetadata_ == null) ? that.parkingPositionRelationMetadata_ == null : parkingPositionRelationMetadata_.equals(that.parkingPositionRelationMetadata_))) &&
                    ((!isParkingPoiRelationMetadataUsed()) ? !that.isParkingPoiRelationMetadataUsed() :
                        ((parkingPoiRelationMetadata_ == null) ? that.parkingPoiRelationMetadata_ == null : parkingPoiRelationMetadata_.equals(that.parkingPoiRelationMetadata_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isParkingRoadSurfaceRelationMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingRoadSurfaceRelationMetadata_);
        if (isParkingRangeRelationMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingRangeRelationMetadata_);
        if (isParkingPositionRelationMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingPositionRelationMetadata_);
        if (isParkingPoiRelationMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingPoiRelationMetadata_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.venue.metadata.ParkingFacilityRelationLayerContent(in);

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS))
        {
            parkingRoadSurfaceRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata(in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS))
        {
            parkingRangeRelationMetadata_ = new nds.venue.instantiations.ParkingRangeRelationMetadata(in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS))
        {
            parkingPositionRelationMetadata_ = new nds.venue.instantiations.ParkingPositionRelationMetadata(in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS))
        {
            parkingPoiRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.venue.metadata.ParkingFacilityRelationLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.ROAD_SURFACE_MAPS))
        {
            parkingRoadSurfaceRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata(zserioContext.getParkingRoadSurfaceRelationMetadata(), in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_RANGE_MAPS))
        {
            parkingRangeRelationMetadata_ = new nds.venue.instantiations.ParkingRangeRelationMetadata(zserioContext.getParkingRangeRelationMetadata(), in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.LANE_POSITION_MAPS))
        {
            parkingPositionRelationMetadata_ = new nds.venue.instantiations.ParkingPositionRelationMetadata(zserioContext.getParkingPositionRelationMetadata(), in);
        }

        if ((getContent().and(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS)).equals(nds.venue.metadata.ParkingFacilityRelationLayerContent.Values.POI_MAPS))
        {
            parkingPoiRelationMetadata_ = new nds.venue.instantiations.ParkingRelationMetadata(zserioContext.getParkingPoiRelationMetadata(), in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            endBitPosition = parkingRoadSurfaceRelationMetadata_.initializeOffsets(endBitPosition);
        }
        if (isParkingRangeRelationMetadataUsed())
        {
            endBitPosition = parkingRangeRelationMetadata_.initializeOffsets(endBitPosition);
        }
        if (isParkingPositionRelationMetadataUsed())
        {
            endBitPosition = parkingPositionRelationMetadata_.initializeOffsets(endBitPosition);
        }
        if (isParkingPoiRelationMetadataUsed())
        {
            endBitPosition = parkingPoiRelationMetadata_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            endBitPosition = parkingRoadSurfaceRelationMetadata_.initializeOffsets(zserioContext.getParkingRoadSurfaceRelationMetadata(), endBitPosition);
        }
        if (isParkingRangeRelationMetadataUsed())
        {
            endBitPosition = parkingRangeRelationMetadata_.initializeOffsets(zserioContext.getParkingRangeRelationMetadata(), endBitPosition);
        }
        if (isParkingPositionRelationMetadataUsed())
        {
            endBitPosition = parkingPositionRelationMetadata_.initializeOffsets(zserioContext.getParkingPositionRelationMetadata(), endBitPosition);
        }
        if (isParkingPoiRelationMetadataUsed())
        {
            endBitPosition = parkingPoiRelationMetadata_.initializeOffsets(zserioContext.getParkingPoiRelationMetadata(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            parkingRoadSurfaceRelationMetadata_.write(out);
        }

        if (isParkingRangeRelationMetadataUsed())
        {
            parkingRangeRelationMetadata_.write(out);
        }

        if (isParkingPositionRelationMetadataUsed())
        {
            parkingPositionRelationMetadata_.write(out);
        }

        if (isParkingPoiRelationMetadataUsed())
        {
            parkingPoiRelationMetadata_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isParkingRoadSurfaceRelationMetadataUsed())
        {
            parkingRoadSurfaceRelationMetadata_.write(zserioContext.getParkingRoadSurfaceRelationMetadata(), out);
        }

        if (isParkingRangeRelationMetadataUsed())
        {
            parkingRangeRelationMetadata_.write(zserioContext.getParkingRangeRelationMetadata(), out);
        }

        if (isParkingPositionRelationMetadataUsed())
        {
            parkingPositionRelationMetadata_.write(zserioContext.getParkingPositionRelationMetadata(), out);
        }

        if (isParkingPoiRelationMetadataUsed())
        {
            parkingPoiRelationMetadata_.write(zserioContext.getParkingPoiRelationMetadata(), out);
        }
    }

    private nds.venue.metadata.ParkingFacilityRelationLayerContent content_;
    private nds.venue.instantiations.ParkingRelationMetadata parkingRoadSurfaceRelationMetadata_;
    private nds.venue.instantiations.ParkingRangeRelationMetadata parkingRangeRelationMetadata_;
    private nds.venue.instantiations.ParkingPositionRelationMetadata parkingPositionRelationMetadata_;
    private nds.venue.instantiations.ParkingRelationMetadata parkingPoiRelationMetadata_;
}
