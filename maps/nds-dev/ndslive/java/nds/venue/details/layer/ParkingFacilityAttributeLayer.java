/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.venue.details.layer;

public class ParkingFacilityAttributeLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            parkingFacilityAttributeMaps_ = new nds.venue.details.instantiations.ParkingFacilityAttributeMapList.ZserioPackingContext();
            parkingFacilityAttributeSets_ = new nds.venue.details.instantiations.ParkingFacilityAttributeSetList.ZserioPackingContext();
            parkingLevelAttributeMaps_ = new nds.venue.details.instantiations.ParkingLevelAttributeMapList.ZserioPackingContext();
            parkingLevelAttributeSets_ = new nds.venue.details.instantiations.ParkingLevelAttributeSetList.ZserioPackingContext();
            parkingSectionAttributeMaps_ = new nds.venue.details.instantiations.ParkingSectionAttributeMapList.ZserioPackingContext();
            parkingSectionAttributeSets_ = new nds.venue.details.instantiations.ParkingSectionAttributeSetList.ZserioPackingContext();
            parkingRowAttributeMaps_ = new nds.venue.details.instantiations.ParkingRowAttributeMapList.ZserioPackingContext();
            parkingRowAttributeSets_ = new nds.venue.details.instantiations.ParkingRowAttributeSetList.ZserioPackingContext();
            parkingSpotAttributeMaps_ = new nds.venue.details.instantiations.ParkingSpotAttributeMapList.ZserioPackingContext();
            parkingSpotAttributeSets_ = new nds.venue.details.instantiations.ParkingSpotAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.venue.details.instantiations.ParkingFacilityAttributeMapList.ZserioPackingContext getParkingFacilityAttributeMaps()
        {
            return parkingFacilityAttributeMaps_;
        }

        public nds.venue.details.instantiations.ParkingFacilityAttributeSetList.ZserioPackingContext getParkingFacilityAttributeSets()
        {
            return parkingFacilityAttributeSets_;
        }

        public nds.venue.details.instantiations.ParkingLevelAttributeMapList.ZserioPackingContext getParkingLevelAttributeMaps()
        {
            return parkingLevelAttributeMaps_;
        }

        public nds.venue.details.instantiations.ParkingLevelAttributeSetList.ZserioPackingContext getParkingLevelAttributeSets()
        {
            return parkingLevelAttributeSets_;
        }

        public nds.venue.details.instantiations.ParkingSectionAttributeMapList.ZserioPackingContext getParkingSectionAttributeMaps()
        {
            return parkingSectionAttributeMaps_;
        }

        public nds.venue.details.instantiations.ParkingSectionAttributeSetList.ZserioPackingContext getParkingSectionAttributeSets()
        {
            return parkingSectionAttributeSets_;
        }

        public nds.venue.details.instantiations.ParkingRowAttributeMapList.ZserioPackingContext getParkingRowAttributeMaps()
        {
            return parkingRowAttributeMaps_;
        }

        public nds.venue.details.instantiations.ParkingRowAttributeSetList.ZserioPackingContext getParkingRowAttributeSets()
        {
            return parkingRowAttributeSets_;
        }

        public nds.venue.details.instantiations.ParkingSpotAttributeMapList.ZserioPackingContext getParkingSpotAttributeMaps()
        {
            return parkingSpotAttributeMaps_;
        }

        public nds.venue.details.instantiations.ParkingSpotAttributeSetList.ZserioPackingContext getParkingSpotAttributeSets()
        {
            return parkingSpotAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.venue.details.instantiations.ParkingFacilityAttributeMapList.ZserioPackingContext parkingFacilityAttributeMaps_;
        private nds.venue.details.instantiations.ParkingFacilityAttributeSetList.ZserioPackingContext parkingFacilityAttributeSets_;
        private nds.venue.details.instantiations.ParkingLevelAttributeMapList.ZserioPackingContext parkingLevelAttributeMaps_;
        private nds.venue.details.instantiations.ParkingLevelAttributeSetList.ZserioPackingContext parkingLevelAttributeSets_;
        private nds.venue.details.instantiations.ParkingSectionAttributeMapList.ZserioPackingContext parkingSectionAttributeMaps_;
        private nds.venue.details.instantiations.ParkingSectionAttributeSetList.ZserioPackingContext parkingSectionAttributeSets_;
        private nds.venue.details.instantiations.ParkingRowAttributeMapList.ZserioPackingContext parkingRowAttributeMaps_;
        private nds.venue.details.instantiations.ParkingRowAttributeSetList.ZserioPackingContext parkingRowAttributeSets_;
        private nds.venue.details.instantiations.ParkingSpotAttributeMapList.ZserioPackingContext parkingSpotAttributeMaps_;
        private nds.venue.details.instantiations.ParkingSpotAttributeSetList.ZserioPackingContext parkingSpotAttributeSets_;
    };

    public ParkingFacilityAttributeLayer()
    {
    }

    public ParkingFacilityAttributeLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public ParkingFacilityAttributeLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public ParkingFacilityAttributeLayer(
            nds.venue.details.metadata.ParkingFacilityAttributeLayerContent content_,
            nds.venue.details.instantiations.ParkingFacilityAttributeMapList parkingFacilityAttributeMaps_,
            nds.venue.details.instantiations.ParkingFacilityAttributeSetList parkingFacilityAttributeSets_,
            nds.venue.details.instantiations.ParkingLevelAttributeMapList parkingLevelAttributeMaps_,
            nds.venue.details.instantiations.ParkingLevelAttributeSetList parkingLevelAttributeSets_,
            nds.venue.details.instantiations.ParkingSectionAttributeMapList parkingSectionAttributeMaps_,
            nds.venue.details.instantiations.ParkingSectionAttributeSetList parkingSectionAttributeSets_,
            nds.venue.details.instantiations.ParkingRowAttributeMapList parkingRowAttributeMaps_,
            nds.venue.details.instantiations.ParkingRowAttributeSetList parkingRowAttributeSets_,
            nds.venue.details.instantiations.ParkingSpotAttributeMapList parkingSpotAttributeMaps_,
            nds.venue.details.instantiations.ParkingSpotAttributeSetList parkingSpotAttributeSets_)
    {
        setContent(content_);
        setParkingFacilityAttributeMaps(parkingFacilityAttributeMaps_);
        setParkingFacilityAttributeSets(parkingFacilityAttributeSets_);
        setParkingLevelAttributeMaps(parkingLevelAttributeMaps_);
        setParkingLevelAttributeSets(parkingLevelAttributeSets_);
        setParkingSectionAttributeMaps(parkingSectionAttributeMaps_);
        setParkingSectionAttributeSets(parkingSectionAttributeSets_);
        setParkingRowAttributeMaps(parkingRowAttributeMaps_);
        setParkingRowAttributeSets(parkingRowAttributeSets_);
        setParkingSpotAttributeMaps(parkingSpotAttributeMaps_);
        setParkingSpotAttributeSets(parkingSpotAttributeSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isParkingFacilityAttributeMapsUsed())
        {
            parkingFacilityAttributeMaps_.initPackingContext(zserioContext.getParkingFacilityAttributeMaps());
        }
        if (isParkingFacilityAttributeSetsUsed())
        {
            parkingFacilityAttributeSets_.initPackingContext(zserioContext.getParkingFacilityAttributeSets());
        }
        if (isParkingLevelAttributeMapsUsed())
        {
            parkingLevelAttributeMaps_.initPackingContext(zserioContext.getParkingLevelAttributeMaps());
        }
        if (isParkingLevelAttributeSetsUsed())
        {
            parkingLevelAttributeSets_.initPackingContext(zserioContext.getParkingLevelAttributeSets());
        }
        if (isParkingSectionAttributeMapsUsed())
        {
            parkingSectionAttributeMaps_.initPackingContext(zserioContext.getParkingSectionAttributeMaps());
        }
        if (isParkingSectionAttributeSetsUsed())
        {
            parkingSectionAttributeSets_.initPackingContext(zserioContext.getParkingSectionAttributeSets());
        }
        if (isParkingRowAttributeMapsUsed())
        {
            parkingRowAttributeMaps_.initPackingContext(zserioContext.getParkingRowAttributeMaps());
        }
        if (isParkingRowAttributeSetsUsed())
        {
            parkingRowAttributeSets_.initPackingContext(zserioContext.getParkingRowAttributeSets());
        }
        if (isParkingSpotAttributeMapsUsed())
        {
            parkingSpotAttributeMaps_.initPackingContext(zserioContext.getParkingSpotAttributeMaps());
        }
        if (isParkingSpotAttributeSetsUsed())
        {
            parkingSpotAttributeSets_.initPackingContext(zserioContext.getParkingSpotAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingFacilityAttributeMapsUsed())
        {
            endBitPosition += parkingFacilityAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isParkingFacilityAttributeSetsUsed())
        {
            endBitPosition += parkingFacilityAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isParkingLevelAttributeMapsUsed())
        {
            endBitPosition += parkingLevelAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isParkingLevelAttributeSetsUsed())
        {
            endBitPosition += parkingLevelAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isParkingSectionAttributeMapsUsed())
        {
            endBitPosition += parkingSectionAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isParkingSectionAttributeSetsUsed())
        {
            endBitPosition += parkingSectionAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isParkingRowAttributeMapsUsed())
        {
            endBitPosition += parkingRowAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isParkingRowAttributeSetsUsed())
        {
            endBitPosition += parkingRowAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isParkingSpotAttributeMapsUsed())
        {
            endBitPosition += parkingSpotAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isParkingSpotAttributeSetsUsed())
        {
            endBitPosition += parkingSpotAttributeSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isParkingFacilityAttributeMapsUsed())
        {
            endBitPosition += parkingFacilityAttributeMaps_.bitSizeOf(zserioContext.getParkingFacilityAttributeMaps(), endBitPosition);
        }
        if (isParkingFacilityAttributeSetsUsed())
        {
            endBitPosition += parkingFacilityAttributeSets_.bitSizeOf(zserioContext.getParkingFacilityAttributeSets(), endBitPosition);
        }
        if (isParkingLevelAttributeMapsUsed())
        {
            endBitPosition += parkingLevelAttributeMaps_.bitSizeOf(zserioContext.getParkingLevelAttributeMaps(), endBitPosition);
        }
        if (isParkingLevelAttributeSetsUsed())
        {
            endBitPosition += parkingLevelAttributeSets_.bitSizeOf(zserioContext.getParkingLevelAttributeSets(), endBitPosition);
        }
        if (isParkingSectionAttributeMapsUsed())
        {
            endBitPosition += parkingSectionAttributeMaps_.bitSizeOf(zserioContext.getParkingSectionAttributeMaps(), endBitPosition);
        }
        if (isParkingSectionAttributeSetsUsed())
        {
            endBitPosition += parkingSectionAttributeSets_.bitSizeOf(zserioContext.getParkingSectionAttributeSets(), endBitPosition);
        }
        if (isParkingRowAttributeMapsUsed())
        {
            endBitPosition += parkingRowAttributeMaps_.bitSizeOf(zserioContext.getParkingRowAttributeMaps(), endBitPosition);
        }
        if (isParkingRowAttributeSetsUsed())
        {
            endBitPosition += parkingRowAttributeSets_.bitSizeOf(zserioContext.getParkingRowAttributeSets(), endBitPosition);
        }
        if (isParkingSpotAttributeMapsUsed())
        {
            endBitPosition += parkingSpotAttributeMaps_.bitSizeOf(zserioContext.getParkingSpotAttributeMaps(), endBitPosition);
        }
        if (isParkingSpotAttributeSetsUsed())
        {
            endBitPosition += parkingSpotAttributeSets_.bitSizeOf(zserioContext.getParkingSpotAttributeSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.venue.details.metadata.ParkingFacilityAttributeLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.venue.details.instantiations.ParkingFacilityAttributeMapList getParkingFacilityAttributeMaps()
    {
        return parkingFacilityAttributeMaps_;
    }

    public void setParkingFacilityAttributeMaps(nds.venue.details.instantiations.ParkingFacilityAttributeMapList parkingFacilityAttributeMaps_)
    {
        this.parkingFacilityAttributeMaps_ = parkingFacilityAttributeMaps_;
    }

    public boolean isParkingFacilityAttributeMapsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS));
    }

    public boolean isParkingFacilityAttributeMapsSet()
    {
        return (parkingFacilityAttributeMaps_ != null);
    }

    public void resetParkingFacilityAttributeMaps()
    {
        this.parkingFacilityAttributeMaps_ = null;
    }

    public nds.venue.details.instantiations.ParkingFacilityAttributeSetList getParkingFacilityAttributeSets()
    {
        return parkingFacilityAttributeSets_;
    }

    public void setParkingFacilityAttributeSets(nds.venue.details.instantiations.ParkingFacilityAttributeSetList parkingFacilityAttributeSets_)
    {
        this.parkingFacilityAttributeSets_ = parkingFacilityAttributeSets_;
    }

    public boolean isParkingFacilityAttributeSetsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS));
    }

    public boolean isParkingFacilityAttributeSetsSet()
    {
        return (parkingFacilityAttributeSets_ != null);
    }

    public void resetParkingFacilityAttributeSets()
    {
        this.parkingFacilityAttributeSets_ = null;
    }

    public nds.venue.details.instantiations.ParkingLevelAttributeMapList getParkingLevelAttributeMaps()
    {
        return parkingLevelAttributeMaps_;
    }

    public void setParkingLevelAttributeMaps(nds.venue.details.instantiations.ParkingLevelAttributeMapList parkingLevelAttributeMaps_)
    {
        this.parkingLevelAttributeMaps_ = parkingLevelAttributeMaps_;
    }

    public boolean isParkingLevelAttributeMapsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS));
    }

    public boolean isParkingLevelAttributeMapsSet()
    {
        return (parkingLevelAttributeMaps_ != null);
    }

    public void resetParkingLevelAttributeMaps()
    {
        this.parkingLevelAttributeMaps_ = null;
    }

    public nds.venue.details.instantiations.ParkingLevelAttributeSetList getParkingLevelAttributeSets()
    {
        return parkingLevelAttributeSets_;
    }

    public void setParkingLevelAttributeSets(nds.venue.details.instantiations.ParkingLevelAttributeSetList parkingLevelAttributeSets_)
    {
        this.parkingLevelAttributeSets_ = parkingLevelAttributeSets_;
    }

    public boolean isParkingLevelAttributeSetsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS));
    }

    public boolean isParkingLevelAttributeSetsSet()
    {
        return (parkingLevelAttributeSets_ != null);
    }

    public void resetParkingLevelAttributeSets()
    {
        this.parkingLevelAttributeSets_ = null;
    }

    public nds.venue.details.instantiations.ParkingSectionAttributeMapList getParkingSectionAttributeMaps()
    {
        return parkingSectionAttributeMaps_;
    }

    public void setParkingSectionAttributeMaps(nds.venue.details.instantiations.ParkingSectionAttributeMapList parkingSectionAttributeMaps_)
    {
        this.parkingSectionAttributeMaps_ = parkingSectionAttributeMaps_;
    }

    public boolean isParkingSectionAttributeMapsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS));
    }

    public boolean isParkingSectionAttributeMapsSet()
    {
        return (parkingSectionAttributeMaps_ != null);
    }

    public void resetParkingSectionAttributeMaps()
    {
        this.parkingSectionAttributeMaps_ = null;
    }

    public nds.venue.details.instantiations.ParkingSectionAttributeSetList getParkingSectionAttributeSets()
    {
        return parkingSectionAttributeSets_;
    }

    public void setParkingSectionAttributeSets(nds.venue.details.instantiations.ParkingSectionAttributeSetList parkingSectionAttributeSets_)
    {
        this.parkingSectionAttributeSets_ = parkingSectionAttributeSets_;
    }

    public boolean isParkingSectionAttributeSetsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS));
    }

    public boolean isParkingSectionAttributeSetsSet()
    {
        return (parkingSectionAttributeSets_ != null);
    }

    public void resetParkingSectionAttributeSets()
    {
        this.parkingSectionAttributeSets_ = null;
    }

    public nds.venue.details.instantiations.ParkingRowAttributeMapList getParkingRowAttributeMaps()
    {
        return parkingRowAttributeMaps_;
    }

    public void setParkingRowAttributeMaps(nds.venue.details.instantiations.ParkingRowAttributeMapList parkingRowAttributeMaps_)
    {
        this.parkingRowAttributeMaps_ = parkingRowAttributeMaps_;
    }

    public boolean isParkingRowAttributeMapsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS));
    }

    public boolean isParkingRowAttributeMapsSet()
    {
        return (parkingRowAttributeMaps_ != null);
    }

    public void resetParkingRowAttributeMaps()
    {
        this.parkingRowAttributeMaps_ = null;
    }

    public nds.venue.details.instantiations.ParkingRowAttributeSetList getParkingRowAttributeSets()
    {
        return parkingRowAttributeSets_;
    }

    public void setParkingRowAttributeSets(nds.venue.details.instantiations.ParkingRowAttributeSetList parkingRowAttributeSets_)
    {
        this.parkingRowAttributeSets_ = parkingRowAttributeSets_;
    }

    public boolean isParkingRowAttributeSetsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS));
    }

    public boolean isParkingRowAttributeSetsSet()
    {
        return (parkingRowAttributeSets_ != null);
    }

    public void resetParkingRowAttributeSets()
    {
        this.parkingRowAttributeSets_ = null;
    }

    public nds.venue.details.instantiations.ParkingSpotAttributeMapList getParkingSpotAttributeMaps()
    {
        return parkingSpotAttributeMaps_;
    }

    public void setParkingSpotAttributeMaps(nds.venue.details.instantiations.ParkingSpotAttributeMapList parkingSpotAttributeMaps_)
    {
        this.parkingSpotAttributeMaps_ = parkingSpotAttributeMaps_;
    }

    public boolean isParkingSpotAttributeMapsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS));
    }

    public boolean isParkingSpotAttributeMapsSet()
    {
        return (parkingSpotAttributeMaps_ != null);
    }

    public void resetParkingSpotAttributeMaps()
    {
        this.parkingSpotAttributeMaps_ = null;
    }

    public nds.venue.details.instantiations.ParkingSpotAttributeSetList getParkingSpotAttributeSets()
    {
        return parkingSpotAttributeSets_;
    }

    public void setParkingSpotAttributeSets(nds.venue.details.instantiations.ParkingSpotAttributeSetList parkingSpotAttributeSets_)
    {
        this.parkingSpotAttributeSets_ = parkingSpotAttributeSets_;
    }

    public boolean isParkingSpotAttributeSetsUsed()
    {
        return ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS));
    }

    public boolean isParkingSpotAttributeSetsSet()
    {
        return (parkingSpotAttributeSets_ != null);
    }

    public void resetParkingSpotAttributeSets()
    {
        this.parkingSpotAttributeSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof ParkingFacilityAttributeLayer)
        {
            final ParkingFacilityAttributeLayer that = (ParkingFacilityAttributeLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isParkingFacilityAttributeMapsUsed()) ? !that.isParkingFacilityAttributeMapsUsed() :
                        ((parkingFacilityAttributeMaps_ == null) ? that.parkingFacilityAttributeMaps_ == null : parkingFacilityAttributeMaps_.equals(that.parkingFacilityAttributeMaps_))) &&
                    ((!isParkingFacilityAttributeSetsUsed()) ? !that.isParkingFacilityAttributeSetsUsed() :
                        ((parkingFacilityAttributeSets_ == null) ? that.parkingFacilityAttributeSets_ == null : parkingFacilityAttributeSets_.equals(that.parkingFacilityAttributeSets_))) &&
                    ((!isParkingLevelAttributeMapsUsed()) ? !that.isParkingLevelAttributeMapsUsed() :
                        ((parkingLevelAttributeMaps_ == null) ? that.parkingLevelAttributeMaps_ == null : parkingLevelAttributeMaps_.equals(that.parkingLevelAttributeMaps_))) &&
                    ((!isParkingLevelAttributeSetsUsed()) ? !that.isParkingLevelAttributeSetsUsed() :
                        ((parkingLevelAttributeSets_ == null) ? that.parkingLevelAttributeSets_ == null : parkingLevelAttributeSets_.equals(that.parkingLevelAttributeSets_))) &&
                    ((!isParkingSectionAttributeMapsUsed()) ? !that.isParkingSectionAttributeMapsUsed() :
                        ((parkingSectionAttributeMaps_ == null) ? that.parkingSectionAttributeMaps_ == null : parkingSectionAttributeMaps_.equals(that.parkingSectionAttributeMaps_))) &&
                    ((!isParkingSectionAttributeSetsUsed()) ? !that.isParkingSectionAttributeSetsUsed() :
                        ((parkingSectionAttributeSets_ == null) ? that.parkingSectionAttributeSets_ == null : parkingSectionAttributeSets_.equals(that.parkingSectionAttributeSets_))) &&
                    ((!isParkingRowAttributeMapsUsed()) ? !that.isParkingRowAttributeMapsUsed() :
                        ((parkingRowAttributeMaps_ == null) ? that.parkingRowAttributeMaps_ == null : parkingRowAttributeMaps_.equals(that.parkingRowAttributeMaps_))) &&
                    ((!isParkingRowAttributeSetsUsed()) ? !that.isParkingRowAttributeSetsUsed() :
                        ((parkingRowAttributeSets_ == null) ? that.parkingRowAttributeSets_ == null : parkingRowAttributeSets_.equals(that.parkingRowAttributeSets_))) &&
                    ((!isParkingSpotAttributeMapsUsed()) ? !that.isParkingSpotAttributeMapsUsed() :
                        ((parkingSpotAttributeMaps_ == null) ? that.parkingSpotAttributeMaps_ == null : parkingSpotAttributeMaps_.equals(that.parkingSpotAttributeMaps_))) &&
                    ((!isParkingSpotAttributeSetsUsed()) ? !that.isParkingSpotAttributeSetsUsed() :
                        ((parkingSpotAttributeSets_ == null) ? that.parkingSpotAttributeSets_ == null : parkingSpotAttributeSets_.equals(that.parkingSpotAttributeSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isParkingFacilityAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingFacilityAttributeMaps_);
        if (isParkingFacilityAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingFacilityAttributeSets_);
        if (isParkingLevelAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingLevelAttributeMaps_);
        if (isParkingLevelAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingLevelAttributeSets_);
        if (isParkingSectionAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingSectionAttributeMaps_);
        if (isParkingSectionAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingSectionAttributeSets_);
        if (isParkingRowAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingRowAttributeMaps_);
        if (isParkingRowAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingRowAttributeSets_);
        if (isParkingSpotAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingSpotAttributeMaps_);
        if (isParkingSpotAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, parkingSpotAttributeSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.venue.details.metadata.ParkingFacilityAttributeLayerContent(in);

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS))
        {
            parkingFacilityAttributeMaps_ = new nds.venue.details.instantiations.ParkingFacilityAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS))
        {
            parkingFacilityAttributeSets_ = new nds.venue.details.instantiations.ParkingFacilityAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS))
        {
            parkingLevelAttributeMaps_ = new nds.venue.details.instantiations.ParkingLevelAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS))
        {
            parkingLevelAttributeSets_ = new nds.venue.details.instantiations.ParkingLevelAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS))
        {
            parkingSectionAttributeMaps_ = new nds.venue.details.instantiations.ParkingSectionAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS))
        {
            parkingSectionAttributeSets_ = new nds.venue.details.instantiations.ParkingSectionAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS))
        {
            parkingRowAttributeMaps_ = new nds.venue.details.instantiations.ParkingRowAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS))
        {
            parkingRowAttributeSets_ = new nds.venue.details.instantiations.ParkingRowAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS))
        {
            parkingSpotAttributeMaps_ = new nds.venue.details.instantiations.ParkingSpotAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS))
        {
            parkingSpotAttributeSets_ = new nds.venue.details.instantiations.ParkingSpotAttributeSetList(in, (byte)(0));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.venue.details.metadata.ParkingFacilityAttributeLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_MAPS))
        {
            parkingFacilityAttributeMaps_ = new nds.venue.details.instantiations.ParkingFacilityAttributeMapList(zserioContext.getParkingFacilityAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_FACILITY_SETS))
        {
            parkingFacilityAttributeSets_ = new nds.venue.details.instantiations.ParkingFacilityAttributeSetList(zserioContext.getParkingFacilityAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_MAPS))
        {
            parkingLevelAttributeMaps_ = new nds.venue.details.instantiations.ParkingLevelAttributeMapList(zserioContext.getParkingLevelAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_LEVEL_SETS))
        {
            parkingLevelAttributeSets_ = new nds.venue.details.instantiations.ParkingLevelAttributeSetList(zserioContext.getParkingLevelAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_MAPS))
        {
            parkingSectionAttributeMaps_ = new nds.venue.details.instantiations.ParkingSectionAttributeMapList(zserioContext.getParkingSectionAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SECTION_SETS))
        {
            parkingSectionAttributeSets_ = new nds.venue.details.instantiations.ParkingSectionAttributeSetList(zserioContext.getParkingSectionAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_MAPS))
        {
            parkingRowAttributeMaps_ = new nds.venue.details.instantiations.ParkingRowAttributeMapList(zserioContext.getParkingRowAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_ROW_SETS))
        {
            parkingRowAttributeSets_ = new nds.venue.details.instantiations.ParkingRowAttributeSetList(zserioContext.getParkingRowAttributeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_MAPS))
        {
            parkingSpotAttributeMaps_ = new nds.venue.details.instantiations.ParkingSpotAttributeMapList(zserioContext.getParkingSpotAttributeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS)).equals(nds.venue.details.metadata.ParkingFacilityAttributeLayerContent.Values.PARKING_SPOT_SETS))
        {
            parkingSpotAttributeSets_ = new nds.venue.details.instantiations.ParkingSpotAttributeSetList(zserioContext.getParkingSpotAttributeSets(), in, (byte)(0));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isParkingFacilityAttributeMapsUsed())
        {
            endBitPosition = parkingFacilityAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isParkingFacilityAttributeSetsUsed())
        {
            endBitPosition = parkingFacilityAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isParkingLevelAttributeMapsUsed())
        {
            endBitPosition = parkingLevelAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isParkingLevelAttributeSetsUsed())
        {
            endBitPosition = parkingLevelAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isParkingSectionAttributeMapsUsed())
        {
            endBitPosition = parkingSectionAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isParkingSectionAttributeSetsUsed())
        {
            endBitPosition = parkingSectionAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isParkingRowAttributeMapsUsed())
        {
            endBitPosition = parkingRowAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isParkingRowAttributeSetsUsed())
        {
            endBitPosition = parkingRowAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isParkingSpotAttributeMapsUsed())
        {
            endBitPosition = parkingSpotAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isParkingSpotAttributeSetsUsed())
        {
            endBitPosition = parkingSpotAttributeSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isParkingFacilityAttributeMapsUsed())
        {
            endBitPosition = parkingFacilityAttributeMaps_.initializeOffsets(zserioContext.getParkingFacilityAttributeMaps(), endBitPosition);
        }
        if (isParkingFacilityAttributeSetsUsed())
        {
            endBitPosition = parkingFacilityAttributeSets_.initializeOffsets(zserioContext.getParkingFacilityAttributeSets(), endBitPosition);
        }
        if (isParkingLevelAttributeMapsUsed())
        {
            endBitPosition = parkingLevelAttributeMaps_.initializeOffsets(zserioContext.getParkingLevelAttributeMaps(), endBitPosition);
        }
        if (isParkingLevelAttributeSetsUsed())
        {
            endBitPosition = parkingLevelAttributeSets_.initializeOffsets(zserioContext.getParkingLevelAttributeSets(), endBitPosition);
        }
        if (isParkingSectionAttributeMapsUsed())
        {
            endBitPosition = parkingSectionAttributeMaps_.initializeOffsets(zserioContext.getParkingSectionAttributeMaps(), endBitPosition);
        }
        if (isParkingSectionAttributeSetsUsed())
        {
            endBitPosition = parkingSectionAttributeSets_.initializeOffsets(zserioContext.getParkingSectionAttributeSets(), endBitPosition);
        }
        if (isParkingRowAttributeMapsUsed())
        {
            endBitPosition = parkingRowAttributeMaps_.initializeOffsets(zserioContext.getParkingRowAttributeMaps(), endBitPosition);
        }
        if (isParkingRowAttributeSetsUsed())
        {
            endBitPosition = parkingRowAttributeSets_.initializeOffsets(zserioContext.getParkingRowAttributeSets(), endBitPosition);
        }
        if (isParkingSpotAttributeMapsUsed())
        {
            endBitPosition = parkingSpotAttributeMaps_.initializeOffsets(zserioContext.getParkingSpotAttributeMaps(), endBitPosition);
        }
        if (isParkingSpotAttributeSetsUsed())
        {
            endBitPosition = parkingSpotAttributeSets_.initializeOffsets(zserioContext.getParkingSpotAttributeSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isParkingFacilityAttributeMapsUsed())
        {
            // check parameters
            if (parkingFacilityAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeMaps: " +
                        parkingFacilityAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingFacilityAttributeMaps_.write(out);
        }

        if (isParkingFacilityAttributeSetsUsed())
        {
            // check parameters
            if (parkingFacilityAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingFacilityAttributeSets: " +
                        parkingFacilityAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingFacilityAttributeSets_.write(out);
        }

        if (isParkingLevelAttributeMapsUsed())
        {
            // check parameters
            if (parkingLevelAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeMaps: " +
                        parkingLevelAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingLevelAttributeMaps_.write(out);
        }

        if (isParkingLevelAttributeSetsUsed())
        {
            // check parameters
            if (parkingLevelAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingLevelAttributeSets: " +
                        parkingLevelAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingLevelAttributeSets_.write(out);
        }

        if (isParkingSectionAttributeMapsUsed())
        {
            // check parameters
            if (parkingSectionAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeMaps: " +
                        parkingSectionAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingSectionAttributeMaps_.write(out);
        }

        if (isParkingSectionAttributeSetsUsed())
        {
            // check parameters
            if (parkingSectionAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSectionAttributeSets: " +
                        parkingSectionAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingSectionAttributeSets_.write(out);
        }

        if (isParkingRowAttributeMapsUsed())
        {
            // check parameters
            if (parkingRowAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeMaps: " +
                        parkingRowAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingRowAttributeMaps_.write(out);
        }

        if (isParkingRowAttributeSetsUsed())
        {
            // check parameters
            if (parkingRowAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingRowAttributeSets: " +
                        parkingRowAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingRowAttributeSets_.write(out);
        }

        if (isParkingSpotAttributeMapsUsed())
        {
            // check parameters
            if (parkingSpotAttributeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeMaps: " +
                        parkingSpotAttributeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingSpotAttributeMaps_.write(out);
        }

        if (isParkingSpotAttributeSetsUsed())
        {
            // check parameters
            if (parkingSpotAttributeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field ParkingFacilityAttributeLayer.parkingSpotAttributeSets: " +
                        parkingSpotAttributeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            parkingSpotAttributeSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isParkingFacilityAttributeMapsUsed())
        {
            parkingFacilityAttributeMaps_.write(zserioContext.getParkingFacilityAttributeMaps(), out);
        }

        if (isParkingFacilityAttributeSetsUsed())
        {
            parkingFacilityAttributeSets_.write(zserioContext.getParkingFacilityAttributeSets(), out);
        }

        if (isParkingLevelAttributeMapsUsed())
        {
            parkingLevelAttributeMaps_.write(zserioContext.getParkingLevelAttributeMaps(), out);
        }

        if (isParkingLevelAttributeSetsUsed())
        {
            parkingLevelAttributeSets_.write(zserioContext.getParkingLevelAttributeSets(), out);
        }

        if (isParkingSectionAttributeMapsUsed())
        {
            parkingSectionAttributeMaps_.write(zserioContext.getParkingSectionAttributeMaps(), out);
        }

        if (isParkingSectionAttributeSetsUsed())
        {
            parkingSectionAttributeSets_.write(zserioContext.getParkingSectionAttributeSets(), out);
        }

        if (isParkingRowAttributeMapsUsed())
        {
            parkingRowAttributeMaps_.write(zserioContext.getParkingRowAttributeMaps(), out);
        }

        if (isParkingRowAttributeSetsUsed())
        {
            parkingRowAttributeSets_.write(zserioContext.getParkingRowAttributeSets(), out);
        }

        if (isParkingSpotAttributeMapsUsed())
        {
            parkingSpotAttributeMaps_.write(zserioContext.getParkingSpotAttributeMaps(), out);
        }

        if (isParkingSpotAttributeSetsUsed())
        {
            parkingSpotAttributeSets_.write(zserioContext.getParkingSpotAttributeSets(), out);
        }
    }

    private nds.venue.details.metadata.ParkingFacilityAttributeLayerContent content_;
    private nds.venue.details.instantiations.ParkingFacilityAttributeMapList parkingFacilityAttributeMaps_;
    private nds.venue.details.instantiations.ParkingFacilityAttributeSetList parkingFacilityAttributeSets_;
    private nds.venue.details.instantiations.ParkingLevelAttributeMapList parkingLevelAttributeMaps_;
    private nds.venue.details.instantiations.ParkingLevelAttributeSetList parkingLevelAttributeSets_;
    private nds.venue.details.instantiations.ParkingSectionAttributeMapList parkingSectionAttributeMaps_;
    private nds.venue.details.instantiations.ParkingSectionAttributeSetList parkingSectionAttributeSets_;
    private nds.venue.details.instantiations.ParkingRowAttributeMapList parkingRowAttributeMaps_;
    private nds.venue.details.instantiations.ParkingRowAttributeSetList parkingRowAttributeSets_;
    private nds.venue.details.instantiations.ParkingSpotAttributeMapList parkingSpotAttributeMaps_;
    private nds.venue.details.instantiations.ParkingSpotAttributeSetList parkingSpotAttributeSets_;
}
