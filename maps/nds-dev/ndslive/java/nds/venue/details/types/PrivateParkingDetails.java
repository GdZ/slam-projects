/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.venue.details.types;

public class PrivateParkingDetails implements zserio.runtime.io.Writer, zserio.runtime.SizeOf
{
    public PrivateParkingDetails()
    {
    }

    public PrivateParkingDetails(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public PrivateParkingDetails(
            java.lang.String hint_)
    {
        setHint(hint_);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(hint_);

        return (int)(endBitPosition - bitPosition);
    }

    public java.lang.String getHint()
    {
        return hint_;
    }

    public void setHint(java.lang.String hint_)
    {
        this.hint_ = hint_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PrivateParkingDetails)
        {
            final PrivateParkingDetails that = (PrivateParkingDetails)obj;

            return
                    ((hint_ == null) ? that.hint_ == null : hint_.equals(that.hint_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, hint_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        hint_ = in.readString();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(hint_);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeString(hint_);
    }

    private java.lang.String hint_;
}
