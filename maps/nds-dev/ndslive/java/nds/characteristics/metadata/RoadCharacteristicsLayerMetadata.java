/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.characteristics.metadata;

public class RoadCharacteristicsLayerMetadata implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            roadRangeAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata.ZserioPackingContext();
            roadPositionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata.ZserioPackingContext();
            roadLocationProviderDetails_ = new nds.characteristics.metadata.RoadLocationProviderDetails.ZserioPackingContext();
            transitionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsTransitionAttributeMetadata.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata.ZserioPackingContext getRoadRangeAttributeMetadata()
        {
            return roadRangeAttributeMetadata_;
        }

        public nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata.ZserioPackingContext getRoadPositionAttributeMetadata()
        {
            return roadPositionAttributeMetadata_;
        }

        public nds.characteristics.metadata.RoadLocationProviderDetails.ZserioPackingContext getRoadLocationProviderDetails()
        {
            return roadLocationProviderDetails_;
        }

        public nds.characteristics.instantiations.CharacsTransitionAttributeMetadata.ZserioPackingContext getTransitionAttributeMetadata()
        {
            return transitionAttributeMetadata_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata.ZserioPackingContext roadRangeAttributeMetadata_;
        private nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata.ZserioPackingContext roadPositionAttributeMetadata_;
        private nds.characteristics.metadata.RoadLocationProviderDetails.ZserioPackingContext roadLocationProviderDetails_;
        private nds.characteristics.instantiations.CharacsTransitionAttributeMetadata.ZserioPackingContext transitionAttributeMetadata_;
    };

    public RoadCharacteristicsLayerMetadata()
    {
    }

    public RoadCharacteristicsLayerMetadata(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadCharacteristicsLayerMetadata(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadCharacteristicsLayerMetadata(
            nds.characteristics.metadata.RoadCharacsLayerContent content_,
            nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata roadRangeAttributeMetadata_,
            nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata roadPositionAttributeMetadata_,
            nds.core.types.RoadType[] coveredRoadTypes_,
            nds.characteristics.metadata.RoadLocationProviderDetails roadLocationProviderDetails_,
            nds.characteristics.instantiations.CharacsTransitionAttributeMetadata transitionAttributeMetadata_)
    {
        setContent(content_);
        setRoadRangeAttributeMetadata(roadRangeAttributeMetadata_);
        setRoadPositionAttributeMetadata(roadPositionAttributeMetadata_);
        setCoveredRoadTypes(coveredRoadTypes_);
        setRoadLocationProviderDetails(roadLocationProviderDetails_);
        setTransitionAttributeMetadata(transitionAttributeMetadata_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isRoadRangeAttributeMetadataUsed())
        {
            roadRangeAttributeMetadata_.initPackingContext(zserioContext.getRoadRangeAttributeMetadata());
        }
        if (isRoadPositionAttributeMetadataUsed())
        {
            roadPositionAttributeMetadata_.initPackingContext(zserioContext.getRoadPositionAttributeMetadata());
        }
        if (isRoadLocationProviderDetailsUsed())
        {
            roadLocationProviderDetails_.initPackingContext(zserioContext.getRoadLocationProviderDetails());
        }
        if (isTransitionAttributeMetadataUsed())
        {
            transitionAttributeMetadata_.initPackingContext(zserioContext.getTransitionAttributeMetadata());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isRoadRangeAttributeMetadataUsed())
        {
            endBitPosition += roadRangeAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        if (isRoadPositionAttributeMetadataUsed())
        {
            endBitPosition += roadPositionAttributeMetadata_.bitSizeOf(endBitPosition);
        }
        endBitPosition += coveredRoadTypes_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isRoadLocationProviderDetailsUsed())
        {
            endBitPosition += roadLocationProviderDetails_.bitSizeOf(endBitPosition);
        }
        if (isTransitionAttributeMetadataUsed())
        {
            endBitPosition += transitionAttributeMetadata_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isRoadRangeAttributeMetadataUsed())
        {
            endBitPosition += roadRangeAttributeMetadata_.bitSizeOf(zserioContext.getRoadRangeAttributeMetadata(), endBitPosition);
        }
        if (isRoadPositionAttributeMetadataUsed())
        {
            endBitPosition += roadPositionAttributeMetadata_.bitSizeOf(zserioContext.getRoadPositionAttributeMetadata(), endBitPosition);
        }
        endBitPosition += coveredRoadTypes_.bitSizeOfPacked(endBitPosition);
        endBitPosition += 1;
        if (isRoadLocationProviderDetailsUsed())
        {
            endBitPosition += roadLocationProviderDetails_.bitSizeOf(zserioContext.getRoadLocationProviderDetails(), endBitPosition);
        }
        if (isTransitionAttributeMetadataUsed())
        {
            endBitPosition += transitionAttributeMetadata_.bitSizeOf(zserioContext.getTransitionAttributeMetadata(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.characteristics.metadata.RoadCharacsLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.characteristics.metadata.RoadCharacsLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata getRoadRangeAttributeMetadata()
    {
        return roadRangeAttributeMetadata_;
    }

    public void setRoadRangeAttributeMetadata(nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata roadRangeAttributeMetadata_)
    {
        this.roadRangeAttributeMetadata_ = roadRangeAttributeMetadata_;
    }

    public boolean isRoadRangeAttributeMetadataUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS));
    }

    public boolean isRoadRangeAttributeMetadataSet()
    {
        return (roadRangeAttributeMetadata_ != null);
    }

    public void resetRoadRangeAttributeMetadata()
    {
        this.roadRangeAttributeMetadata_ = null;
    }

    public nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata getRoadPositionAttributeMetadata()
    {
        return roadPositionAttributeMetadata_;
    }

    public void setRoadPositionAttributeMetadata(nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata roadPositionAttributeMetadata_)
    {
        this.roadPositionAttributeMetadata_ = roadPositionAttributeMetadata_;
    }

    public boolean isRoadPositionAttributeMetadataUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS));
    }

    public boolean isRoadPositionAttributeMetadataSet()
    {
        return (roadPositionAttributeMetadata_ != null);
    }

    public void resetRoadPositionAttributeMetadata()
    {
        this.roadPositionAttributeMetadata_ = null;
    }

    public nds.core.types.RoadType[] getCoveredRoadTypes()
    {
        return (coveredRoadTypes_ == null) ? null : coveredRoadTypes_.getRawArray();
    }

    public void setCoveredRoadTypes(nds.core.types.RoadType[] coveredRoadTypes_)
    {
        this.coveredRoadTypes_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.types.RoadType.class, coveredRoadTypes_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadType>(new ZserioElementFactory_coveredRoadTypes()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    public nds.characteristics.metadata.RoadLocationProviderDetails getRoadLocationProviderDetails()
    {
        return roadLocationProviderDetails_;
    }

    public void setRoadLocationProviderDetails(nds.characteristics.metadata.RoadLocationProviderDetails roadLocationProviderDetails_)
    {
        this.roadLocationProviderDetails_ = roadLocationProviderDetails_;
    }

    public boolean isRoadLocationProviderDetailsUsed()
    {
        return isRoadLocationProviderDetailsSet();
    }

    public boolean isRoadLocationProviderDetailsSet()
    {
        return (roadLocationProviderDetails_ != null);
    }

    public void resetRoadLocationProviderDetails()
    {
        this.roadLocationProviderDetails_ = null;
    }

    public nds.characteristics.instantiations.CharacsTransitionAttributeMetadata getTransitionAttributeMetadata()
    {
        return transitionAttributeMetadata_;
    }

    public void setTransitionAttributeMetadata(nds.characteristics.instantiations.CharacsTransitionAttributeMetadata transitionAttributeMetadata_)
    {
        this.transitionAttributeMetadata_ = transitionAttributeMetadata_;
    }

    public boolean isTransitionAttributeMetadataUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS));
    }

    public boolean isTransitionAttributeMetadataSet()
    {
        return (transitionAttributeMetadata_ != null);
    }

    public void resetTransitionAttributeMetadata()
    {
        this.transitionAttributeMetadata_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadCharacteristicsLayerMetadata)
        {
            final RoadCharacteristicsLayerMetadata that = (RoadCharacteristicsLayerMetadata)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isRoadRangeAttributeMetadataUsed()) ? !that.isRoadRangeAttributeMetadataUsed() :
                        ((roadRangeAttributeMetadata_ == null) ? that.roadRangeAttributeMetadata_ == null : roadRangeAttributeMetadata_.equals(that.roadRangeAttributeMetadata_))) &&
                    ((!isRoadPositionAttributeMetadataUsed()) ? !that.isRoadPositionAttributeMetadataUsed() :
                        ((roadPositionAttributeMetadata_ == null) ? that.roadPositionAttributeMetadata_ == null : roadPositionAttributeMetadata_.equals(that.roadPositionAttributeMetadata_))) &&
                    ((coveredRoadTypes_ == null) ? that.coveredRoadTypes_ == null : coveredRoadTypes_.equals(that.coveredRoadTypes_)) &&
                    ((!isRoadLocationProviderDetailsUsed()) ? !that.isRoadLocationProviderDetailsUsed() :
                        ((roadLocationProviderDetails_ == null) ? that.roadLocationProviderDetails_ == null : roadLocationProviderDetails_.equals(that.roadLocationProviderDetails_))) &&
                    ((!isTransitionAttributeMetadataUsed()) ? !that.isTransitionAttributeMetadataUsed() :
                        ((transitionAttributeMetadata_ == null) ? that.transitionAttributeMetadata_ == null : transitionAttributeMetadata_.equals(that.transitionAttributeMetadata_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isRoadRangeAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadRangeAttributeMetadata_);
        if (isRoadPositionAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadPositionAttributeMetadata_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, coveredRoadTypes_);
        if (isRoadLocationProviderDetailsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadLocationProviderDetails_);
        if (isTransitionAttributeMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, transitionAttributeMetadata_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.characteristics.metadata.RoadCharacsLayerContent(in);

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS))
        {
            roadRangeAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata(in);
        }

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS))
        {
            roadPositionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata(in);
        }

        coveredRoadTypes_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.types.RoadType.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadType>(new ZserioElementFactory_coveredRoadTypes()),
                zserio.runtime.array.ArrayType.AUTO);
        coveredRoadTypes_.read(in);

        if (in.readBool())
        {
            roadLocationProviderDetails_ = new nds.characteristics.metadata.RoadLocationProviderDetails(in);
        }

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS))
        {
            transitionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsTransitionAttributeMetadata(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.characteristics.metadata.RoadCharacsLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_RANGE_SETS))
        {
            roadRangeAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata(zserioContext.getRoadRangeAttributeMetadata(), in);
        }

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.ROAD_POSITION_SETS))
        {
            roadPositionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata(zserioContext.getRoadPositionAttributeMetadata(), in);
        }

        coveredRoadTypes_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.types.RoadType.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadType>(new ZserioElementFactory_coveredRoadTypes()),
                zserio.runtime.array.ArrayType.AUTO);
        coveredRoadTypes_.readPacked(in);

        if (in.readBool())
        {
            roadLocationProviderDetails_ = new nds.characteristics.metadata.RoadLocationProviderDetails(zserioContext.getRoadLocationProviderDetails(), in);
        }

        if ((getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_MAPS) || (getContent().and(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS)).equals(nds.characteristics.metadata.RoadCharacsLayerContent.Values.TRANSITION_SETS))
        {
            transitionAttributeMetadata_ = new nds.characteristics.instantiations.CharacsTransitionAttributeMetadata(zserioContext.getTransitionAttributeMetadata(), in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isRoadRangeAttributeMetadataUsed())
        {
            endBitPosition = roadRangeAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        if (isRoadPositionAttributeMetadataUsed())
        {
            endBitPosition = roadPositionAttributeMetadata_.initializeOffsets(endBitPosition);
        }
        endBitPosition = coveredRoadTypes_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        if (isRoadLocationProviderDetailsUsed())
        {
            endBitPosition = roadLocationProviderDetails_.initializeOffsets(endBitPosition);
        }
        if (isTransitionAttributeMetadataUsed())
        {
            endBitPosition = transitionAttributeMetadata_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isRoadRangeAttributeMetadataUsed())
        {
            endBitPosition = roadRangeAttributeMetadata_.initializeOffsets(zserioContext.getRoadRangeAttributeMetadata(), endBitPosition);
        }
        if (isRoadPositionAttributeMetadataUsed())
        {
            endBitPosition = roadPositionAttributeMetadata_.initializeOffsets(zserioContext.getRoadPositionAttributeMetadata(), endBitPosition);
        }
        endBitPosition = coveredRoadTypes_.initializeOffsetsPacked(endBitPosition);
        endBitPosition += 1;
        if (isRoadLocationProviderDetailsUsed())
        {
            endBitPosition = roadLocationProviderDetails_.initializeOffsets(zserioContext.getRoadLocationProviderDetails(), endBitPosition);
        }
        if (isTransitionAttributeMetadataUsed())
        {
            endBitPosition = transitionAttributeMetadata_.initializeOffsets(zserioContext.getTransitionAttributeMetadata(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isRoadRangeAttributeMetadataUsed())
        {
            roadRangeAttributeMetadata_.write(out);
        }

        if (isRoadPositionAttributeMetadataUsed())
        {
            roadPositionAttributeMetadata_.write(out);
        }

        coveredRoadTypes_.write(out);

        if (isRoadLocationProviderDetailsUsed())
        {
            out.writeBool(true);
            roadLocationProviderDetails_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isTransitionAttributeMetadataUsed())
        {
            transitionAttributeMetadata_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isRoadRangeAttributeMetadataUsed())
        {
            roadRangeAttributeMetadata_.write(zserioContext.getRoadRangeAttributeMetadata(), out);
        }

        if (isRoadPositionAttributeMetadataUsed())
        {
            roadPositionAttributeMetadata_.write(zserioContext.getRoadPositionAttributeMetadata(), out);
        }

        coveredRoadTypes_.writePacked(out);

        if (isRoadLocationProviderDetailsUsed())
        {
            out.writeBool(true);
            roadLocationProviderDetails_.write(zserioContext.getRoadLocationProviderDetails(), out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isTransitionAttributeMetadataUsed())
        {
            transitionAttributeMetadata_.write(zserioContext.getTransitionAttributeMetadata(), out);
        }
    }

    private static final class ZserioElementFactory_coveredRoadTypes implements zserio.runtime.array.PackableElementFactory<nds.core.types.RoadType>
    {
        @Override
        public nds.core.types.RoadType create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.core.types.RoadType(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.core.types.RoadType.ZserioPackingContext();
        }

        @Override
        public nds.core.types.RoadType create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.core.types.RoadType(context, in);
        }
    }

    private nds.characteristics.metadata.RoadCharacsLayerContent content_;
    private nds.characteristics.instantiations.CharacsRoadRangeAttributeMetadata roadRangeAttributeMetadata_;
    private nds.characteristics.instantiations.CharacsRoadPositionAttributeMetadata roadPositionAttributeMetadata_;
    private zserio.runtime.array.Array coveredRoadTypes_;
    private nds.characteristics.metadata.RoadLocationProviderDetails roadLocationProviderDetails_;
    private nds.characteristics.instantiations.CharacsTransitionAttributeMetadata transitionAttributeMetadata_;
}
