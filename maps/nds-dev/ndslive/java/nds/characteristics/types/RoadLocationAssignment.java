/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.characteristics.types;

public class RoadLocationAssignment implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            locationId_ = new nds.core.location.RoadLocationId.ZserioPackingContext();
            startOnLocation_ = new zserio.runtime.array.DeltaContext();
            endOnLocation_ = new zserio.runtime.array.DeltaContext();
        }

        public nds.core.location.RoadLocationId.ZserioPackingContext getLocationId()
        {
            return locationId_;
        }

        public zserio.runtime.array.DeltaContext getStartOnLocation()
        {
            return startOnLocation_;
        }

        public zserio.runtime.array.DeltaContext getEndOnLocation()
        {
            return endOnLocation_;
        }

        private nds.core.location.RoadLocationId.ZserioPackingContext locationId_;
        private zserio.runtime.array.DeltaContext startOnLocation_;
        private zserio.runtime.array.DeltaContext endOnLocation_;
    };

    public RoadLocationAssignment()
    {
    }

    public RoadLocationAssignment(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadLocationAssignment(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadLocationAssignment(
            nds.core.location.RoadLocationId locationId_,
            boolean sameDirectionAsSource_,
            boolean completeLocation_,
            java.lang.Integer startOnLocation_,
            java.lang.Integer endOnLocation_)
    {
        setLocationId(locationId_);
        setSameDirectionAsSource(sameDirectionAsSource_);
        setCompleteLocation(completeLocation_);
        setStartOnLocation(startOnLocation_);
        setEndOnLocation(endOnLocation_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        locationId_.initPackingContext(zserioContext.getLocationId());
        if (isStartOnLocationUsed())
        {
            zserioContext.getStartOnLocation().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(startOnLocation_));
        }
        if (isEndOnLocationUsed())
        {
            zserioContext.getEndOnLocation().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(endOnLocation_));
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += locationId_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        if (isStartOnLocationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startOnLocation_);
        }
        if (isEndOnLocationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endOnLocation_);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += locationId_.bitSizeOf(zserioContext.getLocationId(), endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        if (isStartOnLocationUsed())
        {
            endBitPosition += zserioContext.getStartOnLocation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(startOnLocation_));
        }
        if (isEndOnLocationUsed())
        {
            endBitPosition += zserioContext.getEndOnLocation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(endOnLocation_));
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.location.RoadLocationId getLocationId()
    {
        return locationId_;
    }

    public void setLocationId(nds.core.location.RoadLocationId locationId_)
    {
        this.locationId_ = locationId_;
    }

    public boolean getSameDirectionAsSource()
    {
        return sameDirectionAsSource_;
    }

    public void setSameDirectionAsSource(boolean sameDirectionAsSource_)
    {
        this.sameDirectionAsSource_ = sameDirectionAsSource_;
    }

    public boolean getCompleteLocation()
    {
        return completeLocation_;
    }

    public void setCompleteLocation(boolean completeLocation_)
    {
        this.completeLocation_ = completeLocation_;
    }

    public java.lang.Integer getStartOnLocation()
    {
        return startOnLocation_;
    }

    public void setStartOnLocation(java.lang.Integer startOnLocation_)
    {
        this.startOnLocation_ = startOnLocation_;
    }

    public boolean isStartOnLocationUsed()
    {
        return (!getCompleteLocation());
    }

    public boolean isStartOnLocationSet()
    {
        return (startOnLocation_ != null);
    }

    public void resetStartOnLocation()
    {
        this.startOnLocation_ = null;
    }

    public java.lang.Integer getEndOnLocation()
    {
        return endOnLocation_;
    }

    public void setEndOnLocation(java.lang.Integer endOnLocation_)
    {
        this.endOnLocation_ = endOnLocation_;
    }

    public boolean isEndOnLocationUsed()
    {
        return (!getCompleteLocation());
    }

    public boolean isEndOnLocationSet()
    {
        return (endOnLocation_ != null);
    }

    public void resetEndOnLocation()
    {
        this.endOnLocation_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadLocationAssignment)
        {
            final RoadLocationAssignment that = (RoadLocationAssignment)obj;

            return
                    ((locationId_ == null) ? that.locationId_ == null : locationId_.equals(that.locationId_)) &&
                    sameDirectionAsSource_ == that.sameDirectionAsSource_ &&
                    completeLocation_ == that.completeLocation_ &&
                    ((!isStartOnLocationUsed()) ? !that.isStartOnLocationUsed() :
                        ((startOnLocation_ == null) ? that.startOnLocation_ == null : startOnLocation_.equals(that.startOnLocation_))) &&
                    ((!isEndOnLocationUsed()) ? !that.isEndOnLocationUsed() :
                        ((endOnLocation_ == null) ? that.endOnLocation_ == null : endOnLocation_.equals(that.endOnLocation_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, locationId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, sameDirectionAsSource_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, completeLocation_);
        if (isStartOnLocationUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, startOnLocation_);
        if (isEndOnLocationUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, endOnLocation_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        locationId_ = new nds.core.location.RoadLocationId(in);

        sameDirectionAsSource_ = in.readBool();

        completeLocation_ = in.readBool();

        if (!getCompleteLocation())
        {
            startOnLocation_ = in.readVarUInt32();
        }

        if (!getCompleteLocation())
        {
            endOnLocation_ = in.readVarUInt32();
        }

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        locationId_ = new nds.core.location.RoadLocationId(zserioContext.getLocationId(), in);

        sameDirectionAsSource_ = in.readBool();

        completeLocation_ = in.readBool();

        if (!getCompleteLocation())
        {
            startOnLocation_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getStartOnLocation().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
        }

        if (!getCompleteLocation())
        {
            endOnLocation_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                    zserioContext.getEndOnLocation().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
        }

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = locationId_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        if (isStartOnLocationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startOnLocation_);
        }
        if (isEndOnLocationUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endOnLocation_);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = locationId_.initializeOffsets(zserioContext.getLocationId(), endBitPosition);
        endBitPosition += 1;
        endBitPosition += 1;
        if (isStartOnLocationUsed())
        {
            endBitPosition += zserioContext.getStartOnLocation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(startOnLocation_));
        }
        if (isEndOnLocationUsed())
        {
            endBitPosition += zserioContext.getEndOnLocation().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.IntArrayElement(endOnLocation_));
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        locationId_.write(out);

        out.writeBool(sameDirectionAsSource_);

        out.writeBool(completeLocation_);

        if (isStartOnLocationUsed())
        {
            out.writeVarUInt32(startOnLocation_);
        }

        if (isEndOnLocationUsed())
        {
            out.writeVarUInt32(endOnLocation_);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        locationId_.write(zserioContext.getLocationId(), out);

        out.writeBool(sameDirectionAsSource_);

        out.writeBool(completeLocation_);

        if (isStartOnLocationUsed())
        {
            zserioContext.getStartOnLocation().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(startOnLocation_));
        }

        if (isEndOnLocationUsed())
        {
            zserioContext.getEndOnLocation().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.IntArrayElement(endOnLocation_));
        }
    }

    private void checkConstraints()
    {
        if (isEndOnLocationUsed() && !(getEndOnLocation() >= getStartOnLocation()))
            throw new zserio.runtime.ConstraintError("Constraint violated at RoadLocationAssignment.endOnLocation!");
    }

    private nds.core.location.RoadLocationId locationId_;
    private boolean sameDirectionAsSource_;
    private boolean completeLocation_;
    private java.lang.Integer startOnLocation_;
    private java.lang.Integer endOnLocation_;
}
