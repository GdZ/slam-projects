/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.characteristics.types;

public class TollPayment implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            type_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getType()
        {
            return type_;
        }

        private zserio.runtime.array.DeltaContext type_;
    };

    public TollPayment()
    {
    }

    public TollPayment(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TollPayment(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TollPayment(
            nds.characteristics.types.TollPaymentType type_,
            java.lang.String[] provider_)
    {
        setType(type_);
        setProvider(provider_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_.initPackingContext(zserioContext.getType());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isProviderUsed())
        {
            endBitPosition += provider_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(zserioContext.getType(), endBitPosition);
        endBitPosition += 1;
        if (isProviderUsed())
        {
            endBitPosition += provider_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.characteristics.types.TollPaymentType getType()
    {
        return type_;
    }

    public void setType(nds.characteristics.types.TollPaymentType type_)
    {
        this.type_ = type_;
    }

    public java.lang.String[] getProvider()
    {
        return (provider_ == null) ? null : provider_.getRawArray();
    }

    public void setProvider(java.lang.String[] provider_)
    {
        if (provider_ == null)
        {
            this.provider_ = null;
        }
        else
        {
            this.provider_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.StringRawArray(provider_),
                    new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isProviderUsed()
    {
        return isProviderSet();
    }

    public boolean isProviderSet()
    {
        return (provider_ != null);
    }

    public void resetProvider()
    {
        this.provider_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TollPayment)
        {
            final TollPayment that = (TollPayment)obj;

            return
                    ((type_ == null) ? that.type_ == null : type_.getValue() == that.type_.getValue()) &&
                    ((!isProviderUsed()) ? !that.isProviderUsed() :
                        ((provider_ == null) ? that.provider_ == null : provider_.equals(that.provider_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, type_);
        if (isProviderUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, provider_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        type_ = nds.characteristics.types.TollPaymentType.readEnum(in);

        if (in.readBool())
        {
            provider_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.StringRawArray(),
                    new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            provider_.read(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_ = nds.characteristics.types.TollPaymentType.readEnum(zserioContext.getType(), in);

        if (in.readBool())
        {
            provider_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.StringRawArray(),
                    new zserio.runtime.array.ArrayTraits.StringArrayTraits(),
                    zserio.runtime.array.ArrayType.AUTO);
            provider_.read(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += type_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isProviderUsed())
        {
            endBitPosition = provider_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = type_.initializeOffsets(zserioContext.getType(), endBitPosition);
        endBitPosition += 1;
        if (isProviderUsed())
        {
            endBitPosition = provider_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        type_.write(out);

        if (isProviderUsed())
        {
            out.writeBool(true);
            provider_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        type_.write(zserioContext.getType(), out);

        if (isProviderUsed())
        {
            out.writeBool(true);
            provider_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private nds.characteristics.types.TollPaymentType type_;
    private zserio.runtime.array.Array provider_;
}
