/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.characteristics.layer;

public class LaneCharacteristicsLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            characsLaneRangeMaps_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList.ZserioPackingContext();
            characsLanePositionMaps_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeMapList.ZserioPackingContext();
            characsLaneRangeSets_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList.ZserioPackingContext();
            characsLanePositionSets_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList.ZserioPackingContext getCharacsLaneRangeMaps()
        {
            return characsLaneRangeMaps_;
        }

        public nds.characteristics.instantiations.CharacsLanePositionAttributeMapList.ZserioPackingContext getCharacsLanePositionMaps()
        {
            return characsLanePositionMaps_;
        }

        public nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList.ZserioPackingContext getCharacsLaneRangeSets()
        {
            return characsLaneRangeSets_;
        }

        public nds.characteristics.instantiations.CharacsLanePositionAttributeSetList.ZserioPackingContext getCharacsLanePositionSets()
        {
            return characsLanePositionSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList.ZserioPackingContext characsLaneRangeMaps_;
        private nds.characteristics.instantiations.CharacsLanePositionAttributeMapList.ZserioPackingContext characsLanePositionMaps_;
        private nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList.ZserioPackingContext characsLaneRangeSets_;
        private nds.characteristics.instantiations.CharacsLanePositionAttributeSetList.ZserioPackingContext characsLanePositionSets_;
    };

    public LaneCharacteristicsLayer()
    {
    }

    public LaneCharacteristicsLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public LaneCharacteristicsLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public LaneCharacteristicsLayer(
            nds.characteristics.metadata.LaneCharacsLayerContent content_,
            nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList characsLaneRangeMaps_,
            nds.characteristics.instantiations.CharacsLanePositionAttributeMapList characsLanePositionMaps_,
            nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList characsLaneRangeSets_,
            nds.characteristics.instantiations.CharacsLanePositionAttributeSetList characsLanePositionSets_)
    {
        setContent(content_);
        setCharacsLaneRangeMaps(characsLaneRangeMaps_);
        setCharacsLanePositionMaps(characsLanePositionMaps_);
        setCharacsLaneRangeSets(characsLaneRangeSets_);
        setCharacsLanePositionSets(characsLanePositionSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        if (isCharacsLaneRangeMapsUsed())
        {
            characsLaneRangeMaps_.initPackingContext(zserioContext.getCharacsLaneRangeMaps());
        }
        if (isCharacsLanePositionMapsUsed())
        {
            characsLanePositionMaps_.initPackingContext(zserioContext.getCharacsLanePositionMaps());
        }
        if (isCharacsLaneRangeSetsUsed())
        {
            characsLaneRangeSets_.initPackingContext(zserioContext.getCharacsLaneRangeSets());
        }
        if (isCharacsLanePositionSetsUsed())
        {
            characsLanePositionSets_.initPackingContext(zserioContext.getCharacsLanePositionSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isCharacsLaneRangeMapsUsed())
        {
            endBitPosition += characsLaneRangeMaps_.bitSizeOf(endBitPosition);
        }
        if (isCharacsLanePositionMapsUsed())
        {
            endBitPosition += characsLanePositionMaps_.bitSizeOf(endBitPosition);
        }
        if (isCharacsLaneRangeSetsUsed())
        {
            endBitPosition += characsLaneRangeSets_.bitSizeOf(endBitPosition);
        }
        if (isCharacsLanePositionSetsUsed())
        {
            endBitPosition += characsLanePositionSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        if (isCharacsLaneRangeMapsUsed())
        {
            endBitPosition += characsLaneRangeMaps_.bitSizeOf(zserioContext.getCharacsLaneRangeMaps(), endBitPosition);
        }
        if (isCharacsLanePositionMapsUsed())
        {
            endBitPosition += characsLanePositionMaps_.bitSizeOf(zserioContext.getCharacsLanePositionMaps(), endBitPosition);
        }
        if (isCharacsLaneRangeSetsUsed())
        {
            endBitPosition += characsLaneRangeSets_.bitSizeOf(zserioContext.getCharacsLaneRangeSets(), endBitPosition);
        }
        if (isCharacsLanePositionSetsUsed())
        {
            endBitPosition += characsLanePositionSets_.bitSizeOf(zserioContext.getCharacsLanePositionSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.characteristics.metadata.LaneCharacsLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.characteristics.metadata.LaneCharacsLayerContent content_)
    {
        this.content_ = content_;
    }

    public nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList getCharacsLaneRangeMaps()
    {
        return characsLaneRangeMaps_;
    }

    public void setCharacsLaneRangeMaps(nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList characsLaneRangeMaps_)
    {
        this.characsLaneRangeMaps_ = characsLaneRangeMaps_;
    }

    public boolean isCharacsLaneRangeMapsUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS));
    }

    public boolean isCharacsLaneRangeMapsSet()
    {
        return (characsLaneRangeMaps_ != null);
    }

    public void resetCharacsLaneRangeMaps()
    {
        this.characsLaneRangeMaps_ = null;
    }

    public nds.characteristics.instantiations.CharacsLanePositionAttributeMapList getCharacsLanePositionMaps()
    {
        return characsLanePositionMaps_;
    }

    public void setCharacsLanePositionMaps(nds.characteristics.instantiations.CharacsLanePositionAttributeMapList characsLanePositionMaps_)
    {
        this.characsLanePositionMaps_ = characsLanePositionMaps_;
    }

    public boolean isCharacsLanePositionMapsUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS));
    }

    public boolean isCharacsLanePositionMapsSet()
    {
        return (characsLanePositionMaps_ != null);
    }

    public void resetCharacsLanePositionMaps()
    {
        this.characsLanePositionMaps_ = null;
    }

    public nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList getCharacsLaneRangeSets()
    {
        return characsLaneRangeSets_;
    }

    public void setCharacsLaneRangeSets(nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList characsLaneRangeSets_)
    {
        this.characsLaneRangeSets_ = characsLaneRangeSets_;
    }

    public boolean isCharacsLaneRangeSetsUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS));
    }

    public boolean isCharacsLaneRangeSetsSet()
    {
        return (characsLaneRangeSets_ != null);
    }

    public void resetCharacsLaneRangeSets()
    {
        this.characsLaneRangeSets_ = null;
    }

    public nds.characteristics.instantiations.CharacsLanePositionAttributeSetList getCharacsLanePositionSets()
    {
        return characsLanePositionSets_;
    }

    public void setCharacsLanePositionSets(nds.characteristics.instantiations.CharacsLanePositionAttributeSetList characsLanePositionSets_)
    {
        this.characsLanePositionSets_ = characsLanePositionSets_;
    }

    public boolean isCharacsLanePositionSetsUsed()
    {
        return ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS));
    }

    public boolean isCharacsLanePositionSetsSet()
    {
        return (characsLanePositionSets_ != null);
    }

    public void resetCharacsLanePositionSets()
    {
        this.characsLanePositionSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof LaneCharacteristicsLayer)
        {
            final LaneCharacteristicsLayer that = (LaneCharacteristicsLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    ((!isCharacsLaneRangeMapsUsed()) ? !that.isCharacsLaneRangeMapsUsed() :
                        ((characsLaneRangeMaps_ == null) ? that.characsLaneRangeMaps_ == null : characsLaneRangeMaps_.equals(that.characsLaneRangeMaps_))) &&
                    ((!isCharacsLanePositionMapsUsed()) ? !that.isCharacsLanePositionMapsUsed() :
                        ((characsLanePositionMaps_ == null) ? that.characsLanePositionMaps_ == null : characsLanePositionMaps_.equals(that.characsLanePositionMaps_))) &&
                    ((!isCharacsLaneRangeSetsUsed()) ? !that.isCharacsLaneRangeSetsUsed() :
                        ((characsLaneRangeSets_ == null) ? that.characsLaneRangeSets_ == null : characsLaneRangeSets_.equals(that.characsLaneRangeSets_))) &&
                    ((!isCharacsLanePositionSetsUsed()) ? !that.isCharacsLanePositionSetsUsed() :
                        ((characsLanePositionSets_ == null) ? that.characsLanePositionSets_ == null : characsLanePositionSets_.equals(that.characsLanePositionSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        if (isCharacsLaneRangeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, characsLaneRangeMaps_);
        if (isCharacsLanePositionMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, characsLanePositionMaps_);
        if (isCharacsLaneRangeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, characsLaneRangeSets_);
        if (isCharacsLanePositionSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, characsLanePositionSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.characteristics.metadata.LaneCharacsLayerContent(in);

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS))
        {
            characsLaneRangeMaps_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS))
        {
            characsLanePositionMaps_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeMapList(in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS))
        {
            characsLaneRangeSets_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList(in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS))
        {
            characsLanePositionSets_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeSetList(in, (byte)(0));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.characteristics.metadata.LaneCharacsLayerContent(zserioContext.getContent(), in);

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_MAPS))
        {
            characsLaneRangeMaps_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList(zserioContext.getCharacsLaneRangeMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_MAPS))
        {
            characsLanePositionMaps_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeMapList(zserioContext.getCharacsLanePositionMaps(), in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_RANGE_SETS))
        {
            characsLaneRangeSets_ = new nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList(zserioContext.getCharacsLaneRangeSets(), in, (byte)(0));
        }

        if ((getContent().and(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS)).equals(nds.characteristics.metadata.LaneCharacsLayerContent.Values.LANE_POSITION_SETS))
        {
            characsLanePositionSets_ = new nds.characteristics.instantiations.CharacsLanePositionAttributeSetList(zserioContext.getCharacsLanePositionSets(), in, (byte)(0));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        if (isCharacsLaneRangeMapsUsed())
        {
            endBitPosition = characsLaneRangeMaps_.initializeOffsets(endBitPosition);
        }
        if (isCharacsLanePositionMapsUsed())
        {
            endBitPosition = characsLanePositionMaps_.initializeOffsets(endBitPosition);
        }
        if (isCharacsLaneRangeSetsUsed())
        {
            endBitPosition = characsLaneRangeSets_.initializeOffsets(endBitPosition);
        }
        if (isCharacsLanePositionSetsUsed())
        {
            endBitPosition = characsLanePositionSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        if (isCharacsLaneRangeMapsUsed())
        {
            endBitPosition = characsLaneRangeMaps_.initializeOffsets(zserioContext.getCharacsLaneRangeMaps(), endBitPosition);
        }
        if (isCharacsLanePositionMapsUsed())
        {
            endBitPosition = characsLanePositionMaps_.initializeOffsets(zserioContext.getCharacsLanePositionMaps(), endBitPosition);
        }
        if (isCharacsLaneRangeSetsUsed())
        {
            endBitPosition = characsLaneRangeSets_.initializeOffsets(zserioContext.getCharacsLaneRangeSets(), endBitPosition);
        }
        if (isCharacsLanePositionSetsUsed())
        {
            endBitPosition = characsLanePositionSets_.initializeOffsets(zserioContext.getCharacsLanePositionSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        if (isCharacsLaneRangeMapsUsed())
        {
            // check parameters
            if (characsLaneRangeMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeMaps: " +
                        characsLaneRangeMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            characsLaneRangeMaps_.write(out);
        }

        if (isCharacsLanePositionMapsUsed())
        {
            // check parameters
            if (characsLanePositionMaps_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionMaps: " +
                        characsLanePositionMaps_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            characsLanePositionMaps_.write(out);
        }

        if (isCharacsLaneRangeSetsUsed())
        {
            // check parameters
            if (characsLaneRangeSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLaneRangeSets: " +
                        characsLaneRangeSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            characsLaneRangeSets_.write(out);
        }

        if (isCharacsLanePositionSetsUsed())
        {
            // check parameters
            if (characsLanePositionSets_.getCoordShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field LaneCharacteristicsLayer.characsLanePositionSets: " +
                        characsLanePositionSets_.getCoordShift() + " != " + (byte)(0) + "!");
            }
            characsLanePositionSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        if (isCharacsLaneRangeMapsUsed())
        {
            characsLaneRangeMaps_.write(zserioContext.getCharacsLaneRangeMaps(), out);
        }

        if (isCharacsLanePositionMapsUsed())
        {
            characsLanePositionMaps_.write(zserioContext.getCharacsLanePositionMaps(), out);
        }

        if (isCharacsLaneRangeSetsUsed())
        {
            characsLaneRangeSets_.write(zserioContext.getCharacsLaneRangeSets(), out);
        }

        if (isCharacsLanePositionSetsUsed())
        {
            characsLanePositionSets_.write(zserioContext.getCharacsLanePositionSets(), out);
        }
    }

    private nds.characteristics.metadata.LaneCharacsLayerContent content_;
    private nds.characteristics.instantiations.CharacsLaneRangeAttributeMapList characsLaneRangeMaps_;
    private nds.characteristics.instantiations.CharacsLanePositionAttributeMapList characsLanePositionMaps_;
    private nds.characteristics.instantiations.CharacsLaneRangeAttributeSetList characsLaneRangeSets_;
    private nds.characteristics.instantiations.CharacsLanePositionAttributeSetList characsLanePositionSets_;
}
