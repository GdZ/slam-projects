/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.road.reference.location;

public class RoadLocationTransitionReference implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            startLocation_ = new nds.core.location.RoadLocationId.ZserioPackingContext();
            endLocation_ = new nds.core.location.RoadLocationId.ZserioPackingContext();
        }

        public nds.core.location.RoadLocationId.ZserioPackingContext getStartLocation()
        {
            return startLocation_;
        }

        public nds.core.location.RoadLocationId.ZserioPackingContext getEndLocation()
        {
            return endLocation_;
        }

        private nds.core.location.RoadLocationId.ZserioPackingContext startLocation_;
        private nds.core.location.RoadLocationId.ZserioPackingContext endLocation_;
    };

    public RoadLocationTransitionReference()
    {
    }

    public RoadLocationTransitionReference(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadLocationTransitionReference(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadLocationTransitionReference(
            nds.core.location.RoadLocationId startLocation_,
            nds.core.location.RoadLocationId endLocation_,
            nds.core.location.RoadLocationId[] intermediateLocations_)
    {
        setStartLocation(startLocation_);
        setEndLocation(endLocation_);
        setIntermediateLocations(intermediateLocations_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        startLocation_.initPackingContext(zserioContext.getStartLocation());
        endLocation_.initPackingContext(zserioContext.getEndLocation());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += startLocation_.bitSizeOf(endBitPosition);
        endBitPosition += endLocation_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isIntermediateLocationsUsed())
        {
            endBitPosition += intermediateLocations_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += startLocation_.bitSizeOf(zserioContext.getStartLocation(), endBitPosition);
        endBitPosition += endLocation_.bitSizeOf(zserioContext.getEndLocation(), endBitPosition);
        endBitPosition += 1;
        if (isIntermediateLocationsUsed())
        {
            endBitPosition += intermediateLocations_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.location.RoadLocationId getStartLocation()
    {
        return startLocation_;
    }

    public void setStartLocation(nds.core.location.RoadLocationId startLocation_)
    {
        this.startLocation_ = startLocation_;
    }

    public nds.core.location.RoadLocationId getEndLocation()
    {
        return endLocation_;
    }

    public void setEndLocation(nds.core.location.RoadLocationId endLocation_)
    {
        this.endLocation_ = endLocation_;
    }

    public nds.core.location.RoadLocationId[] getIntermediateLocations()
    {
        return (intermediateLocations_ == null) ? null : intermediateLocations_.getRawArray();
    }

    public void setIntermediateLocations(nds.core.location.RoadLocationId[] intermediateLocations_)
    {
        if (intermediateLocations_ == null)
        {
            this.intermediateLocations_ = null;
        }
        else
        {
            this.intermediateLocations_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.location.RoadLocationId.class, intermediateLocations_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.location.RoadLocationId>(new ZserioElementFactory_intermediateLocations()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isIntermediateLocationsUsed()
    {
        return isIntermediateLocationsSet();
    }

    public boolean isIntermediateLocationsSet()
    {
        return (intermediateLocations_ != null);
    }

    public void resetIntermediateLocations()
    {
        this.intermediateLocations_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadLocationTransitionReference)
        {
            final RoadLocationTransitionReference that = (RoadLocationTransitionReference)obj;

            return
                    ((startLocation_ == null) ? that.startLocation_ == null : startLocation_.equals(that.startLocation_)) &&
                    ((endLocation_ == null) ? that.endLocation_ == null : endLocation_.equals(that.endLocation_)) &&
                    ((!isIntermediateLocationsUsed()) ? !that.isIntermediateLocationsUsed() :
                        ((intermediateLocations_ == null) ? that.intermediateLocations_ == null : intermediateLocations_.equals(that.intermediateLocations_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, startLocation_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, endLocation_);
        if (isIntermediateLocationsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, intermediateLocations_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        startLocation_ = new nds.core.location.RoadLocationId(in);

        endLocation_ = new nds.core.location.RoadLocationId(in);

        if (in.readBool())
        {
            intermediateLocations_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.location.RoadLocationId.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.location.RoadLocationId>(new ZserioElementFactory_intermediateLocations()),
                    zserio.runtime.array.ArrayType.AUTO);
            intermediateLocations_.read(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startLocation_ = new nds.core.location.RoadLocationId(zserioContext.getStartLocation(), in);

        endLocation_ = new nds.core.location.RoadLocationId(zserioContext.getEndLocation(), in);

        if (in.readBool())
        {
            intermediateLocations_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.location.RoadLocationId.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.location.RoadLocationId>(new ZserioElementFactory_intermediateLocations()),
                    zserio.runtime.array.ArrayType.AUTO);
            intermediateLocations_.readPacked(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = startLocation_.initializeOffsets(endBitPosition);
        endBitPosition = endLocation_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        if (isIntermediateLocationsUsed())
        {
            endBitPosition = intermediateLocations_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = startLocation_.initializeOffsets(zserioContext.getStartLocation(), endBitPosition);
        endBitPosition = endLocation_.initializeOffsets(zserioContext.getEndLocation(), endBitPosition);
        endBitPosition += 1;
        if (isIntermediateLocationsUsed())
        {
            endBitPosition = intermediateLocations_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        startLocation_.write(out);

        endLocation_.write(out);

        if (isIntermediateLocationsUsed())
        {
            out.writeBool(true);
            intermediateLocations_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startLocation_.write(zserioContext.getStartLocation(), out);

        endLocation_.write(zserioContext.getEndLocation(), out);

        if (isIntermediateLocationsUsed())
        {
            out.writeBool(true);
            intermediateLocations_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private static final class ZserioElementFactory_intermediateLocations implements zserio.runtime.array.PackableElementFactory<nds.core.location.RoadLocationId>
    {
        @Override
        public nds.core.location.RoadLocationId create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.core.location.RoadLocationId(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.core.location.RoadLocationId.ZserioPackingContext();
        }

        @Override
        public nds.core.location.RoadLocationId create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.core.location.RoadLocationId(context, in);
        }
    }

    private nds.core.location.RoadLocationId startLocation_;
    private nds.core.location.RoadLocationId endLocation_;
    private zserio.runtime.array.Array intermediateLocations_;
}
