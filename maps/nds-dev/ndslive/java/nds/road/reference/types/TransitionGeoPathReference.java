/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.road.reference.types;

public class TransitionGeoPathReference implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            startRoad_ = new nds.core.types.Var4ByteDirectedReference.ZserioPackingContext();
            path_ = new nds.core.geometry.Line2D.ZserioPackingContext();
        }

        public nds.core.types.Var4ByteDirectedReference.ZserioPackingContext getStartRoad()
        {
            return startRoad_;
        }

        public nds.core.geometry.Line2D.ZserioPackingContext getPath()
        {
            return path_;
        }

        private nds.core.types.Var4ByteDirectedReference.ZserioPackingContext startRoad_;
        private nds.core.geometry.Line2D.ZserioPackingContext path_;
    };

    public TransitionGeoPathReference()
    {
    }

    public TransitionGeoPathReference(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TransitionGeoPathReference(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TransitionGeoPathReference(
            nds.core.types.Var4ByteDirectedReference startRoad_,
            nds.core.geometry.Line2D path_)
    {
        setStartRoad(startRoad_);
        setPath(path_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        startRoad_.initPackingContext(zserioContext.getStartRoad());
        path_.initPackingContext(zserioContext.getPath());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += startRoad_.bitSizeOf(endBitPosition);
        endBitPosition += path_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += startRoad_.bitSizeOf(zserioContext.getStartRoad(), endBitPosition);
        endBitPosition += path_.bitSizeOf(zserioContext.getPath(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.types.Var4ByteDirectedReference getStartRoad()
    {
        return startRoad_;
    }

    public void setStartRoad(nds.core.types.Var4ByteDirectedReference startRoad_)
    {
        this.startRoad_ = startRoad_;
    }

    public nds.core.geometry.Line2D getPath()
    {
        return path_;
    }

    public void setPath(nds.core.geometry.Line2D path_)
    {
        this.path_ = path_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TransitionGeoPathReference)
        {
            final TransitionGeoPathReference that = (TransitionGeoPathReference)obj;

            return
                    ((startRoad_ == null) ? that.startRoad_ == null : startRoad_.equals(that.startRoad_)) &&
                    ((path_ == null) ? that.path_ == null : path_.equals(that.path_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, startRoad_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, path_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        startRoad_ = new nds.core.types.Var4ByteDirectedReference(in);

        path_ = new nds.core.geometry.Line2D(in, (byte)(0));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startRoad_ = new nds.core.types.Var4ByteDirectedReference(zserioContext.getStartRoad(), in);

        path_ = new nds.core.geometry.Line2D(zserioContext.getPath(), in, (byte)(0));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = startRoad_.initializeOffsets(endBitPosition);
        endBitPosition = path_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = startRoad_.initializeOffsets(zserioContext.getStartRoad(), endBitPosition);
        endBitPosition = path_.initializeOffsets(zserioContext.getPath(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        startRoad_.write(out);

        // check parameters
        if (path_.getShift() != (byte)(0))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field TransitionGeoPathReference.path: " +
                    path_.getShift() + " != " + (byte)(0) + "!");
        }
        path_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startRoad_.write(zserioContext.getStartRoad(), out);

        path_.write(zserioContext.getPath(), out);
    }

    private nds.core.types.Var4ByteDirectedReference startRoad_;
    private nds.core.geometry.Line2D path_;
}
