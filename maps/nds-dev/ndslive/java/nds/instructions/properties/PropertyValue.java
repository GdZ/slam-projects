/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.instructions.properties;

public class PropertyValue implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            languageCode_ = new zserio.runtime.array.DeltaContext();
            signpostPhoneticTranscriptions_ = new nds.instructions.types.SignpostPhoneticTranscriptions.ZserioPackingContext();
            signpostGraphicsBackgroundColor_ = new nds.core.color.ColorRgba.ZserioPackingContext();
            signpostGraphicsBackgroundIcon_ = new zserio.runtime.array.DeltaContext();
            signpostGraphicsTowardsIcon_ = new zserio.runtime.array.DeltaContext();
            signpostGraphicsDirectionIcon_ = new zserio.runtime.array.DeltaContext();
            signpostGraphicsTextColor_ = new nds.core.color.ColorRgb.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getLanguageCode()
        {
            return languageCode_;
        }

        public nds.instructions.types.SignpostPhoneticTranscriptions.ZserioPackingContext getSignpostPhoneticTranscriptions()
        {
            return signpostPhoneticTranscriptions_;
        }

        public nds.core.color.ColorRgba.ZserioPackingContext getSignpostGraphicsBackgroundColor()
        {
            return signpostGraphicsBackgroundColor_;
        }

        public zserio.runtime.array.DeltaContext getSignpostGraphicsBackgroundIcon()
        {
            return signpostGraphicsBackgroundIcon_;
        }

        public zserio.runtime.array.DeltaContext getSignpostGraphicsTowardsIcon()
        {
            return signpostGraphicsTowardsIcon_;
        }

        public zserio.runtime.array.DeltaContext getSignpostGraphicsDirectionIcon()
        {
            return signpostGraphicsDirectionIcon_;
        }

        public nds.core.color.ColorRgb.ZserioPackingContext getSignpostGraphicsTextColor()
        {
            return signpostGraphicsTextColor_;
        }

        private zserio.runtime.array.DeltaContext languageCode_;
        private nds.instructions.types.SignpostPhoneticTranscriptions.ZserioPackingContext signpostPhoneticTranscriptions_;
        private nds.core.color.ColorRgba.ZserioPackingContext signpostGraphicsBackgroundColor_;
        private zserio.runtime.array.DeltaContext signpostGraphicsBackgroundIcon_;
        private zserio.runtime.array.DeltaContext signpostGraphicsTowardsIcon_;
        private zserio.runtime.array.DeltaContext signpostGraphicsDirectionIcon_;
        private nds.core.color.ColorRgb.ZserioPackingContext signpostGraphicsTextColor_;
    };

    public PropertyValue(
            nds.instructions.properties.PropertyType type_)
    {
        this.type_ = type_;
    }

    public PropertyValue(zserio.runtime.io.BitStreamReader in,
            nds.instructions.properties.PropertyType type_)
            throws java.io.IOException
    {
        this.type_ = type_;

        read(in);
    }

    public PropertyValue(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            nds.instructions.properties.PropertyType type_)
            throws java.io.IOException
    {
        this.type_ = type_;

        read(context, in);
    }

    public int choiceTag()
    {
        switch (getType())
        {
        case CORE:
            return UNDEFINED_CHOICE;
        case LANGUAGE_CODE:
            return CHOICE_languageCode;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            return CHOICE_signpostPhoneticTranscriptions;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            return CHOICE_signpostGraphicsBackgroundColor;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            return CHOICE_signpostGraphicsBackgroundIcon;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            return CHOICE_signpostGraphicsTowardsIcon;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            return CHOICE_signpostGraphicsDirectionIcon;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            return CHOICE_signpostGraphicsTextColor;
        default:
            return UNDEFINED_CHOICE;
        }
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            zserioContext.getLanguageCode().init(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(getLanguageCode()));
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            getSignpostPhoneticTranscriptions().initPackingContext(zserioContext.getSignpostPhoneticTranscriptions());
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            getSignpostGraphicsBackgroundColor().initPackingContext(zserioContext.getSignpostGraphicsBackgroundColor());
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            zserioContext.getSignpostGraphicsBackgroundIcon().init(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsBackgroundIcon()));
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            zserioContext.getSignpostGraphicsTowardsIcon().init(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsTowardsIcon()));
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            zserioContext.getSignpostGraphicsDirectionIcon().init(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsDirectionIcon()));
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            getSignpostGraphicsTextColor().initPackingContext(zserioContext.getSignpostGraphicsTextColor());
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(getLanguageCode());
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            endBitPosition += getSignpostPhoneticTranscriptions().bitSizeOf(endBitPosition);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            endBitPosition += getSignpostGraphicsBackgroundColor().bitSizeOf(endBitPosition);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsBackgroundIcon());
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsTowardsIcon());
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsDirectionIcon());
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            endBitPosition += getSignpostGraphicsTextColor().bitSizeOf(endBitPosition);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            endBitPosition += zserioContext.getLanguageCode().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(getLanguageCode()));
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            endBitPosition += getSignpostPhoneticTranscriptions().bitSizeOf(zserioContext.getSignpostPhoneticTranscriptions(), endBitPosition);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            endBitPosition += getSignpostGraphicsBackgroundColor().bitSizeOf(zserioContext.getSignpostGraphicsBackgroundColor(), endBitPosition);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            endBitPosition += zserioContext.getSignpostGraphicsBackgroundIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsBackgroundIcon()));
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            endBitPosition += zserioContext.getSignpostGraphicsTowardsIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsTowardsIcon()));
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            endBitPosition += zserioContext.getSignpostGraphicsDirectionIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsDirectionIcon()));
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            endBitPosition += getSignpostGraphicsTextColor().bitSizeOf(zserioContext.getSignpostGraphicsTextColor(), endBitPosition);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.instructions.properties.PropertyType getType()
    {
        return this.type_;
    }

    public short getLanguageCode()
    {
        return (java.lang.Short)objectChoice;
    }

    public void setLanguageCode(short languageCode_)
    {
        objectChoice = languageCode_;
    }

    public nds.instructions.types.SignpostPhoneticTranscriptions getSignpostPhoneticTranscriptions()
    {
        return (nds.instructions.types.SignpostPhoneticTranscriptions)objectChoice;
    }

    public void setSignpostPhoneticTranscriptions(nds.instructions.types.SignpostPhoneticTranscriptions signpostPhoneticTranscriptions_)
    {
        objectChoice = signpostPhoneticTranscriptions_;
    }

    public nds.core.color.ColorRgba getSignpostGraphicsBackgroundColor()
    {
        return (nds.core.color.ColorRgba)objectChoice;
    }

    public void setSignpostGraphicsBackgroundColor(nds.core.color.ColorRgba signpostGraphicsBackgroundColor_)
    {
        objectChoice = signpostGraphicsBackgroundColor_;
    }

    public java.math.BigInteger getSignpostGraphicsBackgroundIcon()
    {
        return (java.math.BigInteger)objectChoice;
    }

    public void setSignpostGraphicsBackgroundIcon(java.math.BigInteger signpostGraphicsBackgroundIcon_)
    {
        objectChoice = signpostGraphicsBackgroundIcon_;
    }

    public java.math.BigInteger getSignpostGraphicsTowardsIcon()
    {
        return (java.math.BigInteger)objectChoice;
    }

    public void setSignpostGraphicsTowardsIcon(java.math.BigInteger signpostGraphicsTowardsIcon_)
    {
        objectChoice = signpostGraphicsTowardsIcon_;
    }

    public java.math.BigInteger getSignpostGraphicsDirectionIcon()
    {
        return (java.math.BigInteger)objectChoice;
    }

    public void setSignpostGraphicsDirectionIcon(java.math.BigInteger signpostGraphicsDirectionIcon_)
    {
        objectChoice = signpostGraphicsDirectionIcon_;
    }

    public nds.core.color.ColorRgb getSignpostGraphicsTextColor()
    {
        return (nds.core.color.ColorRgb)objectChoice;
    }

    public void setSignpostGraphicsTextColor(nds.core.color.ColorRgb signpostGraphicsTextColor_)
    {
        objectChoice = signpostGraphicsTextColor_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PropertyValue)
        {
            final PropertyValue that = (PropertyValue)obj;

            return
                    ((this.type_ == null) ? that.type_ == null : this.type_.getValue() == that.type_.getValue()) &&
                    (
                        (objectChoice == null && that.objectChoice == null) ||
                        (objectChoice != null && objectChoice.equals(that.objectChoice))
                    );
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getType());
        if (objectChoice != null)
        {
            switch (getType())
            {
            case CORE:
                // empty
                break;
            case LANGUAGE_CODE:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.lang.Short)objectChoice);
                break;
            case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.instructions.types.SignpostPhoneticTranscriptions)objectChoice);
                break;
            case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.core.color.ColorRgba)objectChoice);
                break;
            case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.math.BigInteger)objectChoice);
                break;
            case SIGNPOST_GRAPHICS_TOWARDS_ICON:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.math.BigInteger)objectChoice);
                break;
            case SIGNPOST_GRAPHICS_DIRECTION_ICON:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (java.math.BigInteger)objectChoice);
                break;
            case SIGNPOST_GRAPHICS_TEXT_COLOR:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.core.color.ColorRgb)objectChoice);
                break;
            default:
                break;
            }
        }

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            objectChoice = in.readVarUInt16();
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            objectChoice = new nds.instructions.types.SignpostPhoneticTranscriptions(in);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            objectChoice = new nds.core.color.ColorRgba(in);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            objectChoice = in.readVarUInt();
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            objectChoice = in.readVarUInt();
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            objectChoice = in.readVarUInt();
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            objectChoice = new nds.core.color.ColorRgb(in);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            objectChoice = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                    zserioContext.getLanguageCode().read(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get();
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            objectChoice = new nds.instructions.types.SignpostPhoneticTranscriptions(zserioContext.getSignpostPhoneticTranscriptions(), in);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            objectChoice = new nds.core.color.ColorRgba(zserioContext.getSignpostGraphicsBackgroundColor(), in);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            objectChoice = ((zserio.runtime.array.ArrayElement.BigIntegerArrayElement)
                    zserioContext.getSignpostGraphicsBackgroundIcon().read(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), in)).get();
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            objectChoice = ((zserio.runtime.array.ArrayElement.BigIntegerArrayElement)
                    zserioContext.getSignpostGraphicsTowardsIcon().read(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), in)).get();
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            objectChoice = ((zserio.runtime.array.ArrayElement.BigIntegerArrayElement)
                    zserioContext.getSignpostGraphicsDirectionIcon().read(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), in)).get();
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            objectChoice = new nds.core.color.ColorRgb(zserioContext.getSignpostGraphicsTextColor(), in);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(getLanguageCode());
            }
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            {
                endBitPosition = getSignpostPhoneticTranscriptions().initializeOffsets(endBitPosition);
            }
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            {
                endBitPosition = getSignpostGraphicsBackgroundColor().initializeOffsets(endBitPosition);
            }
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsBackgroundIcon());
            }
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsTowardsIcon());
            }
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            {
                endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt(getSignpostGraphicsDirectionIcon());
            }
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            {
                endBitPosition = getSignpostGraphicsTextColor().initializeOffsets(endBitPosition);
            }
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            {
                endBitPosition += zserioContext.getLanguageCode().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                        new zserio.runtime.array.ArrayElement.ShortArrayElement(getLanguageCode()));
            }
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            {
                endBitPosition = getSignpostPhoneticTranscriptions().initializeOffsets(zserioContext.getSignpostPhoneticTranscriptions(), endBitPosition);
            }
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            {
                endBitPosition = getSignpostGraphicsBackgroundColor().initializeOffsets(zserioContext.getSignpostGraphicsBackgroundColor(), endBitPosition);
            }
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            {
                endBitPosition += zserioContext.getSignpostGraphicsBackgroundIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                        new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsBackgroundIcon()));
            }
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            {
                endBitPosition += zserioContext.getSignpostGraphicsTowardsIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                        new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsTowardsIcon()));
            }
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            {
                endBitPosition += zserioContext.getSignpostGraphicsDirectionIcon().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(),
                        new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsDirectionIcon()));
            }
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            {
                endBitPosition = getSignpostGraphicsTextColor().initializeOffsets(zserioContext.getSignpostGraphicsTextColor(), endBitPosition);
            }
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            out.writeVarUInt16(getLanguageCode());
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            getSignpostPhoneticTranscriptions().write(out);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            getSignpostGraphicsBackgroundColor().write(out);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            out.writeVarUInt(getSignpostGraphicsBackgroundIcon());
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            out.writeVarUInt(getSignpostGraphicsTowardsIcon());
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            out.writeVarUInt(getSignpostGraphicsDirectionIcon());
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            getSignpostGraphicsTextColor().write(out);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case CORE:
            // empty
            break;
        case LANGUAGE_CODE:
            zserioContext.getLanguageCode().write(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.ShortArrayElement(getLanguageCode()));
            break;
        case SIGNPOST_PHONETIC_TRANSCRIPTIONS:
            getSignpostPhoneticTranscriptions().write(zserioContext.getSignpostPhoneticTranscriptions(), out);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_COLOR:
            getSignpostGraphicsBackgroundColor().write(zserioContext.getSignpostGraphicsBackgroundColor(), out);
            break;
        case SIGNPOST_GRAPHICS_BACKGROUND_ICON:
            zserioContext.getSignpostGraphicsBackgroundIcon().write(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsBackgroundIcon()));
            break;
        case SIGNPOST_GRAPHICS_TOWARDS_ICON:
            zserioContext.getSignpostGraphicsTowardsIcon().write(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsTowardsIcon()));
            break;
        case SIGNPOST_GRAPHICS_DIRECTION_ICON:
            zserioContext.getSignpostGraphicsDirectionIcon().write(new zserio.runtime.array.ArrayTraits.VarUIntArrayTraits(), out,
                    new zserio.runtime.array.ArrayElement.BigIntegerArrayElement(getSignpostGraphicsDirectionIcon()));
            break;
        case SIGNPOST_GRAPHICS_TEXT_COLOR:
            getSignpostGraphicsTextColor().write(zserioContext.getSignpostGraphicsTextColor(), out);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice PropertyValue: " + getType() + "!");
        }
    }

    public static final int CHOICE_languageCode = 0;
    public static final int CHOICE_signpostPhoneticTranscriptions = 1;
    public static final int CHOICE_signpostGraphicsBackgroundColor = 2;
    public static final int CHOICE_signpostGraphicsBackgroundIcon = 3;
    public static final int CHOICE_signpostGraphicsTowardsIcon = 4;
    public static final int CHOICE_signpostGraphicsDirectionIcon = 5;
    public static final int CHOICE_signpostGraphicsTextColor = 6;
    public static final int UNDEFINED_CHOICE = -1;

    private final nds.instructions.properties.PropertyType type_;
    private java.lang.Object objectChoice;
}
