/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.types;

public class DataLayerDefinition implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            dataLayerId_ = new zserio.runtime.array.DeltaContext();
            lifetime_ = new zserio.runtime.array.DeltaContext();
            contentType_ = new zserio.runtime.array.DeltaContext();
            signatureDefinition_ = new nds.core.packaging.SignatureDefinition.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getDataLayerId()
        {
            return dataLayerId_;
        }

        public zserio.runtime.array.DeltaContext getLifetime()
        {
            return lifetime_;
        }

        public zserio.runtime.array.DeltaContext getContentType()
        {
            return contentType_;
        }

        public nds.core.packaging.SignatureDefinition.ZserioPackingContext getSignatureDefinition()
        {
            return signatureDefinition_;
        }

        private zserio.runtime.array.DeltaContext dataLayerId_;
        private zserio.runtime.array.DeltaContext lifetime_;
        private zserio.runtime.array.DeltaContext contentType_;
        private nds.core.packaging.SignatureDefinition.ZserioPackingContext signatureDefinition_;
    };

    public DataLayerDefinition()
    {
    }

    public DataLayerDefinition(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DataLayerDefinition(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DataLayerDefinition(
            short dataLayerId_,
            nds.smart.types.DataLayerLifetimeType lifetime_,
            boolean isCustomExtension_,
            nds.system.types.ExternDescriptor layerDescriptor_,
            java.lang.String customExtensionIdentifier_,
            java.lang.String name_,
            nds.system.types.LayerType contentType_,
            nds.core.packaging.SignatureDefinition signatureDefinition_,
            nds.system.types.ExternData layerMetadata_,
            zserio.runtime.io.BitBuffer customExtensionMetadata_)
    {
        setDataLayerId(dataLayerId_);
        setLifetime(lifetime_);
        setIsCustomExtension(isCustomExtension_);
        setLayerDescriptor(layerDescriptor_);
        setCustomExtensionIdentifier(customExtensionIdentifier_);
        setName(name_);
        setContentType(contentType_);
        setSignatureDefinition(signatureDefinition_);
        setLayerMetadata(layerMetadata_);
        setCustomExtensionMetadata(customExtensionMetadata_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getDataLayerId().init(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(dataLayerId_));
        lifetime_.initPackingContext(zserioContext.getLifetime());
        contentType_.initPackingContext(zserioContext.getContentType());
        if (isSignatureDefinitionUsed())
        {
            signatureDefinition_.initPackingContext(zserioContext.getSignatureDefinition());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(dataLayerId_);
        endBitPosition += lifetime_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        endBitPosition += layerDescriptor_.bitSizeOf(endBitPosition);
        if (isCustomExtensionIdentifierUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(customExtensionIdentifier_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition += contentType_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isSignatureDefinitionUsed())
        {
            endBitPosition += signatureDefinition_.bitSizeOf(endBitPosition);
        }
        if (isLayerMetadataUsed())
        {
            endBitPosition += layerMetadata_.bitSizeOf(endBitPosition);
        }
        if (isCustomExtensionMetadataUsed())
        {
            endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(customExtensionMetadata_);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDataLayerId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(dataLayerId_));
        endBitPosition += lifetime_.bitSizeOf(zserioContext.getLifetime(), endBitPosition);
        endBitPosition += 1;
        endBitPosition += layerDescriptor_.bitSizeOf(endBitPosition);
        if (isCustomExtensionIdentifierUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(customExtensionIdentifier_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition += contentType_.bitSizeOf(zserioContext.getContentType(), endBitPosition);
        endBitPosition += 1;
        if (isSignatureDefinitionUsed())
        {
            endBitPosition += signatureDefinition_.bitSizeOf(zserioContext.getSignatureDefinition(), endBitPosition);
        }
        if (isLayerMetadataUsed())
        {
            endBitPosition += layerMetadata_.bitSizeOf(endBitPosition);
        }
        if (isCustomExtensionMetadataUsed())
        {
            endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(customExtensionMetadata_);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public short getDataLayerId()
    {
        return dataLayerId_;
    }

    public void setDataLayerId(short dataLayerId_)
    {
        this.dataLayerId_ = dataLayerId_;
    }

    public nds.smart.types.DataLayerLifetimeType getLifetime()
    {
        return lifetime_;
    }

    public void setLifetime(nds.smart.types.DataLayerLifetimeType lifetime_)
    {
        this.lifetime_ = lifetime_;
    }

    public boolean getIsCustomExtension()
    {
        return isCustomExtension_;
    }

    public void setIsCustomExtension(boolean isCustomExtension_)
    {
        this.isCustomExtension_ = isCustomExtension_;
    }

    public nds.system.types.ExternDescriptor getLayerDescriptor()
    {
        return layerDescriptor_;
    }

    public void setLayerDescriptor(nds.system.types.ExternDescriptor layerDescriptor_)
    {
        this.layerDescriptor_ = layerDescriptor_;
    }

    public java.lang.String getCustomExtensionIdentifier()
    {
        return customExtensionIdentifier_;
    }

    public void setCustomExtensionIdentifier(java.lang.String customExtensionIdentifier_)
    {
        this.customExtensionIdentifier_ = customExtensionIdentifier_;
    }

    public boolean isCustomExtensionIdentifierUsed()
    {
        return (getIsCustomExtension());
    }

    public boolean isCustomExtensionIdentifierSet()
    {
        return (customExtensionIdentifier_ != null);
    }

    public void resetCustomExtensionIdentifier()
    {
        this.customExtensionIdentifier_ = null;
    }

    public java.lang.String getName()
    {
        return name_;
    }

    public void setName(java.lang.String name_)
    {
        this.name_ = name_;
    }

    public nds.system.types.LayerType getContentType()
    {
        return contentType_;
    }

    public void setContentType(nds.system.types.LayerType contentType_)
    {
        this.contentType_ = contentType_;
    }

    public nds.core.packaging.SignatureDefinition getSignatureDefinition()
    {
        return signatureDefinition_;
    }

    public void setSignatureDefinition(nds.core.packaging.SignatureDefinition signatureDefinition_)
    {
        this.signatureDefinition_ = signatureDefinition_;
    }

    public boolean isSignatureDefinitionUsed()
    {
        return isSignatureDefinitionSet();
    }

    public boolean isSignatureDefinitionSet()
    {
        return (signatureDefinition_ != null);
    }

    public void resetSignatureDefinition()
    {
        this.signatureDefinition_ = null;
    }

    public nds.system.types.ExternData getLayerMetadata()
    {
        return layerMetadata_;
    }

    public void setLayerMetadata(nds.system.types.ExternData layerMetadata_)
    {
        this.layerMetadata_ = layerMetadata_;
    }

    public boolean isLayerMetadataUsed()
    {
        return (!getIsCustomExtension());
    }

    public boolean isLayerMetadataSet()
    {
        return (layerMetadata_ != null);
    }

    public void resetLayerMetadata()
    {
        this.layerMetadata_ = null;
    }

    public zserio.runtime.io.BitBuffer getCustomExtensionMetadata()
    {
        return customExtensionMetadata_;
    }

    public void setCustomExtensionMetadata(zserio.runtime.io.BitBuffer customExtensionMetadata_)
    {
        this.customExtensionMetadata_ = customExtensionMetadata_;
    }

    public boolean isCustomExtensionMetadataUsed()
    {
        return (getIsCustomExtension());
    }

    public boolean isCustomExtensionMetadataSet()
    {
        return (customExtensionMetadata_ != null);
    }

    public void resetCustomExtensionMetadata()
    {
        this.customExtensionMetadata_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DataLayerDefinition)
        {
            final DataLayerDefinition that = (DataLayerDefinition)obj;

            return
                    dataLayerId_ == that.dataLayerId_ &&
                    ((lifetime_ == null) ? that.lifetime_ == null : lifetime_.getValue() == that.lifetime_.getValue()) &&
                    isCustomExtension_ == that.isCustomExtension_ &&
                    ((layerDescriptor_ == null) ? that.layerDescriptor_ == null : layerDescriptor_.equals(that.layerDescriptor_)) &&
                    ((!isCustomExtensionIdentifierUsed()) ? !that.isCustomExtensionIdentifierUsed() :
                        ((customExtensionIdentifier_ == null) ? that.customExtensionIdentifier_ == null : customExtensionIdentifier_.equals(that.customExtensionIdentifier_))) &&
                    ((name_ == null) ? that.name_ == null : name_.equals(that.name_)) &&
                    ((contentType_ == null) ? that.contentType_ == null : contentType_.getValue() == that.contentType_.getValue()) &&
                    ((!isSignatureDefinitionUsed()) ? !that.isSignatureDefinitionUsed() :
                        ((signatureDefinition_ == null) ? that.signatureDefinition_ == null : signatureDefinition_.equals(that.signatureDefinition_))) &&
                    ((!isLayerMetadataUsed()) ? !that.isLayerMetadataUsed() :
                        ((layerMetadata_ == null) ? that.layerMetadata_ == null : layerMetadata_.equals(that.layerMetadata_))) &&
                    ((!isCustomExtensionMetadataUsed()) ? !that.isCustomExtensionMetadataUsed() :
                        ((customExtensionMetadata_ == null) ? that.customExtensionMetadata_ == null : customExtensionMetadata_.equals(that.customExtensionMetadata_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, dataLayerId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, lifetime_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, isCustomExtension_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, layerDescriptor_);
        if (isCustomExtensionIdentifierUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, customExtensionIdentifier_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, name_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, contentType_);
        if (isSignatureDefinitionUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, signatureDefinition_);
        if (isLayerMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, layerMetadata_);
        if (isCustomExtensionMetadataUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, customExtensionMetadata_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        dataLayerId_ = in.readVarUInt16();

        lifetime_ = nds.smart.types.DataLayerLifetimeType.readEnum(in);

        isCustomExtension_ = in.readBool();

        layerDescriptor_ = new nds.system.types.ExternDescriptor(in);

        if (getIsCustomExtension())
        {
            customExtensionIdentifier_ = in.readString();
        }

        name_ = in.readString();

        contentType_ = nds.system.types.LayerType.readEnum(in);

        if (in.readBool())
        {
            signatureDefinition_ = new nds.core.packaging.SignatureDefinition(in);
        }

        if (!getIsCustomExtension())
        {
            layerMetadata_ = new nds.system.types.ExternData(in);
        }

        if (getIsCustomExtension())
        {
            in.alignTo(8);
            customExtensionMetadata_ = in.readBitBuffer();
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        dataLayerId_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getDataLayerId().read(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get();

        lifetime_ = nds.smart.types.DataLayerLifetimeType.readEnum(zserioContext.getLifetime(), in);

        isCustomExtension_ = in.readBool();

        layerDescriptor_ = new nds.system.types.ExternDescriptor(in);

        if (getIsCustomExtension())
        {
            customExtensionIdentifier_ = in.readString();
        }

        name_ = in.readString();

        contentType_ = nds.system.types.LayerType.readEnum(zserioContext.getContentType(), in);

        if (in.readBool())
        {
            signatureDefinition_ = new nds.core.packaging.SignatureDefinition(zserioContext.getSignatureDefinition(), in);
        }

        if (!getIsCustomExtension())
        {
            layerMetadata_ = new nds.system.types.ExternData(in);
        }

        if (getIsCustomExtension())
        {
            in.alignTo(8);
            customExtensionMetadata_ = in.readBitBuffer();
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(dataLayerId_);
        endBitPosition += lifetime_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        endBitPosition = layerDescriptor_.initializeOffsets(endBitPosition);
        if (isCustomExtensionIdentifierUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(customExtensionIdentifier_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition += contentType_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isSignatureDefinitionUsed())
        {
            endBitPosition = signatureDefinition_.initializeOffsets(endBitPosition);
        }
        if (isLayerMetadataUsed())
        {
            endBitPosition = layerMetadata_.initializeOffsets(endBitPosition);
        }
        if (isCustomExtensionMetadataUsed())
        {
            endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(customExtensionMetadata_);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDataLayerId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(dataLayerId_));
        endBitPosition = lifetime_.initializeOffsets(zserioContext.getLifetime(), endBitPosition);
        endBitPosition += 1;
        endBitPosition = layerDescriptor_.initializeOffsets(endBitPosition);
        if (isCustomExtensionIdentifierUsed())
        {
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(customExtensionIdentifier_);
        }
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition = contentType_.initializeOffsets(zserioContext.getContentType(), endBitPosition);
        endBitPosition += 1;
        if (isSignatureDefinitionUsed())
        {
            endBitPosition = signatureDefinition_.initializeOffsets(zserioContext.getSignatureDefinition(), endBitPosition);
        }
        if (isLayerMetadataUsed())
        {
            endBitPosition = layerMetadata_.initializeOffsets(endBitPosition);
        }
        if (isCustomExtensionMetadataUsed())
        {
            endBitPosition = zserio.runtime.BitPositionUtil.alignTo(8, endBitPosition);
            endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(customExtensionMetadata_);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt16(dataLayerId_);

        lifetime_.write(out);

        out.writeBool(isCustomExtension_);

        layerDescriptor_.write(out);

        if (isCustomExtensionIdentifierUsed())
        {
            out.writeString(customExtensionIdentifier_);
        }

        out.writeString(name_);

        contentType_.write(out);

        if (isSignatureDefinitionUsed())
        {
            out.writeBool(true);
            signatureDefinition_.write(out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isLayerMetadataUsed())
        {
            layerMetadata_.write(out);
        }

        if (isCustomExtensionMetadataUsed())
        {
            out.alignTo(8);
            out.writeBitBuffer(customExtensionMetadata_);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getDataLayerId().write(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(dataLayerId_));

        lifetime_.write(zserioContext.getLifetime(), out);

        out.writeBool(isCustomExtension_);

        layerDescriptor_.write(out);

        if (isCustomExtensionIdentifierUsed())
        {
            out.writeString(customExtensionIdentifier_);
        }

        out.writeString(name_);

        contentType_.write(zserioContext.getContentType(), out);

        if (isSignatureDefinitionUsed())
        {
            out.writeBool(true);
            signatureDefinition_.write(zserioContext.getSignatureDefinition(), out);
        }
        else
        {
            out.writeBool(false);
        }

        if (isLayerMetadataUsed())
        {
            layerMetadata_.write(out);
        }

        if (isCustomExtensionMetadataUsed())
        {
            out.alignTo(8);
            out.writeBitBuffer(customExtensionMetadata_);
        }
    }

    private short dataLayerId_;
    private nds.smart.types.DataLayerLifetimeType lifetime_;
    private boolean isCustomExtension_ = false;
    private nds.system.types.ExternDescriptor layerDescriptor_;
    private java.lang.String customExtensionIdentifier_;
    private java.lang.String name_;
    private nds.system.types.LayerType contentType_;
    private nds.core.packaging.SignatureDefinition signatureDefinition_;
    private nds.system.types.ExternData layerMetadata_;
    private zserio.runtime.io.BitBuffer customExtensionMetadata_;
}
