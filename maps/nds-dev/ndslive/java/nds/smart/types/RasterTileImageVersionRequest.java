/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.types;

public class RasterTileImageVersionRequest implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            tileId_ = new nds.core.types.TileId.ZserioPackingContext();
            lifetimeInfo_ = new nds.smart.types.DataLayerLifetime.ZserioPackingContext();
        }

        public nds.core.types.TileId.ZserioPackingContext getTileId()
        {
            return tileId_;
        }

        public nds.smart.types.DataLayerLifetime.ZserioPackingContext getLifetimeInfo()
        {
            return lifetimeInfo_;
        }

        private nds.core.types.TileId.ZserioPackingContext tileId_;
        private nds.smart.types.DataLayerLifetime.ZserioPackingContext lifetimeInfo_;
    };

    public RasterTileImageVersionRequest()
    {
    }

    public RasterTileImageVersionRequest(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RasterTileImageVersionRequest(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RasterTileImageVersionRequest(
            nds.core.types.TileId tileId_,
            java.lang.String configuration_,
            nds.smart.types.DataLayerLifetime lifetimeInfo_)
    {
        setTileId(tileId_);
        setConfiguration(configuration_);
        setLifetimeInfo(lifetimeInfo_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        tileId_.initPackingContext(zserioContext.getTileId());
        lifetimeInfo_.initPackingContext(zserioContext.getLifetimeInfo());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += tileId_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(configuration_);
        endBitPosition += lifetimeInfo_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += tileId_.bitSizeOf(zserioContext.getTileId(), endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(configuration_);
        endBitPosition += lifetimeInfo_.bitSizeOf(zserioContext.getLifetimeInfo(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.types.TileId getTileId()
    {
        return tileId_;
    }

    public void setTileId(nds.core.types.TileId tileId_)
    {
        this.tileId_ = tileId_;
    }

    public java.lang.String getConfiguration()
    {
        return configuration_;
    }

    public void setConfiguration(java.lang.String configuration_)
    {
        this.configuration_ = configuration_;
    }

    public nds.smart.types.DataLayerLifetime getLifetimeInfo()
    {
        return lifetimeInfo_;
    }

    public void setLifetimeInfo(nds.smart.types.DataLayerLifetime lifetimeInfo_)
    {
        this.lifetimeInfo_ = lifetimeInfo_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RasterTileImageVersionRequest)
        {
            final RasterTileImageVersionRequest that = (RasterTileImageVersionRequest)obj;

            return
                    ((tileId_ == null) ? that.tileId_ == null : tileId_.equals(that.tileId_)) &&
                    ((configuration_ == null) ? that.configuration_ == null : configuration_.equals(that.configuration_)) &&
                    ((lifetimeInfo_ == null) ? that.lifetimeInfo_ == null : lifetimeInfo_.equals(that.lifetimeInfo_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, tileId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, configuration_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, lifetimeInfo_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        tileId_ = new nds.core.types.TileId(in);

        configuration_ = in.readString();

        lifetimeInfo_ = new nds.smart.types.DataLayerLifetime(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        tileId_ = new nds.core.types.TileId(zserioContext.getTileId(), in);

        configuration_ = in.readString();

        lifetimeInfo_ = new nds.smart.types.DataLayerLifetime(zserioContext.getLifetimeInfo(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = tileId_.initializeOffsets(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(configuration_);
        endBitPosition = lifetimeInfo_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = tileId_.initializeOffsets(zserioContext.getTileId(), endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(configuration_);
        endBitPosition = lifetimeInfo_.initializeOffsets(zserioContext.getLifetimeInfo(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        tileId_.write(out);

        out.writeString(configuration_);

        lifetimeInfo_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        tileId_.write(zserioContext.getTileId(), out);

        out.writeString(configuration_);

        lifetimeInfo_.write(zserioContext.getLifetimeInfo(), out);
    }

    private nds.core.types.TileId tileId_;
    private java.lang.String configuration_;
    private nds.smart.types.DataLayerLifetime lifetimeInfo_;
}
