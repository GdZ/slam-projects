/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.types;

public class DataLayerLifetime implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            lifetime_ = new zserio.runtime.array.DeltaContext();
            layerLifetimeInfo_ = new nds.smart.types.DataLayerLifetimeInfo.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getLifetime()
        {
            return lifetime_;
        }

        public nds.smart.types.DataLayerLifetimeInfo.ZserioPackingContext getLayerLifetimeInfo()
        {
            return layerLifetimeInfo_;
        }

        private zserio.runtime.array.DeltaContext lifetime_;
        private nds.smart.types.DataLayerLifetimeInfo.ZserioPackingContext layerLifetimeInfo_;
    };

    public DataLayerLifetime()
    {
    }

    public DataLayerLifetime(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public DataLayerLifetime(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public DataLayerLifetime(
            nds.smart.types.DataLayerLifetimeType lifetime_,
            nds.smart.types.DataLayerLifetimeInfo layerLifetimeInfo_)
    {
        setLifetime(lifetime_);
        setLayerLifetimeInfo(layerLifetimeInfo_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        lifetime_.initPackingContext(zserioContext.getLifetime());
        layerLifetimeInfo_.initPackingContext(zserioContext.getLayerLifetimeInfo());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += lifetime_.bitSizeOf(endBitPosition);
        endBitPosition += layerLifetimeInfo_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += lifetime_.bitSizeOf(zserioContext.getLifetime(), endBitPosition);
        endBitPosition += layerLifetimeInfo_.bitSizeOf(zserioContext.getLayerLifetimeInfo(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.smart.types.DataLayerLifetimeType getLifetime()
    {
        return lifetime_;
    }

    public void setLifetime(nds.smart.types.DataLayerLifetimeType lifetime_)
    {
        this.lifetime_ = lifetime_;
    }

    public nds.smart.types.DataLayerLifetimeInfo getLayerLifetimeInfo()
    {
        return layerLifetimeInfo_;
    }

    public void setLayerLifetimeInfo(nds.smart.types.DataLayerLifetimeInfo layerLifetimeInfo_)
    {
        this.layerLifetimeInfo_ = layerLifetimeInfo_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof DataLayerLifetime)
        {
            final DataLayerLifetime that = (DataLayerLifetime)obj;

            return
                    ((lifetime_ == null) ? that.lifetime_ == null : lifetime_.getValue() == that.lifetime_.getValue()) &&
                    ((layerLifetimeInfo_ == null) ? that.layerLifetimeInfo_ == null : layerLifetimeInfo_.equals(that.layerLifetimeInfo_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, lifetime_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, layerLifetimeInfo_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        lifetime_ = nds.smart.types.DataLayerLifetimeType.readEnum(in);

        layerLifetimeInfo_ = new nds.smart.types.DataLayerLifetimeInfo(in, getLifetime());
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        lifetime_ = nds.smart.types.DataLayerLifetimeType.readEnum(zserioContext.getLifetime(), in);

        layerLifetimeInfo_ = new nds.smart.types.DataLayerLifetimeInfo(zserioContext.getLayerLifetimeInfo(), in, getLifetime());
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += lifetime_.bitSizeOf(endBitPosition);
        endBitPosition = layerLifetimeInfo_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = lifetime_.initializeOffsets(zserioContext.getLifetime(), endBitPosition);
        endBitPosition = layerLifetimeInfo_.initializeOffsets(zserioContext.getLayerLifetimeInfo(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        lifetime_.write(out);

        // check parameters
        if (layerLifetimeInfo_.getLifetime() != (getLifetime()))
        {
            throw new zserio.runtime.ZserioError("Write: Inconsistent parameter lifetime for field DataLayerLifetime.layerLifetimeInfo!");
        }
        layerLifetimeInfo_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        lifetime_.write(zserioContext.getLifetime(), out);

        layerLifetimeInfo_.write(zserioContext.getLayerLifetimeInfo(), out);
    }

    private nds.smart.types.DataLayerLifetimeType lifetime_;
    private nds.smart.types.DataLayerLifetimeInfo layerLifetimeInfo_;
}
