/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.metadata;

public class SmartLayerMeshIndexContent implements zserio.runtime.io.Writer, zserio.runtime.SizeOf
{
    public SmartLayerMeshIndexContent()
    {
    }

    public SmartLayerMeshIndexContent(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public SmartLayerMeshIndexContent(
            boolean hasHeaders_,
            boolean hasSizes_)
    {
        setHasHeaders(hasHeaders_);
        setHasSizes(hasSizes_);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    public boolean getHasHeaders()
    {
        return hasHeaders_;
    }

    public void setHasHeaders(boolean hasHeaders_)
    {
        this.hasHeaders_ = hasHeaders_;
    }

    public boolean getHasSizes()
    {
        return hasSizes_;
    }

    public void setHasSizes(boolean hasSizes_)
    {
        this.hasSizes_ = hasSizes_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SmartLayerMeshIndexContent)
        {
            final SmartLayerMeshIndexContent that = (SmartLayerMeshIndexContent)obj;

            return
                    hasHeaders_ == that.hasHeaders_ &&
                    hasSizes_ == that.hasSizes_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, hasHeaders_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, hasSizes_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        hasHeaders_ = in.readBool();

        hasSizes_ = in.readBool();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeBool(hasHeaders_);

        out.writeBool(hasSizes_);
    }

    private boolean hasHeaders_;
    private boolean hasSizes_;
}
