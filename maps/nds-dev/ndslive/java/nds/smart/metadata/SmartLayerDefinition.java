/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.metadata;

public class SmartLayerDefinition implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            dataContents_ = new nds.smart.metadata.SmartLayerContent.ZserioPackingContext();
        }

        public nds.smart.metadata.SmartLayerContent.ZserioPackingContext getDataContents()
        {
            return dataContents_;
        }

        private nds.smart.metadata.SmartLayerContent.ZserioPackingContext dataContents_;
    };

    public SmartLayerDefinition()
    {
    }

    public SmartLayerDefinition(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public SmartLayerDefinition(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public SmartLayerDefinition(
            nds.smart.metadata.SmartLayerContent dataContents_,
            nds.smart.types.DataLayerDefinition[] layerDefinitions_)
    {
        setDataContents(dataContents_);
        setLayerDefinitions(layerDefinitions_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        dataContents_.initPackingContext(zserioContext.getDataContents());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += dataContents_.bitSizeOf(endBitPosition);
        endBitPosition += layerDefinitions_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += dataContents_.bitSizeOf(zserioContext.getDataContents(), endBitPosition);
        endBitPosition += layerDefinitions_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.smart.metadata.SmartLayerContent getDataContents()
    {
        return dataContents_;
    }

    public void setDataContents(nds.smart.metadata.SmartLayerContent dataContents_)
    {
        this.dataContents_ = dataContents_;
    }

    public nds.smart.types.DataLayerDefinition[] getLayerDefinitions()
    {
        return (layerDefinitions_ == null) ? null : layerDefinitions_.getRawArray();
    }

    public void setLayerDefinitions(nds.smart.types.DataLayerDefinition[] layerDefinitions_)
    {
        this.layerDefinitions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayerDefinition.class, layerDefinitions_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.smart.types.DataLayerDefinition>(new ZserioElementFactory_layerDefinitions()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SmartLayerDefinition)
        {
            final SmartLayerDefinition that = (SmartLayerDefinition)obj;

            return
                    ((dataContents_ == null) ? that.dataContents_ == null : dataContents_.equals(that.dataContents_)) &&
                    ((layerDefinitions_ == null) ? that.layerDefinitions_ == null : layerDefinitions_.equals(that.layerDefinitions_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, dataContents_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, layerDefinitions_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        dataContents_ = new nds.smart.metadata.SmartLayerContent(in);

        layerDefinitions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayerDefinition.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.smart.types.DataLayerDefinition>(new ZserioElementFactory_layerDefinitions()),
                zserio.runtime.array.ArrayType.AUTO);
        layerDefinitions_.read(in);

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        dataContents_ = new nds.smart.metadata.SmartLayerContent(zserioContext.getDataContents(), in);

        layerDefinitions_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayerDefinition.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.smart.types.DataLayerDefinition>(new ZserioElementFactory_layerDefinitions()),
                zserio.runtime.array.ArrayType.AUTO);
        layerDefinitions_.readPacked(in);

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = dataContents_.initializeOffsets(endBitPosition);
        endBitPosition = layerDefinitions_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = dataContents_.initializeOffsets(zserioContext.getDataContents(), endBitPosition);
        endBitPosition = layerDefinitions_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        dataContents_.write(out);

        layerDefinitions_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        dataContents_.write(zserioContext.getDataContents(), out);

        layerDefinitions_.writePacked(out);
    }

    private void checkConstraints()
    {
        if (!(getLayerDefinitions().length > 0))
            throw new zserio.runtime.ConstraintError("Constraint violated at SmartLayerDefinition.layerDefinitions!");
    }

    private static final class ZserioElementFactory_layerDefinitions implements zserio.runtime.array.PackableElementFactory<nds.smart.types.DataLayerDefinition>
    {
        @Override
        public nds.smart.types.DataLayerDefinition create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.smart.types.DataLayerDefinition(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.smart.types.DataLayerDefinition.ZserioPackingContext();
        }

        @Override
        public nds.smart.types.DataLayerDefinition create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.smart.types.DataLayerDefinition(context, in);
        }
    }

    private nds.smart.metadata.SmartLayerContent dataContents_;
    private zserio.runtime.array.Array layerDefinitions_;
}
