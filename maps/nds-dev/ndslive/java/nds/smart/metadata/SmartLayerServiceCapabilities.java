/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.metadata;

public class SmartLayerServiceCapabilities implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            tileServiceCapabilities_ = new zserio.runtime.array.DeltaContext();
            objectServiceCapabilities_ = new zserio.runtime.array.DeltaContext();
            pathServiceCapabilities_ = new zserio.runtime.array.DeltaContext();
            meshServiceCapabilities_ = new zserio.runtime.array.DeltaContext();
            pathHorizonServiceCapabilities_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getTileServiceCapabilities()
        {
            return tileServiceCapabilities_;
        }

        public zserio.runtime.array.DeltaContext getObjectServiceCapabilities()
        {
            return objectServiceCapabilities_;
        }

        public zserio.runtime.array.DeltaContext getPathServiceCapabilities()
        {
            return pathServiceCapabilities_;
        }

        public zserio.runtime.array.DeltaContext getMeshServiceCapabilities()
        {
            return meshServiceCapabilities_;
        }

        public zserio.runtime.array.DeltaContext getPathHorizonServiceCapabilities()
        {
            return pathHorizonServiceCapabilities_;
        }

        private zserio.runtime.array.DeltaContext tileServiceCapabilities_;
        private zserio.runtime.array.DeltaContext objectServiceCapabilities_;
        private zserio.runtime.array.DeltaContext pathServiceCapabilities_;
        private zserio.runtime.array.DeltaContext meshServiceCapabilities_;
        private zserio.runtime.array.DeltaContext pathHorizonServiceCapabilities_;
    };

    public SmartLayerServiceCapabilities(
            nds.smart.types.SmartLayerType type_)
    {
        this.type_ = type_;
    }

    public SmartLayerServiceCapabilities(zserio.runtime.io.BitStreamReader in,
            nds.smart.types.SmartLayerType type_)
            throws java.io.IOException
    {
        this.type_ = type_;

        read(in);
    }

    public SmartLayerServiceCapabilities(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            nds.smart.types.SmartLayerType type_)
            throws java.io.IOException
    {
        this.type_ = type_;

        read(context, in);
    }

    public int choiceTag()
    {
        switch (getType())
        {
        case SMART_LAYER_TILE:
            return CHOICE_tileServiceCapabilities;
        case SMART_LAYER_OBJECT:
            return CHOICE_objectServiceCapabilities;
        case SMART_LAYER_PATH:
            return CHOICE_pathServiceCapabilities;
        case SMART_LAYER_MESH:
            return CHOICE_meshServiceCapabilities;
        case SMART_LAYER_PATH_HORIZON:
            return CHOICE_pathHorizonServiceCapabilities;
        default:
            return UNDEFINED_CHOICE;
        }
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case SMART_LAYER_TILE:
            getTileServiceCapabilities().initPackingContext(zserioContext.getTileServiceCapabilities());
            break;
        case SMART_LAYER_OBJECT:
            getObjectServiceCapabilities().initPackingContext(zserioContext.getObjectServiceCapabilities());
            break;
        case SMART_LAYER_PATH:
            getPathServiceCapabilities().initPackingContext(zserioContext.getPathServiceCapabilities());
            break;
        case SMART_LAYER_MESH:
            getMeshServiceCapabilities().initPackingContext(zserioContext.getMeshServiceCapabilities());
            break;
        case SMART_LAYER_PATH_HORIZON:
            getPathHorizonServiceCapabilities().initPackingContext(zserioContext.getPathHorizonServiceCapabilities());
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case SMART_LAYER_TILE:
            endBitPosition += getTileServiceCapabilities().bitSizeOf(endBitPosition);
            break;
        case SMART_LAYER_OBJECT:
            endBitPosition += getObjectServiceCapabilities().bitSizeOf(endBitPosition);
            break;
        case SMART_LAYER_PATH:
            endBitPosition += getPathServiceCapabilities().bitSizeOf(endBitPosition);
            break;
        case SMART_LAYER_MESH:
            endBitPosition += getMeshServiceCapabilities().bitSizeOf(endBitPosition);
            break;
        case SMART_LAYER_PATH_HORIZON:
            endBitPosition += getPathHorizonServiceCapabilities().bitSizeOf(endBitPosition);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case SMART_LAYER_TILE:
            endBitPosition += getTileServiceCapabilities().bitSizeOf(zserioContext.getTileServiceCapabilities(), endBitPosition);
            break;
        case SMART_LAYER_OBJECT:
            endBitPosition += getObjectServiceCapabilities().bitSizeOf(zserioContext.getObjectServiceCapabilities(), endBitPosition);
            break;
        case SMART_LAYER_PATH:
            endBitPosition += getPathServiceCapabilities().bitSizeOf(zserioContext.getPathServiceCapabilities(), endBitPosition);
            break;
        case SMART_LAYER_MESH:
            endBitPosition += getMeshServiceCapabilities().bitSizeOf(zserioContext.getMeshServiceCapabilities(), endBitPosition);
            break;
        case SMART_LAYER_PATH_HORIZON:
            endBitPosition += getPathHorizonServiceCapabilities().bitSizeOf(zserioContext.getPathHorizonServiceCapabilities(), endBitPosition);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.smart.types.SmartLayerType getType()
    {
        return this.type_;
    }

    public nds.smart.metadata.TileServiceCapabilities getTileServiceCapabilities()
    {
        return (nds.smart.metadata.TileServiceCapabilities)objectChoice;
    }

    public void setTileServiceCapabilities(nds.smart.metadata.TileServiceCapabilities tileServiceCapabilities_)
    {
        objectChoice = tileServiceCapabilities_;
    }

    public nds.smart.metadata.ObjectServiceCapabilities getObjectServiceCapabilities()
    {
        return (nds.smart.metadata.ObjectServiceCapabilities)objectChoice;
    }

    public void setObjectServiceCapabilities(nds.smart.metadata.ObjectServiceCapabilities objectServiceCapabilities_)
    {
        objectChoice = objectServiceCapabilities_;
    }

    public nds.smart.metadata.PathServiceCapabilities getPathServiceCapabilities()
    {
        return (nds.smart.metadata.PathServiceCapabilities)objectChoice;
    }

    public void setPathServiceCapabilities(nds.smart.metadata.PathServiceCapabilities pathServiceCapabilities_)
    {
        objectChoice = pathServiceCapabilities_;
    }

    public nds.smart.metadata.MeshServiceCapabilities getMeshServiceCapabilities()
    {
        return (nds.smart.metadata.MeshServiceCapabilities)objectChoice;
    }

    public void setMeshServiceCapabilities(nds.smart.metadata.MeshServiceCapabilities meshServiceCapabilities_)
    {
        objectChoice = meshServiceCapabilities_;
    }

    public nds.smart.metadata.PathHorizonServiceCapabilities getPathHorizonServiceCapabilities()
    {
        return (nds.smart.metadata.PathHorizonServiceCapabilities)objectChoice;
    }

    public void setPathHorizonServiceCapabilities(nds.smart.metadata.PathHorizonServiceCapabilities pathHorizonServiceCapabilities_)
    {
        objectChoice = pathHorizonServiceCapabilities_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SmartLayerServiceCapabilities)
        {
            final SmartLayerServiceCapabilities that = (SmartLayerServiceCapabilities)obj;

            return
                    ((this.type_ == null) ? that.type_ == null : this.type_.getValue() == that.type_.getValue()) &&
                    (
                        (objectChoice == null && that.objectChoice == null) ||
                        (objectChoice != null && objectChoice.equals(that.objectChoice))
                    );
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getType());
        if (objectChoice != null)
        {
            switch (getType())
            {
            case SMART_LAYER_TILE:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.smart.metadata.TileServiceCapabilities)objectChoice);
                break;
            case SMART_LAYER_OBJECT:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.smart.metadata.ObjectServiceCapabilities)objectChoice);
                break;
            case SMART_LAYER_PATH:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.smart.metadata.PathServiceCapabilities)objectChoice);
                break;
            case SMART_LAYER_MESH:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.smart.metadata.MeshServiceCapabilities)objectChoice);
                break;
            case SMART_LAYER_PATH_HORIZON:
                result = zserio.runtime.HashCodeUtil.calcHashCode(result, (nds.smart.metadata.PathHorizonServiceCapabilities)objectChoice);
                break;
            default:
                break;
            }
        }

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        switch (getType())
        {
        case SMART_LAYER_TILE:
            objectChoice = new nds.smart.metadata.TileServiceCapabilities(in);
            break;
        case SMART_LAYER_OBJECT:
            objectChoice = new nds.smart.metadata.ObjectServiceCapabilities(in);
            break;
        case SMART_LAYER_PATH:
            objectChoice = new nds.smart.metadata.PathServiceCapabilities(in);
            break;
        case SMART_LAYER_MESH:
            objectChoice = new nds.smart.metadata.MeshServiceCapabilities(in);
            break;
        case SMART_LAYER_PATH_HORIZON:
            objectChoice = new nds.smart.metadata.PathHorizonServiceCapabilities(in);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case SMART_LAYER_TILE:
            objectChoice = new nds.smart.metadata.TileServiceCapabilities(zserioContext.getTileServiceCapabilities(), in);
            break;
        case SMART_LAYER_OBJECT:
            objectChoice = new nds.smart.metadata.ObjectServiceCapabilities(zserioContext.getObjectServiceCapabilities(), in);
            break;
        case SMART_LAYER_PATH:
            objectChoice = new nds.smart.metadata.PathServiceCapabilities(zserioContext.getPathServiceCapabilities(), in);
            break;
        case SMART_LAYER_MESH:
            objectChoice = new nds.smart.metadata.MeshServiceCapabilities(zserioContext.getMeshServiceCapabilities(), in);
            break;
        case SMART_LAYER_PATH_HORIZON:
            objectChoice = new nds.smart.metadata.PathHorizonServiceCapabilities(zserioContext.getPathHorizonServiceCapabilities(), in);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case SMART_LAYER_TILE:
            {
                endBitPosition += getTileServiceCapabilities().bitSizeOf(endBitPosition);
            }
            break;
        case SMART_LAYER_OBJECT:
            {
                endBitPosition += getObjectServiceCapabilities().bitSizeOf(endBitPosition);
            }
            break;
        case SMART_LAYER_PATH:
            {
                endBitPosition += getPathServiceCapabilities().bitSizeOf(endBitPosition);
            }
            break;
        case SMART_LAYER_MESH:
            {
                endBitPosition += getMeshServiceCapabilities().bitSizeOf(endBitPosition);
            }
            break;
        case SMART_LAYER_PATH_HORIZON:
            {
                endBitPosition += getPathHorizonServiceCapabilities().bitSizeOf(endBitPosition);
            }
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        switch (getType())
        {
        case SMART_LAYER_TILE:
            {
                endBitPosition = getTileServiceCapabilities().initializeOffsets(zserioContext.getTileServiceCapabilities(), endBitPosition);
            }
            break;
        case SMART_LAYER_OBJECT:
            {
                endBitPosition = getObjectServiceCapabilities().initializeOffsets(zserioContext.getObjectServiceCapabilities(), endBitPosition);
            }
            break;
        case SMART_LAYER_PATH:
            {
                endBitPosition = getPathServiceCapabilities().initializeOffsets(zserioContext.getPathServiceCapabilities(), endBitPosition);
            }
            break;
        case SMART_LAYER_MESH:
            {
                endBitPosition = getMeshServiceCapabilities().initializeOffsets(zserioContext.getMeshServiceCapabilities(), endBitPosition);
            }
            break;
        case SMART_LAYER_PATH_HORIZON:
            {
                endBitPosition = getPathHorizonServiceCapabilities().initializeOffsets(zserioContext.getPathHorizonServiceCapabilities(), endBitPosition);
            }
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        switch (getType())
        {
        case SMART_LAYER_TILE:
            getTileServiceCapabilities().write(out);
            break;
        case SMART_LAYER_OBJECT:
            getObjectServiceCapabilities().write(out);
            break;
        case SMART_LAYER_PATH:
            getPathServiceCapabilities().write(out);
            break;
        case SMART_LAYER_MESH:
            getMeshServiceCapabilities().write(out);
            break;
        case SMART_LAYER_PATH_HORIZON:
            getPathHorizonServiceCapabilities().write(out);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        switch (getType())
        {
        case SMART_LAYER_TILE:
            getTileServiceCapabilities().write(zserioContext.getTileServiceCapabilities(), out);
            break;
        case SMART_LAYER_OBJECT:
            getObjectServiceCapabilities().write(zserioContext.getObjectServiceCapabilities(), out);
            break;
        case SMART_LAYER_PATH:
            getPathServiceCapabilities().write(zserioContext.getPathServiceCapabilities(), out);
            break;
        case SMART_LAYER_MESH:
            getMeshServiceCapabilities().write(zserioContext.getMeshServiceCapabilities(), out);
            break;
        case SMART_LAYER_PATH_HORIZON:
            getPathHorizonServiceCapabilities().write(zserioContext.getPathHorizonServiceCapabilities(), out);
            break;
        default:
            throw new zserio.runtime.ZserioError("No match in choice SmartLayerServiceCapabilities: " + getType() + "!");
        }
    }

    public static final int CHOICE_tileServiceCapabilities = 0;
    public static final int CHOICE_objectServiceCapabilities = 1;
    public static final int CHOICE_pathServiceCapabilities = 2;
    public static final int CHOICE_meshServiceCapabilities = 3;
    public static final int CHOICE_pathHorizonServiceCapabilities = 4;
    public static final int UNDEFINED_CHOICE = -1;

    private final nds.smart.types.SmartLayerType type_;
    private java.lang.Object objectChoice;
}
