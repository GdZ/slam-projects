/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.path;

public class SmartLayerPathSegment implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            tileId_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getTileId()
        {
            return tileId_;
        }

        private zserio.runtime.array.DeltaContext tileId_;
    };

    public SmartLayerPathSegment(
            nds.smart.types.SmartLayerHeader header_)
    {
        this.header_ = header_;
    }

    public SmartLayerPathSegment(zserio.runtime.io.BitStreamReader in,
            nds.smart.types.SmartLayerHeader header_)
            throws java.io.IOException
    {
        this.header_ = header_;

        read(in);
    }

    public SmartLayerPathSegment(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            nds.smart.types.SmartLayerHeader header_)
            throws java.io.IOException
    {
        this.header_ = header_;

        read(context, in);
    }

    public SmartLayerPathSegment(
            nds.smart.types.SmartLayerHeader header_,
            int tileId_,
            boolean completeTileContent_,
            nds.smart.types.DataLayer[] layers_)
    {
        this(header_);

        setTileId(tileId_);
        setCompleteTileContent(completeTileContent_);
        setLayers(layers_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getTileId().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(tileId_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 32;
        endBitPosition += 1;
        endBitPosition += layers_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getTileId().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(tileId_));
        endBitPosition += 1;
        endBitPosition += layers_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.smart.types.SmartLayerHeader getHeader()
    {
        return this.header_;
    }

    public int getTileId()
    {
        return tileId_;
    }

    public void setTileId(int tileId_)
    {
        this.tileId_ = tileId_;
    }

    public boolean getCompleteTileContent()
    {
        return completeTileContent_;
    }

    public void setCompleteTileContent(boolean completeTileContent_)
    {
        this.completeTileContent_ = completeTileContent_;
    }

    public nds.smart.types.DataLayer[] getLayers()
    {
        return (layers_ == null) ? null : layers_.getRawArray();
    }

    public void setLayers(nds.smart.types.DataLayer[] layers_)
    {
        this.layers_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayer.class, layers_),
                new zserio.runtime.array.ArrayTraits.WriteObjectArrayTraits<nds.smart.types.DataLayer>(new ZserioElementFactory_layers()),
                zserio.runtime.array.ArrayType.NORMAL);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SmartLayerPathSegment)
        {
            final SmartLayerPathSegment that = (SmartLayerPathSegment)obj;

            return
                    ((this.header_ == null) ? that.header_ == null : this.header_.equals(that.header_)) &&
                    tileId_ == that.tileId_ &&
                    completeTileContent_ == that.completeTileContent_ &&
                    ((layers_ == null) ? that.layers_ == null : layers_.equals(that.layers_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getHeader());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, tileId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, completeTileContent_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, layers_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        tileId_ = in.readInt();

        completeTileContent_ = in.readBool();

        layers_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayer.class),
                new zserio.runtime.array.ArrayTraits.WriteObjectArrayTraits<nds.smart.types.DataLayer>(new ZserioElementFactory_layers()),
                zserio.runtime.array.ArrayType.NORMAL);
        layers_.read(in, (int)(getHeader().getNumDataLayers()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        tileId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getTileId().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(32)), in)).get();

        completeTileContent_ = in.readBool();

        layers_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.smart.types.DataLayer.class),
                new zserio.runtime.array.ArrayTraits.WriteObjectArrayTraits<nds.smart.types.DataLayer>(new ZserioElementFactory_layers()),
                zserio.runtime.array.ArrayType.NORMAL);
        layers_.read(in, (int)(getHeader().getNumDataLayers()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 32;
        endBitPosition += 1;
        endBitPosition = layers_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getTileId().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(32)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(tileId_));
        endBitPosition += 1;
        endBitPosition = layers_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeInt(tileId_);

        out.writeBool(completeTileContent_);

        if (layers_.size() != (int)(getHeader().getNumDataLayers()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field SmartLayerPathSegment.layers: " +
                    layers_.size() + " != " + (int)(getHeader().getNumDataLayers()) + "!");
        }
        layers_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getTileId().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(32)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(tileId_));

        out.writeBool(completeTileContent_);

        if (layers_.size() != (int)(getHeader().getNumDataLayers()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong array length for field SmartLayerPathSegment.layers: " +
                    layers_.size() + " != " + (int)(getHeader().getNumDataLayers()) + "!");
        }
        layers_.write(out);
    }

    private static final class ZserioElementFactory_layers implements zserio.runtime.array.ElementFactory<nds.smart.types.DataLayer>
    {
        @Override
        public nds.smart.types.DataLayer create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.smart.types.DataLayer(in);
        }
    }

    private final nds.smart.types.SmartLayerHeader header_;
    private int tileId_;
    private boolean completeTileContent_;
    private zserio.runtime.array.Array layers_;
}
