/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.path;

public class SmartLayerPathLocation implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            path_ = new nds.core.location.LocationGeometry.ZserioPackingContext();
        }

        public nds.core.location.LocationGeometry.ZserioPackingContext getPath()
        {
            return path_;
        }

        private nds.core.location.LocationGeometry.ZserioPackingContext path_;
    };

    public SmartLayerPathLocation(
            int numSegments_)
    {
        this.numSegments_ = numSegments_;
    }

    public SmartLayerPathLocation(zserio.runtime.io.BitStreamReader in,
            int numSegments_)
            throws java.io.IOException
    {
        this.numSegments_ = numSegments_;

        read(in);
    }

    public SmartLayerPathLocation(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            int numSegments_)
            throws java.io.IOException
    {
        this.numSegments_ = numSegments_;

        read(context, in);
    }

    public SmartLayerPathLocation(
            int numSegments_,
            nds.core.location.LocationGeometry path_,
            nds.core.geometry.LineRange2D[] ranges_)
    {
        this(numSegments_);

        setPath(path_);
        setRanges(ranges_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        path_.initPackingContext(zserioContext.getPath());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += path_.bitSizeOf(endBitPosition);
        if (isRangesUsed())
        {
            endBitPosition += ranges_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += path_.bitSizeOf(zserioContext.getPath(), endBitPosition);
        if (isRangesUsed())
        {
            endBitPosition += ranges_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public int getNumSegments()
    {
        return this.numSegments_;
    }

    public nds.core.location.LocationGeometry getPath()
    {
        return path_;
    }

    public void setPath(nds.core.location.LocationGeometry path_)
    {
        this.path_ = path_;
    }

    public nds.core.geometry.LineRange2D[] getRanges()
    {
        return (ranges_ == null) ? null : ranges_.getRawArray();
    }

    public void setRanges(nds.core.geometry.LineRange2D[] ranges_)
    {
        if (ranges_ == null)
        {
            this.ranges_ = null;
        }
        else
        {
            this.ranges_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.geometry.LineRange2D.class, ranges_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.geometry.LineRange2D>(new ZserioElementFactory_ranges()),
                    zserio.runtime.array.ArrayType.NORMAL);
        }
    }

    public boolean isRangesUsed()
    {
        return (getNumSegments() > 1);
    }

    public boolean isRangesSet()
    {
        return (ranges_ != null);
    }

    public void resetRanges()
    {
        this.ranges_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SmartLayerPathLocation)
        {
            final SmartLayerPathLocation that = (SmartLayerPathLocation)obj;

            return
                    this.numSegments_ == that.numSegments_ &&
                    ((path_ == null) ? that.path_ == null : path_.equals(that.path_)) &&
                    ((!isRangesUsed()) ? !that.isRangesUsed() :
                        ((ranges_ == null) ? that.ranges_ == null : ranges_.equals(that.ranges_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getNumSegments());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, path_);
        if (isRangesUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, ranges_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        path_ = new nds.core.location.LocationGeometry(in);

        if (getNumSegments() > 1)
        {
            ranges_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.geometry.LineRange2D.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.geometry.LineRange2D>(new ZserioElementFactory_ranges()),
                    zserio.runtime.array.ArrayType.NORMAL);
            ranges_.read(in, (int)(getNumSegments()));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        path_ = new nds.core.location.LocationGeometry(zserioContext.getPath(), in);

        if (getNumSegments() > 1)
        {
            ranges_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.core.geometry.LineRange2D.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.geometry.LineRange2D>(new ZserioElementFactory_ranges()),
                    zserio.runtime.array.ArrayType.NORMAL);
            ranges_.readPacked(in, (int)(getNumSegments()));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = path_.initializeOffsets(endBitPosition);
        if (isRangesUsed())
        {
            endBitPosition = ranges_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = path_.initializeOffsets(zserioContext.getPath(), endBitPosition);
        if (isRangesUsed())
        {
            endBitPosition = ranges_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        path_.write(out);

        if (isRangesUsed())
        {
            if (ranges_.size() != (int)(getNumSegments()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong array length for field SmartLayerPathLocation.ranges: " +
                        ranges_.size() + " != " + (int)(getNumSegments()) + "!");
            }
            ranges_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        path_.write(zserioContext.getPath(), out);

        if (isRangesUsed())
        {
            if (ranges_.size() != (int)(getNumSegments()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong array length for field SmartLayerPathLocation.ranges: " +
                        ranges_.size() + " != " + (int)(getNumSegments()) + "!");
            }
            ranges_.writePacked(out);
        }
    }

    private final class ZserioElementFactory_ranges implements zserio.runtime.array.PackableElementFactory<nds.core.geometry.LineRange2D>
    {
        @Override
        public nds.core.geometry.LineRange2D create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.core.geometry.LineRange2D(in, getPath().getLine());
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.core.geometry.LineRange2D.ZserioPackingContext();
        }

        @Override
        public nds.core.geometry.LineRange2D create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.core.geometry.LineRange2D(context, in, getPath().getLine());
        }
    }

    private final int numSegments_;
    private nds.core.location.LocationGeometry path_;
    private zserio.runtime.array.Array ranges_;
}
