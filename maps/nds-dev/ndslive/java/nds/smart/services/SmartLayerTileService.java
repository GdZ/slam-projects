/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.services;

public final class SmartLayerTileService
{
    public static abstract class SmartLayerTileServiceService implements zserio.runtime.service.ServiceInterface
    {
        public SmartLayerTileServiceService()
        {
            methodMap = new java.util.HashMap<java.lang.String, Method>();
            methodMap.put(getServiceModuleDefinition_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceModuleDefinitionMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getServiceDefinition_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceDefinitionMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getServiceNodeSystemReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceNodeSystemReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getServiceNodeLegalInfo_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceNodeLegalInfoMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getTileServiceCapabilities_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getTileServiceCapabilitiesMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLayerByTileId_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLayerByTileIdMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLayerByTileIdList_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLayerByTileIdListMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getHeaderOnlyByTileId_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getHeaderOnlyByTileIdMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getHeaderOnlyByTileIdList_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getHeaderOnlyByTileIdListMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getHeaderOnlyListInTile_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getHeaderOnlyListInTileMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getDeltaLayerByTileId_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getDeltaLayerByTileIdMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getDeltaLayerByTileIdList_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getDeltaLayerByTileIdListMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLayerByTileVersion_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLayerByTileVersionMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLayerByTileVersionList_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLayerByTileVersionListMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getSingleDataLayerByTileId_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getSingleDataLayerByTileIdMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getDataLayerListByTileIdList_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getDataLayerListByTileIdListMethod(requestData, context);
                    }
                }
            );
        }

        @Override
        public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> callMethod(
                java.lang.String methodName, byte[] requestData, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final Method method = methodMap.get(methodName);
            if (method == null)
            {
                throw new zserio.runtime.service.ServiceException(
                        "nds.smart.services.SmartLayerTileService: Method '" + methodName + "' does not exist!");
            }
            return method.invoke(requestData, context);
        }

        public static java.lang.String serviceFullName()
        {
            return SERVICE_FULL_NAME;
        }

        public static java.lang.String[] methodNames()
        {
            return new java.lang.String[]
            {
                getServiceModuleDefinition_METHOD_NAME,
                getServiceDefinition_METHOD_NAME,
                getServiceNodeSystemReference_METHOD_NAME,
                getServiceNodeLegalInfo_METHOD_NAME,
                getTileServiceCapabilities_METHOD_NAME,
                getLayerByTileId_METHOD_NAME,
                getLayerByTileIdList_METHOD_NAME,
                getHeaderOnlyByTileId_METHOD_NAME,
                getHeaderOnlyByTileIdList_METHOD_NAME,
                getHeaderOnlyListInTile_METHOD_NAME,
                getDeltaLayerByTileId_METHOD_NAME,
                getDeltaLayerByTileIdList_METHOD_NAME,
                getLayerByTileVersion_METHOD_NAME,
                getLayerByTileVersionList_METHOD_NAME,
                getSingleDataLayerByTileId_METHOD_NAME,
                getDataLayerListByTileIdList_METHOD_NAME
            };
        }

        protected abstract nds.system.types.ModuleDefinition getServiceModuleDefinitionImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.metadata.SmartLayerDefinition getServiceDefinitionImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.system.types.NdsSystemToken getServiceNodeSystemReferenceImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.metadata.TileServiceCapabilitiesResponse getTileServiceCapabilitiesImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTile getLayerByTileIdImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTileList getLayerByTileIdListImpl(
                nds.core.types.TileIdList request, java.lang.Object context);

        protected abstract nds.smart.types.SmartLayerHeader getHeaderOnlyByTileIdImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyByTileIdListImpl(
                nds.core.types.TileIdList request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyListInTileImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTile getDeltaLayerByTileIdImpl(
                nds.smart.tile.DeltaTileInfo request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTileList getDeltaLayerByTileIdListImpl(
                nds.smart.tile.DeltaTileListInfo request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTile getLayerByTileVersionImpl(
                nds.smart.tile.SmartLayerTileVersionRequest request, java.lang.Object context);

        protected abstract nds.smart.tile.SmartLayerTileList getLayerByTileVersionListImpl(
                nds.smart.tile.SmartLayerTileVersionRequestList request, java.lang.Object context);

        protected abstract nds.smart.types.DataLayer getSingleDataLayerByTileIdImpl(
                nds.smart.tile.DataLayerTileVersionRequest request, java.lang.Object context);

        protected abstract nds.smart.tile.MultiDataLayerMultiTileResponse getDataLayerListByTileIdListImpl(
                nds.smart.tile.MultiDataLayerMultiTileRequest request, java.lang.Object context);

        private zserio.runtime.service.ObjectServiceData<nds.system.types.ModuleDefinition> getServiceModuleDefinitionMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.ModuleDefinition response = getServiceModuleDefinitionImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.metadata.SmartLayerDefinition> getServiceDefinitionMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.smart.metadata.SmartLayerDefinition response = getServiceDefinitionImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.system.types.NdsSystemToken> getServiceNodeSystemReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.NdsSystemToken response = getServiceNodeSystemReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.system.types.NdsNodeLegalInfo> getServiceNodeLegalInfoMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.NdsNodeLegalInfo response = getServiceNodeLegalInfoImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.metadata.TileServiceCapabilitiesResponse> getTileServiceCapabilitiesMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.smart.metadata.TileServiceCapabilitiesResponse response = getTileServiceCapabilitiesImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTile> getLayerByTileIdMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.tile.SmartLayerTile response = getLayerByTileIdImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTileList> getLayerByTileIdListMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileIdList request =
                        new nds.core.types.TileIdList(reader);
                final nds.smart.tile.SmartLayerTileList response = getLayerByTileIdListImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.types.SmartLayerHeader> getHeaderOnlyByTileIdMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.types.SmartLayerHeader response = getHeaderOnlyByTileIdImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTileHeaderList> getHeaderOnlyByTileIdListMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileIdList request =
                        new nds.core.types.TileIdList(reader);
                final nds.smart.tile.SmartLayerTileHeaderList response = getHeaderOnlyByTileIdListImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTileHeaderList> getHeaderOnlyListInTileMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.tile.SmartLayerTileHeaderList response = getHeaderOnlyListInTileImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTile> getDeltaLayerByTileIdMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.DeltaTileInfo request =
                        new nds.smart.tile.DeltaTileInfo(reader);
                final nds.smart.tile.SmartLayerTile response = getDeltaLayerByTileIdImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTileList> getDeltaLayerByTileIdListMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.DeltaTileListInfo request =
                        new nds.smart.tile.DeltaTileListInfo(reader);
                final nds.smart.tile.SmartLayerTileList response = getDeltaLayerByTileIdListImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTile> getLayerByTileVersionMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.SmartLayerTileVersionRequest request =
                        new nds.smart.tile.SmartLayerTileVersionRequest(reader);
                final nds.smart.tile.SmartLayerTile response = getLayerByTileVersionImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.SmartLayerTileList> getLayerByTileVersionListMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.SmartLayerTileVersionRequestList request =
                        new nds.smart.tile.SmartLayerTileVersionRequestList(reader);
                final nds.smart.tile.SmartLayerTileList response = getLayerByTileVersionListImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.types.DataLayer> getSingleDataLayerByTileIdMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.DataLayerTileVersionRequest request =
                        new nds.smart.tile.DataLayerTileVersionRequest(reader);
                final nds.smart.types.DataLayer response = getSingleDataLayerByTileIdImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.tile.MultiDataLayerMultiTileResponse> getDataLayerListByTileIdListMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.tile.MultiDataLayerMultiTileRequest request =
                        new nds.smart.tile.MultiDataLayerMultiTileRequest(reader);
                final nds.smart.tile.MultiDataLayerMultiTileResponse response = getDataLayerListByTileIdListImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        private interface Method
        {
            public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                    byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError;
        }

        private static final java.lang.String SERVICE_FULL_NAME = "nds.smart.services.SmartLayerTileService";

        private final java.util.Map<java.lang.String, Method> methodMap;
    }

    public static final class SmartLayerTileServiceClient
    {
        public SmartLayerTileServiceClient(zserio.runtime.service.ServiceClientInterface serviceClient)
        {
            this.serviceClient = serviceClient;
        }

        public nds.system.types.ModuleDefinition getServiceModuleDefinitionMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceModuleDefinition_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.ModuleDefinition response =
                        new nds.system.types.ModuleDefinition(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.system.types.ModuleDefinition getServiceModuleDefinitionMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceModuleDefinitionMethod(request, null);
        }

        public nds.smart.metadata.SmartLayerDefinition getServiceDefinitionMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceDefinition_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.metadata.SmartLayerDefinition response =
                        new nds.smart.metadata.SmartLayerDefinition(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.metadata.SmartLayerDefinition getServiceDefinitionMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceDefinitionMethod(request, null);
        }

        public nds.system.types.NdsSystemToken getServiceNodeSystemReferenceMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceNodeSystemReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.NdsSystemToken response =
                        new nds.system.types.NdsSystemToken(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.system.types.NdsSystemToken getServiceNodeSystemReferenceMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceNodeSystemReferenceMethod(request, null);
        }

        public nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceNodeLegalInfo_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.NdsNodeLegalInfo response =
                        new nds.system.types.NdsNodeLegalInfo(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceNodeLegalInfoMethod(request, null);
        }

        public nds.smart.metadata.TileServiceCapabilitiesResponse getTileServiceCapabilitiesMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getTileServiceCapabilities_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.metadata.TileServiceCapabilitiesResponse response =
                        new nds.smart.metadata.TileServiceCapabilitiesResponse(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.metadata.TileServiceCapabilitiesResponse getTileServiceCapabilitiesMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getTileServiceCapabilitiesMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTile getLayerByTileIdMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLayerByTileId_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTile response =
                        new nds.smart.tile.SmartLayerTile(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTile getLayerByTileIdMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getLayerByTileIdMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTileList getLayerByTileIdListMethod(
                nds.core.types.TileIdList request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLayerByTileIdList_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTileList response =
                        new nds.smart.tile.SmartLayerTileList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTileList getLayerByTileIdListMethod(
                nds.core.types.TileIdList request) throws zserio.runtime.ZserioError
        {
            return getLayerByTileIdListMethod(request, null);
        }

        public nds.smart.types.SmartLayerHeader getHeaderOnlyByTileIdMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getHeaderOnlyByTileId_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.types.SmartLayerHeader response =
                        new nds.smart.types.SmartLayerHeader(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.types.SmartLayerHeader getHeaderOnlyByTileIdMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getHeaderOnlyByTileIdMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyByTileIdListMethod(
                nds.core.types.TileIdList request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getHeaderOnlyByTileIdList_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTileHeaderList response =
                        new nds.smart.tile.SmartLayerTileHeaderList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyByTileIdListMethod(
                nds.core.types.TileIdList request) throws zserio.runtime.ZserioError
        {
            return getHeaderOnlyByTileIdListMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyListInTileMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getHeaderOnlyListInTile_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTileHeaderList response =
                        new nds.smart.tile.SmartLayerTileHeaderList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTileHeaderList getHeaderOnlyListInTileMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getHeaderOnlyListInTileMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTile getDeltaLayerByTileIdMethod(
                nds.smart.tile.DeltaTileInfo request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getDeltaLayerByTileId_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTile response =
                        new nds.smart.tile.SmartLayerTile(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTile getDeltaLayerByTileIdMethod(
                nds.smart.tile.DeltaTileInfo request) throws zserio.runtime.ZserioError
        {
            return getDeltaLayerByTileIdMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTileList getDeltaLayerByTileIdListMethod(
                nds.smart.tile.DeltaTileListInfo request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getDeltaLayerByTileIdList_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTileList response =
                        new nds.smart.tile.SmartLayerTileList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTileList getDeltaLayerByTileIdListMethod(
                nds.smart.tile.DeltaTileListInfo request) throws zserio.runtime.ZserioError
        {
            return getDeltaLayerByTileIdListMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTile getLayerByTileVersionMethod(
                nds.smart.tile.SmartLayerTileVersionRequest request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLayerByTileVersion_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTile response =
                        new nds.smart.tile.SmartLayerTile(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTile getLayerByTileVersionMethod(
                nds.smart.tile.SmartLayerTileVersionRequest request) throws zserio.runtime.ZserioError
        {
            return getLayerByTileVersionMethod(request, null);
        }

        public nds.smart.tile.SmartLayerTileList getLayerByTileVersionListMethod(
                nds.smart.tile.SmartLayerTileVersionRequestList request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLayerByTileVersionList_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.SmartLayerTileList response =
                        new nds.smart.tile.SmartLayerTileList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.SmartLayerTileList getLayerByTileVersionListMethod(
                nds.smart.tile.SmartLayerTileVersionRequestList request) throws zserio.runtime.ZserioError
        {
            return getLayerByTileVersionListMethod(request, null);
        }

        public nds.smart.types.DataLayer getSingleDataLayerByTileIdMethod(
                nds.smart.tile.DataLayerTileVersionRequest request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getSingleDataLayerByTileId_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.types.DataLayer response =
                        new nds.smart.types.DataLayer(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.types.DataLayer getSingleDataLayerByTileIdMethod(
                nds.smart.tile.DataLayerTileVersionRequest request) throws zserio.runtime.ZserioError
        {
            return getSingleDataLayerByTileIdMethod(request, null);
        }

        public nds.smart.tile.MultiDataLayerMultiTileResponse getDataLayerListByTileIdListMethod(
                nds.smart.tile.MultiDataLayerMultiTileRequest request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getDataLayerListByTileIdList_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.tile.MultiDataLayerMultiTileResponse response =
                        new nds.smart.tile.MultiDataLayerMultiTileResponse(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerTileService: " + exception, exception);
            }
        }

        public nds.smart.tile.MultiDataLayerMultiTileResponse getDataLayerListByTileIdListMethod(
                nds.smart.tile.MultiDataLayerMultiTileRequest request) throws zserio.runtime.ZserioError
        {
            return getDataLayerListByTileIdListMethod(request, null);
        }

        private final zserio.runtime.service.ServiceClientInterface serviceClient;
    }

    public static final String getServiceModuleDefinition_METHOD_NAME = "getServiceModuleDefinition";
    public static final String getServiceDefinition_METHOD_NAME = "getServiceDefinition";
    public static final String getServiceNodeSystemReference_METHOD_NAME = "getServiceNodeSystemReference";
    public static final String getServiceNodeLegalInfo_METHOD_NAME = "getServiceNodeLegalInfo";
    public static final String getTileServiceCapabilities_METHOD_NAME = "getTileServiceCapabilities";
    public static final String getLayerByTileId_METHOD_NAME = "getLayerByTileId";
    public static final String getLayerByTileIdList_METHOD_NAME = "getLayerByTileIdList";
    public static final String getHeaderOnlyByTileId_METHOD_NAME = "getHeaderOnlyByTileId";
    public static final String getHeaderOnlyByTileIdList_METHOD_NAME = "getHeaderOnlyByTileIdList";
    public static final String getHeaderOnlyListInTile_METHOD_NAME = "getHeaderOnlyListInTile";
    public static final String getDeltaLayerByTileId_METHOD_NAME = "getDeltaLayerByTileId";
    public static final String getDeltaLayerByTileIdList_METHOD_NAME = "getDeltaLayerByTileIdList";
    public static final String getLayerByTileVersion_METHOD_NAME = "getLayerByTileVersion";
    public static final String getLayerByTileVersionList_METHOD_NAME = "getLayerByTileVersionList";
    public static final String getSingleDataLayerByTileId_METHOD_NAME = "getSingleDataLayerByTileId";
    public static final String getDataLayerListByTileIdList_METHOD_NAME = "getDataLayerListByTileIdList";
}
