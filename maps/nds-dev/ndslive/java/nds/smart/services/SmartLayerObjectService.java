/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.smart.services;

public final class SmartLayerObjectService
{
    public static abstract class SmartLayerObjectServiceService implements zserio.runtime.service.ServiceInterface
    {
        public SmartLayerObjectServiceService()
        {
            methodMap = new java.util.HashMap<java.lang.String, Method>();
            methodMap.put(getServiceModuleDefinition_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceModuleDefinitionMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getObjectServiceDefinition_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getObjectServiceDefinitionMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getServiceNodeSystemReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceNodeSystemReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getServiceNodeLegalInfo_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getServiceNodeLegalInfoMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getObjectServiceCapabilities_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getObjectServiceCapabilitiesMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getObjectByReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getObjectByReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getReferencesInTile_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getReferencesInTileMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLocationPathForObjectReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLocationPathForObjectReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getLocationIdForObjectReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getLocationIdForObjectReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getObjectsInTile_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getObjectsInTileMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getHeaderOnlyByObjectReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getHeaderOnlyByObjectReferenceMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getHeaderOnlyListInTile_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getHeaderOnlyListInTileMethod(requestData, context);
                    }
                }
            );
            methodMap.put(getSingleDataLayerByObjectReference_METHOD_NAME,
                new Method()
                {
                    @Override
                    public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                            byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
                    {
                        return getSingleDataLayerByObjectReferenceMethod(requestData, context);
                    }
                }
            );
        }

        @Override
        public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> callMethod(
                java.lang.String methodName, byte[] requestData, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final Method method = methodMap.get(methodName);
            if (method == null)
            {
                throw new zserio.runtime.service.ServiceException(
                        "nds.smart.services.SmartLayerObjectService: Method '" + methodName + "' does not exist!");
            }
            return method.invoke(requestData, context);
        }

        public static java.lang.String serviceFullName()
        {
            return SERVICE_FULL_NAME;
        }

        public static java.lang.String[] methodNames()
        {
            return new java.lang.String[]
            {
                getServiceModuleDefinition_METHOD_NAME,
                getObjectServiceDefinition_METHOD_NAME,
                getServiceNodeSystemReference_METHOD_NAME,
                getServiceNodeLegalInfo_METHOD_NAME,
                getObjectServiceCapabilities_METHOD_NAME,
                getObjectByReference_METHOD_NAME,
                getReferencesInTile_METHOD_NAME,
                getLocationPathForObjectReference_METHOD_NAME,
                getLocationIdForObjectReference_METHOD_NAME,
                getObjectsInTile_METHOD_NAME,
                getHeaderOnlyByObjectReference_METHOD_NAME,
                getHeaderOnlyListInTile_METHOD_NAME,
                getSingleDataLayerByObjectReference_METHOD_NAME
            };
        }

        protected abstract nds.system.types.ModuleDefinition getServiceModuleDefinitionImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.object.SmartLayerObjectDefinition getObjectServiceDefinitionImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.system.types.NdsSystemToken getServiceNodeSystemReferenceImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.metadata.ObjectServiceCapabilitiesResponse getObjectServiceCapabilitiesImpl(
                nds.core.types.Empty request, java.lang.Object context);

        protected abstract nds.smart.object.SmartLayerObject getObjectByReferenceImpl(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context);

        protected abstract nds.smart.object.SmartLayerObjectReferenceList getReferencesInTileImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.core.location.RoadLocationPath getLocationPathForObjectReferenceImpl(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context);

        protected abstract nds.core.location.RoadLocationId getLocationIdForObjectReferenceImpl(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context);

        protected abstract nds.smart.object.SmartLayerObjectList getObjectsInTileImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.smart.types.SmartLayerHeader getHeaderOnlyByObjectReferenceImpl(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context);

        protected abstract nds.smart.object.SmartLayerObjectHeaderList getHeaderOnlyListInTileImpl(
                nds.core.types.TileId request, java.lang.Object context);

        protected abstract nds.smart.types.DataLayer getSingleDataLayerByObjectReferenceImpl(
                nds.smart.object.DataLayerObjectVersionRequest request, java.lang.Object context);

        private zserio.runtime.service.ObjectServiceData<nds.system.types.ModuleDefinition> getServiceModuleDefinitionMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.ModuleDefinition response = getServiceModuleDefinitionImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.object.SmartLayerObjectDefinition> getObjectServiceDefinitionMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.smart.object.SmartLayerObjectDefinition response = getObjectServiceDefinitionImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.system.types.NdsSystemToken> getServiceNodeSystemReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.NdsSystemToken response = getServiceNodeSystemReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.system.types.NdsNodeLegalInfo> getServiceNodeLegalInfoMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.system.types.NdsNodeLegalInfo response = getServiceNodeLegalInfoImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.metadata.ObjectServiceCapabilitiesResponse> getObjectServiceCapabilitiesMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.Empty request =
                        new nds.core.types.Empty(reader);
                final nds.smart.metadata.ObjectServiceCapabilitiesResponse response = getObjectServiceCapabilitiesImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.object.SmartLayerObject> getObjectByReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.object.SmartLayerObjectReference request =
                        new nds.smart.object.SmartLayerObjectReference(reader);
                final nds.smart.object.SmartLayerObject response = getObjectByReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.object.SmartLayerObjectReferenceList> getReferencesInTileMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.object.SmartLayerObjectReferenceList response = getReferencesInTileImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.core.location.RoadLocationPath> getLocationPathForObjectReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.object.SmartLayerObjectReference request =
                        new nds.smart.object.SmartLayerObjectReference(reader);
                final nds.core.location.RoadLocationPath response = getLocationPathForObjectReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.core.location.RoadLocationId> getLocationIdForObjectReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.object.SmartLayerObjectReference request =
                        new nds.smart.object.SmartLayerObjectReference(reader);
                final nds.core.location.RoadLocationId response = getLocationIdForObjectReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.object.SmartLayerObjectList> getObjectsInTileMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.object.SmartLayerObjectList response = getObjectsInTileImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.types.SmartLayerHeader> getHeaderOnlyByObjectReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.object.SmartLayerObjectReference request =
                        new nds.smart.object.SmartLayerObjectReference(reader);
                final nds.smart.types.SmartLayerHeader response = getHeaderOnlyByObjectReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.object.SmartLayerObjectHeaderList> getHeaderOnlyListInTileMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.core.types.TileId request =
                        new nds.core.types.TileId(reader);
                final nds.smart.object.SmartLayerObjectHeaderList response = getHeaderOnlyListInTileImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private zserio.runtime.service.ObjectServiceData<nds.smart.types.DataLayer> getSingleDataLayerByObjectReferenceMethod(
                byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError
        {
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(requestData);
                final nds.smart.object.DataLayerObjectVersionRequest request =
                        new nds.smart.object.DataLayerObjectVersionRequest(reader);
                final nds.smart.types.DataLayer response = getSingleDataLayerByObjectReferenceImpl(request, context);

                return new zserio.runtime.service.ObjectServiceData<>(response);
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        private interface Method
        {
            public zserio.runtime.service.ServiceData<? extends zserio.runtime.io.Writer> invoke(
                    byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError;
        }

        private static final java.lang.String SERVICE_FULL_NAME = "nds.smart.services.SmartLayerObjectService";

        private final java.util.Map<java.lang.String, Method> methodMap;
    }

    public static final class SmartLayerObjectServiceClient
    {
        public SmartLayerObjectServiceClient(zserio.runtime.service.ServiceClientInterface serviceClient)
        {
            this.serviceClient = serviceClient;
        }

        public nds.system.types.ModuleDefinition getServiceModuleDefinitionMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceModuleDefinition_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.ModuleDefinition response =
                        new nds.system.types.ModuleDefinition(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.system.types.ModuleDefinition getServiceModuleDefinitionMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceModuleDefinitionMethod(request, null);
        }

        public nds.smart.object.SmartLayerObjectDefinition getObjectServiceDefinitionMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getObjectServiceDefinition_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.object.SmartLayerObjectDefinition response =
                        new nds.smart.object.SmartLayerObjectDefinition(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.object.SmartLayerObjectDefinition getObjectServiceDefinitionMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getObjectServiceDefinitionMethod(request, null);
        }

        public nds.system.types.NdsSystemToken getServiceNodeSystemReferenceMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceNodeSystemReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.NdsSystemToken response =
                        new nds.system.types.NdsSystemToken(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.system.types.NdsSystemToken getServiceNodeSystemReferenceMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceNodeSystemReferenceMethod(request, null);
        }

        public nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getServiceNodeLegalInfo_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.system.types.NdsNodeLegalInfo response =
                        new nds.system.types.NdsNodeLegalInfo(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.system.types.NdsNodeLegalInfo getServiceNodeLegalInfoMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getServiceNodeLegalInfoMethod(request, null);
        }

        public nds.smart.metadata.ObjectServiceCapabilitiesResponse getObjectServiceCapabilitiesMethod(
                nds.core.types.Empty request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getObjectServiceCapabilities_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.metadata.ObjectServiceCapabilitiesResponse response =
                        new nds.smart.metadata.ObjectServiceCapabilitiesResponse(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.metadata.ObjectServiceCapabilitiesResponse getObjectServiceCapabilitiesMethod(
                nds.core.types.Empty request) throws zserio.runtime.ZserioError
        {
            return getObjectServiceCapabilitiesMethod(request, null);
        }

        public nds.smart.object.SmartLayerObject getObjectByReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getObjectByReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.object.SmartLayerObject response =
                        new nds.smart.object.SmartLayerObject(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.object.SmartLayerObject getObjectByReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request) throws zserio.runtime.ZserioError
        {
            return getObjectByReferenceMethod(request, null);
        }

        public nds.smart.object.SmartLayerObjectReferenceList getReferencesInTileMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getReferencesInTile_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.object.SmartLayerObjectReferenceList response =
                        new nds.smart.object.SmartLayerObjectReferenceList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.object.SmartLayerObjectReferenceList getReferencesInTileMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getReferencesInTileMethod(request, null);
        }

        public nds.core.location.RoadLocationPath getLocationPathForObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLocationPathForObjectReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.core.location.RoadLocationPath response =
                        new nds.core.location.RoadLocationPath(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.core.location.RoadLocationPath getLocationPathForObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request) throws zserio.runtime.ZserioError
        {
            return getLocationPathForObjectReferenceMethod(request, null);
        }

        public nds.core.location.RoadLocationId getLocationIdForObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getLocationIdForObjectReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.core.location.RoadLocationId response =
                        new nds.core.location.RoadLocationId(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.core.location.RoadLocationId getLocationIdForObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request) throws zserio.runtime.ZserioError
        {
            return getLocationIdForObjectReferenceMethod(request, null);
        }

        public nds.smart.object.SmartLayerObjectList getObjectsInTileMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getObjectsInTile_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.object.SmartLayerObjectList response =
                        new nds.smart.object.SmartLayerObjectList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.object.SmartLayerObjectList getObjectsInTileMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getObjectsInTileMethod(request, null);
        }

        public nds.smart.types.SmartLayerHeader getHeaderOnlyByObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getHeaderOnlyByObjectReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.types.SmartLayerHeader response =
                        new nds.smart.types.SmartLayerHeader(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.types.SmartLayerHeader getHeaderOnlyByObjectReferenceMethod(
                nds.smart.object.SmartLayerObjectReference request) throws zserio.runtime.ZserioError
        {
            return getHeaderOnlyByObjectReferenceMethod(request, null);
        }

        public nds.smart.object.SmartLayerObjectHeaderList getHeaderOnlyListInTileMethod(
                nds.core.types.TileId request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getHeaderOnlyListInTile_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.object.SmartLayerObjectHeaderList response =
                        new nds.smart.object.SmartLayerObjectHeaderList(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.object.SmartLayerObjectHeaderList getHeaderOnlyListInTileMethod(
                nds.core.types.TileId request) throws zserio.runtime.ZserioError
        {
            return getHeaderOnlyListInTileMethod(request, null);
        }

        public nds.smart.types.DataLayer getSingleDataLayerByObjectReferenceMethod(
                nds.smart.object.DataLayerObjectVersionRequest request, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final byte[] responseData = serviceClient.callMethod(getSingleDataLayerByObjectReference_METHOD_NAME,
                    new zserio.runtime.service.ObjectServiceData<>(request), context);
            try
            {
                final zserio.runtime.io.ByteArrayBitStreamReader reader =
                        new zserio.runtime.io.ByteArrayBitStreamReader(responseData);
                final nds.smart.types.DataLayer response =
                        new nds.smart.types.DataLayer(reader);
                return response;
            }
            catch (java.io.IOException exception)
            {
                throw new zserio.runtime.ZserioError("SmartLayerObjectService: " + exception, exception);
            }
        }

        public nds.smart.types.DataLayer getSingleDataLayerByObjectReferenceMethod(
                nds.smart.object.DataLayerObjectVersionRequest request) throws zserio.runtime.ZserioError
        {
            return getSingleDataLayerByObjectReferenceMethod(request, null);
        }

        private final zserio.runtime.service.ServiceClientInterface serviceClient;
    }

    public static final String getServiceModuleDefinition_METHOD_NAME = "getServiceModuleDefinition";
    public static final String getObjectServiceDefinition_METHOD_NAME = "getObjectServiceDefinition";
    public static final String getServiceNodeSystemReference_METHOD_NAME = "getServiceNodeSystemReference";
    public static final String getServiceNodeLegalInfo_METHOD_NAME = "getServiceNodeLegalInfo";
    public static final String getObjectServiceCapabilities_METHOD_NAME = "getObjectServiceCapabilities";
    public static final String getObjectByReference_METHOD_NAME = "getObjectByReference";
    public static final String getReferencesInTile_METHOD_NAME = "getReferencesInTile";
    public static final String getLocationPathForObjectReference_METHOD_NAME = "getLocationPathForObjectReference";
    public static final String getLocationIdForObjectReference_METHOD_NAME = "getLocationIdForObjectReference";
    public static final String getObjectsInTile_METHOD_NAME = "getObjectsInTile";
    public static final String getHeaderOnlyByObjectReference_METHOD_NAME = "getHeaderOnlyByObjectReference";
    public static final String getHeaderOnlyListInTile_METHOD_NAME = "getHeaderOnlyListInTile";
    public static final String getSingleDataLayerByObjectReference_METHOD_NAME = "getSingleDataLayerByObjectReference";
}
