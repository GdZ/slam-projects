/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.system.types;

public class ExternDescriptor implements zserio.runtime.io.Writer, zserio.runtime.SizeOf
{
    public ExternDescriptor()
    {
    }

    public ExternDescriptor(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public ExternDescriptor(
            java.lang.String name_,
            java.lang.String version_,
            java.lang.String target_)
    {
        setName(name_);
        setVersion(version_);
        setTarget(target_);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(version_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(target_);

        return (int)(endBitPosition - bitPosition);
    }

    public java.lang.String getName()
    {
        return name_;
    }

    public void setName(java.lang.String name_)
    {
        this.name_ = name_;
    }

    public java.lang.String getVersion()
    {
        return version_;
    }

    public void setVersion(java.lang.String version_)
    {
        this.version_ = version_;
    }

    public java.lang.String getTarget()
    {
        return target_;
    }

    public void setTarget(java.lang.String target_)
    {
        this.target_ = target_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof ExternDescriptor)
        {
            final ExternDescriptor that = (ExternDescriptor)obj;

            return
                    ((name_ == null) ? that.name_ == null : name_.equals(that.name_)) &&
                    ((version_ == null) ? that.version_ == null : version_.equals(that.version_)) &&
                    ((target_ == null) ? that.target_ == null : target_.equals(that.target_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, name_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, version_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, target_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        name_ = in.readString();

        version_ = in.readString();

        target_ = in.readString();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(name_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(version_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfString(target_);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeString(name_);

        out.writeString(version_);

        out.writeString(target_);
    }

    private java.lang.String name_;
    private java.lang.String version_;
    private java.lang.String target_;
}
