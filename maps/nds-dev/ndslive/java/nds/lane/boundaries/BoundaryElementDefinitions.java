/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.lane.boundaries;

public class BoundaryElementDefinitions implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
    };

    public BoundaryElementDefinitions()
    {
    }

    public BoundaryElementDefinitions(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public BoundaryElementDefinitions(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public BoundaryElementDefinitions(
            nds.lane.boundaries.BoundaryElement[] boundaryElementList_)
    {
        setBoundaryElementList(boundaryElementList_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += boundaryElementList_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += boundaryElementList_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.lane.boundaries.BoundaryElement[] getBoundaryElementList()
    {
        return (boundaryElementList_ == null) ? null : boundaryElementList_.getRawArray();
    }

    public void setBoundaryElementList(nds.lane.boundaries.BoundaryElement[] boundaryElementList_)
    {
        this.boundaryElementList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.lane.boundaries.BoundaryElement.class, boundaryElementList_),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.lane.boundaries.BoundaryElement>(new ZserioElementFactory_boundaryElementList()),
                zserio.runtime.array.ArrayType.AUTO);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof BoundaryElementDefinitions)
        {
            final BoundaryElementDefinitions that = (BoundaryElementDefinitions)obj;

            return
                    ((boundaryElementList_ == null) ? that.boundaryElementList_ == null : boundaryElementList_.equals(that.boundaryElementList_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, boundaryElementList_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        boundaryElementList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.lane.boundaries.BoundaryElement.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.lane.boundaries.BoundaryElement>(new ZserioElementFactory_boundaryElementList()),
                zserio.runtime.array.ArrayType.AUTO);
        boundaryElementList_.read(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        boundaryElementList_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.ObjectRawArray<>(nds.lane.boundaries.BoundaryElement.class),
                new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.lane.boundaries.BoundaryElement>(new ZserioElementFactory_boundaryElementList()),
                zserio.runtime.array.ArrayType.AUTO);
        boundaryElementList_.readPacked(in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = boundaryElementList_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = boundaryElementList_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        boundaryElementList_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        boundaryElementList_.writePacked(out);
    }

    private static final class ZserioElementFactory_boundaryElementList implements zserio.runtime.array.PackableElementFactory<nds.lane.boundaries.BoundaryElement>
    {
        @Override
        public nds.lane.boundaries.BoundaryElement create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return new nds.lane.boundaries.BoundaryElement(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new nds.lane.boundaries.BoundaryElement.ZserioPackingContext();
        }

        @Override
        public nds.lane.boundaries.BoundaryElement create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return new nds.lane.boundaries.BoundaryElement(context, in);
        }
    }

    private zserio.runtime.array.Array boundaryElementList_;
}
