/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.location;

public class RoadLocationIdRange implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            startPosition_ = new zserio.runtime.array.DeltaContext();
            endPosition_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getStartPosition()
        {
            return startPosition_;
        }

        public zserio.runtime.array.DeltaContext getEndPosition()
        {
            return endPosition_;
        }

        private zserio.runtime.array.DeltaContext startPosition_;
        private zserio.runtime.array.DeltaContext endPosition_;
    };

    public RoadLocationIdRange()
    {
    }

    public RoadLocationIdRange(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadLocationIdRange(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadLocationIdRange(
            int startPosition_,
            int endPosition_)
    {
        setStartPosition(startPosition_);
        setEndPosition(endPosition_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getStartPosition().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startPosition_));
        zserioContext.getEndPosition().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endPosition_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startPosition_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endPosition_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getStartPosition().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startPosition_));
        endBitPosition += zserioContext.getEndPosition().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endPosition_));

        return (int)(endBitPosition - bitPosition);
    }

    public int getStartPosition()
    {
        return startPosition_;
    }

    public void setStartPosition(int startPosition_)
    {
        this.startPosition_ = startPosition_;
    }

    public int getEndPosition()
    {
        return endPosition_;
    }

    public void setEndPosition(int endPosition_)
    {
        this.endPosition_ = endPosition_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadLocationIdRange)
        {
            final RoadLocationIdRange that = (RoadLocationIdRange)obj;

            return
                    startPosition_ == that.startPosition_ &&
                    endPosition_ == that.endPosition_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, startPosition_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, endPosition_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        startPosition_ = in.readVarUInt32();

        endPosition_ = in.readVarUInt32();

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        startPosition_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getStartPosition().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        endPosition_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getEndPosition().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(startPosition_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(endPosition_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getStartPosition().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(startPosition_));
        endBitPosition += zserioContext.getEndPosition().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(endPosition_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeVarUInt32(startPosition_);

        out.writeVarUInt32(endPosition_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        zserioContext.getStartPosition().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(startPosition_));

        zserioContext.getEndPosition().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(endPosition_));
    }

    private void checkConstraints()
    {
        if (!(getEndPosition() >= getStartPosition()))
            throw new zserio.runtime.ConstraintError("Constraint violated at RoadLocationIdRange.endPosition!");
    }

    private int startPosition_;
    private int endPosition_;
}
