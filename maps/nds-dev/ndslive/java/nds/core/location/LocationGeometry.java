/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.location;

public class LocationGeometry implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            line_ = new nds.core.geometry.Line2D.ZserioPackingContext();
        }

        public nds.core.geometry.Line2D.ZserioPackingContext getLine()
        {
            return line_;
        }

        private nds.core.geometry.Line2D.ZserioPackingContext line_;
    };

    public LocationGeometry()
    {
    }

    public LocationGeometry(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public LocationGeometry(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public LocationGeometry(
            nds.core.geometry.Line2D line_)
    {
        setLine(line_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        line_.initPackingContext(zserioContext.getLine());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += line_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += line_.bitSizeOf(zserioContext.getLine(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.geometry.Line2D getLine()
    {
        return line_;
    }

    public void setLine(nds.core.geometry.Line2D line_)
    {
        this.line_ = line_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof LocationGeometry)
        {
            final LocationGeometry that = (LocationGeometry)obj;

            return
                    ((line_ == null) ? that.line_ == null : line_.equals(that.line_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, line_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        line_ = new nds.core.geometry.Line2D(in, (byte)(0));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        line_ = new nds.core.geometry.Line2D(zserioContext.getLine(), in, (byte)(0));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = line_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = line_.initializeOffsets(zserioContext.getLine(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        // check parameters
        if (line_.getShift() != (byte)(0))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field LocationGeometry.line: " +
                    line_.getShift() + " != " + (byte)(0) + "!");
        }
        line_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        line_.write(zserioContext.getLine(), out);
    }

    private nds.core.geometry.Line2D line_;
}
