/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.speech;

public enum PhoneticTranscriptionFormat implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    IPA((short)0),
    STARREC_SAMPA((short)1),
    X_SAMPA((short)2),
    LH_PLUS((short)3),
    NT_SAMPA((short)4),
    SVOX_PA((short)5),
    LH_PLUS_V24((short)6),
    I_FLYTEC((short)7),
    JEITA((short)8);

    private PhoneticTranscriptionFormat(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return 8;
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static PhoneticTranscriptionFormat readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readUnsignedByte());
    }

    public static PhoneticTranscriptionFormat readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits(8), in)).get());
    }

    public static PhoneticTranscriptionFormat toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return IPA;
            case (short)1:
                return STARREC_SAMPA;
            case (short)2:
                return X_SAMPA;
            case (short)3:
                return LH_PLUS;
            case (short)4:
                return NT_SAMPA;
            case (short)5:
                return SVOX_PA;
            case (short)6:
                return LH_PLUS_V24;
            case (short)7:
                return I_FLYTEC;
            case (short)8:
                return JEITA;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration PhoneticTranscriptionFormat: " + value + "!");
        }
    }

    public static PhoneticTranscriptionFormat toEnum(java.lang.String itemName)
    {
        if (itemName.equals("IPA"))
            return IPA;
        if (itemName.equals("STARREC_SAMPA"))
            return STARREC_SAMPA;
        if (itemName.equals("X_SAMPA"))
            return X_SAMPA;
        if (itemName.equals("LH_PLUS"))
            return LH_PLUS;
        if (itemName.equals("NT_SAMPA"))
            return NT_SAMPA;
        if (itemName.equals("SVOX_PA"))
            return SVOX_PA;
        if (itemName.equals("LH_PLUS_V24"))
            return LH_PLUS_V24;
        if (itemName.equals("I_FLYTEC"))
            return I_FLYTEC;
        if (itemName.equals("JEITA"))
            return JEITA;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration PhoneticTranscriptionFormat!");
    }

    private short value;
}
