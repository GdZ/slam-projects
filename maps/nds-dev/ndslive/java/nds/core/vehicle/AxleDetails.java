/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.vehicle;

public class AxleDetails implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            numAxles_ = new zserio.runtime.array.DeltaContext();
            maxTandemAxleWeight_ = new zserio.runtime.array.DeltaContext();
            maxTridemAxleWeight_ = new zserio.runtime.array.DeltaContext();
            maxSteeringAxleWeight_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getNumAxles()
        {
            return numAxles_;
        }

        public zserio.runtime.array.DeltaContext getMaxTandemAxleWeight()
        {
            return maxTandemAxleWeight_;
        }

        public zserio.runtime.array.DeltaContext getMaxTridemAxleWeight()
        {
            return maxTridemAxleWeight_;
        }

        public zserio.runtime.array.DeltaContext getMaxSteeringAxleWeight()
        {
            return maxSteeringAxleWeight_;
        }

        private zserio.runtime.array.DeltaContext numAxles_;
        private zserio.runtime.array.DeltaContext maxTandemAxleWeight_;
        private zserio.runtime.array.DeltaContext maxTridemAxleWeight_;
        private zserio.runtime.array.DeltaContext maxSteeringAxleWeight_;
    };

    public AxleDetails()
    {
    }

    public AxleDetails(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public AxleDetails(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public AxleDetails(
            short numAxles_,
            int maxTandemAxleWeight_,
            int maxTridemAxleWeight_,
            int maxSteeringAxleWeight_)
    {
        setNumAxles(numAxles_);
        setMaxTandemAxleWeight(maxTandemAxleWeight_);
        setMaxTridemAxleWeight(maxTridemAxleWeight_);
        setMaxSteeringAxleWeight(maxSteeringAxleWeight_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNumAxles().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numAxles_));
        zserioContext.getMaxTandemAxleWeight().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTandemAxleWeight_));
        zserioContext.getMaxTridemAxleWeight().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTridemAxleWeight_));
        zserioContext.getMaxSteeringAxleWeight().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxSteeringAxleWeight_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxTandemAxleWeight_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxTridemAxleWeight_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxSteeringAxleWeight_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumAxles().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numAxles_));
        endBitPosition += zserioContext.getMaxTandemAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTandemAxleWeight_));
        endBitPosition += zserioContext.getMaxTridemAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTridemAxleWeight_));
        endBitPosition += zserioContext.getMaxSteeringAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxSteeringAxleWeight_));

        return (int)(endBitPosition - bitPosition);
    }

    public short getNumAxles()
    {
        return numAxles_;
    }

    public void setNumAxles(short numAxles_)
    {
        this.numAxles_ = numAxles_;
    }

    public int getMaxTandemAxleWeight()
    {
        return maxTandemAxleWeight_;
    }

    public void setMaxTandemAxleWeight(int maxTandemAxleWeight_)
    {
        this.maxTandemAxleWeight_ = maxTandemAxleWeight_;
    }

    public int getMaxTridemAxleWeight()
    {
        return maxTridemAxleWeight_;
    }

    public void setMaxTridemAxleWeight(int maxTridemAxleWeight_)
    {
        this.maxTridemAxleWeight_ = maxTridemAxleWeight_;
    }

    public int getMaxSteeringAxleWeight()
    {
        return maxSteeringAxleWeight_;
    }

    public void setMaxSteeringAxleWeight(int maxSteeringAxleWeight_)
    {
        this.maxSteeringAxleWeight_ = maxSteeringAxleWeight_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof AxleDetails)
        {
            final AxleDetails that = (AxleDetails)obj;

            return
                    numAxles_ == that.numAxles_ &&
                    maxTandemAxleWeight_ == that.maxTandemAxleWeight_ &&
                    maxTridemAxleWeight_ == that.maxTridemAxleWeight_ &&
                    maxSteeringAxleWeight_ == that.maxSteeringAxleWeight_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, numAxles_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, maxTandemAxleWeight_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, maxTridemAxleWeight_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, maxSteeringAxleWeight_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        numAxles_ = in.readUnsignedByte();

        maxTandemAxleWeight_ = in.readVarUInt32();

        maxTridemAxleWeight_ = in.readVarUInt32();

        maxSteeringAxleWeight_ = in.readVarUInt32();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        numAxles_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getNumAxles().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        maxTandemAxleWeight_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getMaxTandemAxleWeight().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        maxTridemAxleWeight_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getMaxTridemAxleWeight().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        maxSteeringAxleWeight_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getMaxSteeringAxleWeight().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxTandemAxleWeight_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxTridemAxleWeight_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(maxSteeringAxleWeight_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getNumAxles().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numAxles_));
        endBitPosition += zserioContext.getMaxTandemAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTandemAxleWeight_));
        endBitPosition += zserioContext.getMaxTridemAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTridemAxleWeight_));
        endBitPosition += zserioContext.getMaxSteeringAxleWeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxSteeringAxleWeight_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeUnsignedByte(numAxles_);

        out.writeVarUInt32(maxTandemAxleWeight_);

        out.writeVarUInt32(maxTridemAxleWeight_);

        out.writeVarUInt32(maxSteeringAxleWeight_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNumAxles().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(numAxles_));

        zserioContext.getMaxTandemAxleWeight().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTandemAxleWeight_));

        zserioContext.getMaxTridemAxleWeight().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxTridemAxleWeight_));

        zserioContext.getMaxSteeringAxleWeight().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(maxSteeringAxleWeight_));
    }

    private short numAxles_;
    private int maxTandemAxleWeight_;
    private int maxTridemAxleWeight_;
    private int maxSteeringAxleWeight_;
}
