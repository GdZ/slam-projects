/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.conditions;

public class TimeDuration implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            days_ = new zserio.runtime.array.DeltaContext();
            months_ = new zserio.runtime.array.DeltaContext();
            years_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getDays()
        {
            return days_;
        }

        public zserio.runtime.array.DeltaContext getMonths()
        {
            return months_;
        }

        public zserio.runtime.array.DeltaContext getYears()
        {
            return years_;
        }

        private zserio.runtime.array.DeltaContext days_;
        private zserio.runtime.array.DeltaContext months_;
        private zserio.runtime.array.DeltaContext years_;
    };

    public TimeDuration()
    {
    }

    public TimeDuration(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public TimeDuration(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public TimeDuration(
            short days_,
            short months_,
            short years_)
    {
        setDays(days_);
        setMonths(months_);
        setYears(years_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getDays().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(days_));
        zserioContext.getMonths().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(months_));
        zserioContext.getYears().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(years_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += 8;
        endBitPosition += 8;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDays().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(days_));
        endBitPosition += zserioContext.getMonths().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(months_));
        endBitPosition += zserioContext.getYears().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(years_));

        return (int)(endBitPosition - bitPosition);
    }

    public short getDays()
    {
        return days_;
    }

    public void setDays(short days_)
    {
        this.days_ = days_;
    }

    public short getMonths()
    {
        return months_;
    }

    public void setMonths(short months_)
    {
        this.months_ = months_;
    }

    public short getYears()
    {
        return years_;
    }

    public void setYears(short years_)
    {
        this.years_ = years_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof TimeDuration)
        {
            final TimeDuration that = (TimeDuration)obj;

            return
                    days_ == that.days_ &&
                    months_ == that.months_ &&
                    years_ == that.years_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, days_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, months_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, years_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        days_ = in.readUnsignedByte();

        months_ = in.readUnsignedByte();

        years_ = in.readUnsignedByte();

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        days_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getDays().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        months_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getMonths().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        years_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getYears().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 8;
        endBitPosition += 8;
        endBitPosition += 8;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDays().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(days_));
        endBitPosition += zserioContext.getMonths().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(months_));
        endBitPosition += zserioContext.getYears().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(years_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeUnsignedByte(days_);

        out.writeUnsignedByte(months_);

        out.writeUnsignedByte(years_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        zserioContext.getDays().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(days_));

        zserioContext.getMonths().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(months_));

        zserioContext.getYears().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(years_));
    }

    private void checkConstraints()
    {
        if (!(getDays() <= 30))
            throw new zserio.runtime.ConstraintError("Constraint violated at TimeDuration.days!");
        if (!(getMonths() <= 12))
            throw new zserio.runtime.ConstraintError("Constraint violated at TimeDuration.months!");
    }

    private short days_;
    private short months_;
    private short years_;
}
