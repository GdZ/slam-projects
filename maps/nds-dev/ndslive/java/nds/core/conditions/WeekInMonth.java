/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.conditions;

public class WeekInMonth implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            nThWeekInMonth_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getNThWeekInMonth()
        {
            return nThWeekInMonth_;
        }

        private zserio.runtime.array.DeltaContext nThWeekInMonth_;
    };

    public WeekInMonth()
    {
    }

    public WeekInMonth(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public WeekInMonth(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public WeekInMonth(
            boolean countBackwardWeekInMonth_,
            byte nThWeekInMonth_)
    {
        setCountBackwardWeekInMonth(countBackwardWeekInMonth_);
        setNThWeekInMonth(nThWeekInMonth_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getNThWeekInMonth().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(3)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(nThWeekInMonth_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 3;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += zserioContext.getNThWeekInMonth().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(3)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(nThWeekInMonth_));

        return (int)(endBitPosition - bitPosition);
    }

    public boolean getCountBackwardWeekInMonth()
    {
        return countBackwardWeekInMonth_;
    }

    public void setCountBackwardWeekInMonth(boolean countBackwardWeekInMonth_)
    {
        this.countBackwardWeekInMonth_ = countBackwardWeekInMonth_;
    }

    public byte getNThWeekInMonth()
    {
        return nThWeekInMonth_;
    }

    public void setNThWeekInMonth(byte nThWeekInMonth_)
    {
        this.nThWeekInMonth_ = nThWeekInMonth_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof WeekInMonth)
        {
            final WeekInMonth that = (WeekInMonth)obj;

            return
                    countBackwardWeekInMonth_ == that.countBackwardWeekInMonth_ &&
                    nThWeekInMonth_ == that.nThWeekInMonth_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, countBackwardWeekInMonth_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, nThWeekInMonth_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        countBackwardWeekInMonth_ = in.readBool();

        nThWeekInMonth_ = (byte)in.readBits(3);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        countBackwardWeekInMonth_ = in.readBool();

        nThWeekInMonth_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getNThWeekInMonth().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(3)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += 3;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += 1;
        endBitPosition += zserioContext.getNThWeekInMonth().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(3)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(nThWeekInMonth_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeBool(countBackwardWeekInMonth_);

        out.writeBits(nThWeekInMonth_, 3);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        out.writeBool(countBackwardWeekInMonth_);

        zserioContext.getNThWeekInMonth().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(3)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(nThWeekInMonth_));
    }

    private boolean countBackwardWeekInMonth_;
    private byte nThWeekInMonth_;
}
