/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.geometry;

public class SpatialExtent implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            boundingBox_ = new nds.core.geometry.BoundingBox2D.ZserioPackingContext();
            boundingPolygon_ = new nds.core.geometry.BoundingPolygon2D.ZserioPackingContext();
        }

        public nds.core.geometry.BoundingBox2D.ZserioPackingContext getBoundingBox()
        {
            return boundingBox_;
        }

        public nds.core.geometry.BoundingPolygon2D.ZserioPackingContext getBoundingPolygon()
        {
            return boundingPolygon_;
        }

        private nds.core.geometry.BoundingBox2D.ZserioPackingContext boundingBox_;
        private nds.core.geometry.BoundingPolygon2D.ZserioPackingContext boundingPolygon_;
    };

    public SpatialExtent()
    {
    }

    public SpatialExtent(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public SpatialExtent(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public SpatialExtent(
            nds.core.geometry.BoundingBox2D boundingBox_,
            nds.core.geometry.BoundingPolygon2D boundingPolygon_)
    {
        setBoundingBox(boundingBox_);
        setBoundingPolygon(boundingPolygon_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        boundingBox_.initPackingContext(zserioContext.getBoundingBox());
        if (isBoundingPolygonUsed())
        {
            boundingPolygon_.initPackingContext(zserioContext.getBoundingPolygon());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += boundingBox_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isBoundingPolygonUsed())
        {
            endBitPosition += boundingPolygon_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += boundingBox_.bitSizeOf(zserioContext.getBoundingBox(), endBitPosition);
        endBitPosition += 1;
        if (isBoundingPolygonUsed())
        {
            endBitPosition += boundingPolygon_.bitSizeOf(zserioContext.getBoundingPolygon(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.geometry.BoundingBox2D getBoundingBox()
    {
        return boundingBox_;
    }

    public void setBoundingBox(nds.core.geometry.BoundingBox2D boundingBox_)
    {
        this.boundingBox_ = boundingBox_;
    }

    public nds.core.geometry.BoundingPolygon2D getBoundingPolygon()
    {
        return boundingPolygon_;
    }

    public void setBoundingPolygon(nds.core.geometry.BoundingPolygon2D boundingPolygon_)
    {
        this.boundingPolygon_ = boundingPolygon_;
    }

    public boolean isBoundingPolygonUsed()
    {
        return isBoundingPolygonSet();
    }

    public boolean isBoundingPolygonSet()
    {
        return (boundingPolygon_ != null);
    }

    public void resetBoundingPolygon()
    {
        this.boundingPolygon_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof SpatialExtent)
        {
            final SpatialExtent that = (SpatialExtent)obj;

            return
                    ((boundingBox_ == null) ? that.boundingBox_ == null : boundingBox_.equals(that.boundingBox_)) &&
                    ((!isBoundingPolygonUsed()) ? !that.isBoundingPolygonUsed() :
                        ((boundingPolygon_ == null) ? that.boundingPolygon_ == null : boundingPolygon_.equals(that.boundingPolygon_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, boundingBox_);
        if (isBoundingPolygonUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, boundingPolygon_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        boundingBox_ = new nds.core.geometry.BoundingBox2D(in);

        if (in.readBool())
        {
            boundingPolygon_ = new nds.core.geometry.BoundingPolygon2D(in, (byte)(0));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        boundingBox_ = new nds.core.geometry.BoundingBox2D(zserioContext.getBoundingBox(), in);

        if (in.readBool())
        {
            boundingPolygon_ = new nds.core.geometry.BoundingPolygon2D(zserioContext.getBoundingPolygon(), in, (byte)(0));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = boundingBox_.initializeOffsets(endBitPosition);
        endBitPosition += 1;
        if (isBoundingPolygonUsed())
        {
            endBitPosition = boundingPolygon_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = boundingBox_.initializeOffsets(zserioContext.getBoundingBox(), endBitPosition);
        endBitPosition += 1;
        if (isBoundingPolygonUsed())
        {
            endBitPosition = boundingPolygon_.initializeOffsets(zserioContext.getBoundingPolygon(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        boundingBox_.write(out);

        if (isBoundingPolygonUsed())
        {
            out.writeBool(true);
            // check parameters
            if (boundingPolygon_.getShift() != (byte)(0))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter shift for field SpatialExtent.boundingPolygon: " +
                        boundingPolygon_.getShift() + " != " + (byte)(0) + "!");
            }
            boundingPolygon_.write(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        boundingBox_.write(zserioContext.getBoundingBox(), out);

        if (isBoundingPolygonUsed())
        {
            out.writeBool(true);
            boundingPolygon_.write(zserioContext.getBoundingPolygon(), out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private nds.core.geometry.BoundingBox2D boundingBox_;
    private nds.core.geometry.BoundingPolygon2D boundingPolygon_;
}
