/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.geometry;

public class PositionOffset3D implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            deltaLongitude_ = new zserio.runtime.array.DeltaContext();
            deltaLatitude_ = new zserio.runtime.array.DeltaContext();
            deltaElevation_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getDeltaLongitude()
        {
            return deltaLongitude_;
        }

        public zserio.runtime.array.DeltaContext getDeltaLatitude()
        {
            return deltaLatitude_;
        }

        public zserio.runtime.array.DeltaContext getDeltaElevation()
        {
            return deltaElevation_;
        }

        private zserio.runtime.array.DeltaContext deltaLongitude_;
        private zserio.runtime.array.DeltaContext deltaLatitude_;
        private zserio.runtime.array.DeltaContext deltaElevation_;
    };

    public PositionOffset3D(
            byte numBitsXY_,
            byte numBitsZ_,
            byte shiftXY_,
            byte shiftZ_)
    {
        this.numBitsXY_ = numBitsXY_;
        this.numBitsZ_ = numBitsZ_;
        this.shiftXY_ = shiftXY_;
        this.shiftZ_ = shiftZ_;
    }

    public PositionOffset3D(zserio.runtime.io.BitStreamReader in,
            byte numBitsXY_,
            byte numBitsZ_,
            byte shiftXY_,
            byte shiftZ_)
            throws java.io.IOException
    {
        this.numBitsXY_ = numBitsXY_;
        this.numBitsZ_ = numBitsZ_;
        this.shiftXY_ = shiftXY_;
        this.shiftZ_ = shiftZ_;

        read(in);
    }

    public PositionOffset3D(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            byte numBitsXY_,
            byte numBitsZ_,
            byte shiftXY_,
            byte shiftZ_)
            throws java.io.IOException
    {
        this.numBitsXY_ = numBitsXY_;
        this.numBitsZ_ = numBitsZ_;
        this.shiftXY_ = shiftXY_;
        this.shiftZ_ = shiftZ_;

        read(context, in);
    }

    public PositionOffset3D(
            byte numBitsXY_,
            byte numBitsZ_,
            byte shiftXY_,
            byte shiftZ_,
            int deltaLongitude_,
            int deltaLatitude_,
            int deltaElevation_)
    {
        this(numBitsXY_, numBitsZ_, shiftXY_, shiftZ_);

        setDeltaLongitude(deltaLongitude_);
        setDeltaLatitude(deltaLatitude_);
        setDeltaElevation(deltaElevation_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getDeltaLongitude().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLongitude_));
        zserioContext.getDeltaLatitude().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLatitude_));
        zserioContext.getDeltaElevation().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsZ() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaElevation_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += getNumBitsXY() + 1;
        endBitPosition += getNumBitsXY() + 1;
        endBitPosition += getNumBitsZ() + 1;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDeltaLongitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLongitude_));
        endBitPosition += zserioContext.getDeltaLatitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLatitude_));
        endBitPosition += zserioContext.getDeltaElevation().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsZ() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaElevation_));

        return (int)(endBitPosition - bitPosition);
    }

    public byte getNumBitsXY()
    {
        return this.numBitsXY_;
    }

    public byte getNumBitsZ()
    {
        return this.numBitsZ_;
    }

    public byte getShiftXY()
    {
        return this.shiftXY_;
    }

    public byte getShiftZ()
    {
        return this.shiftZ_;
    }

    public int getDeltaLongitude()
    {
        return deltaLongitude_;
    }

    public void setDeltaLongitude(int deltaLongitude_)
    {
        this.deltaLongitude_ = deltaLongitude_;
    }

    public int getDeltaLatitude()
    {
        return deltaLatitude_;
    }

    public void setDeltaLatitude(int deltaLatitude_)
    {
        this.deltaLatitude_ = deltaLatitude_;
    }

    public int getDeltaElevation()
    {
        return deltaElevation_;
    }

    public void setDeltaElevation(int deltaElevation_)
    {
        this.deltaElevation_ = deltaElevation_;
    }

    public int funcLon()
    {
        return (int)(getDeltaLongitude() << getShiftXY());
    }

    public int funcLat()
    {
        return (int)(getDeltaLatitude() << getShiftXY());
    }

    public int funcEle()
    {
        return (int)(getDeltaElevation() << getShiftZ());
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof PositionOffset3D)
        {
            final PositionOffset3D that = (PositionOffset3D)obj;

            return
                    this.numBitsXY_ == that.numBitsXY_ &&
                    this.numBitsZ_ == that.numBitsZ_ &&
                    this.shiftXY_ == that.shiftXY_ &&
                    this.shiftZ_ == that.shiftZ_ &&
                    deltaLongitude_ == that.deltaLongitude_ &&
                    deltaLatitude_ == that.deltaLatitude_ &&
                    deltaElevation_ == that.deltaElevation_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getNumBitsXY());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getNumBitsZ());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getShiftXY());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getShiftZ());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, deltaLongitude_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, deltaLatitude_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, deltaElevation_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        deltaLongitude_ = (int)in.readSignedBits((int)(getNumBitsXY() + 1));

        deltaLatitude_ = (int)in.readSignedBits((int)(getNumBitsXY() + 1));

        deltaElevation_ = (int)in.readSignedBits((int)(getNumBitsZ() + 1));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        deltaLongitude_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getDeltaLongitude().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)), in)).get();

        deltaLatitude_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getDeltaLatitude().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)), in)).get();

        deltaElevation_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getDeltaElevation().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsZ() + 1)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += getNumBitsXY() + 1;
        endBitPosition += getNumBitsXY() + 1;
        endBitPosition += getNumBitsZ() + 1;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getDeltaLongitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLongitude_));
        endBitPosition += zserioContext.getDeltaLatitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLatitude_));
        endBitPosition += zserioContext.getDeltaElevation().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsZ() + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaElevation_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeSignedBits(deltaLongitude_, (int)(getNumBitsXY() + 1));

        out.writeSignedBits(deltaLatitude_, (int)(getNumBitsXY() + 1));

        out.writeSignedBits(deltaElevation_, (int)(getNumBitsZ() + 1));
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getDeltaLongitude().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLongitude_));

        zserioContext.getDeltaLatitude().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsXY() + 1)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaLatitude_));

        zserioContext.getDeltaElevation().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)(getNumBitsZ() + 1)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(deltaElevation_));
    }

    private final byte numBitsXY_;
    private final byte numBitsZ_;
    private final byte shiftXY_;
    private final byte shiftZ_;
    private int deltaLongitude_;
    private int deltaLatitude_;
    private int deltaElevation_;
}
