/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.geometry;

public class IndexBufferEntry implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            index_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getIndex()
        {
            return index_;
        }

        private zserio.runtime.array.DeltaContext index_;
    };

    public IndexBufferEntry(
            int positionBufferSize_)
    {
        this.positionBufferSize_ = positionBufferSize_;
    }

    public IndexBufferEntry(zserio.runtime.io.BitStreamReader in,
            int positionBufferSize_)
            throws java.io.IOException
    {
        this.positionBufferSize_ = positionBufferSize_;

        read(in);
    }

    public IndexBufferEntry(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            int positionBufferSize_)
            throws java.io.IOException
    {
        this.positionBufferSize_ = positionBufferSize_;

        read(context, in);
    }

    public IndexBufferEntry(
            int positionBufferSize_,
            int index_)
    {
        this(positionBufferSize_);

        setIndex(index_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getIndex().init(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize()))),
                new zserio.runtime.array.ArrayElement.IntArrayElement(index_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize());

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize()))),
                new zserio.runtime.array.ArrayElement.IntArrayElement(index_));

        return (int)(endBitPosition - bitPosition);
    }

    public int getPositionBufferSize()
    {
        return this.positionBufferSize_;
    }

    public int getIndex()
    {
        return index_;
    }

    public void setIndex(int index_)
    {
        this.index_ = index_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof IndexBufferEntry)
        {
            final IndexBufferEntry that = (IndexBufferEntry)obj;

            return
                    this.positionBufferSize_ == that.positionBufferSize_ &&
                    index_ == that.index_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getPositionBufferSize());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, index_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        index_ = (int)in.readBits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize())));

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        index_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getIndex().read(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize()))), in)).get();

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize());

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize()))),
                new zserio.runtime.array.ArrayElement.IntArrayElement(index_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeBits(index_, (int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize())));
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        zserioContext.getIndex().write(new zserio.runtime.array.ArrayTraits.BitFieldIntArrayTraits((int)(zserio.runtime.BuiltInOperators.numBits(getPositionBufferSize()))), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(index_));
    }

    private void checkConstraints()
    {
        if (!(getIndex() < getPositionBufferSize()))
            throw new zserio.runtime.ConstraintError("Constraint violated at IndexBufferEntry.index!");
    }

    private final int positionBufferSize_;
    private int index_;
}
