/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.geometry;

public class Position2D implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            longitude_ = new zserio.runtime.array.DeltaContext();
            latitude_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getLongitude()
        {
            return longitude_;
        }

        public zserio.runtime.array.DeltaContext getLatitude()
        {
            return latitude_;
        }

        private zserio.runtime.array.DeltaContext longitude_;
        private zserio.runtime.array.DeltaContext latitude_;
    };

    public Position2D(
            byte shift_)
    {
        this.shift_ = shift_;
    }

    public Position2D(zserio.runtime.io.BitStreamReader in,
            byte shift_)
            throws java.io.IOException
    {
        this.shift_ = shift_;

        read(in);
    }

    public Position2D(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            byte shift_)
            throws java.io.IOException
    {
        this.shift_ = shift_;

        read(context, in);
    }

    public Position2D(
            byte shift_,
            int longitude_,
            int latitude_)
    {
        this(shift_);

        setLongitude(longitude_);
        setLatitude(latitude_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getLongitude().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(longitude_));
        zserioContext.getLatitude().init(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(latitude_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += (31 - getShift()) + 1;
        endBitPosition += (31 - getShift()) + 1;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getLongitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(longitude_));
        endBitPosition += zserioContext.getLatitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(latitude_));

        return (int)(endBitPosition - bitPosition);
    }

    public byte getShift()
    {
        return this.shift_;
    }

    public int getLongitude()
    {
        return longitude_;
    }

    public void setLongitude(int longitude_)
    {
        this.longitude_ = longitude_;
    }

    public int getLatitude()
    {
        return latitude_;
    }

    public void setLatitude(int latitude_)
    {
        this.latitude_ = latitude_;
    }

    public int funcLon()
    {
        return (int)((getLongitude() << getShift()));
    }

    public int funcLat()
    {
        return (int)((getLatitude() << getShift()));
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Position2D)
        {
            final Position2D that = (Position2D)obj;

            return
                    this.shift_ == that.shift_ &&
                    longitude_ == that.longitude_ &&
                    latitude_ == that.latitude_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getShift());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, longitude_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, latitude_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        longitude_ = (int)in.readSignedBits((int)((31 - getShift()) + 1));

        latitude_ = (int)in.readSignedBits((int)((31 - getShift()) + 1));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        longitude_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getLongitude().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)), in)).get();

        latitude_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getLatitude().read(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)), in)).get();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += (31 - getShift()) + 1;
        endBitPosition += (31 - getShift()) + 1;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getLongitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(longitude_));
        endBitPosition += zserioContext.getLatitude().bitSizeOf(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)),
                new zserio.runtime.array.ArrayElement.IntArrayElement(latitude_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeSignedBits(longitude_, (int)((31 - getShift()) + 1));

        out.writeSignedBits(latitude_, (int)((31 - getShift()) + 1));
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getLongitude().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(longitude_));

        zserioContext.getLatitude().write(new zserio.runtime.array.ArrayTraits.SignedBitFieldIntArrayTraits((int)((31 - getShift()) + 1)), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(latitude_));
    }

    private final byte shift_;
    private int longitude_;
    private int latitude_;
}
