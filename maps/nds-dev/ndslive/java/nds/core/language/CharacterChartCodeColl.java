/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.language;

public class CharacterChartCodeColl implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
    };

    public CharacterChartCodeColl()
    {
    }

    public CharacterChartCodeColl(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public CharacterChartCodeColl(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public CharacterChartCodeColl(
            long[] characterChartCode_)
    {
        setCharacterChartCode(characterChartCode_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += characterChartCode_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += characterChartCode_.bitSizeOfPacked(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public long[] getCharacterChartCode()
    {
        return (characterChartCode_ == null) ? null : characterChartCode_.getRawArray();
    }

    public void setCharacterChartCode(long[] characterChartCode_)
    {
        this.characterChartCode_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.LongRawArray(characterChartCode_),
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                zserio.runtime.array.ArrayType.AUTO);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof CharacterChartCodeColl)
        {
            final CharacterChartCodeColl that = (CharacterChartCodeColl)obj;

            return
                    ((characterChartCode_ == null) ? that.characterChartCode_ == null : characterChartCode_.equals(that.characterChartCode_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, characterChartCode_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        characterChartCode_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.LongRawArray(),
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                zserio.runtime.array.ArrayType.AUTO);
        characterChartCode_.read(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        characterChartCode_ = new zserio.runtime.array.Array(
                new zserio.runtime.array.RawArray.LongRawArray(),
                new zserio.runtime.array.ArrayTraits.BitFieldLongArrayTraits((int)(32)),
                zserio.runtime.array.ArrayType.AUTO);
        characterChartCode_.readPacked(in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = characterChartCode_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = characterChartCode_.initializeOffsetsPacked(endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        characterChartCode_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        characterChartCode_.writePacked(out);
    }

    private zserio.runtime.array.Array characterChartCode_;
}
