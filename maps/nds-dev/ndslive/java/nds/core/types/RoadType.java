/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.types;

public class RoadType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            form_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getForm()
        {
            return form_;
        }

        private zserio.runtime.array.DeltaContext form_;
    };

    public RoadType()
    {
    }

    public RoadType(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadType(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadType(
            nds.core.types.RoadForm form_,
            nds.core.types.RoadCharacter[] characteristics_)
    {
        setForm(form_);
        setCharacteristics(characteristics_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        form_.initPackingContext(zserioContext.getForm());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += form_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isCharacteristicsUsed())
        {
            endBitPosition += characteristics_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += form_.bitSizeOf(zserioContext.getForm(), endBitPosition);
        endBitPosition += 1;
        if (isCharacteristicsUsed())
        {
            endBitPosition += characteristics_.bitSizeOfPacked(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.types.RoadForm getForm()
    {
        return form_;
    }

    public void setForm(nds.core.types.RoadForm form_)
    {
        this.form_ = form_;
    }

    public nds.core.types.RoadCharacter[] getCharacteristics()
    {
        return (characteristics_ == null) ? null : characteristics_.getRawArray();
    }

    public void setCharacteristics(nds.core.types.RoadCharacter[] characteristics_)
    {
        if (characteristics_ == null)
        {
            this.characteristics_ = null;
        }
        else
        {
            this.characteristics_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.EnumRawArray<>(nds.core.types.RoadCharacter.class, characteristics_),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadCharacter>(new ZserioElementFactory_characteristics()),
                    zserio.runtime.array.ArrayType.AUTO);
        }
    }

    public boolean isCharacteristicsUsed()
    {
        return isCharacteristicsSet();
    }

    public boolean isCharacteristicsSet()
    {
        return (characteristics_ != null);
    }

    public void resetCharacteristics()
    {
        this.characteristics_ = null;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadType)
        {
            final RoadType that = (RoadType)obj;

            return
                    ((form_ == null) ? that.form_ == null : form_.getValue() == that.form_.getValue()) &&
                    ((!isCharacteristicsUsed()) ? !that.isCharacteristicsUsed() :
                        ((characteristics_ == null) ? that.characteristics_ == null : characteristics_.equals(that.characteristics_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, form_);
        if (isCharacteristicsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, characteristics_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        form_ = nds.core.types.RoadForm.readEnum(in);

        if (in.readBool())
        {
            characteristics_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.EnumRawArray<>(nds.core.types.RoadCharacter.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadCharacter>(new ZserioElementFactory_characteristics()),
                    zserio.runtime.array.ArrayType.AUTO);
            characteristics_.readPacked(in);
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        form_ = nds.core.types.RoadForm.readEnum(zserioContext.getForm(), in);

        if (in.readBool())
        {
            characteristics_ = new zserio.runtime.array.Array(
                    new zserio.runtime.array.RawArray.EnumRawArray<>(nds.core.types.RoadCharacter.class),
                    new zserio.runtime.array.ArrayTraits.WritePackableObjectArrayTraits<nds.core.types.RoadCharacter>(new ZserioElementFactory_characteristics()),
                    zserio.runtime.array.ArrayType.AUTO);
            characteristics_.readPacked(in);
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += form_.bitSizeOf(endBitPosition);
        endBitPosition += 1;
        if (isCharacteristicsUsed())
        {
            endBitPosition = characteristics_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = form_.initializeOffsets(zserioContext.getForm(), endBitPosition);
        endBitPosition += 1;
        if (isCharacteristicsUsed())
        {
            endBitPosition = characteristics_.initializeOffsetsPacked(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        form_.write(out);

        if (isCharacteristicsUsed())
        {
            out.writeBool(true);
            characteristics_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        form_.write(zserioContext.getForm(), out);

        if (isCharacteristicsUsed())
        {
            out.writeBool(true);
            characteristics_.writePacked(out);
        }
        else
        {
            out.writeBool(false);
        }
    }

    private static final class ZserioElementFactory_characteristics implements zserio.runtime.array.PackableElementFactory<nds.core.types.RoadCharacter>
    {
        @Override
        public nds.core.types.RoadCharacter create(zserio.runtime.io.BitStreamReader in, int index)
                throws java.io.IOException
        {
            return nds.core.types.RoadCharacter.readEnum(in);
        }

        @Override
        public zserio.runtime.array.PackingContext createPackingContext()
        {
            return new zserio.runtime.array.DeltaContext();
        }

        @Override
        public nds.core.types.RoadCharacter create(zserio.runtime.array.PackingContext context,
                zserio.runtime.io.BitStreamReader in, int index) throws java.io.IOException
        {
            return nds.core.types.RoadCharacter.readEnum(context, in);
        }
    }

    private nds.core.types.RoadForm form_;
    private zserio.runtime.array.Array characteristics_;
}
