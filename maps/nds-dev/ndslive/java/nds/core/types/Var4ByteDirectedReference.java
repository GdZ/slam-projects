/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.types;

public class Var4ByteDirectedReference implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            value_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getValue()
        {
            return value_;
        }

        private zserio.runtime.array.DeltaContext value_;
    };

    public Var4ByteDirectedReference()
    {
    }

    public Var4ByteDirectedReference(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public Var4ByteDirectedReference(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public Var4ByteDirectedReference(
            int value_)
    {
        setValue(value_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getValue().init(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(value_));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(value_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getValue().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(value_));

        return (int)(endBitPosition - bitPosition);
    }

    public int getValue()
    {
        return value_;
    }

    public void setValue(int value_)
    {
        this.value_ = value_;
    }

    public boolean funcIsPositive()
    {
        return (boolean)(((getValue() > 0)) ? true : false);
    }

    public boolean funcIsNegative()
    {
        return (boolean)(((getValue() < 0)) ? true : false);
    }

    public int funcGetId()
    {
        return (int)(((getValue() < 0)) ? (getValue() * -1) : getValue());
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Var4ByteDirectedReference)
        {
            final Var4ByteDirectedReference that = (Var4ByteDirectedReference)obj;

            return
                    value_ == that.value_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, value_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        value_ = in.readVarInt32();

        checkConstraints();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        value_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getValue().read(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), in)).get();

        checkConstraints();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(value_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getValue().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(value_));

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        checkConstraints();

        out.writeVarInt32(value_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        checkConstraints();

        zserioContext.getValue().write(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(value_));
    }

    private void checkConstraints()
    {
        if (!((getValue() >= -268435455 && getValue() < 0) || (getValue() > 0 && getValue() <= 268435455)))
            throw new zserio.runtime.ConstraintError("Constraint violated at Var4ByteDirectedReference.value!");
    }

    private int value_;
}
