/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.types;

public class Range implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            start_ = new nds.core.types.RangePosition.ZserioPackingContext();
            end_ = new nds.core.types.RangePosition.ZserioPackingContext();
        }

        public nds.core.types.RangePosition.ZserioPackingContext getStart()
        {
            return start_;
        }

        public nds.core.types.RangePosition.ZserioPackingContext getEnd()
        {
            return end_;
        }

        private nds.core.types.RangePosition.ZserioPackingContext start_;
        private nds.core.types.RangePosition.ZserioPackingContext end_;
    };

    public Range(
            int length_)
    {
        this.length_ = length_;
    }

    public Range(zserio.runtime.io.BitStreamReader in,
            int length_)
            throws java.io.IOException
    {
        this.length_ = length_;

        read(in);
    }

    public Range(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in,
            int length_)
            throws java.io.IOException
    {
        this.length_ = length_;

        read(context, in);
    }

    public Range(
            int length_,
            nds.core.types.RangePosition start_,
            nds.core.types.RangePosition end_)
    {
        this(length_);

        setStart(start_);
        setEnd(end_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        start_.initPackingContext(zserioContext.getStart());
        end_.initPackingContext(zserioContext.getEnd());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += start_.bitSizeOf(endBitPosition);
        endBitPosition += end_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += start_.bitSizeOf(zserioContext.getStart(), endBitPosition);
        endBitPosition += end_.bitSizeOf(zserioContext.getEnd(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public int getLength()
    {
        return this.length_;
    }

    public nds.core.types.RangePosition getStart()
    {
        return start_;
    }

    public void setStart(nds.core.types.RangePosition start_)
    {
        this.start_ = start_;
    }

    public nds.core.types.RangePosition getEnd()
    {
        return end_;
    }

    public void setEnd(nds.core.types.RangePosition end_)
    {
        this.end_ = end_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Range)
        {
            final Range that = (Range)obj;

            return
                    this.length_ == that.length_ &&
                    ((start_ == null) ? that.start_ == null : start_.equals(that.start_)) &&
                    ((end_ == null) ? that.end_ == null : end_.equals(that.end_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, getLength());
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, start_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, end_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        start_ = new nds.core.types.RangePosition(in, (int)(getLength()));

        end_ = new nds.core.types.RangePosition(in, (int)(getLength()));
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        start_ = new nds.core.types.RangePosition(zserioContext.getStart(), in, (int)(getLength()));

        end_ = new nds.core.types.RangePosition(zserioContext.getEnd(), in, (int)(getLength()));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition = start_.initializeOffsets(endBitPosition);
        endBitPosition = end_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = start_.initializeOffsets(zserioContext.getStart(), endBitPosition);
        endBitPosition = end_.initializeOffsets(zserioContext.getEnd(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        // check parameters
        if (start_.getLength() != (int)(getLength()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter length for field Range.start: " +
                    start_.getLength() + " != " + (int)(getLength()) + "!");
        }
        start_.write(out);

        // check parameters
        if (end_.getLength() != (int)(getLength()))
        {
            throw new zserio.runtime.ZserioError("Write: Wrong parameter length for field Range.end: " +
                    end_.getLength() + " != " + (int)(getLength()) + "!");
        }
        end_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        start_.write(zserioContext.getStart(), out);

        end_.write(zserioContext.getEnd(), out);
    }

    private final int length_;
    private nds.core.types.RangePosition start_;
    private nds.core.types.RangePosition end_;
}
