/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.types;

public class RoadCharacterValued implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            character_ = new zserio.runtime.array.DeltaContext();
        }

        public zserio.runtime.array.DeltaContext getCharacter()
        {
            return character_;
        }

        private zserio.runtime.array.DeltaContext character_;
    };

    public RoadCharacterValued()
    {
    }

    public RoadCharacterValued(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadCharacterValued(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadCharacterValued(
            nds.core.types.RoadCharacter character_,
            boolean value_)
    {
        setCharacter(character_);
        setValue(value_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        character_.initPackingContext(zserioContext.getCharacter());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += character_.bitSizeOf(endBitPosition);
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += character_.bitSizeOf(zserioContext.getCharacter(), endBitPosition);
        endBitPosition += 1;

        return (int)(endBitPosition - bitPosition);
    }

    public nds.core.types.RoadCharacter getCharacter()
    {
        return character_;
    }

    public void setCharacter(nds.core.types.RoadCharacter character_)
    {
        this.character_ = character_;
    }

    public boolean getValue()
    {
        return value_;
    }

    public void setValue(boolean value_)
    {
        this.value_ = value_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadCharacterValued)
        {
            final RoadCharacterValued that = (RoadCharacterValued)obj;

            return
                    ((character_ == null) ? that.character_ == null : character_.getValue() == that.character_.getValue()) &&
                    value_ == that.value_;
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, character_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, value_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        character_ = nds.core.types.RoadCharacter.readEnum(in);

        value_ = in.readBool();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        character_ = nds.core.types.RoadCharacter.readEnum(zserioContext.getCharacter(), in);

        value_ = in.readBool();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += character_.bitSizeOf(endBitPosition);
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = character_.initializeOffsets(zserioContext.getCharacter(), endBitPosition);
        endBitPosition += 1;

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        character_.write(out);

        out.writeBool(value_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        character_.write(zserioContext.getCharacter(), out);

        out.writeBool(value_);
    }

    private nds.core.types.RoadCharacter character_;
    private boolean value_;
}
