/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.properties;

public enum CorePropertyType implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf,
        zserio.runtime.ZserioEnum
{
    ATTRIBUTE_REASON((short)0),
    METRIC_UNIT((short)1),
    IMPERIAL_UNIT((short)2),
    ATTRIBUTE_CONFIDENCE((short)3),
    ATTRIBUTE_AGE((short)4),
    ATTRIBUTE_SOURCE((short)5),
    ICON_SET_REFERENCE((short)6),
    ICON_SET_REFERENCE_WITH_HEADING((short)7),
    GLOBAL_ICON_SET_REFERENCE((short)8),
    GLOBAL_ICON_SET_REFERENCE_WITH_HEADING((short)9),
    TOLL_PAYMENT((short)10);

    private CorePropertyType(short value)
    {
        this.value = value;
    }

    public short getValue()
    {
        return value;
    }

    @Override
    public java.lang.Number getGenericValue()
    {
        return value;
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.init(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        return zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(value);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return deltaContext.bitSizeOf(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition) throws zserio.runtime.ZserioError
    {
        return bitPosition + bitSizeOf(bitPosition);
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        return bitPosition + bitSizeOf(context, bitPosition);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt16(getValue());
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        deltaContext.write(
                new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(value));
    }

    public static CorePropertyType readEnum(zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        return toEnum(in.readVarUInt16());
    }

    public static CorePropertyType readEnum(zserio.runtime.array.PackingContext context,
            zserio.runtime.io.BitStreamReader in) throws java.io.IOException
    {
        final zserio.runtime.array.DeltaContext deltaContext = context.cast();
        return toEnum(((zserio.runtime.array.ArrayElement.ShortArrayElement)
                deltaContext.read(
                        new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get());
    }

    public static CorePropertyType toEnum(short value)
    {
        switch (value)
        {
            case (short)0:
                return ATTRIBUTE_REASON;
            case (short)1:
                return METRIC_UNIT;
            case (short)2:
                return IMPERIAL_UNIT;
            case (short)3:
                return ATTRIBUTE_CONFIDENCE;
            case (short)4:
                return ATTRIBUTE_AGE;
            case (short)5:
                return ATTRIBUTE_SOURCE;
            case (short)6:
                return ICON_SET_REFERENCE;
            case (short)7:
                return ICON_SET_REFERENCE_WITH_HEADING;
            case (short)8:
                return GLOBAL_ICON_SET_REFERENCE;
            case (short)9:
                return GLOBAL_ICON_SET_REFERENCE_WITH_HEADING;
            case (short)10:
                return TOLL_PAYMENT;
            default:
                throw new java.lang.IllegalArgumentException(
                        "Unknown value for enumeration CorePropertyType: " + value + "!");
        }
    }

    public static CorePropertyType toEnum(java.lang.String itemName)
    {
        if (itemName.equals("ATTRIBUTE_REASON"))
            return ATTRIBUTE_REASON;
        if (itemName.equals("METRIC_UNIT"))
            return METRIC_UNIT;
        if (itemName.equals("IMPERIAL_UNIT"))
            return IMPERIAL_UNIT;
        if (itemName.equals("ATTRIBUTE_CONFIDENCE"))
            return ATTRIBUTE_CONFIDENCE;
        if (itemName.equals("ATTRIBUTE_AGE"))
            return ATTRIBUTE_AGE;
        if (itemName.equals("ATTRIBUTE_SOURCE"))
            return ATTRIBUTE_SOURCE;
        if (itemName.equals("ICON_SET_REFERENCE"))
            return ICON_SET_REFERENCE;
        if (itemName.equals("ICON_SET_REFERENCE_WITH_HEADING"))
            return ICON_SET_REFERENCE_WITH_HEADING;
        if (itemName.equals("GLOBAL_ICON_SET_REFERENCE"))
            return GLOBAL_ICON_SET_REFERENCE;
        if (itemName.equals("GLOBAL_ICON_SET_REFERENCE_WITH_HEADING"))
            return GLOBAL_ICON_SET_REFERENCE_WITH_HEADING;
        if (itemName.equals("TOLL_PAYMENT"))
            return TOLL_PAYMENT;
        throw new java.lang.IllegalArgumentException(
                "Enum item '" + itemName + "' doesn't exist in enumeration CorePropertyType!");
    }

    private short value;
}
