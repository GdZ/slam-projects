/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.core.icons;

public class IconImage implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            iconId_ = new zserio.runtime.array.DeltaContext();
            minResolution_ = new zserio.runtime.array.DeltaContext();
            maxResolution_ = new zserio.runtime.array.DeltaContext();
            textBoundingRect_ = new nds.core.icons.ImageRect.ZserioPackingContext();
            textColor_ = new nds.core.color.ColorRgba.ZserioPackingContext();
            pixWidth_ = new zserio.runtime.array.DeltaContext();
            pixHeight_ = new zserio.runtime.array.DeltaContext();
            iconFormat_ = new zserio.runtime.array.DeltaContext();
            imageAnchorPos_ = new nds.core.icons.ImageAnchorPos.ZserioPackingContext();
            iconHeading_ = new zserio.runtime.array.DeltaContext();
            imageBoundingRect_ = new nds.core.icons.ImageRect.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getIconId()
        {
            return iconId_;
        }

        public zserio.runtime.array.DeltaContext getMinResolution()
        {
            return minResolution_;
        }

        public zserio.runtime.array.DeltaContext getMaxResolution()
        {
            return maxResolution_;
        }

        public nds.core.icons.ImageRect.ZserioPackingContext getTextBoundingRect()
        {
            return textBoundingRect_;
        }

        public nds.core.color.ColorRgba.ZserioPackingContext getTextColor()
        {
            return textColor_;
        }

        public zserio.runtime.array.DeltaContext getPixWidth()
        {
            return pixWidth_;
        }

        public zserio.runtime.array.DeltaContext getPixHeight()
        {
            return pixHeight_;
        }

        public zserio.runtime.array.DeltaContext getIconFormat()
        {
            return iconFormat_;
        }

        public nds.core.icons.ImageAnchorPos.ZserioPackingContext getImageAnchorPos()
        {
            return imageAnchorPos_;
        }

        public zserio.runtime.array.DeltaContext getIconHeading()
        {
            return iconHeading_;
        }

        public nds.core.icons.ImageRect.ZserioPackingContext getImageBoundingRect()
        {
            return imageBoundingRect_;
        }

        private zserio.runtime.array.DeltaContext iconId_;
        private zserio.runtime.array.DeltaContext minResolution_;
        private zserio.runtime.array.DeltaContext maxResolution_;
        private nds.core.icons.ImageRect.ZserioPackingContext textBoundingRect_;
        private nds.core.color.ColorRgba.ZserioPackingContext textColor_;
        private zserio.runtime.array.DeltaContext pixWidth_;
        private zserio.runtime.array.DeltaContext pixHeight_;
        private zserio.runtime.array.DeltaContext iconFormat_;
        private nds.core.icons.ImageAnchorPos.ZserioPackingContext imageAnchorPos_;
        private zserio.runtime.array.DeltaContext iconHeading_;
        private nds.core.icons.ImageRect.ZserioPackingContext imageBoundingRect_;
    };

    public IconImage()
    {
    }

    public IconImage(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public IconImage(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public IconImage(
            int iconId_,
            short minResolution_,
            short maxResolution_,
            nds.core.icons.ImageRect textBoundingRect_,
            nds.core.color.ColorRgba textColor_,
            int pixWidth_,
            int pixHeight_,
            nds.core.icons.IconFormat iconFormat_,
            nds.core.icons.ImageAnchorPos imageAnchorPos_,
            short iconHeading_,
            nds.core.icons.ImageRect imageBoundingRect_,
            zserio.runtime.io.BitBuffer image_)
    {
        setIconId(iconId_);
        setMinResolution(minResolution_);
        setMaxResolution(maxResolution_);
        setTextBoundingRect(textBoundingRect_);
        setTextColor(textColor_);
        setPixWidth(pixWidth_);
        setPixHeight(pixHeight_);
        setIconFormat(iconFormat_);
        setImageAnchorPos(imageAnchorPos_);
        setIconHeading(iconHeading_);
        setImageBoundingRect(imageBoundingRect_);
        setImage(image_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getIconId().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(iconId_));
        zserioContext.getMinResolution().init(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(minResolution_));
        zserioContext.getMaxResolution().init(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(maxResolution_));
        textBoundingRect_.initPackingContext(zserioContext.getTextBoundingRect());
        textColor_.initPackingContext(zserioContext.getTextColor());
        zserioContext.getPixWidth().init(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixWidth_));
        zserioContext.getPixHeight().init(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixHeight_));
        iconFormat_.initPackingContext(zserioContext.getIconFormat());
        imageAnchorPos_.initPackingContext(zserioContext.getImageAnchorPos());
        zserioContext.getIconHeading().init(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(iconHeading_));
        imageBoundingRect_.initPackingContext(zserioContext.getImageBoundingRect());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(iconId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(minResolution_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(maxResolution_);
        endBitPosition += textBoundingRect_.bitSizeOf(endBitPosition);
        endBitPosition += textColor_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(pixWidth_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(pixHeight_);
        endBitPosition += iconFormat_.bitSizeOf(endBitPosition);
        endBitPosition += imageAnchorPos_.bitSizeOf(endBitPosition);
        endBitPosition += 8;
        endBitPosition += imageBoundingRect_.bitSizeOf(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(image_);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getIconId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(iconId_));
        endBitPosition += zserioContext.getMinResolution().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(minResolution_));
        endBitPosition += zserioContext.getMaxResolution().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(maxResolution_));
        endBitPosition += textBoundingRect_.bitSizeOf(zserioContext.getTextBoundingRect(), endBitPosition);
        endBitPosition += textColor_.bitSizeOf(zserioContext.getTextColor(), endBitPosition);
        endBitPosition += zserioContext.getPixWidth().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixWidth_));
        endBitPosition += zserioContext.getPixHeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixHeight_));
        endBitPosition += iconFormat_.bitSizeOf(zserioContext.getIconFormat(), endBitPosition);
        endBitPosition += imageAnchorPos_.bitSizeOf(zserioContext.getImageAnchorPos(), endBitPosition);
        endBitPosition += zserioContext.getIconHeading().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(iconHeading_));
        endBitPosition += imageBoundingRect_.bitSizeOf(zserioContext.getImageBoundingRect(), endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(image_);

        return (int)(endBitPosition - bitPosition);
    }

    public int getIconId()
    {
        return iconId_;
    }

    public void setIconId(int iconId_)
    {
        this.iconId_ = iconId_;
    }

    public short getMinResolution()
    {
        return minResolution_;
    }

    public void setMinResolution(short minResolution_)
    {
        this.minResolution_ = minResolution_;
    }

    public short getMaxResolution()
    {
        return maxResolution_;
    }

    public void setMaxResolution(short maxResolution_)
    {
        this.maxResolution_ = maxResolution_;
    }

    public nds.core.icons.ImageRect getTextBoundingRect()
    {
        return textBoundingRect_;
    }

    public void setTextBoundingRect(nds.core.icons.ImageRect textBoundingRect_)
    {
        this.textBoundingRect_ = textBoundingRect_;
    }

    public nds.core.color.ColorRgba getTextColor()
    {
        return textColor_;
    }

    public void setTextColor(nds.core.color.ColorRgba textColor_)
    {
        this.textColor_ = textColor_;
    }

    public int getPixWidth()
    {
        return pixWidth_;
    }

    public void setPixWidth(int pixWidth_)
    {
        this.pixWidth_ = pixWidth_;
    }

    public int getPixHeight()
    {
        return pixHeight_;
    }

    public void setPixHeight(int pixHeight_)
    {
        this.pixHeight_ = pixHeight_;
    }

    public nds.core.icons.IconFormat getIconFormat()
    {
        return iconFormat_;
    }

    public void setIconFormat(nds.core.icons.IconFormat iconFormat_)
    {
        this.iconFormat_ = iconFormat_;
    }

    public nds.core.icons.ImageAnchorPos getImageAnchorPos()
    {
        return imageAnchorPos_;
    }

    public void setImageAnchorPos(nds.core.icons.ImageAnchorPos imageAnchorPos_)
    {
        this.imageAnchorPos_ = imageAnchorPos_;
    }

    public short getIconHeading()
    {
        return iconHeading_;
    }

    public void setIconHeading(short iconHeading_)
    {
        this.iconHeading_ = iconHeading_;
    }

    public nds.core.icons.ImageRect getImageBoundingRect()
    {
        return imageBoundingRect_;
    }

    public void setImageBoundingRect(nds.core.icons.ImageRect imageBoundingRect_)
    {
        this.imageBoundingRect_ = imageBoundingRect_;
    }

    public zserio.runtime.io.BitBuffer getImage()
    {
        return image_;
    }

    public void setImage(zserio.runtime.io.BitBuffer image_)
    {
        this.image_ = image_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof IconImage)
        {
            final IconImage that = (IconImage)obj;

            return
                    iconId_ == that.iconId_ &&
                    minResolution_ == that.minResolution_ &&
                    maxResolution_ == that.maxResolution_ &&
                    ((textBoundingRect_ == null) ? that.textBoundingRect_ == null : textBoundingRect_.equals(that.textBoundingRect_)) &&
                    ((textColor_ == null) ? that.textColor_ == null : textColor_.equals(that.textColor_)) &&
                    pixWidth_ == that.pixWidth_ &&
                    pixHeight_ == that.pixHeight_ &&
                    ((iconFormat_ == null) ? that.iconFormat_ == null : iconFormat_.getValue() == that.iconFormat_.getValue()) &&
                    ((imageAnchorPos_ == null) ? that.imageAnchorPos_ == null : imageAnchorPos_.equals(that.imageAnchorPos_)) &&
                    iconHeading_ == that.iconHeading_ &&
                    ((imageBoundingRect_ == null) ? that.imageBoundingRect_ == null : imageBoundingRect_.equals(that.imageBoundingRect_)) &&
                    ((image_ == null) ? that.image_ == null : image_.equals(that.image_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, iconId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, minResolution_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, maxResolution_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, textBoundingRect_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, textColor_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, pixWidth_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, pixHeight_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, iconFormat_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, imageAnchorPos_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, iconHeading_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, imageBoundingRect_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, image_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        iconId_ = in.readVarUInt32();

        minResolution_ = in.readVarUInt16();

        maxResolution_ = in.readVarUInt16();

        textBoundingRect_ = new nds.core.icons.ImageRect(in);

        textColor_ = new nds.core.color.ColorRgba(in);

        pixWidth_ = in.readVarInt32();

        pixHeight_ = in.readVarInt32();

        iconFormat_ = nds.core.icons.IconFormat.readEnum(in);

        imageAnchorPos_ = new nds.core.icons.ImageAnchorPos(in);

        iconHeading_ = in.readUnsignedByte();

        imageBoundingRect_ = new nds.core.icons.ImageRect(in);

        image_ = in.readBitBuffer();
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        iconId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getIconId().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        minResolution_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getMinResolution().read(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get();

        maxResolution_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getMaxResolution().read(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), in)).get();

        textBoundingRect_ = new nds.core.icons.ImageRect(zserioContext.getTextBoundingRect(), in);

        textColor_ = new nds.core.color.ColorRgba(zserioContext.getTextColor(), in);

        pixWidth_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getPixWidth().read(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), in)).get();

        pixHeight_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getPixHeight().read(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), in)).get();

        iconFormat_ = nds.core.icons.IconFormat.readEnum(zserioContext.getIconFormat(), in);

        imageAnchorPos_ = new nds.core.icons.ImageAnchorPos(zserioContext.getImageAnchorPos(), in);

        iconHeading_ = ((zserio.runtime.array.ArrayElement.ShortArrayElement)
                zserioContext.getIconHeading().read(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), in)).get();

        imageBoundingRect_ = new nds.core.icons.ImageRect(zserioContext.getImageBoundingRect(), in);

        image_ = in.readBitBuffer();
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(iconId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(minResolution_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt16(maxResolution_);
        endBitPosition = textBoundingRect_.initializeOffsets(endBitPosition);
        endBitPosition = textColor_.initializeOffsets(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(pixWidth_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarInt32(pixHeight_);
        endBitPosition += iconFormat_.bitSizeOf(endBitPosition);
        endBitPosition = imageAnchorPos_.initializeOffsets(endBitPosition);
        endBitPosition += 8;
        endBitPosition = imageBoundingRect_.initializeOffsets(endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(image_);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getIconId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(iconId_));
        endBitPosition += zserioContext.getMinResolution().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(minResolution_));
        endBitPosition += zserioContext.getMaxResolution().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(maxResolution_));
        endBitPosition = textBoundingRect_.initializeOffsets(zserioContext.getTextBoundingRect(), endBitPosition);
        endBitPosition = textColor_.initializeOffsets(zserioContext.getTextColor(), endBitPosition);
        endBitPosition += zserioContext.getPixWidth().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixWidth_));
        endBitPosition += zserioContext.getPixHeight().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixHeight_));
        endBitPosition = iconFormat_.initializeOffsets(zserioContext.getIconFormat(), endBitPosition);
        endBitPosition = imageAnchorPos_.initializeOffsets(zserioContext.getImageAnchorPos(), endBitPosition);
        endBitPosition += zserioContext.getIconHeading().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)),
                new zserio.runtime.array.ArrayElement.ShortArrayElement(iconHeading_));
        endBitPosition = imageBoundingRect_.initializeOffsets(zserioContext.getImageBoundingRect(), endBitPosition);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfBitBuffer(image_);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(iconId_);

        out.writeVarUInt16(minResolution_);

        out.writeVarUInt16(maxResolution_);

        textBoundingRect_.write(out);

        textColor_.write(out);

        out.writeVarInt32(pixWidth_);

        out.writeVarInt32(pixHeight_);

        iconFormat_.write(out);

        imageAnchorPos_.write(out);

        out.writeUnsignedByte(iconHeading_);

        imageBoundingRect_.write(out);

        out.writeBitBuffer(image_);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getIconId().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(iconId_));

        zserioContext.getMinResolution().write(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(minResolution_));

        zserioContext.getMaxResolution().write(new zserio.runtime.array.ArrayTraits.VarUInt16ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(maxResolution_));

        textBoundingRect_.write(zserioContext.getTextBoundingRect(), out);

        textColor_.write(zserioContext.getTextColor(), out);

        zserioContext.getPixWidth().write(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixWidth_));

        zserioContext.getPixHeight().write(new zserio.runtime.array.ArrayTraits.VarInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(pixHeight_));

        iconFormat_.write(zserioContext.getIconFormat(), out);

        imageAnchorPos_.write(zserioContext.getImageAnchorPos(), out);

        zserioContext.getIconHeading().write(new zserio.runtime.array.ArrayTraits.BitFieldShortArrayTraits((int)(8)), out,
                new zserio.runtime.array.ArrayElement.ShortArrayElement(iconHeading_));

        imageBoundingRect_.write(zserioContext.getImageBoundingRect(), out);

        out.writeBitBuffer(image_);
    }

    private int iconId_;
    private short minResolution_;
    private short maxResolution_;
    private nds.core.icons.ImageRect textBoundingRect_;
    private nds.core.color.ColorRgba textColor_;
    private int pixWidth_;
    private int pixHeight_;
    private nds.core.icons.IconFormat iconFormat_;
    private nds.core.icons.ImageAnchorPos imageAnchorPos_;
    private short iconHeading_;
    private nds.core.icons.ImageRect imageBoundingRect_;
    private zserio.runtime.io.BitBuffer image_;
}
