/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.traffic.layer;

public class RoadTrafficLayer implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            content_ = new zserio.runtime.array.DeltaContext();
            shift_ = new zserio.runtime.array.DeltaContext();
            roadRangeAttributeMaps_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeMapList.ZserioPackingContext();
            transitionAttributeMaps_ = new nds.traffic.instantiations.TrafficTransitionAttributeMapList.ZserioPackingContext();
            roadRangeAttributeSets_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeSetList.ZserioPackingContext();
            transitionAttributeSets_ = new nds.traffic.instantiations.TrafficTransitionAttributeSetList.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getContent()
        {
            return content_;
        }

        public zserio.runtime.array.DeltaContext getShift()
        {
            return shift_;
        }

        public nds.traffic.instantiations.TrafficRoadRangeAttributeMapList.ZserioPackingContext getRoadRangeAttributeMaps()
        {
            return roadRangeAttributeMaps_;
        }

        public nds.traffic.instantiations.TrafficTransitionAttributeMapList.ZserioPackingContext getTransitionAttributeMaps()
        {
            return transitionAttributeMaps_;
        }

        public nds.traffic.instantiations.TrafficRoadRangeAttributeSetList.ZserioPackingContext getRoadRangeAttributeSets()
        {
            return roadRangeAttributeSets_;
        }

        public nds.traffic.instantiations.TrafficTransitionAttributeSetList.ZserioPackingContext getTransitionAttributeSets()
        {
            return transitionAttributeSets_;
        }

        private zserio.runtime.array.DeltaContext content_;
        private zserio.runtime.array.DeltaContext shift_;
        private nds.traffic.instantiations.TrafficRoadRangeAttributeMapList.ZserioPackingContext roadRangeAttributeMaps_;
        private nds.traffic.instantiations.TrafficTransitionAttributeMapList.ZserioPackingContext transitionAttributeMaps_;
        private nds.traffic.instantiations.TrafficRoadRangeAttributeSetList.ZserioPackingContext roadRangeAttributeSets_;
        private nds.traffic.instantiations.TrafficTransitionAttributeSetList.ZserioPackingContext transitionAttributeSets_;
    };

    public RoadTrafficLayer()
    {
    }

    public RoadTrafficLayer(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public RoadTrafficLayer(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public RoadTrafficLayer(
            nds.traffic.metadata.RoadTrafficLayerContent content_,
            byte shift_,
            nds.traffic.instantiations.TrafficRoadRangeAttributeMapList roadRangeAttributeMaps_,
            nds.traffic.instantiations.TrafficTransitionAttributeMapList transitionAttributeMaps_,
            nds.traffic.instantiations.TrafficRoadRangeAttributeSetList roadRangeAttributeSets_,
            nds.traffic.instantiations.TrafficTransitionAttributeSetList transitionAttributeSets_)
    {
        setContent(content_);
        setShift(shift_);
        setRoadRangeAttributeMaps(roadRangeAttributeMaps_);
        setTransitionAttributeMaps(transitionAttributeMaps_);
        setRoadRangeAttributeSets(roadRangeAttributeSets_);
        setTransitionAttributeSets(transitionAttributeSets_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.initPackingContext(zserioContext.getContent());
        zserioContext.getShift().init(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isRoadRangeAttributeMapsUsed())
        {
            roadRangeAttributeMaps_.initPackingContext(zserioContext.getRoadRangeAttributeMaps());
        }
        if (isTransitionAttributeMapsUsed())
        {
            transitionAttributeMaps_.initPackingContext(zserioContext.getTransitionAttributeMaps());
        }
        if (isRoadRangeAttributeSetsUsed())
        {
            roadRangeAttributeSets_.initPackingContext(zserioContext.getRoadRangeAttributeSets());
        }
        if (isTransitionAttributeSetsUsed())
        {
            transitionAttributeSets_.initPackingContext(zserioContext.getTransitionAttributeSets());
        }
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isRoadRangeAttributeMapsUsed())
        {
            endBitPosition += roadRangeAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isTransitionAttributeMapsUsed())
        {
            endBitPosition += transitionAttributeMaps_.bitSizeOf(endBitPosition);
        }
        if (isRoadRangeAttributeSetsUsed())
        {
            endBitPosition += roadRangeAttributeSets_.bitSizeOf(endBitPosition);
        }
        if (isTransitionAttributeSetsUsed())
        {
            endBitPosition += transitionAttributeSets_.bitSizeOf(endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isRoadRangeAttributeMapsUsed())
        {
            endBitPosition += roadRangeAttributeMaps_.bitSizeOf(zserioContext.getRoadRangeAttributeMaps(), endBitPosition);
        }
        if (isTransitionAttributeMapsUsed())
        {
            endBitPosition += transitionAttributeMaps_.bitSizeOf(zserioContext.getTransitionAttributeMaps(), endBitPosition);
        }
        if (isRoadRangeAttributeSetsUsed())
        {
            endBitPosition += roadRangeAttributeSets_.bitSizeOf(zserioContext.getRoadRangeAttributeSets(), endBitPosition);
        }
        if (isTransitionAttributeSetsUsed())
        {
            endBitPosition += transitionAttributeSets_.bitSizeOf(zserioContext.getTransitionAttributeSets(), endBitPosition);
        }

        return (int)(endBitPosition - bitPosition);
    }

    public nds.traffic.metadata.RoadTrafficLayerContent getContent()
    {
        return content_;
    }

    public void setContent(nds.traffic.metadata.RoadTrafficLayerContent content_)
    {
        this.content_ = content_;
    }

    public byte getShift()
    {
        return shift_;
    }

    public void setShift(byte shift_)
    {
        this.shift_ = shift_;
    }

    public nds.traffic.instantiations.TrafficRoadRangeAttributeMapList getRoadRangeAttributeMaps()
    {
        return roadRangeAttributeMaps_;
    }

    public void setRoadRangeAttributeMaps(nds.traffic.instantiations.TrafficRoadRangeAttributeMapList roadRangeAttributeMaps_)
    {
        this.roadRangeAttributeMaps_ = roadRangeAttributeMaps_;
    }

    public boolean isRoadRangeAttributeMapsUsed()
    {
        return ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS));
    }

    public boolean isRoadRangeAttributeMapsSet()
    {
        return (roadRangeAttributeMaps_ != null);
    }

    public void resetRoadRangeAttributeMaps()
    {
        this.roadRangeAttributeMaps_ = null;
    }

    public nds.traffic.instantiations.TrafficTransitionAttributeMapList getTransitionAttributeMaps()
    {
        return transitionAttributeMaps_;
    }

    public void setTransitionAttributeMaps(nds.traffic.instantiations.TrafficTransitionAttributeMapList transitionAttributeMaps_)
    {
        this.transitionAttributeMaps_ = transitionAttributeMaps_;
    }

    public boolean isTransitionAttributeMapsUsed()
    {
        return ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS));
    }

    public boolean isTransitionAttributeMapsSet()
    {
        return (transitionAttributeMaps_ != null);
    }

    public void resetTransitionAttributeMaps()
    {
        this.transitionAttributeMaps_ = null;
    }

    public nds.traffic.instantiations.TrafficRoadRangeAttributeSetList getRoadRangeAttributeSets()
    {
        return roadRangeAttributeSets_;
    }

    public void setRoadRangeAttributeSets(nds.traffic.instantiations.TrafficRoadRangeAttributeSetList roadRangeAttributeSets_)
    {
        this.roadRangeAttributeSets_ = roadRangeAttributeSets_;
    }

    public boolean isRoadRangeAttributeSetsUsed()
    {
        return ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS));
    }

    public boolean isRoadRangeAttributeSetsSet()
    {
        return (roadRangeAttributeSets_ != null);
    }

    public void resetRoadRangeAttributeSets()
    {
        this.roadRangeAttributeSets_ = null;
    }

    public nds.traffic.instantiations.TrafficTransitionAttributeSetList getTransitionAttributeSets()
    {
        return transitionAttributeSets_;
    }

    public void setTransitionAttributeSets(nds.traffic.instantiations.TrafficTransitionAttributeSetList transitionAttributeSets_)
    {
        this.transitionAttributeSets_ = transitionAttributeSets_;
    }

    public boolean isTransitionAttributeSetsUsed()
    {
        return ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS));
    }

    public boolean isTransitionAttributeSetsSet()
    {
        return (transitionAttributeSets_ != null);
    }

    public void resetTransitionAttributeSets()
    {
        this.transitionAttributeSets_ = null;
    }

    public nds.system.types.LayerType funcGetLayerType()
    {
        return (nds.system.types.LayerType)(nds.system.types.LayerType.ATTRIBUTE);
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof RoadTrafficLayer)
        {
            final RoadTrafficLayer that = (RoadTrafficLayer)obj;

            return
                    ((content_ == null) ? that.content_ == null : content_.equals(that.content_)) &&
                    shift_ == that.shift_ &&
                    ((!isRoadRangeAttributeMapsUsed()) ? !that.isRoadRangeAttributeMapsUsed() :
                        ((roadRangeAttributeMaps_ == null) ? that.roadRangeAttributeMaps_ == null : roadRangeAttributeMaps_.equals(that.roadRangeAttributeMaps_))) &&
                    ((!isTransitionAttributeMapsUsed()) ? !that.isTransitionAttributeMapsUsed() :
                        ((transitionAttributeMaps_ == null) ? that.transitionAttributeMaps_ == null : transitionAttributeMaps_.equals(that.transitionAttributeMaps_))) &&
                    ((!isRoadRangeAttributeSetsUsed()) ? !that.isRoadRangeAttributeSetsUsed() :
                        ((roadRangeAttributeSets_ == null) ? that.roadRangeAttributeSets_ == null : roadRangeAttributeSets_.equals(that.roadRangeAttributeSets_))) &&
                    ((!isTransitionAttributeSetsUsed()) ? !that.isTransitionAttributeSetsUsed() :
                        ((transitionAttributeSets_ == null) ? that.transitionAttributeSets_ == null : transitionAttributeSets_.equals(that.transitionAttributeSets_)));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, content_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, shift_);
        if (isRoadRangeAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadRangeAttributeMaps_);
        if (isTransitionAttributeMapsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, transitionAttributeMaps_);
        if (isRoadRangeAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, roadRangeAttributeSets_);
        if (isTransitionAttributeSetsUsed())
            result = zserio.runtime.HashCodeUtil.calcHashCode(result, transitionAttributeSets_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        content_ = new nds.traffic.metadata.RoadTrafficLayerContent(in);

        shift_ = (byte)in.readBits(5);

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS))
        {
            roadRangeAttributeMaps_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS))
        {
            transitionAttributeMaps_ = new nds.traffic.instantiations.TrafficTransitionAttributeMapList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS))
        {
            roadRangeAttributeSets_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeSetList(in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS))
        {
            transitionAttributeSets_ = new nds.traffic.instantiations.TrafficTransitionAttributeSetList(in, (byte)(getShift()));
        }
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_ = new nds.traffic.metadata.RoadTrafficLayerContent(zserioContext.getContent(), in);

        shift_ = ((zserio.runtime.array.ArrayElement.ByteArrayElement)
                zserioContext.getShift().read(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), in)).get();

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_MAPS))
        {
            roadRangeAttributeMaps_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeMapList(zserioContext.getRoadRangeAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_MAPS))
        {
            transitionAttributeMaps_ = new nds.traffic.instantiations.TrafficTransitionAttributeMapList(zserioContext.getTransitionAttributeMaps(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.ROAD_RANGE_SETS))
        {
            roadRangeAttributeSets_ = new nds.traffic.instantiations.TrafficRoadRangeAttributeSetList(zserioContext.getRoadRangeAttributeSets(), in, (byte)(getShift()));
        }

        if ((getContent().and(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS)).equals(nds.traffic.metadata.RoadTrafficLayerContent.Values.TRANSITION_SETS))
        {
            transitionAttributeSets_ = new nds.traffic.instantiations.TrafficTransitionAttributeSetList(zserioContext.getTransitionAttributeSets(), in, (byte)(getShift()));
        }
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += content_.bitSizeOf(endBitPosition);
        endBitPosition += 5;
        if (isRoadRangeAttributeMapsUsed())
        {
            endBitPosition = roadRangeAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isTransitionAttributeMapsUsed())
        {
            endBitPosition = transitionAttributeMaps_.initializeOffsets(endBitPosition);
        }
        if (isRoadRangeAttributeSetsUsed())
        {
            endBitPosition = roadRangeAttributeSets_.initializeOffsets(endBitPosition);
        }
        if (isTransitionAttributeSetsUsed())
        {
            endBitPosition = transitionAttributeSets_.initializeOffsets(endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition = content_.initializeOffsets(zserioContext.getContent(), endBitPosition);
        endBitPosition += zserioContext.getShift().bitSizeOf(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)),
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));
        if (isRoadRangeAttributeMapsUsed())
        {
            endBitPosition = roadRangeAttributeMaps_.initializeOffsets(zserioContext.getRoadRangeAttributeMaps(), endBitPosition);
        }
        if (isTransitionAttributeMapsUsed())
        {
            endBitPosition = transitionAttributeMaps_.initializeOffsets(zserioContext.getTransitionAttributeMaps(), endBitPosition);
        }
        if (isRoadRangeAttributeSetsUsed())
        {
            endBitPosition = roadRangeAttributeSets_.initializeOffsets(zserioContext.getRoadRangeAttributeSets(), endBitPosition);
        }
        if (isTransitionAttributeSetsUsed())
        {
            endBitPosition = transitionAttributeSets_.initializeOffsets(zserioContext.getTransitionAttributeSets(), endBitPosition);
        }

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        content_.write(out);

        out.writeBits(shift_, 5);

        if (isRoadRangeAttributeMapsUsed())
        {
            // check parameters
            if (roadRangeAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field RoadTrafficLayer.roadRangeAttributeMaps: " +
                        roadRangeAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            roadRangeAttributeMaps_.write(out);
        }

        if (isTransitionAttributeMapsUsed())
        {
            // check parameters
            if (transitionAttributeMaps_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field RoadTrafficLayer.transitionAttributeMaps: " +
                        transitionAttributeMaps_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            transitionAttributeMaps_.write(out);
        }

        if (isRoadRangeAttributeSetsUsed())
        {
            // check parameters
            if (roadRangeAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field RoadTrafficLayer.roadRangeAttributeSets: " +
                        roadRangeAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            roadRangeAttributeSets_.write(out);
        }

        if (isTransitionAttributeSetsUsed())
        {
            // check parameters
            if (transitionAttributeSets_.getCoordShift() != (byte)(getShift()))
            {
                throw new zserio.runtime.ZserioError("Write: Wrong parameter coordShift for field RoadTrafficLayer.transitionAttributeSets: " +
                        transitionAttributeSets_.getCoordShift() + " != " + (byte)(getShift()) + "!");
            }
            transitionAttributeSets_.write(out);
        }
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        content_.write(zserioContext.getContent(), out);

        zserioContext.getShift().write(new zserio.runtime.array.ArrayTraits.BitFieldByteArrayTraits((int)(5)), out,
                new zserio.runtime.array.ArrayElement.ByteArrayElement(shift_));

        if (isRoadRangeAttributeMapsUsed())
        {
            roadRangeAttributeMaps_.write(zserioContext.getRoadRangeAttributeMaps(), out);
        }

        if (isTransitionAttributeMapsUsed())
        {
            transitionAttributeMaps_.write(zserioContext.getTransitionAttributeMaps(), out);
        }

        if (isRoadRangeAttributeSetsUsed())
        {
            roadRangeAttributeSets_.write(zserioContext.getRoadRangeAttributeSets(), out);
        }

        if (isTransitionAttributeSetsUsed())
        {
            transitionAttributeSets_.write(zserioContext.getTransitionAttributeSets(), out);
        }
    }

    private nds.traffic.metadata.RoadTrafficLayerContent content_;
    private byte shift_;
    private nds.traffic.instantiations.TrafficRoadRangeAttributeMapList roadRangeAttributeMaps_;
    private nds.traffic.instantiations.TrafficTransitionAttributeMapList transitionAttributeMaps_;
    private nds.traffic.instantiations.TrafficRoadRangeAttributeSetList roadRangeAttributeSets_;
    private nds.traffic.instantiations.TrafficTransitionAttributeSetList transitionAttributeSets_;
}
