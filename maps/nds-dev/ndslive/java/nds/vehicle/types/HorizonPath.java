/**
 * Automatically generated by Zserio Java extension version 2.12.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package nds.vehicle.types;

public class HorizonPath implements zserio.runtime.io.PackableWriter, zserio.runtime.PackableSizeOf
{
    public static final class ZserioPackingContext extends zserio.runtime.array.PackingContext
    {
        public ZserioPackingContext()
        {
            pathId_ = new zserio.runtime.array.DeltaContext();
            parentPathId_ = new zserio.runtime.array.DeltaContext();
            parentSegmentIndex_ = new zserio.runtime.array.DeltaContext();
            path_ = new nds.core.location.RoadLocationPath.ZserioPackingContext();
        }

        public zserio.runtime.array.DeltaContext getPathId()
        {
            return pathId_;
        }

        public zserio.runtime.array.DeltaContext getParentPathId()
        {
            return parentPathId_;
        }

        public zserio.runtime.array.DeltaContext getParentSegmentIndex()
        {
            return parentSegmentIndex_;
        }

        public nds.core.location.RoadLocationPath.ZserioPackingContext getPath()
        {
            return path_;
        }

        private zserio.runtime.array.DeltaContext pathId_;
        private zserio.runtime.array.DeltaContext parentPathId_;
        private zserio.runtime.array.DeltaContext parentSegmentIndex_;
        private nds.core.location.RoadLocationPath.ZserioPackingContext path_;
    };

    public HorizonPath()
    {
    }

    public HorizonPath(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(in);
    }

    public HorizonPath(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        read(context, in);
    }

    public HorizonPath(
            int pathId_,
            int parentPathId_,
            int parentSegmentIndex_,
            nds.core.location.RoadLocationPath path_)
    {
        setPathId(pathId_);
        setParentPathId(parentPathId_);
        setParentSegmentIndex(parentSegmentIndex_);
        setPath(path_);
    }

    @Override
    public void initPackingContext(zserio.runtime.array.PackingContext context)
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getPathId().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pathId_));
        zserioContext.getParentPathId().init(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentPathId_));
        zserioContext.getParentSegmentIndex().init(new zserio.runtime.array.ArrayTraits.VarSizeArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentSegmentIndex_));
        path_.initPackingContext(zserioContext.getPath());
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(pathId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(parentPathId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarSize(parentSegmentIndex_);
        endBitPosition += path_.bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    @Override
    public int bitSizeOf(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getPathId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pathId_));
        endBitPosition += zserioContext.getParentPathId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentPathId_));
        endBitPosition += zserioContext.getParentSegmentIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarSizeArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentSegmentIndex_));
        endBitPosition += path_.bitSizeOf(zserioContext.getPath(), endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public int getPathId()
    {
        return pathId_;
    }

    public void setPathId(int pathId_)
    {
        this.pathId_ = pathId_;
    }

    public int getParentPathId()
    {
        return parentPathId_;
    }

    public void setParentPathId(int parentPathId_)
    {
        this.parentPathId_ = parentPathId_;
    }

    public int getParentSegmentIndex()
    {
        return parentSegmentIndex_;
    }

    public void setParentSegmentIndex(int parentSegmentIndex_)
    {
        this.parentSegmentIndex_ = parentSegmentIndex_;
    }

    public nds.core.location.RoadLocationPath getPath()
    {
        return path_;
    }

    public void setPath(nds.core.location.RoadLocationPath path_)
    {
        this.path_ = path_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof HorizonPath)
        {
            final HorizonPath that = (HorizonPath)obj;

            return
                    pathId_ == that.pathId_ &&
                    parentPathId_ == that.parentPathId_ &&
                    parentSegmentIndex_ == that.parentSegmentIndex_ &&
                    ((path_ == null) ? that.path_ == null : path_.equals(that.path_));
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.HashCodeUtil.HASH_SEED;

        result = zserio.runtime.HashCodeUtil.calcHashCode(result, pathId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, parentPathId_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, parentSegmentIndex_);
        result = zserio.runtime.HashCodeUtil.calcHashCode(result, path_);

        return result;
    }

    public void read(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        pathId_ = in.readVarUInt32();

        parentPathId_ = in.readVarUInt32();

        parentSegmentIndex_ = in.readVarSize();

        path_ = new nds.core.location.RoadLocationPath(in);
    }

    public void read(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        pathId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getPathId().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        parentPathId_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getParentPathId().read(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), in)).get();

        parentSegmentIndex_ = ((zserio.runtime.array.ArrayElement.IntArrayElement)
                zserioContext.getParentSegmentIndex().read(new zserio.runtime.array.ArrayTraits.VarSizeArrayTraits(), in)).get();

        path_ = new nds.core.location.RoadLocationPath(zserioContext.getPath(), in);
    }

    @Override
    public long initializeOffsets()
    {
        return initializeOffsets(0);
    }

    @Override
    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(pathId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarUInt32(parentPathId_);
        endBitPosition += zserio.runtime.BitSizeOfCalculator.getBitSizeOfVarSize(parentSegmentIndex_);
        endBitPosition = path_.initializeOffsets(endBitPosition);

        return endBitPosition;
    }

    @Override
    public long initializeOffsets(zserio.runtime.array.PackingContext context, long bitPosition)
    {
        final ZserioPackingContext zserioContext = context.cast();
        long endBitPosition = bitPosition;

        endBitPosition += zserioContext.getPathId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(pathId_));
        endBitPosition += zserioContext.getParentPathId().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentPathId_));
        endBitPosition += zserioContext.getParentSegmentIndex().bitSizeOf(new zserio.runtime.array.ArrayTraits.VarSizeArrayTraits(),
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentSegmentIndex_));
        endBitPosition = path_.initializeOffsets(zserioContext.getPath(), endBitPosition);

        return endBitPosition;
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out) throws java.io.IOException
    {
        out.writeVarUInt32(pathId_);

        out.writeVarUInt32(parentPathId_);

        out.writeVarSize(parentSegmentIndex_);

        path_.write(out);
    }

    @Override
    public void write(zserio.runtime.array.PackingContext context, zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException
    {
        final ZserioPackingContext zserioContext = context.cast();
        zserioContext.getPathId().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(pathId_));

        zserioContext.getParentPathId().write(new zserio.runtime.array.ArrayTraits.VarUInt32ArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentPathId_));

        zserioContext.getParentSegmentIndex().write(new zserio.runtime.array.ArrayTraits.VarSizeArrayTraits(), out,
                new zserio.runtime.array.ArrayElement.IntArrayElement(parentSegmentIndex_));

        path_.write(zserioContext.getPath(), out);
    }

    private int pathId_;
    private int parentPathId_;
    private int parentSegmentIndex_;
    private nds.core.location.RoadLocationPath path_;
}
