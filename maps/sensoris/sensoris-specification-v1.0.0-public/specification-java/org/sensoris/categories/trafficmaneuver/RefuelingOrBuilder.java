// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/traffic_maneuver.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.trafficmaneuver;

public interface RefuelingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.trafficmaneuver.Refueling)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * Type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;</code>
   * @return The type.
   */
  org.sensoris.categories.trafficmaneuver.Refueling.Type getType();

  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   *
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return Whether the quantityToFullAndAccuracy field is set.
   */
  boolean hasQuantityToFullAndAccuracy();
  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   *
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return The quantityToFullAndAccuracy.
   */
  org.sensoris.types.base.Int64ValueAndAccuracy getQuantityToFullAndAccuracy();
  /**
   * <pre>
   * The amount of fuel in litres (for fuel) / kilograms (for gas) and accuracy required to achieve a full tank.
   *
   * &#64;unit Litre / KiloGram
   * &#64;resolution 0.1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getQuantityToFullAndAccuracyOrBuilder();
}
