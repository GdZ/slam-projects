// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/road_attribution.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.roadattribution;

public interface LaneOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.roadattribution.Lane)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Relative lane identifier.
   *
   * Identifier is 0 for ego-lane, +1 for lane directly left of vehicle, +2 for lane left of lane +1, -1 for lane directly right of vehicle, -2 for lane right of lane -1.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value relative_lane_id = 2;</code>
   * @return Whether the relativeLaneId field is set.
   */
  boolean hasRelativeLaneId();
  /**
   * <pre>
   * Relative lane identifier.
   *
   * Identifier is 0 for ego-lane, +1 for lane directly left of vehicle, +2 for lane left of lane +1, -1 for lane directly right of vehicle, -2 for lane right of lane -1.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value relative_lane_id = 2;</code>
   * @return The relativeLaneId.
   */
  com.google.protobuf.Int64Value getRelativeLaneId();
  /**
   * <pre>
   * Relative lane identifier.
   *
   * Identifier is 0 for ego-lane, +1 for lane directly left of vehicle, +2 for lane left of lane +1, -1 for lane directly right of vehicle, -2 for lane right of lane -1.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value relative_lane_id = 2;</code>
   */
  com.google.protobuf.Int64ValueOrBuilder getRelativeLaneIdOrBuilder();

  /**
   * <pre>
   * Width and accuracy.
   *
   * &#64;unit MilliMeter
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return Whether the widthAndAccuracy field is set.
   */
  boolean hasWidthAndAccuracy();
  /**
   * <pre>
   * Width and accuracy.
   *
   * &#64;unit MilliMeter
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return The widthAndAccuracy.
   */
  org.sensoris.types.base.Int64ValueAndAccuracy getWidthAndAccuracy();
  /**
   * <pre>
   * Width and accuracy.
   *
   * &#64;unit MilliMeter
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy width_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getWidthAndAccuracyOrBuilder();

  /**
   * <pre>
   * Inclination and curvature.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature inclination_and_curvature = 4;</code>
   * @return Whether the inclinationAndCurvature field is set.
   */
  boolean hasInclinationAndCurvature();
  /**
   * <pre>
   * Inclination and curvature.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature inclination_and_curvature = 4;</code>
   * @return The inclinationAndCurvature.
   */
  org.sensoris.categories.roadattribution.InclinationAndCurvature getInclinationAndCurvature();
  /**
   * <pre>
   * Inclination and curvature.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.InclinationAndCurvature inclination_and_curvature = 4;</code>
   */
  org.sensoris.categories.roadattribution.InclinationAndCurvatureOrBuilder getInclinationAndCurvatureOrBuilder();
}
