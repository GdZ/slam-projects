// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/road_attribution.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.roadattribution;

/**
 * <pre>
 * Road attribution category.
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.roadattribution.RoadAttributionCategory}
 */
public final class RoadAttributionCategory extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.roadattribution.RoadAttributionCategory)
    RoadAttributionCategoryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RoadAttributionCategory.newBuilder() to construct.
  private RoadAttributionCategory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RoadAttributionCategory() {
    laneBoundary_ = java.util.Collections.emptyList();
    laneBoundaryMergeSplit_ = java.util.Collections.emptyList();
    lane_ = java.util.Collections.emptyList();
    road_ = java.util.Collections.emptyList();
    surfaceMarking_ = java.util.Collections.emptyList();
    surfaceAttribution_ = java.util.Collections.emptyList();
    roadAttribution_ = java.util.Collections.emptyList();
    detectedLaneCountAndConfidence_ = java.util.Collections.emptyList();
    estimatedLaneCountAndConfidence_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RoadAttributionCategory();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_RoadAttributionCategory_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_RoadAttributionCategory_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.roadattribution.RoadAttributionCategory.class, org.sensoris.categories.roadattribution.RoadAttributionCategory.Builder.class);
  }

  private int bitField0_;
  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.CategoryEnvelope envelope_;
  /**
   * <pre>
   * Envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  @java.lang.Override
  public boolean hasEnvelope() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  @java.lang.Override
  public org.sensoris.types.base.CategoryEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.CategoryEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.CategoryEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return envelope_ == null ? org.sensoris.types.base.CategoryEnvelope.getDefaultInstance() : envelope_;
  }

  public static final int LANE_BOUNDARY_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.LaneBoundary> laneBoundary_;
  /**
   * <pre>
   * Lane boundary.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.LaneBoundary> getLaneBoundaryList() {
    return laneBoundary_;
  }
  /**
   * <pre>
   * Lane boundary.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder> 
      getLaneBoundaryOrBuilderList() {
    return laneBoundary_;
  }
  /**
   * <pre>
   * Lane boundary.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
   */
  @java.lang.Override
  public int getLaneBoundaryCount() {
    return laneBoundary_.size();
  }
  /**
   * <pre>
   * Lane boundary.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneBoundary getLaneBoundary(int index) {
    return laneBoundary_.get(index);
  }
  /**
   * <pre>
   * Lane boundary.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder getLaneBoundaryOrBuilder(
      int index) {
    return laneBoundary_.get(index);
  }

  public static final int LANE_BOUNDARY_MERGE_SPLIT_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit> laneBoundaryMergeSplit_;
  /**
   * <pre>
   * Lane boundary merge or split.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit> getLaneBoundaryMergeSplitList() {
    return laneBoundaryMergeSplit_;
  }
  /**
   * <pre>
   * Lane boundary merge or split.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder> 
      getLaneBoundaryMergeSplitOrBuilderList() {
    return laneBoundaryMergeSplit_;
  }
  /**
   * <pre>
   * Lane boundary merge or split.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
   */
  @java.lang.Override
  public int getLaneBoundaryMergeSplitCount() {
    return laneBoundaryMergeSplit_.size();
  }
  /**
   * <pre>
   * Lane boundary merge or split.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit getLaneBoundaryMergeSplit(int index) {
    return laneBoundaryMergeSplit_.get(index);
  }
  /**
   * <pre>
   * Lane boundary merge or split.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder getLaneBoundaryMergeSplitOrBuilder(
      int index) {
    return laneBoundaryMergeSplit_.get(index);
  }

  public static final int LANE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.Lane> lane_;
  /**
   * <pre>
   * Lane.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.Lane> getLaneList() {
    return lane_;
  }
  /**
   * <pre>
   * Lane.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.LaneOrBuilder> 
      getLaneOrBuilderList() {
    return lane_;
  }
  /**
   * <pre>
   * Lane.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
   */
  @java.lang.Override
  public int getLaneCount() {
    return lane_.size();
  }
  /**
   * <pre>
   * Lane.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.Lane getLane(int index) {
    return lane_.get(index);
  }
  /**
   * <pre>
   * Lane.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneOrBuilder getLaneOrBuilder(
      int index) {
    return lane_.get(index);
  }

  public static final int ROAD_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.Road> road_;
  /**
   * <pre>
   * Road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.Road> getRoadList() {
    return road_;
  }
  /**
   * <pre>
   * Road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.RoadOrBuilder> 
      getRoadOrBuilderList() {
    return road_;
  }
  /**
   * <pre>
   * Road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
   */
  @java.lang.Override
  public int getRoadCount() {
    return road_.size();
  }
  /**
   * <pre>
   * Road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.Road getRoad(int index) {
    return road_.get(index);
  }
  /**
   * <pre>
   * Road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.RoadOrBuilder getRoadOrBuilder(
      int index) {
    return road_.get(index);
  }

  public static final int SURFACE_MARKING_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.SurfaceMarking> surfaceMarking_;
  /**
   * <pre>
   * Surface marking.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.SurfaceMarking> getSurfaceMarkingList() {
    return surfaceMarking_;
  }
  /**
   * <pre>
   * Surface marking.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder> 
      getSurfaceMarkingOrBuilderList() {
    return surfaceMarking_;
  }
  /**
   * <pre>
   * Surface marking.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
   */
  @java.lang.Override
  public int getSurfaceMarkingCount() {
    return surfaceMarking_.size();
  }
  /**
   * <pre>
   * Surface marking.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceMarking getSurfaceMarking(int index) {
    return surfaceMarking_.get(index);
  }
  /**
   * <pre>
   * Surface marking.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder getSurfaceMarkingOrBuilder(
      int index) {
    return surfaceMarking_.get(index);
  }

  public static final int SURFACE_ATTRIBUTION_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.SurfaceAttribution> surfaceAttribution_;
  /**
   * <pre>
   * Attributes of road surface.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.SurfaceAttribution> getSurfaceAttributionList() {
    return surfaceAttribution_;
  }
  /**
   * <pre>
   * Attributes of road surface.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder> 
      getSurfaceAttributionOrBuilderList() {
    return surfaceAttribution_;
  }
  /**
   * <pre>
   * Attributes of road surface.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
   */
  @java.lang.Override
  public int getSurfaceAttributionCount() {
    return surfaceAttribution_.size();
  }
  /**
   * <pre>
   * Attributes of road surface.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceAttribution getSurfaceAttribution(int index) {
    return surfaceAttribution_.get(index);
  }
  /**
   * <pre>
   * Attributes of road surface.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder getSurfaceAttributionOrBuilder(
      int index) {
    return surfaceAttribution_.get(index);
  }

  public static final int ROAD_ATTRIBUTION_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.RoadAttribution> roadAttribution_;
  /**
   * <pre>
   * Attributes of road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.RoadAttribution> getRoadAttributionList() {
    return roadAttribution_;
  }
  /**
   * <pre>
   * Attributes of road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.RoadAttributionOrBuilder> 
      getRoadAttributionOrBuilderList() {
    return roadAttribution_;
  }
  /**
   * <pre>
   * Attributes of road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
   */
  @java.lang.Override
  public int getRoadAttributionCount() {
    return roadAttribution_.size();
  }
  /**
   * <pre>
   * Attributes of road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.RoadAttribution getRoadAttribution(int index) {
    return roadAttribution_.get(index);
  }
  /**
   * <pre>
   * Attributes of road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.RoadAttributionOrBuilder getRoadAttributionOrBuilder(
      int index) {
    return roadAttribution_.get(index);
  }

  public static final int DETECTED_LANE_COUNT_AND_CONFIDENCE_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> detectedLaneCountAndConfidence_;
  /**
   * <pre>
   * Detected number of lanes and confidence.
   *
   * Detected lane count may be less than the actual lane count of the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> getDetectedLaneCountAndConfidenceList() {
    return detectedLaneCountAndConfidence_;
  }
  /**
   * <pre>
   * Detected number of lanes and confidence.
   *
   * Detected lane count may be less than the actual lane count of the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
      getDetectedLaneCountAndConfidenceOrBuilderList() {
    return detectedLaneCountAndConfidence_;
  }
  /**
   * <pre>
   * Detected number of lanes and confidence.
   *
   * Detected lane count may be less than the actual lane count of the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
   */
  @java.lang.Override
  public int getDetectedLaneCountAndConfidenceCount() {
    return detectedLaneCountAndConfidence_.size();
  }
  /**
   * <pre>
   * Detected number of lanes and confidence.
   *
   * Detected lane count may be less than the actual lane count of the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneCountAndConfidence getDetectedLaneCountAndConfidence(int index) {
    return detectedLaneCountAndConfidence_.get(index);
  }
  /**
   * <pre>
   * Detected number of lanes and confidence.
   *
   * Detected lane count may be less than the actual lane count of the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder getDetectedLaneCountAndConfidenceOrBuilder(
      int index) {
    return detectedLaneCountAndConfidence_.get(index);
  }

  public static final int ESTIMATED_LANE_COUNT_AND_CONFIDENCE_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> estimatedLaneCountAndConfidence_;
  /**
   * <pre>
   * Estimated number of lanes and confidence.
   *
   * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> getEstimatedLaneCountAndConfidenceList() {
    return estimatedLaneCountAndConfidence_;
  }
  /**
   * <pre>
   * Estimated number of lanes and confidence.
   *
   * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
      getEstimatedLaneCountAndConfidenceOrBuilderList() {
    return estimatedLaneCountAndConfidence_;
  }
  /**
   * <pre>
   * Estimated number of lanes and confidence.
   *
   * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
   */
  @java.lang.Override
  public int getEstimatedLaneCountAndConfidenceCount() {
    return estimatedLaneCountAndConfidence_.size();
  }
  /**
   * <pre>
   * Estimated number of lanes and confidence.
   *
   * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneCountAndConfidence getEstimatedLaneCountAndConfidence(int index) {
    return estimatedLaneCountAndConfidence_.get(index);
  }
  /**
   * <pre>
   * Estimated number of lanes and confidence.
   *
   * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder getEstimatedLaneCountAndConfidenceOrBuilder(
      int index) {
    return estimatedLaneCountAndConfidence_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getEnvelope());
    }
    for (int i = 0; i < laneBoundary_.size(); i++) {
      output.writeMessage(2, laneBoundary_.get(i));
    }
    for (int i = 0; i < laneBoundaryMergeSplit_.size(); i++) {
      output.writeMessage(3, laneBoundaryMergeSplit_.get(i));
    }
    for (int i = 0; i < lane_.size(); i++) {
      output.writeMessage(4, lane_.get(i));
    }
    for (int i = 0; i < road_.size(); i++) {
      output.writeMessage(5, road_.get(i));
    }
    for (int i = 0; i < surfaceMarking_.size(); i++) {
      output.writeMessage(6, surfaceMarking_.get(i));
    }
    for (int i = 0; i < surfaceAttribution_.size(); i++) {
      output.writeMessage(7, surfaceAttribution_.get(i));
    }
    for (int i = 0; i < roadAttribution_.size(); i++) {
      output.writeMessage(8, roadAttribution_.get(i));
    }
    for (int i = 0; i < detectedLaneCountAndConfidence_.size(); i++) {
      output.writeMessage(9, detectedLaneCountAndConfidence_.get(i));
    }
    for (int i = 0; i < estimatedLaneCountAndConfidence_.size(); i++) {
      output.writeMessage(10, estimatedLaneCountAndConfidence_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    for (int i = 0; i < laneBoundary_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, laneBoundary_.get(i));
    }
    for (int i = 0; i < laneBoundaryMergeSplit_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, laneBoundaryMergeSplit_.get(i));
    }
    for (int i = 0; i < lane_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, lane_.get(i));
    }
    for (int i = 0; i < road_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, road_.get(i));
    }
    for (int i = 0; i < surfaceMarking_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, surfaceMarking_.get(i));
    }
    for (int i = 0; i < surfaceAttribution_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, surfaceAttribution_.get(i));
    }
    for (int i = 0; i < roadAttribution_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, roadAttribution_.get(i));
    }
    for (int i = 0; i < detectedLaneCountAndConfidence_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, detectedLaneCountAndConfidence_.get(i));
    }
    for (int i = 0; i < estimatedLaneCountAndConfidence_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, estimatedLaneCountAndConfidence_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.roadattribution.RoadAttributionCategory)) {
      return super.equals(obj);
    }
    org.sensoris.categories.roadattribution.RoadAttributionCategory other = (org.sensoris.categories.roadattribution.RoadAttributionCategory) obj;

    if (hasEnvelope() != other.hasEnvelope()) return false;
    if (hasEnvelope()) {
      if (!getEnvelope()
          .equals(other.getEnvelope())) return false;
    }
    if (!getLaneBoundaryList()
        .equals(other.getLaneBoundaryList())) return false;
    if (!getLaneBoundaryMergeSplitList()
        .equals(other.getLaneBoundaryMergeSplitList())) return false;
    if (!getLaneList()
        .equals(other.getLaneList())) return false;
    if (!getRoadList()
        .equals(other.getRoadList())) return false;
    if (!getSurfaceMarkingList()
        .equals(other.getSurfaceMarkingList())) return false;
    if (!getSurfaceAttributionList()
        .equals(other.getSurfaceAttributionList())) return false;
    if (!getRoadAttributionList()
        .equals(other.getRoadAttributionList())) return false;
    if (!getDetectedLaneCountAndConfidenceList()
        .equals(other.getDetectedLaneCountAndConfidenceList())) return false;
    if (!getEstimatedLaneCountAndConfidenceList()
        .equals(other.getEstimatedLaneCountAndConfidenceList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    if (getLaneBoundaryCount() > 0) {
      hash = (37 * hash) + LANE_BOUNDARY_FIELD_NUMBER;
      hash = (53 * hash) + getLaneBoundaryList().hashCode();
    }
    if (getLaneBoundaryMergeSplitCount() > 0) {
      hash = (37 * hash) + LANE_BOUNDARY_MERGE_SPLIT_FIELD_NUMBER;
      hash = (53 * hash) + getLaneBoundaryMergeSplitList().hashCode();
    }
    if (getLaneCount() > 0) {
      hash = (37 * hash) + LANE_FIELD_NUMBER;
      hash = (53 * hash) + getLaneList().hashCode();
    }
    if (getRoadCount() > 0) {
      hash = (37 * hash) + ROAD_FIELD_NUMBER;
      hash = (53 * hash) + getRoadList().hashCode();
    }
    if (getSurfaceMarkingCount() > 0) {
      hash = (37 * hash) + SURFACE_MARKING_FIELD_NUMBER;
      hash = (53 * hash) + getSurfaceMarkingList().hashCode();
    }
    if (getSurfaceAttributionCount() > 0) {
      hash = (37 * hash) + SURFACE_ATTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getSurfaceAttributionList().hashCode();
    }
    if (getRoadAttributionCount() > 0) {
      hash = (37 * hash) + ROAD_ATTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getRoadAttributionList().hashCode();
    }
    if (getDetectedLaneCountAndConfidenceCount() > 0) {
      hash = (37 * hash) + DETECTED_LANE_COUNT_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getDetectedLaneCountAndConfidenceList().hashCode();
    }
    if (getEstimatedLaneCountAndConfidenceCount() > 0) {
      hash = (37 * hash) + ESTIMATED_LANE_COUNT_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getEstimatedLaneCountAndConfidenceList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.roadattribution.RoadAttributionCategory parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.roadattribution.RoadAttributionCategory prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Road attribution category.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.roadattribution.RoadAttributionCategory}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.roadattribution.RoadAttributionCategory)
      org.sensoris.categories.roadattribution.RoadAttributionCategoryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_RoadAttributionCategory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_RoadAttributionCategory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.roadattribution.RoadAttributionCategory.class, org.sensoris.categories.roadattribution.RoadAttributionCategory.Builder.class);
    }

    // Construct using org.sensoris.categories.roadattribution.RoadAttributionCategory.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEnvelopeFieldBuilder();
        getLaneBoundaryFieldBuilder();
        getLaneBoundaryMergeSplitFieldBuilder();
        getLaneFieldBuilder();
        getRoadFieldBuilder();
        getSurfaceMarkingFieldBuilder();
        getSurfaceAttributionFieldBuilder();
        getRoadAttributionFieldBuilder();
        getDetectedLaneCountAndConfidenceFieldBuilder();
        getEstimatedLaneCountAndConfidenceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      if (laneBoundaryBuilder_ == null) {
        laneBoundary_ = java.util.Collections.emptyList();
      } else {
        laneBoundary_ = null;
        laneBoundaryBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (laneBoundaryMergeSplitBuilder_ == null) {
        laneBoundaryMergeSplit_ = java.util.Collections.emptyList();
      } else {
        laneBoundaryMergeSplit_ = null;
        laneBoundaryMergeSplitBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (laneBuilder_ == null) {
        lane_ = java.util.Collections.emptyList();
      } else {
        lane_ = null;
        laneBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (roadBuilder_ == null) {
        road_ = java.util.Collections.emptyList();
      } else {
        road_ = null;
        roadBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (surfaceMarkingBuilder_ == null) {
        surfaceMarking_ = java.util.Collections.emptyList();
      } else {
        surfaceMarking_ = null;
        surfaceMarkingBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (surfaceAttributionBuilder_ == null) {
        surfaceAttribution_ = java.util.Collections.emptyList();
      } else {
        surfaceAttribution_ = null;
        surfaceAttributionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (roadAttributionBuilder_ == null) {
        roadAttribution_ = java.util.Collections.emptyList();
      } else {
        roadAttribution_ = null;
        roadAttributionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        detectedLaneCountAndConfidence_ = java.util.Collections.emptyList();
      } else {
        detectedLaneCountAndConfidence_ = null;
        detectedLaneCountAndConfidenceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        estimatedLaneCountAndConfidence_ = java.util.Collections.emptyList();
      } else {
        estimatedLaneCountAndConfidence_ = null;
        estimatedLaneCountAndConfidenceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_RoadAttributionCategory_descriptor;
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.RoadAttributionCategory getDefaultInstanceForType() {
      return org.sensoris.categories.roadattribution.RoadAttributionCategory.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.RoadAttributionCategory build() {
      org.sensoris.categories.roadattribution.RoadAttributionCategory result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.RoadAttributionCategory buildPartial() {
      org.sensoris.categories.roadattribution.RoadAttributionCategory result = new org.sensoris.categories.roadattribution.RoadAttributionCategory(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.sensoris.categories.roadattribution.RoadAttributionCategory result) {
      if (laneBoundaryBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          laneBoundary_ = java.util.Collections.unmodifiableList(laneBoundary_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.laneBoundary_ = laneBoundary_;
      } else {
        result.laneBoundary_ = laneBoundaryBuilder_.build();
      }
      if (laneBoundaryMergeSplitBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          laneBoundaryMergeSplit_ = java.util.Collections.unmodifiableList(laneBoundaryMergeSplit_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.laneBoundaryMergeSplit_ = laneBoundaryMergeSplit_;
      } else {
        result.laneBoundaryMergeSplit_ = laneBoundaryMergeSplitBuilder_.build();
      }
      if (laneBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          lane_ = java.util.Collections.unmodifiableList(lane_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.lane_ = lane_;
      } else {
        result.lane_ = laneBuilder_.build();
      }
      if (roadBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          road_ = java.util.Collections.unmodifiableList(road_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.road_ = road_;
      } else {
        result.road_ = roadBuilder_.build();
      }
      if (surfaceMarkingBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          surfaceMarking_ = java.util.Collections.unmodifiableList(surfaceMarking_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.surfaceMarking_ = surfaceMarking_;
      } else {
        result.surfaceMarking_ = surfaceMarkingBuilder_.build();
      }
      if (surfaceAttributionBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          surfaceAttribution_ = java.util.Collections.unmodifiableList(surfaceAttribution_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.surfaceAttribution_ = surfaceAttribution_;
      } else {
        result.surfaceAttribution_ = surfaceAttributionBuilder_.build();
      }
      if (roadAttributionBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          roadAttribution_ = java.util.Collections.unmodifiableList(roadAttribution_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.roadAttribution_ = roadAttribution_;
      } else {
        result.roadAttribution_ = roadAttributionBuilder_.build();
      }
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          detectedLaneCountAndConfidence_ = java.util.Collections.unmodifiableList(detectedLaneCountAndConfidence_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.detectedLaneCountAndConfidence_ = detectedLaneCountAndConfidence_;
      } else {
        result.detectedLaneCountAndConfidence_ = detectedLaneCountAndConfidenceBuilder_.build();
      }
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          estimatedLaneCountAndConfidence_ = java.util.Collections.unmodifiableList(estimatedLaneCountAndConfidence_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.estimatedLaneCountAndConfidence_ = estimatedLaneCountAndConfidence_;
      } else {
        result.estimatedLaneCountAndConfidence_ = estimatedLaneCountAndConfidenceBuilder_.build();
      }
    }

    private void buildPartial0(org.sensoris.categories.roadattribution.RoadAttributionCategory result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.envelope_ = envelopeBuilder_ == null
            ? envelope_
            : envelopeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.roadattribution.RoadAttributionCategory) {
        return mergeFrom((org.sensoris.categories.roadattribution.RoadAttributionCategory)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.roadattribution.RoadAttributionCategory other) {
      if (other == org.sensoris.categories.roadattribution.RoadAttributionCategory.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (laneBoundaryBuilder_ == null) {
        if (!other.laneBoundary_.isEmpty()) {
          if (laneBoundary_.isEmpty()) {
            laneBoundary_ = other.laneBoundary_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLaneBoundaryIsMutable();
            laneBoundary_.addAll(other.laneBoundary_);
          }
          onChanged();
        }
      } else {
        if (!other.laneBoundary_.isEmpty()) {
          if (laneBoundaryBuilder_.isEmpty()) {
            laneBoundaryBuilder_.dispose();
            laneBoundaryBuilder_ = null;
            laneBoundary_ = other.laneBoundary_;
            bitField0_ = (bitField0_ & ~0x00000002);
            laneBoundaryBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLaneBoundaryFieldBuilder() : null;
          } else {
            laneBoundaryBuilder_.addAllMessages(other.laneBoundary_);
          }
        }
      }
      if (laneBoundaryMergeSplitBuilder_ == null) {
        if (!other.laneBoundaryMergeSplit_.isEmpty()) {
          if (laneBoundaryMergeSplit_.isEmpty()) {
            laneBoundaryMergeSplit_ = other.laneBoundaryMergeSplit_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLaneBoundaryMergeSplitIsMutable();
            laneBoundaryMergeSplit_.addAll(other.laneBoundaryMergeSplit_);
          }
          onChanged();
        }
      } else {
        if (!other.laneBoundaryMergeSplit_.isEmpty()) {
          if (laneBoundaryMergeSplitBuilder_.isEmpty()) {
            laneBoundaryMergeSplitBuilder_.dispose();
            laneBoundaryMergeSplitBuilder_ = null;
            laneBoundaryMergeSplit_ = other.laneBoundaryMergeSplit_;
            bitField0_ = (bitField0_ & ~0x00000004);
            laneBoundaryMergeSplitBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLaneBoundaryMergeSplitFieldBuilder() : null;
          } else {
            laneBoundaryMergeSplitBuilder_.addAllMessages(other.laneBoundaryMergeSplit_);
          }
        }
      }
      if (laneBuilder_ == null) {
        if (!other.lane_.isEmpty()) {
          if (lane_.isEmpty()) {
            lane_ = other.lane_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLaneIsMutable();
            lane_.addAll(other.lane_);
          }
          onChanged();
        }
      } else {
        if (!other.lane_.isEmpty()) {
          if (laneBuilder_.isEmpty()) {
            laneBuilder_.dispose();
            laneBuilder_ = null;
            lane_ = other.lane_;
            bitField0_ = (bitField0_ & ~0x00000008);
            laneBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLaneFieldBuilder() : null;
          } else {
            laneBuilder_.addAllMessages(other.lane_);
          }
        }
      }
      if (roadBuilder_ == null) {
        if (!other.road_.isEmpty()) {
          if (road_.isEmpty()) {
            road_ = other.road_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRoadIsMutable();
            road_.addAll(other.road_);
          }
          onChanged();
        }
      } else {
        if (!other.road_.isEmpty()) {
          if (roadBuilder_.isEmpty()) {
            roadBuilder_.dispose();
            roadBuilder_ = null;
            road_ = other.road_;
            bitField0_ = (bitField0_ & ~0x00000010);
            roadBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRoadFieldBuilder() : null;
          } else {
            roadBuilder_.addAllMessages(other.road_);
          }
        }
      }
      if (surfaceMarkingBuilder_ == null) {
        if (!other.surfaceMarking_.isEmpty()) {
          if (surfaceMarking_.isEmpty()) {
            surfaceMarking_ = other.surfaceMarking_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSurfaceMarkingIsMutable();
            surfaceMarking_.addAll(other.surfaceMarking_);
          }
          onChanged();
        }
      } else {
        if (!other.surfaceMarking_.isEmpty()) {
          if (surfaceMarkingBuilder_.isEmpty()) {
            surfaceMarkingBuilder_.dispose();
            surfaceMarkingBuilder_ = null;
            surfaceMarking_ = other.surfaceMarking_;
            bitField0_ = (bitField0_ & ~0x00000020);
            surfaceMarkingBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSurfaceMarkingFieldBuilder() : null;
          } else {
            surfaceMarkingBuilder_.addAllMessages(other.surfaceMarking_);
          }
        }
      }
      if (surfaceAttributionBuilder_ == null) {
        if (!other.surfaceAttribution_.isEmpty()) {
          if (surfaceAttribution_.isEmpty()) {
            surfaceAttribution_ = other.surfaceAttribution_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSurfaceAttributionIsMutable();
            surfaceAttribution_.addAll(other.surfaceAttribution_);
          }
          onChanged();
        }
      } else {
        if (!other.surfaceAttribution_.isEmpty()) {
          if (surfaceAttributionBuilder_.isEmpty()) {
            surfaceAttributionBuilder_.dispose();
            surfaceAttributionBuilder_ = null;
            surfaceAttribution_ = other.surfaceAttribution_;
            bitField0_ = (bitField0_ & ~0x00000040);
            surfaceAttributionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSurfaceAttributionFieldBuilder() : null;
          } else {
            surfaceAttributionBuilder_.addAllMessages(other.surfaceAttribution_);
          }
        }
      }
      if (roadAttributionBuilder_ == null) {
        if (!other.roadAttribution_.isEmpty()) {
          if (roadAttribution_.isEmpty()) {
            roadAttribution_ = other.roadAttribution_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRoadAttributionIsMutable();
            roadAttribution_.addAll(other.roadAttribution_);
          }
          onChanged();
        }
      } else {
        if (!other.roadAttribution_.isEmpty()) {
          if (roadAttributionBuilder_.isEmpty()) {
            roadAttributionBuilder_.dispose();
            roadAttributionBuilder_ = null;
            roadAttribution_ = other.roadAttribution_;
            bitField0_ = (bitField0_ & ~0x00000080);
            roadAttributionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRoadAttributionFieldBuilder() : null;
          } else {
            roadAttributionBuilder_.addAllMessages(other.roadAttribution_);
          }
        }
      }
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        if (!other.detectedLaneCountAndConfidence_.isEmpty()) {
          if (detectedLaneCountAndConfidence_.isEmpty()) {
            detectedLaneCountAndConfidence_ = other.detectedLaneCountAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureDetectedLaneCountAndConfidenceIsMutable();
            detectedLaneCountAndConfidence_.addAll(other.detectedLaneCountAndConfidence_);
          }
          onChanged();
        }
      } else {
        if (!other.detectedLaneCountAndConfidence_.isEmpty()) {
          if (detectedLaneCountAndConfidenceBuilder_.isEmpty()) {
            detectedLaneCountAndConfidenceBuilder_.dispose();
            detectedLaneCountAndConfidenceBuilder_ = null;
            detectedLaneCountAndConfidence_ = other.detectedLaneCountAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000100);
            detectedLaneCountAndConfidenceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDetectedLaneCountAndConfidenceFieldBuilder() : null;
          } else {
            detectedLaneCountAndConfidenceBuilder_.addAllMessages(other.detectedLaneCountAndConfidence_);
          }
        }
      }
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        if (!other.estimatedLaneCountAndConfidence_.isEmpty()) {
          if (estimatedLaneCountAndConfidence_.isEmpty()) {
            estimatedLaneCountAndConfidence_ = other.estimatedLaneCountAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureEstimatedLaneCountAndConfidenceIsMutable();
            estimatedLaneCountAndConfidence_.addAll(other.estimatedLaneCountAndConfidence_);
          }
          onChanged();
        }
      } else {
        if (!other.estimatedLaneCountAndConfidence_.isEmpty()) {
          if (estimatedLaneCountAndConfidenceBuilder_.isEmpty()) {
            estimatedLaneCountAndConfidenceBuilder_.dispose();
            estimatedLaneCountAndConfidenceBuilder_ = null;
            estimatedLaneCountAndConfidence_ = other.estimatedLaneCountAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000200);
            estimatedLaneCountAndConfidenceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEstimatedLaneCountAndConfidenceFieldBuilder() : null;
          } else {
            estimatedLaneCountAndConfidenceBuilder_.addAllMessages(other.estimatedLaneCountAndConfidence_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEnvelopeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              org.sensoris.categories.roadattribution.LaneBoundary m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.LaneBoundary.parser(),
                      extensionRegistry);
              if (laneBoundaryBuilder_ == null) {
                ensureLaneBoundaryIsMutable();
                laneBoundary_.add(m);
              } else {
                laneBoundaryBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.parser(),
                      extensionRegistry);
              if (laneBoundaryMergeSplitBuilder_ == null) {
                ensureLaneBoundaryMergeSplitIsMutable();
                laneBoundaryMergeSplit_.add(m);
              } else {
                laneBoundaryMergeSplitBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              org.sensoris.categories.roadattribution.Lane m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.Lane.parser(),
                      extensionRegistry);
              if (laneBuilder_ == null) {
                ensureLaneIsMutable();
                lane_.add(m);
              } else {
                laneBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              org.sensoris.categories.roadattribution.Road m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.Road.parser(),
                      extensionRegistry);
              if (roadBuilder_ == null) {
                ensureRoadIsMutable();
                road_.add(m);
              } else {
                roadBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              org.sensoris.categories.roadattribution.SurfaceMarking m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.SurfaceMarking.parser(),
                      extensionRegistry);
              if (surfaceMarkingBuilder_ == null) {
                ensureSurfaceMarkingIsMutable();
                surfaceMarking_.add(m);
              } else {
                surfaceMarkingBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              org.sensoris.categories.roadattribution.SurfaceAttribution m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.SurfaceAttribution.parser(),
                      extensionRegistry);
              if (surfaceAttributionBuilder_ == null) {
                ensureSurfaceAttributionIsMutable();
                surfaceAttribution_.add(m);
              } else {
                surfaceAttributionBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              org.sensoris.categories.roadattribution.RoadAttribution m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.RoadAttribution.parser(),
                      extensionRegistry);
              if (roadAttributionBuilder_ == null) {
                ensureRoadAttributionIsMutable();
                roadAttribution_.add(m);
              } else {
                roadAttributionBuilder_.addMessage(m);
              }
              break;
            } // case 66
            case 74: {
              org.sensoris.categories.roadattribution.LaneCountAndConfidence m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.LaneCountAndConfidence.parser(),
                      extensionRegistry);
              if (detectedLaneCountAndConfidenceBuilder_ == null) {
                ensureDetectedLaneCountAndConfidenceIsMutable();
                detectedLaneCountAndConfidence_.add(m);
              } else {
                detectedLaneCountAndConfidenceBuilder_.addMessage(m);
              }
              break;
            } // case 74
            case 82: {
              org.sensoris.categories.roadattribution.LaneCountAndConfidence m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.LaneCountAndConfidence.parser(),
                      extensionRegistry);
              if (estimatedLaneCountAndConfidenceBuilder_ == null) {
                ensureEstimatedLaneCountAndConfidenceIsMutable();
                estimatedLaneCountAndConfidence_.add(m);
              } else {
                estimatedLaneCountAndConfidenceBuilder_.addMessage(m);
              }
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.sensoris.types.base.CategoryEnvelope envelope_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.CategoryEnvelope, org.sensoris.types.base.CategoryEnvelope.Builder, org.sensoris.types.base.CategoryEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     * @return Whether the envelope field is set.
     */
    public boolean hasEnvelope() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     * @return The envelope.
     */
    public org.sensoris.types.base.CategoryEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.CategoryEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.CategoryEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
      } else {
        envelopeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.CategoryEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.CategoryEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          envelope_ != null &&
          envelope_ != org.sensoris.types.base.CategoryEnvelope.getDefaultInstance()) {
          getEnvelopeBuilder().mergeFrom(value);
        } else {
          envelope_ = value;
        }
      } else {
        envelopeBuilder_.mergeFrom(value);
      }
      if (envelope_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.CategoryEnvelope.Builder getEnvelopeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.CategoryEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.CategoryEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.CategoryEnvelope, org.sensoris.types.base.CategoryEnvelope.Builder, org.sensoris.types.base.CategoryEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.CategoryEnvelope, org.sensoris.types.base.CategoryEnvelope.Builder, org.sensoris.types.base.CategoryEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.LaneBoundary> laneBoundary_ =
      java.util.Collections.emptyList();
    private void ensureLaneBoundaryIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        laneBoundary_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.LaneBoundary>(laneBoundary_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneBoundary, org.sensoris.categories.roadattribution.LaneBoundary.Builder, org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder> laneBoundaryBuilder_;

    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneBoundary> getLaneBoundaryList() {
      if (laneBoundaryBuilder_ == null) {
        return java.util.Collections.unmodifiableList(laneBoundary_);
      } else {
        return laneBoundaryBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public int getLaneBoundaryCount() {
      if (laneBoundaryBuilder_ == null) {
        return laneBoundary_.size();
      } else {
        return laneBoundaryBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundary getLaneBoundary(int index) {
      if (laneBoundaryBuilder_ == null) {
        return laneBoundary_.get(index);
      } else {
        return laneBoundaryBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder setLaneBoundary(
        int index, org.sensoris.categories.roadattribution.LaneBoundary value) {
      if (laneBoundaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryIsMutable();
        laneBoundary_.set(index, value);
        onChanged();
      } else {
        laneBoundaryBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder setLaneBoundary(
        int index, org.sensoris.categories.roadattribution.LaneBoundary.Builder builderForValue) {
      if (laneBoundaryBuilder_ == null) {
        ensureLaneBoundaryIsMutable();
        laneBoundary_.set(index, builderForValue.build());
        onChanged();
      } else {
        laneBoundaryBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder addLaneBoundary(org.sensoris.categories.roadattribution.LaneBoundary value) {
      if (laneBoundaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryIsMutable();
        laneBoundary_.add(value);
        onChanged();
      } else {
        laneBoundaryBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder addLaneBoundary(
        int index, org.sensoris.categories.roadattribution.LaneBoundary value) {
      if (laneBoundaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryIsMutable();
        laneBoundary_.add(index, value);
        onChanged();
      } else {
        laneBoundaryBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder addLaneBoundary(
        org.sensoris.categories.roadattribution.LaneBoundary.Builder builderForValue) {
      if (laneBoundaryBuilder_ == null) {
        ensureLaneBoundaryIsMutable();
        laneBoundary_.add(builderForValue.build());
        onChanged();
      } else {
        laneBoundaryBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder addLaneBoundary(
        int index, org.sensoris.categories.roadattribution.LaneBoundary.Builder builderForValue) {
      if (laneBoundaryBuilder_ == null) {
        ensureLaneBoundaryIsMutable();
        laneBoundary_.add(index, builderForValue.build());
        onChanged();
      } else {
        laneBoundaryBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder addAllLaneBoundary(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.LaneBoundary> values) {
      if (laneBoundaryBuilder_ == null) {
        ensureLaneBoundaryIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, laneBoundary_);
        onChanged();
      } else {
        laneBoundaryBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder clearLaneBoundary() {
      if (laneBoundaryBuilder_ == null) {
        laneBoundary_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        laneBoundaryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public Builder removeLaneBoundary(int index) {
      if (laneBoundaryBuilder_ == null) {
        ensureLaneBoundaryIsMutable();
        laneBoundary_.remove(index);
        onChanged();
      } else {
        laneBoundaryBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundary.Builder getLaneBoundaryBuilder(
        int index) {
      return getLaneBoundaryFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder getLaneBoundaryOrBuilder(
        int index) {
      if (laneBoundaryBuilder_ == null) {
        return laneBoundary_.get(index);  } else {
        return laneBoundaryBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder> 
         getLaneBoundaryOrBuilderList() {
      if (laneBoundaryBuilder_ != null) {
        return laneBoundaryBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(laneBoundary_);
      }
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundary.Builder addLaneBoundaryBuilder() {
      return getLaneBoundaryFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.LaneBoundary.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundary.Builder addLaneBoundaryBuilder(
        int index) {
      return getLaneBoundaryFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.LaneBoundary.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane boundary.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundary lane_boundary = 2;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneBoundary.Builder> 
         getLaneBoundaryBuilderList() {
      return getLaneBoundaryFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneBoundary, org.sensoris.categories.roadattribution.LaneBoundary.Builder, org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder> 
        getLaneBoundaryFieldBuilder() {
      if (laneBoundaryBuilder_ == null) {
        laneBoundaryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.LaneBoundary, org.sensoris.categories.roadattribution.LaneBoundary.Builder, org.sensoris.categories.roadattribution.LaneBoundaryOrBuilder>(
                laneBoundary_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        laneBoundary_ = null;
      }
      return laneBoundaryBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit> laneBoundaryMergeSplit_ =
      java.util.Collections.emptyList();
    private void ensureLaneBoundaryMergeSplitIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        laneBoundaryMergeSplit_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit>(laneBoundaryMergeSplit_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder> laneBoundaryMergeSplitBuilder_;

    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit> getLaneBoundaryMergeSplitList() {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        return java.util.Collections.unmodifiableList(laneBoundaryMergeSplit_);
      } else {
        return laneBoundaryMergeSplitBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public int getLaneBoundaryMergeSplitCount() {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        return laneBoundaryMergeSplit_.size();
      } else {
        return laneBoundaryMergeSplitBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit getLaneBoundaryMergeSplit(int index) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        return laneBoundaryMergeSplit_.get(index);
      } else {
        return laneBoundaryMergeSplitBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder setLaneBoundaryMergeSplit(
        int index, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit value) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.set(index, value);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder setLaneBoundaryMergeSplit(
        int index, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder builderForValue) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.set(index, builderForValue.build());
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder addLaneBoundaryMergeSplit(org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit value) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.add(value);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder addLaneBoundaryMergeSplit(
        int index, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit value) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.add(index, value);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder addLaneBoundaryMergeSplit(
        org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder builderForValue) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.add(builderForValue.build());
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder addLaneBoundaryMergeSplit(
        int index, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder builderForValue) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.add(index, builderForValue.build());
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder addAllLaneBoundaryMergeSplit(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit> values) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        ensureLaneBoundaryMergeSplitIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, laneBoundaryMergeSplit_);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder clearLaneBoundaryMergeSplit() {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        laneBoundaryMergeSplit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public Builder removeLaneBoundaryMergeSplit(int index) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        ensureLaneBoundaryMergeSplitIsMutable();
        laneBoundaryMergeSplit_.remove(index);
        onChanged();
      } else {
        laneBoundaryMergeSplitBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder getLaneBoundaryMergeSplitBuilder(
        int index) {
      return getLaneBoundaryMergeSplitFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder getLaneBoundaryMergeSplitOrBuilder(
        int index) {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        return laneBoundaryMergeSplit_.get(index);  } else {
        return laneBoundaryMergeSplitBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder> 
         getLaneBoundaryMergeSplitOrBuilderList() {
      if (laneBoundaryMergeSplitBuilder_ != null) {
        return laneBoundaryMergeSplitBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(laneBoundaryMergeSplit_);
      }
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder addLaneBoundaryMergeSplitBuilder() {
      return getLaneBoundaryMergeSplitFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder addLaneBoundaryMergeSplitBuilder(
        int index) {
      return getLaneBoundaryMergeSplitFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane boundary merge or split.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneBoundaryMergeSplit lane_boundary_merge_split = 3;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder> 
         getLaneBoundaryMergeSplitBuilderList() {
      return getLaneBoundaryMergeSplitFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder> 
        getLaneBoundaryMergeSplitFieldBuilder() {
      if (laneBoundaryMergeSplitBuilder_ == null) {
        laneBoundaryMergeSplitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplit.Builder, org.sensoris.categories.roadattribution.LaneBoundaryMergeSplitOrBuilder>(
                laneBoundaryMergeSplit_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        laneBoundaryMergeSplit_ = null;
      }
      return laneBoundaryMergeSplitBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.Lane> lane_ =
      java.util.Collections.emptyList();
    private void ensureLaneIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        lane_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.Lane>(lane_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.Lane, org.sensoris.categories.roadattribution.Lane.Builder, org.sensoris.categories.roadattribution.LaneOrBuilder> laneBuilder_;

    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.Lane> getLaneList() {
      if (laneBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lane_);
      } else {
        return laneBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public int getLaneCount() {
      if (laneBuilder_ == null) {
        return lane_.size();
      } else {
        return laneBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public org.sensoris.categories.roadattribution.Lane getLane(int index) {
      if (laneBuilder_ == null) {
        return lane_.get(index);
      } else {
        return laneBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder setLane(
        int index, org.sensoris.categories.roadattribution.Lane value) {
      if (laneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneIsMutable();
        lane_.set(index, value);
        onChanged();
      } else {
        laneBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder setLane(
        int index, org.sensoris.categories.roadattribution.Lane.Builder builderForValue) {
      if (laneBuilder_ == null) {
        ensureLaneIsMutable();
        lane_.set(index, builderForValue.build());
        onChanged();
      } else {
        laneBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder addLane(org.sensoris.categories.roadattribution.Lane value) {
      if (laneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneIsMutable();
        lane_.add(value);
        onChanged();
      } else {
        laneBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder addLane(
        int index, org.sensoris.categories.roadattribution.Lane value) {
      if (laneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLaneIsMutable();
        lane_.add(index, value);
        onChanged();
      } else {
        laneBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder addLane(
        org.sensoris.categories.roadattribution.Lane.Builder builderForValue) {
      if (laneBuilder_ == null) {
        ensureLaneIsMutable();
        lane_.add(builderForValue.build());
        onChanged();
      } else {
        laneBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder addLane(
        int index, org.sensoris.categories.roadattribution.Lane.Builder builderForValue) {
      if (laneBuilder_ == null) {
        ensureLaneIsMutable();
        lane_.add(index, builderForValue.build());
        onChanged();
      } else {
        laneBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder addAllLane(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.Lane> values) {
      if (laneBuilder_ == null) {
        ensureLaneIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lane_);
        onChanged();
      } else {
        laneBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder clearLane() {
      if (laneBuilder_ == null) {
        lane_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        laneBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public Builder removeLane(int index) {
      if (laneBuilder_ == null) {
        ensureLaneIsMutable();
        lane_.remove(index);
        onChanged();
      } else {
        laneBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public org.sensoris.categories.roadattribution.Lane.Builder getLaneBuilder(
        int index) {
      return getLaneFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public org.sensoris.categories.roadattribution.LaneOrBuilder getLaneOrBuilder(
        int index) {
      if (laneBuilder_ == null) {
        return lane_.get(index);  } else {
        return laneBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.LaneOrBuilder> 
         getLaneOrBuilderList() {
      if (laneBuilder_ != null) {
        return laneBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lane_);
      }
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public org.sensoris.categories.roadattribution.Lane.Builder addLaneBuilder() {
      return getLaneFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.Lane.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public org.sensoris.categories.roadattribution.Lane.Builder addLaneBuilder(
        int index) {
      return getLaneFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.Lane.getDefaultInstance());
    }
    /**
     * <pre>
     * Lane.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Lane lane = 4;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.Lane.Builder> 
         getLaneBuilderList() {
      return getLaneFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.Lane, org.sensoris.categories.roadattribution.Lane.Builder, org.sensoris.categories.roadattribution.LaneOrBuilder> 
        getLaneFieldBuilder() {
      if (laneBuilder_ == null) {
        laneBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.Lane, org.sensoris.categories.roadattribution.Lane.Builder, org.sensoris.categories.roadattribution.LaneOrBuilder>(
                lane_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        lane_ = null;
      }
      return laneBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.Road> road_ =
      java.util.Collections.emptyList();
    private void ensureRoadIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        road_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.Road>(road_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.Road, org.sensoris.categories.roadattribution.Road.Builder, org.sensoris.categories.roadattribution.RoadOrBuilder> roadBuilder_;

    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.Road> getRoadList() {
      if (roadBuilder_ == null) {
        return java.util.Collections.unmodifiableList(road_);
      } else {
        return roadBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public int getRoadCount() {
      if (roadBuilder_ == null) {
        return road_.size();
      } else {
        return roadBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public org.sensoris.categories.roadattribution.Road getRoad(int index) {
      if (roadBuilder_ == null) {
        return road_.get(index);
      } else {
        return roadBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder setRoad(
        int index, org.sensoris.categories.roadattribution.Road value) {
      if (roadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadIsMutable();
        road_.set(index, value);
        onChanged();
      } else {
        roadBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder setRoad(
        int index, org.sensoris.categories.roadattribution.Road.Builder builderForValue) {
      if (roadBuilder_ == null) {
        ensureRoadIsMutable();
        road_.set(index, builderForValue.build());
        onChanged();
      } else {
        roadBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder addRoad(org.sensoris.categories.roadattribution.Road value) {
      if (roadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadIsMutable();
        road_.add(value);
        onChanged();
      } else {
        roadBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder addRoad(
        int index, org.sensoris.categories.roadattribution.Road value) {
      if (roadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadIsMutable();
        road_.add(index, value);
        onChanged();
      } else {
        roadBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder addRoad(
        org.sensoris.categories.roadattribution.Road.Builder builderForValue) {
      if (roadBuilder_ == null) {
        ensureRoadIsMutable();
        road_.add(builderForValue.build());
        onChanged();
      } else {
        roadBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder addRoad(
        int index, org.sensoris.categories.roadattribution.Road.Builder builderForValue) {
      if (roadBuilder_ == null) {
        ensureRoadIsMutable();
        road_.add(index, builderForValue.build());
        onChanged();
      } else {
        roadBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder addAllRoad(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.Road> values) {
      if (roadBuilder_ == null) {
        ensureRoadIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, road_);
        onChanged();
      } else {
        roadBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder clearRoad() {
      if (roadBuilder_ == null) {
        road_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        roadBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public Builder removeRoad(int index) {
      if (roadBuilder_ == null) {
        ensureRoadIsMutable();
        road_.remove(index);
        onChanged();
      } else {
        roadBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public org.sensoris.categories.roadattribution.Road.Builder getRoadBuilder(
        int index) {
      return getRoadFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public org.sensoris.categories.roadattribution.RoadOrBuilder getRoadOrBuilder(
        int index) {
      if (roadBuilder_ == null) {
        return road_.get(index);  } else {
        return roadBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.RoadOrBuilder> 
         getRoadOrBuilderList() {
      if (roadBuilder_ != null) {
        return roadBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(road_);
      }
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public org.sensoris.categories.roadattribution.Road.Builder addRoadBuilder() {
      return getRoadFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.Road.getDefaultInstance());
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public org.sensoris.categories.roadattribution.Road.Builder addRoadBuilder(
        int index) {
      return getRoadFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.Road.getDefaultInstance());
    }
    /**
     * <pre>
     * Road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.Road road = 5;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.Road.Builder> 
         getRoadBuilderList() {
      return getRoadFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.Road, org.sensoris.categories.roadattribution.Road.Builder, org.sensoris.categories.roadattribution.RoadOrBuilder> 
        getRoadFieldBuilder() {
      if (roadBuilder_ == null) {
        roadBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.Road, org.sensoris.categories.roadattribution.Road.Builder, org.sensoris.categories.roadattribution.RoadOrBuilder>(
                road_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        road_ = null;
      }
      return roadBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.SurfaceMarking> surfaceMarking_ =
      java.util.Collections.emptyList();
    private void ensureSurfaceMarkingIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        surfaceMarking_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.SurfaceMarking>(surfaceMarking_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceMarking, org.sensoris.categories.roadattribution.SurfaceMarking.Builder, org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder> surfaceMarkingBuilder_;

    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.SurfaceMarking> getSurfaceMarkingList() {
      if (surfaceMarkingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(surfaceMarking_);
      } else {
        return surfaceMarkingBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public int getSurfaceMarkingCount() {
      if (surfaceMarkingBuilder_ == null) {
        return surfaceMarking_.size();
      } else {
        return surfaceMarkingBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking getSurfaceMarking(int index) {
      if (surfaceMarkingBuilder_ == null) {
        return surfaceMarking_.get(index);
      } else {
        return surfaceMarkingBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder setSurfaceMarking(
        int index, org.sensoris.categories.roadattribution.SurfaceMarking value) {
      if (surfaceMarkingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.set(index, value);
        onChanged();
      } else {
        surfaceMarkingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder setSurfaceMarking(
        int index, org.sensoris.categories.roadattribution.SurfaceMarking.Builder builderForValue) {
      if (surfaceMarkingBuilder_ == null) {
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.set(index, builderForValue.build());
        onChanged();
      } else {
        surfaceMarkingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder addSurfaceMarking(org.sensoris.categories.roadattribution.SurfaceMarking value) {
      if (surfaceMarkingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.add(value);
        onChanged();
      } else {
        surfaceMarkingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder addSurfaceMarking(
        int index, org.sensoris.categories.roadattribution.SurfaceMarking value) {
      if (surfaceMarkingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.add(index, value);
        onChanged();
      } else {
        surfaceMarkingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder addSurfaceMarking(
        org.sensoris.categories.roadattribution.SurfaceMarking.Builder builderForValue) {
      if (surfaceMarkingBuilder_ == null) {
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.add(builderForValue.build());
        onChanged();
      } else {
        surfaceMarkingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder addSurfaceMarking(
        int index, org.sensoris.categories.roadattribution.SurfaceMarking.Builder builderForValue) {
      if (surfaceMarkingBuilder_ == null) {
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.add(index, builderForValue.build());
        onChanged();
      } else {
        surfaceMarkingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder addAllSurfaceMarking(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.SurfaceMarking> values) {
      if (surfaceMarkingBuilder_ == null) {
        ensureSurfaceMarkingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, surfaceMarking_);
        onChanged();
      } else {
        surfaceMarkingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder clearSurfaceMarking() {
      if (surfaceMarkingBuilder_ == null) {
        surfaceMarking_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        surfaceMarkingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public Builder removeSurfaceMarking(int index) {
      if (surfaceMarkingBuilder_ == null) {
        ensureSurfaceMarkingIsMutable();
        surfaceMarking_.remove(index);
        onChanged();
      } else {
        surfaceMarkingBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.Builder getSurfaceMarkingBuilder(
        int index) {
      return getSurfaceMarkingFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder getSurfaceMarkingOrBuilder(
        int index) {
      if (surfaceMarkingBuilder_ == null) {
        return surfaceMarking_.get(index);  } else {
        return surfaceMarkingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder> 
         getSurfaceMarkingOrBuilderList() {
      if (surfaceMarkingBuilder_ != null) {
        return surfaceMarkingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(surfaceMarking_);
      }
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.Builder addSurfaceMarkingBuilder() {
      return getSurfaceMarkingFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.SurfaceMarking.getDefaultInstance());
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.Builder addSurfaceMarkingBuilder(
        int index) {
      return getSurfaceMarkingFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.SurfaceMarking.getDefaultInstance());
    }
    /**
     * <pre>
     * Surface marking.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceMarking surface_marking = 6;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.SurfaceMarking.Builder> 
         getSurfaceMarkingBuilderList() {
      return getSurfaceMarkingFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceMarking, org.sensoris.categories.roadattribution.SurfaceMarking.Builder, org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder> 
        getSurfaceMarkingFieldBuilder() {
      if (surfaceMarkingBuilder_ == null) {
        surfaceMarkingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.SurfaceMarking, org.sensoris.categories.roadattribution.SurfaceMarking.Builder, org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder>(
                surfaceMarking_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        surfaceMarking_ = null;
      }
      return surfaceMarkingBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.SurfaceAttribution> surfaceAttribution_ =
      java.util.Collections.emptyList();
    private void ensureSurfaceAttributionIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        surfaceAttribution_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.SurfaceAttribution>(surfaceAttribution_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceAttribution, org.sensoris.categories.roadattribution.SurfaceAttribution.Builder, org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder> surfaceAttributionBuilder_;

    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.SurfaceAttribution> getSurfaceAttributionList() {
      if (surfaceAttributionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(surfaceAttribution_);
      } else {
        return surfaceAttributionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public int getSurfaceAttributionCount() {
      if (surfaceAttributionBuilder_ == null) {
        return surfaceAttribution_.size();
      } else {
        return surfaceAttributionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceAttribution getSurfaceAttribution(int index) {
      if (surfaceAttributionBuilder_ == null) {
        return surfaceAttribution_.get(index);
      } else {
        return surfaceAttributionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder setSurfaceAttribution(
        int index, org.sensoris.categories.roadattribution.SurfaceAttribution value) {
      if (surfaceAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.set(index, value);
        onChanged();
      } else {
        surfaceAttributionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder setSurfaceAttribution(
        int index, org.sensoris.categories.roadattribution.SurfaceAttribution.Builder builderForValue) {
      if (surfaceAttributionBuilder_ == null) {
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.set(index, builderForValue.build());
        onChanged();
      } else {
        surfaceAttributionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder addSurfaceAttribution(org.sensoris.categories.roadattribution.SurfaceAttribution value) {
      if (surfaceAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.add(value);
        onChanged();
      } else {
        surfaceAttributionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder addSurfaceAttribution(
        int index, org.sensoris.categories.roadattribution.SurfaceAttribution value) {
      if (surfaceAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.add(index, value);
        onChanged();
      } else {
        surfaceAttributionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder addSurfaceAttribution(
        org.sensoris.categories.roadattribution.SurfaceAttribution.Builder builderForValue) {
      if (surfaceAttributionBuilder_ == null) {
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.add(builderForValue.build());
        onChanged();
      } else {
        surfaceAttributionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder addSurfaceAttribution(
        int index, org.sensoris.categories.roadattribution.SurfaceAttribution.Builder builderForValue) {
      if (surfaceAttributionBuilder_ == null) {
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.add(index, builderForValue.build());
        onChanged();
      } else {
        surfaceAttributionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder addAllSurfaceAttribution(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.SurfaceAttribution> values) {
      if (surfaceAttributionBuilder_ == null) {
        ensureSurfaceAttributionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, surfaceAttribution_);
        onChanged();
      } else {
        surfaceAttributionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder clearSurfaceAttribution() {
      if (surfaceAttributionBuilder_ == null) {
        surfaceAttribution_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        surfaceAttributionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public Builder removeSurfaceAttribution(int index) {
      if (surfaceAttributionBuilder_ == null) {
        ensureSurfaceAttributionIsMutable();
        surfaceAttribution_.remove(index);
        onChanged();
      } else {
        surfaceAttributionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceAttribution.Builder getSurfaceAttributionBuilder(
        int index) {
      return getSurfaceAttributionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder getSurfaceAttributionOrBuilder(
        int index) {
      if (surfaceAttributionBuilder_ == null) {
        return surfaceAttribution_.get(index);  } else {
        return surfaceAttributionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder> 
         getSurfaceAttributionOrBuilderList() {
      if (surfaceAttributionBuilder_ != null) {
        return surfaceAttributionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(surfaceAttribution_);
      }
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceAttribution.Builder addSurfaceAttributionBuilder() {
      return getSurfaceAttributionFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.SurfaceAttribution.getDefaultInstance());
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceAttribution.Builder addSurfaceAttributionBuilder(
        int index) {
      return getSurfaceAttributionFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.SurfaceAttribution.getDefaultInstance());
    }
    /**
     * <pre>
     * Attributes of road surface.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.SurfaceAttribution surface_attribution = 7;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.SurfaceAttribution.Builder> 
         getSurfaceAttributionBuilderList() {
      return getSurfaceAttributionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceAttribution, org.sensoris.categories.roadattribution.SurfaceAttribution.Builder, org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder> 
        getSurfaceAttributionFieldBuilder() {
      if (surfaceAttributionBuilder_ == null) {
        surfaceAttributionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.SurfaceAttribution, org.sensoris.categories.roadattribution.SurfaceAttribution.Builder, org.sensoris.categories.roadattribution.SurfaceAttributionOrBuilder>(
                surfaceAttribution_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        surfaceAttribution_ = null;
      }
      return surfaceAttributionBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.RoadAttribution> roadAttribution_ =
      java.util.Collections.emptyList();
    private void ensureRoadAttributionIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        roadAttribution_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.RoadAttribution>(roadAttribution_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.RoadAttribution, org.sensoris.categories.roadattribution.RoadAttribution.Builder, org.sensoris.categories.roadattribution.RoadAttributionOrBuilder> roadAttributionBuilder_;

    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.RoadAttribution> getRoadAttributionList() {
      if (roadAttributionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(roadAttribution_);
      } else {
        return roadAttributionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public int getRoadAttributionCount() {
      if (roadAttributionBuilder_ == null) {
        return roadAttribution_.size();
      } else {
        return roadAttributionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public org.sensoris.categories.roadattribution.RoadAttribution getRoadAttribution(int index) {
      if (roadAttributionBuilder_ == null) {
        return roadAttribution_.get(index);
      } else {
        return roadAttributionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder setRoadAttribution(
        int index, org.sensoris.categories.roadattribution.RoadAttribution value) {
      if (roadAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadAttributionIsMutable();
        roadAttribution_.set(index, value);
        onChanged();
      } else {
        roadAttributionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder setRoadAttribution(
        int index, org.sensoris.categories.roadattribution.RoadAttribution.Builder builderForValue) {
      if (roadAttributionBuilder_ == null) {
        ensureRoadAttributionIsMutable();
        roadAttribution_.set(index, builderForValue.build());
        onChanged();
      } else {
        roadAttributionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder addRoadAttribution(org.sensoris.categories.roadattribution.RoadAttribution value) {
      if (roadAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadAttributionIsMutable();
        roadAttribution_.add(value);
        onChanged();
      } else {
        roadAttributionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder addRoadAttribution(
        int index, org.sensoris.categories.roadattribution.RoadAttribution value) {
      if (roadAttributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadAttributionIsMutable();
        roadAttribution_.add(index, value);
        onChanged();
      } else {
        roadAttributionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder addRoadAttribution(
        org.sensoris.categories.roadattribution.RoadAttribution.Builder builderForValue) {
      if (roadAttributionBuilder_ == null) {
        ensureRoadAttributionIsMutable();
        roadAttribution_.add(builderForValue.build());
        onChanged();
      } else {
        roadAttributionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder addRoadAttribution(
        int index, org.sensoris.categories.roadattribution.RoadAttribution.Builder builderForValue) {
      if (roadAttributionBuilder_ == null) {
        ensureRoadAttributionIsMutable();
        roadAttribution_.add(index, builderForValue.build());
        onChanged();
      } else {
        roadAttributionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder addAllRoadAttribution(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.RoadAttribution> values) {
      if (roadAttributionBuilder_ == null) {
        ensureRoadAttributionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, roadAttribution_);
        onChanged();
      } else {
        roadAttributionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder clearRoadAttribution() {
      if (roadAttributionBuilder_ == null) {
        roadAttribution_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        roadAttributionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public Builder removeRoadAttribution(int index) {
      if (roadAttributionBuilder_ == null) {
        ensureRoadAttributionIsMutable();
        roadAttribution_.remove(index);
        onChanged();
      } else {
        roadAttributionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public org.sensoris.categories.roadattribution.RoadAttribution.Builder getRoadAttributionBuilder(
        int index) {
      return getRoadAttributionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public org.sensoris.categories.roadattribution.RoadAttributionOrBuilder getRoadAttributionOrBuilder(
        int index) {
      if (roadAttributionBuilder_ == null) {
        return roadAttribution_.get(index);  } else {
        return roadAttributionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.RoadAttributionOrBuilder> 
         getRoadAttributionOrBuilderList() {
      if (roadAttributionBuilder_ != null) {
        return roadAttributionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(roadAttribution_);
      }
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public org.sensoris.categories.roadattribution.RoadAttribution.Builder addRoadAttributionBuilder() {
      return getRoadAttributionFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.RoadAttribution.getDefaultInstance());
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public org.sensoris.categories.roadattribution.RoadAttribution.Builder addRoadAttributionBuilder(
        int index) {
      return getRoadAttributionFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.RoadAttribution.getDefaultInstance());
    }
    /**
     * <pre>
     * Attributes of road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.RoadAttribution road_attribution = 8;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.RoadAttribution.Builder> 
         getRoadAttributionBuilderList() {
      return getRoadAttributionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.RoadAttribution, org.sensoris.categories.roadattribution.RoadAttribution.Builder, org.sensoris.categories.roadattribution.RoadAttributionOrBuilder> 
        getRoadAttributionFieldBuilder() {
      if (roadAttributionBuilder_ == null) {
        roadAttributionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.RoadAttribution, org.sensoris.categories.roadattribution.RoadAttribution.Builder, org.sensoris.categories.roadattribution.RoadAttributionOrBuilder>(
                roadAttribution_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        roadAttribution_ = null;
      }
      return roadAttributionBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> detectedLaneCountAndConfidence_ =
      java.util.Collections.emptyList();
    private void ensureDetectedLaneCountAndConfidenceIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        detectedLaneCountAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.LaneCountAndConfidence>(detectedLaneCountAndConfidence_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> detectedLaneCountAndConfidenceBuilder_;

    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> getDetectedLaneCountAndConfidenceList() {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(detectedLaneCountAndConfidence_);
      } else {
        return detectedLaneCountAndConfidenceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public int getDetectedLaneCountAndConfidenceCount() {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        return detectedLaneCountAndConfidence_.size();
      } else {
        return detectedLaneCountAndConfidenceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence getDetectedLaneCountAndConfidence(int index) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        return detectedLaneCountAndConfidence_.get(index);
      } else {
        return detectedLaneCountAndConfidenceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder setDetectedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.set(index, value);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder setDetectedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.set(index, builderForValue.build());
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder addDetectedLaneCountAndConfidence(org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.add(value);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder addDetectedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.add(index, value);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder addDetectedLaneCountAndConfidence(
        org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.add(builderForValue.build());
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder addDetectedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.add(index, builderForValue.build());
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder addAllDetectedLaneCountAndConfidence(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidence> values) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        ensureDetectedLaneCountAndConfidenceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, detectedLaneCountAndConfidence_);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder clearDetectedLaneCountAndConfidence() {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        detectedLaneCountAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public Builder removeDetectedLaneCountAndConfidence(int index) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        ensureDetectedLaneCountAndConfidenceIsMutable();
        detectedLaneCountAndConfidence_.remove(index);
        onChanged();
      } else {
        detectedLaneCountAndConfidenceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder getDetectedLaneCountAndConfidenceBuilder(
        int index) {
      return getDetectedLaneCountAndConfidenceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder getDetectedLaneCountAndConfidenceOrBuilder(
        int index) {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        return detectedLaneCountAndConfidence_.get(index);  } else {
        return detectedLaneCountAndConfidenceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
         getDetectedLaneCountAndConfidenceOrBuilderList() {
      if (detectedLaneCountAndConfidenceBuilder_ != null) {
        return detectedLaneCountAndConfidenceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(detectedLaneCountAndConfidence_);
      }
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder addDetectedLaneCountAndConfidenceBuilder() {
      return getDetectedLaneCountAndConfidenceFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.LaneCountAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder addDetectedLaneCountAndConfidenceBuilder(
        int index) {
      return getDetectedLaneCountAndConfidenceFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Detected number of lanes and confidence.
     *
     * Detected lane count may be less than the actual lane count of the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence detected_lane_count_and_confidence = 9;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder> 
         getDetectedLaneCountAndConfidenceBuilderList() {
      return getDetectedLaneCountAndConfidenceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
        getDetectedLaneCountAndConfidenceFieldBuilder() {
      if (detectedLaneCountAndConfidenceBuilder_ == null) {
        detectedLaneCountAndConfidenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder>(
                detectedLaneCountAndConfidence_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        detectedLaneCountAndConfidence_ = null;
      }
      return detectedLaneCountAndConfidenceBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> estimatedLaneCountAndConfidence_ =
      java.util.Collections.emptyList();
    private void ensureEstimatedLaneCountAndConfidenceIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        estimatedLaneCountAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.LaneCountAndConfidence>(estimatedLaneCountAndConfidence_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> estimatedLaneCountAndConfidenceBuilder_;

    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence> getEstimatedLaneCountAndConfidenceList() {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(estimatedLaneCountAndConfidence_);
      } else {
        return estimatedLaneCountAndConfidenceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public int getEstimatedLaneCountAndConfidenceCount() {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        return estimatedLaneCountAndConfidence_.size();
      } else {
        return estimatedLaneCountAndConfidenceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence getEstimatedLaneCountAndConfidence(int index) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        return estimatedLaneCountAndConfidence_.get(index);
      } else {
        return estimatedLaneCountAndConfidenceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder setEstimatedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.set(index, value);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder setEstimatedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.set(index, builderForValue.build());
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder addEstimatedLaneCountAndConfidence(org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.add(value);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder addEstimatedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence value) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.add(index, value);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder addEstimatedLaneCountAndConfidence(
        org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.add(builderForValue.build());
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder addEstimatedLaneCountAndConfidence(
        int index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder builderForValue) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.add(index, builderForValue.build());
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder addAllEstimatedLaneCountAndConfidence(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidence> values) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, estimatedLaneCountAndConfidence_);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder clearEstimatedLaneCountAndConfidence() {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        estimatedLaneCountAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public Builder removeEstimatedLaneCountAndConfidence(int index) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        ensureEstimatedLaneCountAndConfidenceIsMutable();
        estimatedLaneCountAndConfidence_.remove(index);
        onChanged();
      } else {
        estimatedLaneCountAndConfidenceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder getEstimatedLaneCountAndConfidenceBuilder(
        int index) {
      return getEstimatedLaneCountAndConfidenceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder getEstimatedLaneCountAndConfidenceOrBuilder(
        int index) {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        return estimatedLaneCountAndConfidence_.get(index);  } else {
        return estimatedLaneCountAndConfidenceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
         getEstimatedLaneCountAndConfidenceOrBuilderList() {
      if (estimatedLaneCountAndConfidenceBuilder_ != null) {
        return estimatedLaneCountAndConfidenceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(estimatedLaneCountAndConfidence_);
      }
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder addEstimatedLaneCountAndConfidenceBuilder() {
      return getEstimatedLaneCountAndConfidenceFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.LaneCountAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder addEstimatedLaneCountAndConfidenceBuilder(
        int index) {
      return getEstimatedLaneCountAndConfidenceFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.LaneCountAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Estimated number of lanes and confidence.
     *
     * Estimated lane count derived from multiple lane detections, which may be higher than the detected lane count and unprecise to the actual lane count on the road.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.LaneCountAndConfidence estimated_lane_count_and_confidence = 10;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder> 
         getEstimatedLaneCountAndConfidenceBuilderList() {
      return getEstimatedLaneCountAndConfidenceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder> 
        getEstimatedLaneCountAndConfidenceFieldBuilder() {
      if (estimatedLaneCountAndConfidenceBuilder_ == null) {
        estimatedLaneCountAndConfidenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.LaneCountAndConfidence, org.sensoris.categories.roadattribution.LaneCountAndConfidence.Builder, org.sensoris.categories.roadattribution.LaneCountAndConfidenceOrBuilder>(
                estimatedLaneCountAndConfidence_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        estimatedLaneCountAndConfidence_ = null;
      }
      return estimatedLaneCountAndConfidenceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.roadattribution.RoadAttributionCategory)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.roadattribution.RoadAttributionCategory)
  private static final org.sensoris.categories.roadattribution.RoadAttributionCategory DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.roadattribution.RoadAttributionCategory();
  }

  public static org.sensoris.categories.roadattribution.RoadAttributionCategory getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RoadAttributionCategory>
      PARSER = new com.google.protobuf.AbstractParser<RoadAttributionCategory>() {
    @java.lang.Override
    public RoadAttributionCategory parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RoadAttributionCategory> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RoadAttributionCategory> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.categories.roadattribution.RoadAttributionCategory getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

