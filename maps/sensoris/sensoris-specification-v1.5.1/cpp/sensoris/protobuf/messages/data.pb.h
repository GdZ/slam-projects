/**
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/messages/data.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/wrappers.pb.h"
#include "sensoris/protobuf/types/base.pb.h"
#include "sensoris/protobuf/types/job.pb.h"
#include "sensoris/protobuf/types/source.pb.h"
#include "sensoris/protobuf/types/spatial.pb.h"
#include "sensoris/protobuf/categories/localization.pb.h"
#include "sensoris/protobuf/categories/object_detection.pb.h"
#include "sensoris/protobuf/categories/weather.pb.h"
#include "sensoris/protobuf/categories/driving_behavior.pb.h"
#include "sensoris/protobuf/categories/intersection_attribution.pb.h"
#include "sensoris/protobuf/categories/road_attribution.pb.h"
#include "sensoris/protobuf/categories/traffic_regulation.pb.h"
#include "sensoris/protobuf/categories/traffic_events.pb.h"
#include "sensoris/protobuf/categories/traffic_maneuver.pb.h"
#include "sensoris/protobuf/categories/brake.pb.h"
#include "sensoris/protobuf/categories/powertrain.pb.h"
#include "sensoris/protobuf/categories/map.pb.h"
#include "sensoris/protobuf/categories/vehicle_device.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sensoris_2fprotobuf_2fmessages_2fdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {
class DataMessage;
struct DataMessageDefaultTypeInternal;
extern DataMessageDefaultTypeInternal _DataMessage_default_instance_;
class DataMessage_AbsolutePaths;
struct DataMessage_AbsolutePathsDefaultTypeInternal;
extern DataMessage_AbsolutePathsDefaultTypeInternal _DataMessage_AbsolutePaths_default_instance_;
class DataMessage_AbsolutePaths_Path;
struct DataMessage_AbsolutePaths_PathDefaultTypeInternal;
extern DataMessage_AbsolutePaths_PathDefaultTypeInternal _DataMessage_AbsolutePaths_Path_default_instance_;
class DataMessage_Envelope;
struct DataMessage_EnvelopeDefaultTypeInternal;
extern DataMessage_EnvelopeDefaultTypeInternal _DataMessage_Envelope_default_instance_;
class DataMessage_Envelope_FieldResolutionOverride;
struct DataMessage_Envelope_FieldResolutionOverrideDefaultTypeInternal;
extern DataMessage_Envelope_FieldResolutionOverrideDefaultTypeInternal _DataMessage_Envelope_FieldResolutionOverride_default_instance_;
class DataMessage_Envelope_Ids;
struct DataMessage_Envelope_IdsDefaultTypeInternal;
extern DataMessage_Envelope_IdsDefaultTypeInternal _DataMessage_Envelope_Ids_default_instance_;
class DataMessage_Envelope_MapIdentification;
struct DataMessage_Envelope_MapIdentificationDefaultTypeInternal;
extern DataMessage_Envelope_MapIdentificationDefaultTypeInternal _DataMessage_Envelope_MapIdentification_default_instance_;
class DataMessage_Envelope_MapIdentification_MapVersion;
struct DataMessage_Envelope_MapIdentification_MapVersionDefaultTypeInternal;
extern DataMessage_Envelope_MapIdentification_MapVersionDefaultTypeInternal _DataMessage_Envelope_MapIdentification_MapVersion_default_instance_;
class DataMessage_Envelope_VehicleDimensions;
struct DataMessage_Envelope_VehicleDimensionsDefaultTypeInternal;
extern DataMessage_Envelope_VehicleDimensionsDefaultTypeInternal _DataMessage_Envelope_VehicleDimensions_default_instance_;
class DataMessage_EventRelation;
struct DataMessage_EventRelationDefaultTypeInternal;
extern DataMessage_EventRelationDefaultTypeInternal _DataMessage_EventRelation_default_instance_;
class DataMessage_EventSource;
struct DataMessage_EventSourceDefaultTypeInternal;
extern DataMessage_EventSourceDefaultTypeInternal _DataMessage_EventSource_default_instance_;
class DataMessage_EventSource_EventEnvelopeIds;
struct DataMessage_EventSource_EventEnvelopeIdsDefaultTypeInternal;
extern DataMessage_EventSource_EventEnvelopeIdsDefaultTypeInternal _DataMessage_EventSource_EventEnvelopeIds_default_instance_;
class DataMessage_Paths;
struct DataMessage_PathsDefaultTypeInternal;
extern DataMessage_PathsDefaultTypeInternal _DataMessage_Paths_default_instance_;
class DataMessages;
struct DataMessagesDefaultTypeInternal;
extern DataMessagesDefaultTypeInternal _DataMessages_default_instance_;
class DataMessages_Envelope;
struct DataMessages_EnvelopeDefaultTypeInternal;
extern DataMessages_EnvelopeDefaultTypeInternal _DataMessages_Envelope_default_instance_;
class EventGroup;
struct EventGroupDefaultTypeInternal;
extern EventGroupDefaultTypeInternal _EventGroup_default_instance_;
class EventGroup_Envelope;
struct EventGroup_EnvelopeDefaultTypeInternal;
extern EventGroup_EnvelopeDefaultTypeInternal _EventGroup_Envelope_default_instance_;
class EventGroup_Envelope_Origin;
struct EventGroup_Envelope_OriginDefaultTypeInternal;
extern EventGroup_Envelope_OriginDefaultTypeInternal _EventGroup_Envelope_Origin_default_instance_;
}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sensoris {
namespace protobuf {
namespace messages {
namespace data {
enum DataMessage_Envelope_MapIdentification_Format : int {
  DataMessage_Envelope_MapIdentification_Format_UNKNOWN_FORMAT = 0,
  DataMessage_Envelope_MapIdentification_Format_OTHER = 1,
  DataMessage_Envelope_MapIdentification_Format_NDS = 2,
  DataMessage_Envelope_MapIdentification_Format_DataMessage_Envelope_MapIdentification_Format_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataMessage_Envelope_MapIdentification_Format_DataMessage_Envelope_MapIdentification_Format_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataMessage_Envelope_MapIdentification_Format_IsValid(int value);
extern const uint32_t DataMessage_Envelope_MapIdentification_Format_internal_data_[];
constexpr DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification_Format_Format_MIN = static_cast<DataMessage_Envelope_MapIdentification_Format>(0);
constexpr DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification_Format_Format_MAX = static_cast<DataMessage_Envelope_MapIdentification_Format>(2);
constexpr int DataMessage_Envelope_MapIdentification_Format_Format_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
DataMessage_Envelope_MapIdentification_Format_descriptor();
template <typename T>
const std::string& DataMessage_Envelope_MapIdentification_Format_Name(T value) {
  static_assert(std::is_same<T, DataMessage_Envelope_MapIdentification_Format>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Format_Name().");
  return DataMessage_Envelope_MapIdentification_Format_Name(static_cast<DataMessage_Envelope_MapIdentification_Format>(value));
}
template <>
inline const std::string& DataMessage_Envelope_MapIdentification_Format_Name(DataMessage_Envelope_MapIdentification_Format value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataMessage_Envelope_MapIdentification_Format_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool DataMessage_Envelope_MapIdentification_Format_Parse(absl::string_view name, DataMessage_Envelope_MapIdentification_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataMessage_Envelope_MapIdentification_Format>(
      DataMessage_Envelope_MapIdentification_Format_descriptor(), name, value);
}
enum DataMessage_EventRelation_Type : int {
  DataMessage_EventRelation_Type_UNKNOWN_TYPE = 0,
  DataMessage_EventRelation_Type_EQUAL = 1,
  DataMessage_EventRelation_Type_GROUP = 2,
  DataMessage_EventRelation_Type_CONTAIN = 3,
  DataMessage_EventRelation_Type_IMPACT = 4,
  DataMessage_EventRelation_Type_START_AT = 5,
  DataMessage_EventRelation_Type_END_AT = 6,
  DataMessage_EventRelation_Type_LEFT_OF = 7,
  DataMessage_EventRelation_Type_RIGHT_OF = 8,
  DataMessage_EventRelation_Type_TRIGGERED_BY = 9,
  DataMessage_EventRelation_Type_DERIVED_FROM = 11,
  DataMessage_EventRelation_Type_MAP_REFERENCE = 12,
  DataMessage_EventRelation_Type_DataMessage_EventRelation_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataMessage_EventRelation_Type_DataMessage_EventRelation_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataMessage_EventRelation_Type_IsValid(int value);
extern const uint32_t DataMessage_EventRelation_Type_internal_data_[];
constexpr DataMessage_EventRelation_Type DataMessage_EventRelation_Type_Type_MIN = static_cast<DataMessage_EventRelation_Type>(0);
constexpr DataMessage_EventRelation_Type DataMessage_EventRelation_Type_Type_MAX = static_cast<DataMessage_EventRelation_Type>(12);
constexpr int DataMessage_EventRelation_Type_Type_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor*
DataMessage_EventRelation_Type_descriptor();
template <typename T>
const std::string& DataMessage_EventRelation_Type_Name(T value) {
  static_assert(std::is_same<T, DataMessage_EventRelation_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return DataMessage_EventRelation_Type_Name(static_cast<DataMessage_EventRelation_Type>(value));
}
template <>
inline const std::string& DataMessage_EventRelation_Type_Name(DataMessage_EventRelation_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataMessage_EventRelation_Type_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool DataMessage_EventRelation_Type_Parse(absl::string_view name, DataMessage_EventRelation_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataMessage_EventRelation_Type>(
      DataMessage_EventRelation_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class DataMessage_AbsolutePaths_Path final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path) */ {
 public:
  inline DataMessage_AbsolutePaths_Path() : DataMessage_AbsolutePaths_Path(nullptr) {}
  ~DataMessage_AbsolutePaths_Path() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_AbsolutePaths_Path(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_AbsolutePaths_Path(const DataMessage_AbsolutePaths_Path& from)
      : DataMessage_AbsolutePaths_Path(nullptr, from) {}
  DataMessage_AbsolutePaths_Path(DataMessage_AbsolutePaths_Path&& from) noexcept
    : DataMessage_AbsolutePaths_Path() {
    *this = ::std::move(from);
  }

  inline DataMessage_AbsolutePaths_Path& operator=(const DataMessage_AbsolutePaths_Path& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_AbsolutePaths_Path& operator=(DataMessage_AbsolutePaths_Path&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_AbsolutePaths_Path& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_AbsolutePaths_Path* internal_default_instance() {
    return reinterpret_cast<const DataMessage_AbsolutePaths_Path*>(
               &_DataMessage_AbsolutePaths_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DataMessage_AbsolutePaths_Path& a, DataMessage_AbsolutePaths_Path& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_AbsolutePaths_Path* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_AbsolutePaths_Path* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_AbsolutePaths_Path* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths_Path>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_AbsolutePaths_Path& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_AbsolutePaths_Path& from) {
    DataMessage_AbsolutePaths_Path::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_AbsolutePaths_Path* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path";
  }
  protected:
  explicit DataMessage_AbsolutePaths_Path(::google::protobuf::Arena* arena);
  DataMessage_AbsolutePaths_Path(::google::protobuf::Arena* arena, const DataMessage_AbsolutePaths_Path& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldNumberFieldNumber = 1,
  };
  // repeated int64 field_number = 1;
  int field_number_size() const;
  private:
  int _internal_field_number_size() const;

  public:
  void clear_field_number() ;
  ::int64_t field_number(int index) const;
  void set_field_number(int index, ::int64_t value);
  void add_field_number(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& field_number() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_field_number();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_field_number() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_field_number();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> field_number_;
    mutable ::google::protobuf::internal::CachedSize _field_number_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_EventSource_EventEnvelopeIds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds) */ {
 public:
  inline DataMessage_EventSource_EventEnvelopeIds() : DataMessage_EventSource_EventEnvelopeIds(nullptr) {}
  ~DataMessage_EventSource_EventEnvelopeIds() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_EventSource_EventEnvelopeIds(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_EventSource_EventEnvelopeIds(const DataMessage_EventSource_EventEnvelopeIds& from)
      : DataMessage_EventSource_EventEnvelopeIds(nullptr, from) {}
  DataMessage_EventSource_EventEnvelopeIds(DataMessage_EventSource_EventEnvelopeIds&& from) noexcept
    : DataMessage_EventSource_EventEnvelopeIds() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventSource_EventEnvelopeIds& operator=(const DataMessage_EventSource_EventEnvelopeIds& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_EventSource_EventEnvelopeIds& operator=(DataMessage_EventSource_EventEnvelopeIds&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_EventSource_EventEnvelopeIds& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_EventSource_EventEnvelopeIds* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventSource_EventEnvelopeIds*>(
               &_DataMessage_EventSource_EventEnvelopeIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DataMessage_EventSource_EventEnvelopeIds& a, DataMessage_EventSource_EventEnvelopeIds& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_EventSource_EventEnvelopeIds* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_EventSource_EventEnvelopeIds* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_EventSource_EventEnvelopeIds* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_EventSource_EventEnvelopeIds>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_EventSource_EventEnvelopeIds& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_EventSource_EventEnvelopeIds& from) {
    DataMessage_EventSource_EventEnvelopeIds::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_EventSource_EventEnvelopeIds* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds";
  }
  protected:
  explicit DataMessage_EventSource_EventEnvelopeIds(::google::protobuf::Arena* arena);
  DataMessage_EventSource_EventEnvelopeIds(::google::protobuf::Arena* arena, const DataMessage_EventSource_EventEnvelopeIds& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
  };
  // repeated .google.protobuf.Int64Value id = 2;
  int id_size() const;
  private:
  int _internal_id_size() const;

  public:
  void clear_id() ;
  ::google::protobuf::Int64Value* mutable_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_id();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& _internal_id() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* _internal_mutable_id();
  public:
  const ::google::protobuf::Int64Value& id(int index) const;
  ::google::protobuf::Int64Value* add_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      id() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_EventRelation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventRelation) */ {
 public:
  inline DataMessage_EventRelation() : DataMessage_EventRelation(nullptr) {}
  ~DataMessage_EventRelation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_EventRelation(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_EventRelation(const DataMessage_EventRelation& from)
      : DataMessage_EventRelation(nullptr, from) {}
  DataMessage_EventRelation(DataMessage_EventRelation&& from) noexcept
    : DataMessage_EventRelation() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventRelation& operator=(const DataMessage_EventRelation& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_EventRelation& operator=(DataMessage_EventRelation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_EventRelation& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_EventRelation* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventRelation*>(
               &_DataMessage_EventRelation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DataMessage_EventRelation& a, DataMessage_EventRelation& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_EventRelation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_EventRelation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_EventRelation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_EventRelation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_EventRelation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_EventRelation& from) {
    DataMessage_EventRelation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_EventRelation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.EventRelation";
  }
  protected:
  explicit DataMessage_EventRelation(::google::protobuf::Arena* arena);
  DataMessage_EventRelation(::google::protobuf::Arena* arena, const DataMessage_EventRelation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = DataMessage_EventRelation_Type;
  static constexpr Type UNKNOWN_TYPE = DataMessage_EventRelation_Type_UNKNOWN_TYPE;
  static constexpr Type EQUAL = DataMessage_EventRelation_Type_EQUAL;
  static constexpr Type GROUP = DataMessage_EventRelation_Type_GROUP;
  static constexpr Type CONTAIN = DataMessage_EventRelation_Type_CONTAIN;
  static constexpr Type IMPACT = DataMessage_EventRelation_Type_IMPACT;
  static constexpr Type START_AT = DataMessage_EventRelation_Type_START_AT;
  static constexpr Type END_AT = DataMessage_EventRelation_Type_END_AT;
  static constexpr Type LEFT_OF = DataMessage_EventRelation_Type_LEFT_OF;
  static constexpr Type RIGHT_OF = DataMessage_EventRelation_Type_RIGHT_OF;
  static constexpr Type TRIGGERED_BY = DataMessage_EventRelation_Type_TRIGGERED_BY;
  static constexpr Type DERIVED_FROM = DataMessage_EventRelation_Type_DERIVED_FROM;
  static constexpr Type MAP_REFERENCE = DataMessage_EventRelation_Type_MAP_REFERENCE;
  static inline bool Type_IsValid(int value) {
    return DataMessage_EventRelation_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = DataMessage_EventRelation_Type_Type_MIN;
  static constexpr Type Type_MAX = DataMessage_EventRelation_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = DataMessage_EventRelation_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return DataMessage_EventRelation_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return DataMessage_EventRelation_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return DataMessage_EventRelation_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kFromIdFieldNumber = 1,
    kToIdFieldNumber = 3,
    kExtensionFieldNumber = 15,
    kTypeFieldNumber = 2,
  };
  // repeated .google.protobuf.Int64Value from_id = 1;
  int from_id_size() const;
  private:
  int _internal_from_id_size() const;

  public:
  void clear_from_id() ;
  ::google::protobuf::Int64Value* mutable_from_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_from_id();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& _internal_from_id() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* _internal_mutable_from_id();
  public:
  const ::google::protobuf::Int64Value& from_id(int index) const;
  ::google::protobuf::Int64Value* add_from_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      from_id() const;
  // repeated .google.protobuf.Int64Value to_id = 3;
  int to_id_size() const;
  private:
  int _internal_to_id_size() const;

  public:
  void clear_to_id() ;
  ::google::protobuf::Int64Value* mutable_to_id(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >*
      mutable_to_id();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& _internal_to_id() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* _internal_mutable_to_id();
  public:
  const ::google::protobuf::Int64Value& to_id(int index) const;
  ::google::protobuf::Int64Value* add_to_id();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value >&
      to_id() const;
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
  void clear_type() ;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type type() const;
  void set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value);

  private:
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventRelation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > from_id_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Int64Value > to_id_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope_VehicleDimensions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions) */ {
 public:
  inline DataMessage_Envelope_VehicleDimensions() : DataMessage_Envelope_VehicleDimensions(nullptr) {}
  ~DataMessage_Envelope_VehicleDimensions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope_VehicleDimensions(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope_VehicleDimensions(const DataMessage_Envelope_VehicleDimensions& from)
      : DataMessage_Envelope_VehicleDimensions(nullptr, from) {}
  DataMessage_Envelope_VehicleDimensions(DataMessage_Envelope_VehicleDimensions&& from) noexcept
    : DataMessage_Envelope_VehicleDimensions() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_VehicleDimensions& operator=(const DataMessage_Envelope_VehicleDimensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope_VehicleDimensions& operator=(DataMessage_Envelope_VehicleDimensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope_VehicleDimensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope_VehicleDimensions* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_VehicleDimensions*>(
               &_DataMessage_Envelope_VehicleDimensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DataMessage_Envelope_VehicleDimensions& a, DataMessage_Envelope_VehicleDimensions& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope_VehicleDimensions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope_VehicleDimensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope_VehicleDimensions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope_VehicleDimensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope_VehicleDimensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope_VehicleDimensions& from) {
    DataMessage_Envelope_VehicleDimensions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope_VehicleDimensions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions";
  }
  protected:
  explicit DataMessage_Envelope_VehicleDimensions(::google::protobuf::Arena* arena);
  DataMessage_Envelope_VehicleDimensions(::google::protobuf::Arena* arena, const DataMessage_Envelope_VehicleDimensions& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDistanceToFrontFieldNumber = 1,
    kDistanceToBackFieldNumber = 2,
    kDistanceToLeftFieldNumber = 3,
    kDistanceToRightFieldNumber = 4,
    kDistanceToTopFieldNumber = 5,
    kDistanceToGroundFieldNumber = 6,
  };
  // .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_front() const;
  void clear_distance_to_front() ;
  const ::google::protobuf::Int64Value& distance_to_front() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_front();
  ::google::protobuf::Int64Value* mutable_distance_to_front();
  void set_allocated_distance_to_front(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_front(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_front();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_front() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_front();

  public:
  // .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_back() const;
  void clear_distance_to_back() ;
  const ::google::protobuf::Int64Value& distance_to_back() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_back();
  ::google::protobuf::Int64Value* mutable_distance_to_back();
  void set_allocated_distance_to_back(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_back(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_back();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_back() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_back();

  public:
  // .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_left() const;
  void clear_distance_to_left() ;
  const ::google::protobuf::Int64Value& distance_to_left() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_left();
  ::google::protobuf::Int64Value* mutable_distance_to_left();
  void set_allocated_distance_to_left(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_left(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_left();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_left() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_left();

  public:
  // .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_right() const;
  void clear_distance_to_right() ;
  const ::google::protobuf::Int64Value& distance_to_right() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_right();
  ::google::protobuf::Int64Value* mutable_distance_to_right();
  void set_allocated_distance_to_right(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_right(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_right();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_right() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_right();

  public:
  // .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_top() const;
  void clear_distance_to_top() ;
  const ::google::protobuf::Int64Value& distance_to_top() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_top();
  ::google::protobuf::Int64Value* mutable_distance_to_top();
  void set_allocated_distance_to_top(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_top(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_top();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_top() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_top();

  public:
  // .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_distance_to_ground() const;
  void clear_distance_to_ground() ;
  const ::google::protobuf::Int64Value& distance_to_ground() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_distance_to_ground();
  ::google::protobuf::Int64Value* mutable_distance_to_ground();
  void set_allocated_distance_to_ground(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_distance_to_ground(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_distance_to_ground();

  private:
  const ::google::protobuf::Int64Value& _internal_distance_to_ground() const;
  ::google::protobuf::Int64Value* _internal_mutable_distance_to_ground();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Int64Value* distance_to_front_;
    ::google::protobuf::Int64Value* distance_to_back_;
    ::google::protobuf::Int64Value* distance_to_left_;
    ::google::protobuf::Int64Value* distance_to_right_;
    ::google::protobuf::Int64Value* distance_to_top_;
    ::google::protobuf::Int64Value* distance_to_ground_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope_Ids final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids) */ {
 public:
  inline DataMessage_Envelope_Ids() : DataMessage_Envelope_Ids(nullptr) {}
  ~DataMessage_Envelope_Ids() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope_Ids(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope_Ids(const DataMessage_Envelope_Ids& from)
      : DataMessage_Envelope_Ids(nullptr, from) {}
  DataMessage_Envelope_Ids(DataMessage_Envelope_Ids&& from) noexcept
    : DataMessage_Envelope_Ids() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_Ids& operator=(const DataMessage_Envelope_Ids& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope_Ids& operator=(DataMessage_Envelope_Ids&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope_Ids& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope_Ids* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_Ids*>(
               &_DataMessage_Envelope_Ids_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DataMessage_Envelope_Ids& a, DataMessage_Envelope_Ids& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope_Ids* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope_Ids* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope_Ids* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope_Ids>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope_Ids& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope_Ids& from) {
    DataMessage_Envelope_Ids::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope_Ids* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope.Ids";
  }
  protected:
  explicit DataMessage_Envelope_Ids(::google::protobuf::Arena* arena);
  DataMessage_Envelope_Ids(::google::protobuf::Arena* arena, const DataMessage_Envelope_Ids& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionIdFieldNumber = 1,
    kMessageIdFieldNumber = 2,
    kLastMessageOfSessionFieldNumber = 3,
    kVehicleFleetIdFieldNumber = 4,
    kVehicleIdFieldNumber = 5,
    kDriverIdFieldNumber = 6,
  };
  // .google.protobuf.StringValue session_id = 1;
  bool has_session_id() const;
  void clear_session_id() ;
  const ::google::protobuf::StringValue& session_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_session_id();
  ::google::protobuf::StringValue* mutable_session_id();
  void set_allocated_session_id(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_session_id(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_session_id();

  private:
  const ::google::protobuf::StringValue& _internal_session_id() const;
  ::google::protobuf::StringValue* _internal_mutable_session_id();

  public:
  // .google.protobuf.Int64Value message_id = 2;
  bool has_message_id() const;
  void clear_message_id() ;
  const ::google::protobuf::Int64Value& message_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_message_id();
  ::google::protobuf::Int64Value* mutable_message_id();
  void set_allocated_message_id(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_message_id(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_message_id();

  private:
  const ::google::protobuf::Int64Value& _internal_message_id() const;
  ::google::protobuf::Int64Value* _internal_mutable_message_id();

  public:
  // .google.protobuf.BoolValue last_message_of_session = 3;
  bool has_last_message_of_session() const;
  void clear_last_message_of_session() ;
  const ::google::protobuf::BoolValue& last_message_of_session() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_last_message_of_session();
  ::google::protobuf::BoolValue* mutable_last_message_of_session();
  void set_allocated_last_message_of_session(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_last_message_of_session(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_last_message_of_session();

  private:
  const ::google::protobuf::BoolValue& _internal_last_message_of_session() const;
  ::google::protobuf::BoolValue* _internal_mutable_last_message_of_session();

  public:
  // .google.protobuf.StringValue vehicle_fleet_id = 4;
  bool has_vehicle_fleet_id() const;
  void clear_vehicle_fleet_id() ;
  const ::google::protobuf::StringValue& vehicle_fleet_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_vehicle_fleet_id();
  ::google::protobuf::StringValue* mutable_vehicle_fleet_id();
  void set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_vehicle_fleet_id();

  private:
  const ::google::protobuf::StringValue& _internal_vehicle_fleet_id() const;
  ::google::protobuf::StringValue* _internal_mutable_vehicle_fleet_id();

  public:
  // .google.protobuf.StringValue vehicle_id = 5;
  bool has_vehicle_id() const;
  void clear_vehicle_id() ;
  const ::google::protobuf::StringValue& vehicle_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_vehicle_id();
  ::google::protobuf::StringValue* mutable_vehicle_id();
  void set_allocated_vehicle_id(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_vehicle_id(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_vehicle_id();

  private:
  const ::google::protobuf::StringValue& _internal_vehicle_id() const;
  ::google::protobuf::StringValue* _internal_mutable_vehicle_id();

  public:
  // .google.protobuf.StringValue driver_id = 6;
  bool has_driver_id() const;
  void clear_driver_id() ;
  const ::google::protobuf::StringValue& driver_id() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_driver_id();
  ::google::protobuf::StringValue* mutable_driver_id();
  void set_allocated_driver_id(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_driver_id(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_driver_id();

  private:
  const ::google::protobuf::StringValue& _internal_driver_id() const;
  ::google::protobuf::StringValue* _internal_mutable_driver_id();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::StringValue* session_id_;
    ::google::protobuf::Int64Value* message_id_;
    ::google::protobuf::BoolValue* last_message_of_session_;
    ::google::protobuf::StringValue* vehicle_fleet_id_;
    ::google::protobuf::StringValue* vehicle_id_;
    ::google::protobuf::StringValue* driver_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_AbsolutePaths final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths) */ {
 public:
  inline DataMessage_AbsolutePaths() : DataMessage_AbsolutePaths(nullptr) {}
  ~DataMessage_AbsolutePaths() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_AbsolutePaths(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_AbsolutePaths(const DataMessage_AbsolutePaths& from)
      : DataMessage_AbsolutePaths(nullptr, from) {}
  DataMessage_AbsolutePaths(DataMessage_AbsolutePaths&& from) noexcept
    : DataMessage_AbsolutePaths() {
    *this = ::std::move(from);
  }

  inline DataMessage_AbsolutePaths& operator=(const DataMessage_AbsolutePaths& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_AbsolutePaths& operator=(DataMessage_AbsolutePaths&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_AbsolutePaths& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_AbsolutePaths* internal_default_instance() {
    return reinterpret_cast<const DataMessage_AbsolutePaths*>(
               &_DataMessage_AbsolutePaths_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DataMessage_AbsolutePaths& a, DataMessage_AbsolutePaths& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_AbsolutePaths* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_AbsolutePaths* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_AbsolutePaths* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_AbsolutePaths>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_AbsolutePaths& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_AbsolutePaths& from) {
    DataMessage_AbsolutePaths::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_AbsolutePaths* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.AbsolutePaths";
  }
  protected:
  explicit DataMessage_AbsolutePaths(::google::protobuf::Arena* arena);
  DataMessage_AbsolutePaths(::google::protobuf::Arena* arena, const DataMessage_AbsolutePaths& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Path = DataMessage_AbsolutePaths_Path;

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
  int path_size() const;
  private:
  int _internal_path_size() const;

  public:
  void clear_path() ;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* mutable_path(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >*
      mutable_path();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>& _internal_path() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>* _internal_mutable_path();
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path& path(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* add_path();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path >&
      path() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path > path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Paths final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Paths) */ {
 public:
  inline DataMessage_Paths() : DataMessage_Paths(nullptr) {}
  ~DataMessage_Paths() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Paths(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Paths(const DataMessage_Paths& from)
      : DataMessage_Paths(nullptr, from) {}
  DataMessage_Paths(DataMessage_Paths&& from) noexcept
    : DataMessage_Paths() {
    *this = ::std::move(from);
  }

  inline DataMessage_Paths& operator=(const DataMessage_Paths& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Paths& operator=(DataMessage_Paths&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Paths& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kAbsolutePaths = 1,
    TYPE_NOT_SET = 0,
  };

  static inline const DataMessage_Paths* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Paths*>(
               &_DataMessage_Paths_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DataMessage_Paths& a, DataMessage_Paths& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Paths* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Paths* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Paths* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Paths>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Paths& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Paths& from) {
    DataMessage_Paths::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Paths* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Paths";
  }
  protected:
  explicit DataMessage_Paths(::google::protobuf::Arena* arena);
  DataMessage_Paths(::google::protobuf::Arena* arena, const DataMessage_Paths& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbsolutePathsFieldNumber = 1,
  };
  // .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
  bool has_absolute_paths() const;
  private:
  bool _internal_has_absolute_paths() const;

  public:
  void clear_absolute_paths() ;
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& absolute_paths() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* release_absolute_paths();
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* mutable_absolute_paths();
  void set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* value);
  void unsafe_arena_set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* value);
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* unsafe_arena_release_absolute_paths();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& _internal_absolute_paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* _internal_mutable_absolute_paths();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Paths)
 private:
  class _Internal;
  void set_has_absolute_paths();

  inline bool has_type() const;
  inline void clear_has_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* absolute_paths_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope_MapIdentification_MapVersion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion) */ {
 public:
  inline DataMessage_Envelope_MapIdentification_MapVersion() : DataMessage_Envelope_MapIdentification_MapVersion(nullptr) {}
  ~DataMessage_Envelope_MapIdentification_MapVersion() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope_MapIdentification_MapVersion(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope_MapIdentification_MapVersion(const DataMessage_Envelope_MapIdentification_MapVersion& from)
      : DataMessage_Envelope_MapIdentification_MapVersion(nullptr, from) {}
  DataMessage_Envelope_MapIdentification_MapVersion(DataMessage_Envelope_MapIdentification_MapVersion&& from) noexcept
    : DataMessage_Envelope_MapIdentification_MapVersion() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_MapIdentification_MapVersion& operator=(const DataMessage_Envelope_MapIdentification_MapVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope_MapIdentification_MapVersion& operator=(DataMessage_Envelope_MapIdentification_MapVersion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope_MapIdentification_MapVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope_MapIdentification_MapVersion* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_MapIdentification_MapVersion*>(
               &_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DataMessage_Envelope_MapIdentification_MapVersion& a, DataMessage_Envelope_MapIdentification_MapVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope_MapIdentification_MapVersion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope_MapIdentification_MapVersion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope_MapIdentification_MapVersion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification_MapVersion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope_MapIdentification_MapVersion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope_MapIdentification_MapVersion& from) {
    DataMessage_Envelope_MapIdentification_MapVersion::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope_MapIdentification_MapVersion* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion";
  }
  protected:
  explicit DataMessage_Envelope_MapIdentification_MapVersion(::google::protobuf::Arena* arena);
  DataMessage_Envelope_MapIdentification_MapVersion(::google::protobuf::Arena* arena, const DataMessage_Envelope_MapIdentification_MapVersion& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
    kVersionFieldNumber = 2,
    kExtractionTimestampFieldNumber = 3,
  };
  // .google.protobuf.StringValue source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::google::protobuf::StringValue& source() const;
  PROTOBUF_NODISCARD ::google::protobuf::StringValue* release_source();
  ::google::protobuf::StringValue* mutable_source();
  void set_allocated_source(::google::protobuf::StringValue* value);
  void unsafe_arena_set_allocated_source(::google::protobuf::StringValue* value);
  ::google::protobuf::StringValue* unsafe_arena_release_source();

  private:
  const ::google::protobuf::StringValue& _internal_source() const;
  ::google::protobuf::StringValue* _internal_mutable_source();

  public:
  // .sensoris.protobuf.types.base.Version version = 2;
  bool has_version() const;
  void clear_version() ;
  const ::sensoris::protobuf::types::base::Version& version() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::base::Version* release_version();
  ::sensoris::protobuf::types::base::Version* mutable_version();
  void set_allocated_version(::sensoris::protobuf::types::base::Version* value);
  void unsafe_arena_set_allocated_version(::sensoris::protobuf::types::base::Version* value);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_version();

  private:
  const ::sensoris::protobuf::types::base::Version& _internal_version() const;
  ::sensoris::protobuf::types::base::Version* _internal_mutable_version();

  public:
  // .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
  bool has_extraction_timestamp() const;
  void clear_extraction_timestamp() ;
  const ::sensoris::protobuf::types::base::Timestamp& extraction_timestamp() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::base::Timestamp* release_extraction_timestamp();
  ::sensoris::protobuf::types::base::Timestamp* mutable_extraction_timestamp();
  void set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* value);
  void unsafe_arena_set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* value);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_extraction_timestamp();

  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_extraction_timestamp() const;
  ::sensoris::protobuf::types::base::Timestamp* _internal_mutable_extraction_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::StringValue* source_;
    ::sensoris::protobuf::types::base::Version* version_;
    ::sensoris::protobuf::types::base::Timestamp* extraction_timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessages_Envelope final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessages.Envelope) */ {
 public:
  inline DataMessages_Envelope() : DataMessages_Envelope(nullptr) {}
  ~DataMessages_Envelope() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessages_Envelope(::google::protobuf::internal::ConstantInitialized);

  inline DataMessages_Envelope(const DataMessages_Envelope& from)
      : DataMessages_Envelope(nullptr, from) {}
  DataMessages_Envelope(DataMessages_Envelope&& from) noexcept
    : DataMessages_Envelope() {
    *this = ::std::move(from);
  }

  inline DataMessages_Envelope& operator=(const DataMessages_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessages_Envelope& operator=(DataMessages_Envelope&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessages_Envelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessages_Envelope* internal_default_instance() {
    return reinterpret_cast<const DataMessages_Envelope*>(
               &_DataMessages_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DataMessages_Envelope& a, DataMessages_Envelope& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessages_Envelope* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessages_Envelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessages_Envelope* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessages_Envelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessages_Envelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessages_Envelope& from) {
    DataMessages_Envelope::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessages_Envelope* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessages.Envelope";
  }
  protected:
  explicit DataMessages_Envelope(::google::protobuf::Arena* arena);
  DataMessages_Envelope(::google::protobuf::Arena* arena, const DataMessages_Envelope& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubmitterFieldNumber = 2,
    kExtensionTypeUrlAndVersionFieldNumber = 3,
    kExtensionFieldNumber = 15,
    kVersionFieldNumber = 1,
  };
  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  int submitter_size() const;
  private:
  int _internal_submitter_size() const;

  public:
  void clear_submitter() ;
  ::sensoris::protobuf::types::base::Entity* mutable_submitter(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >*
      mutable_submitter();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>& _internal_submitter() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>* _internal_mutable_submitter();
  public:
  const ::sensoris::protobuf::types::base::Entity& submitter(int index) const;
  ::sensoris::protobuf::types::base::Entity* add_submitter();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity >&
      submitter() const;
  // repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
  int extension_type_url_and_version_size() const;
  private:
  int _internal_extension_type_url_and_version_size() const;

  public:
  void clear_extension_type_url_and_version() ;
  ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion* mutable_extension_type_url_and_version(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion >*
      mutable_extension_type_url_and_version();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>& _internal_extension_type_url_and_version() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>* _internal_mutable_extension_type_url_and_version();
  public:
  const ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion& extension_type_url_and_version(int index) const;
  ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion* add_extension_type_url_and_version();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion >&
      extension_type_url_and_version() const;
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.types.base.Version version = 1;
  bool has_version() const;
  void clear_version() ;
  const ::sensoris::protobuf::types::base::Version& version() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::base::Version* release_version();
  ::sensoris::protobuf::types::base::Version* mutable_version();
  void set_allocated_version(::sensoris::protobuf::types::base::Version* value);
  void unsafe_arena_set_allocated_version(::sensoris::protobuf::types::base::Version* value);
  ::sensoris::protobuf::types::base::Version* unsafe_arena_release_version();

  private:
  const ::sensoris::protobuf::types::base::Version& _internal_version() const;
  ::sensoris::protobuf::types::base::Version* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessages.Envelope)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::Entity > submitter_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion > extension_type_url_and_version_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::base::Version* version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope_MapIdentification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification) */ {
 public:
  inline DataMessage_Envelope_MapIdentification() : DataMessage_Envelope_MapIdentification(nullptr) {}
  ~DataMessage_Envelope_MapIdentification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope_MapIdentification(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope_MapIdentification(const DataMessage_Envelope_MapIdentification& from)
      : DataMessage_Envelope_MapIdentification(nullptr, from) {}
  DataMessage_Envelope_MapIdentification(DataMessage_Envelope_MapIdentification&& from) noexcept
    : DataMessage_Envelope_MapIdentification() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_MapIdentification& operator=(const DataMessage_Envelope_MapIdentification& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope_MapIdentification& operator=(DataMessage_Envelope_MapIdentification&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope_MapIdentification& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope_MapIdentification* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_MapIdentification*>(
               &_DataMessage_Envelope_MapIdentification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DataMessage_Envelope_MapIdentification& a, DataMessage_Envelope_MapIdentification& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope_MapIdentification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope_MapIdentification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope_MapIdentification* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope_MapIdentification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope_MapIdentification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope_MapIdentification& from) {
    DataMessage_Envelope_MapIdentification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope_MapIdentification* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification";
  }
  protected:
  explicit DataMessage_Envelope_MapIdentification(::google::protobuf::Arena* arena);
  DataMessage_Envelope_MapIdentification(::google::protobuf::Arena* arena, const DataMessage_Envelope_MapIdentification& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using MapVersion = DataMessage_Envelope_MapIdentification_MapVersion;

  using Format = DataMessage_Envelope_MapIdentification_Format;
  static constexpr Format UNKNOWN_FORMAT = DataMessage_Envelope_MapIdentification_Format_UNKNOWN_FORMAT;
  static constexpr Format OTHER = DataMessage_Envelope_MapIdentification_Format_OTHER;
  static constexpr Format NDS = DataMessage_Envelope_MapIdentification_Format_NDS;
  static inline bool Format_IsValid(int value) {
    return DataMessage_Envelope_MapIdentification_Format_IsValid(value);
  }
  static constexpr Format Format_MIN = DataMessage_Envelope_MapIdentification_Format_Format_MIN;
  static constexpr Format Format_MAX = DataMessage_Envelope_MapIdentification_Format_Format_MAX;
  static constexpr int Format_ARRAYSIZE = DataMessage_Envelope_MapIdentification_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Format_descriptor() {
    return DataMessage_Envelope_MapIdentification_Format_descriptor();
  }
  template <typename T>
  static inline const std::string& Format_Name(T value) {
    return DataMessage_Envelope_MapIdentification_Format_Name(value);
  }
  static inline bool Format_Parse(absl::string_view name, Format* value) {
    return DataMessage_Envelope_MapIdentification_Format_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kProviderVersionFieldNumber = 1,
    kCompilerVersionFieldNumber = 2,
    kFormatFieldNumber = 3,
  };
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
  bool has_provider_version() const;
  void clear_provider_version() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& provider_version() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* release_provider_version();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* mutable_provider_version();
  void set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value);
  void unsafe_arena_set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* unsafe_arena_release_provider_version();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& _internal_provider_version() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* _internal_mutable_provider_version();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
  bool has_compiler_version() const;
  void clear_compiler_version() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& compiler_version() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* release_compiler_version();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* mutable_compiler_version();
  void set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value);
  void unsafe_arena_set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* unsafe_arena_release_compiler_version();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& _internal_compiler_version() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* _internal_mutable_compiler_version();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
  void clear_format() ;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format format() const;
  void set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value);

  private:
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format _internal_format() const;
  void _internal_set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* provider_version_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* compiler_version_;
    int format_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope_FieldResolutionOverride final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride) */ {
 public:
  inline DataMessage_Envelope_FieldResolutionOverride() : DataMessage_Envelope_FieldResolutionOverride(nullptr) {}
  ~DataMessage_Envelope_FieldResolutionOverride() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope_FieldResolutionOverride(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope_FieldResolutionOverride(const DataMessage_Envelope_FieldResolutionOverride& from)
      : DataMessage_Envelope_FieldResolutionOverride(nullptr, from) {}
  DataMessage_Envelope_FieldResolutionOverride(DataMessage_Envelope_FieldResolutionOverride&& from) noexcept
    : DataMessage_Envelope_FieldResolutionOverride() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope_FieldResolutionOverride& operator=(const DataMessage_Envelope_FieldResolutionOverride& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope_FieldResolutionOverride& operator=(DataMessage_Envelope_FieldResolutionOverride&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope_FieldResolutionOverride& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope_FieldResolutionOverride* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope_FieldResolutionOverride*>(
               &_DataMessage_Envelope_FieldResolutionOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DataMessage_Envelope_FieldResolutionOverride& a, DataMessage_Envelope_FieldResolutionOverride& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope_FieldResolutionOverride* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope_FieldResolutionOverride* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope_FieldResolutionOverride* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope_FieldResolutionOverride>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope_FieldResolutionOverride& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope_FieldResolutionOverride& from) {
    DataMessage_Envelope_FieldResolutionOverride::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope_FieldResolutionOverride* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride";
  }
  protected:
  explicit DataMessage_Envelope_FieldResolutionOverride(::google::protobuf::Arena* arena);
  DataMessage_Envelope_FieldResolutionOverride(::google::protobuf::Arena* arena, const DataMessage_Envelope_FieldResolutionOverride& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 1,
    kExponentFieldNumber = 2,
  };
  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
  bool has_paths() const;
  void clear_paths() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& paths() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Paths* release_paths();
  ::sensoris::protobuf::messages::data::DataMessage_Paths* mutable_paths();
  void set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value);
  void unsafe_arena_set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value);
  ::sensoris::protobuf::messages::data::DataMessage_Paths* unsafe_arena_release_paths();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& _internal_paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* _internal_mutable_paths();

  public:
  // .google.protobuf.Int64Value exponent = 2;
  bool has_exponent() const;
  void clear_exponent() ;
  const ::google::protobuf::Int64Value& exponent() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_exponent();
  ::google::protobuf::Int64Value* mutable_exponent();
  void set_allocated_exponent(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_exponent(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_exponent();

  private:
  const ::google::protobuf::Int64Value& _internal_exponent() const;
  ::google::protobuf::Int64Value* _internal_mutable_exponent();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::messages::data::DataMessage_Paths* paths_;
    ::google::protobuf::Int64Value* exponent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_Envelope final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.Envelope) */ {
 public:
  inline DataMessage_Envelope() : DataMessage_Envelope(nullptr) {}
  ~DataMessage_Envelope() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_Envelope(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_Envelope(const DataMessage_Envelope& from)
      : DataMessage_Envelope(nullptr, from) {}
  DataMessage_Envelope(DataMessage_Envelope&& from) noexcept
    : DataMessage_Envelope() {
    *this = ::std::move(from);
  }

  inline DataMessage_Envelope& operator=(const DataMessage_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_Envelope& operator=(DataMessage_Envelope&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_Envelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage_Envelope* internal_default_instance() {
    return reinterpret_cast<const DataMessage_Envelope*>(
               &_DataMessage_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DataMessage_Envelope& a, DataMessage_Envelope& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_Envelope* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_Envelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_Envelope* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_Envelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_Envelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_Envelope& from) {
    DataMessage_Envelope::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_Envelope* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.Envelope";
  }
  protected:
  explicit DataMessage_Envelope(::google::protobuf::Arena* arena);
  DataMessage_Envelope(::google::protobuf::Arena* arena, const DataMessage_Envelope& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Ids = DataMessage_Envelope_Ids;
  using FieldResolutionOverride = DataMessage_Envelope_FieldResolutionOverride;
  using VehicleDimensions = DataMessage_Envelope_VehicleDimensions;
  using MapIdentification = DataMessage_Envelope_MapIdentification;

  // accessors -------------------------------------------------------

  enum : int {
    kJobIdsFieldNumber = 2,
    kFieldResolutionOverrideFieldNumber = 3,
    kExtensionFieldNumber = 15,
    kIdsFieldNumber = 1,
    kVehicleDimensionsFieldNumber = 4,
    kMapIdentificationFieldNumber = 5,
  };
  // repeated .sensoris.protobuf.types.job.Ids job_ids = 2;
  int job_ids_size() const;
  private:
  int _internal_job_ids_size() const;

  public:
  void clear_job_ids() ;
  ::sensoris::protobuf::types::job::Ids* mutable_job_ids(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::job::Ids >*
      mutable_job_ids();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>& _internal_job_ids() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>* _internal_mutable_job_ids();
  public:
  const ::sensoris::protobuf::types::job::Ids& job_ids(int index) const;
  ::sensoris::protobuf::types::job::Ids* add_job_ids();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::job::Ids >&
      job_ids() const;
  // repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
  int field_resolution_override_size() const;
  private:
  int _internal_field_resolution_override_size() const;

  public:
  void clear_field_resolution_override() ;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* mutable_field_resolution_override(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >*
      mutable_field_resolution_override();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>& _internal_field_resolution_override() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>* _internal_mutable_field_resolution_override();
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride& field_resolution_override(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* add_field_resolution_override();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride >&
      field_resolution_override() const;
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
  bool has_ids() const;
  void clear_ids() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& ids() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* release_ids();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* mutable_ids();
  void set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* value);
  void unsafe_arena_set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* unsafe_arena_release_ids();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& _internal_ids() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* _internal_mutable_ids();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
  bool has_vehicle_dimensions() const;
  void clear_vehicle_dimensions() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& vehicle_dimensions() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* release_vehicle_dimensions();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* mutable_vehicle_dimensions();
  void set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* value);
  void unsafe_arena_set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* unsafe_arena_release_vehicle_dimensions();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& _internal_vehicle_dimensions() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* _internal_mutable_vehicle_dimensions();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
  bool has_map_identification() const;
  void clear_map_identification() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& map_identification() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* release_map_identification();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* mutable_map_identification();
  void set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* value);
  void unsafe_arena_set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* unsafe_arena_release_map_identification();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& _internal_map_identification() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* _internal_mutable_map_identification();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.Envelope)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::job::Ids > job_ids_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride > field_resolution_override_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* ids_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* vehicle_dimensions_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* map_identification_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class EventGroup_Envelope_Origin final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin) */ {
 public:
  inline EventGroup_Envelope_Origin() : EventGroup_Envelope_Origin(nullptr) {}
  ~EventGroup_Envelope_Origin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventGroup_Envelope_Origin(::google::protobuf::internal::ConstantInitialized);

  inline EventGroup_Envelope_Origin(const EventGroup_Envelope_Origin& from)
      : EventGroup_Envelope_Origin(nullptr, from) {}
  EventGroup_Envelope_Origin(EventGroup_Envelope_Origin&& from) noexcept
    : EventGroup_Envelope_Origin() {
    *this = ::std::move(from);
  }

  inline EventGroup_Envelope_Origin& operator=(const EventGroup_Envelope_Origin& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventGroup_Envelope_Origin& operator=(EventGroup_Envelope_Origin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventGroup_Envelope_Origin& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventGroup_Envelope_Origin* internal_default_instance() {
    return reinterpret_cast<const EventGroup_Envelope_Origin*>(
               &_EventGroup_Envelope_Origin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EventGroup_Envelope_Origin& a, EventGroup_Envelope_Origin& b) {
    a.Swap(&b);
  }
  inline void Swap(EventGroup_Envelope_Origin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventGroup_Envelope_Origin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventGroup_Envelope_Origin* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventGroup_Envelope_Origin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventGroup_Envelope_Origin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventGroup_Envelope_Origin& from) {
    EventGroup_Envelope_Origin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EventGroup_Envelope_Origin* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.EventGroup.Envelope.Origin";
  }
  protected:
  explicit EventGroup_Envelope_Origin(::google::protobuf::Arena* arena);
  EventGroup_Envelope_Origin(::google::protobuf::Arena* arena, const EventGroup_Envelope_Origin& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampFieldNumber = 1,
    kPositionAndAccuracyFieldNumber = 2,
    kOrientationAndAccuracyFieldNumber = 3,
  };
  // .sensoris.protobuf.types.base.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::sensoris::protobuf::types::base::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::base::Timestamp* release_timestamp();
  ::sensoris::protobuf::types::base::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* value);
  ::sensoris::protobuf::types::base::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::sensoris::protobuf::types::base::Timestamp& _internal_timestamp() const;
  ::sensoris::protobuf::types::base::Timestamp* _internal_mutable_timestamp();

  public:
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  bool has_position_and_accuracy() const;
  void clear_position_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& position_and_accuracy() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::spatial::PositionAndAccuracy* release_position_and_accuracy();
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* mutable_position_and_accuracy();
  void set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* value);
  void unsafe_arena_set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* value);
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* unsafe_arena_release_position_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& _internal_position_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* _internal_mutable_position_and_accuracy();

  public:
  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  bool has_orientation_and_accuracy() const;
  void clear_orientation_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& orientation_and_accuracy() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::spatial::RotationAndAccuracy* release_orientation_and_accuracy();
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* mutable_orientation_and_accuracy();
  void set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* value);
  void unsafe_arena_set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* value);
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* unsafe_arena_release_orientation_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& _internal_orientation_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* _internal_mutable_orientation_and_accuracy();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Timestamp* timestamp_;
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* position_and_accuracy_;
    ::sensoris::protobuf::types::spatial::RotationAndAccuracy* orientation_and_accuracy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class EventGroup_Envelope final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup.Envelope) */ {
 public:
  inline EventGroup_Envelope() : EventGroup_Envelope(nullptr) {}
  ~EventGroup_Envelope() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventGroup_Envelope(::google::protobuf::internal::ConstantInitialized);

  inline EventGroup_Envelope(const EventGroup_Envelope& from)
      : EventGroup_Envelope(nullptr, from) {}
  EventGroup_Envelope(EventGroup_Envelope&& from) noexcept
    : EventGroup_Envelope() {
    *this = ::std::move(from);
  }

  inline EventGroup_Envelope& operator=(const EventGroup_Envelope& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventGroup_Envelope& operator=(EventGroup_Envelope&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventGroup_Envelope& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventGroup_Envelope* internal_default_instance() {
    return reinterpret_cast<const EventGroup_Envelope*>(
               &_EventGroup_Envelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EventGroup_Envelope& a, EventGroup_Envelope& b) {
    a.Swap(&b);
  }
  inline void Swap(EventGroup_Envelope* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventGroup_Envelope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventGroup_Envelope* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventGroup_Envelope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventGroup_Envelope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventGroup_Envelope& from) {
    EventGroup_Envelope::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EventGroup_Envelope* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.EventGroup.Envelope";
  }
  protected:
  explicit EventGroup_Envelope(::google::protobuf::Arena* arena);
  EventGroup_Envelope(::google::protobuf::Arena* arena, const EventGroup_Envelope& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Origin = EventGroup_Envelope_Origin;

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionFieldNumber = 15,
    kOriginFieldNumber = 1,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
  bool has_origin() const;
  void clear_origin() ;
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& origin() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* release_origin();
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* mutable_origin();
  void set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* value);
  void unsafe_arena_set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* value);
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* unsafe_arena_release_origin();

  private:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& _internal_origin() const;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* _internal_mutable_origin();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup.Envelope)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* origin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage_EventSource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage.EventSource) */ {
 public:
  inline DataMessage_EventSource() : DataMessage_EventSource(nullptr) {}
  ~DataMessage_EventSource() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage_EventSource(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage_EventSource(const DataMessage_EventSource& from)
      : DataMessage_EventSource(nullptr, from) {}
  DataMessage_EventSource(DataMessage_EventSource&& from) noexcept
    : DataMessage_EventSource() {
    *this = ::std::move(from);
  }

  inline DataMessage_EventSource& operator=(const DataMessage_EventSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage_EventSource& operator=(DataMessage_EventSource&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage_EventSource& default_instance() {
    return *internal_default_instance();
  }
  enum EventReferenceCase {
    kIds = 2,
    kPaths = 3,
    EVENT_REFERENCE_NOT_SET = 0,
  };

  static inline const DataMessage_EventSource* internal_default_instance() {
    return reinterpret_cast<const DataMessage_EventSource*>(
               &_DataMessage_EventSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DataMessage_EventSource& a, DataMessage_EventSource& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage_EventSource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage_EventSource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage_EventSource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage_EventSource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage_EventSource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage_EventSource& from) {
    DataMessage_EventSource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage_EventSource* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage.EventSource";
  }
  protected:
  explicit DataMessage_EventSource(::google::protobuf::Arena* arena);
  DataMessage_EventSource(::google::protobuf::Arena* arena, const DataMessage_EventSource& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using EventEnvelopeIds = DataMessage_EventSource_EventEnvelopeIds;

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionFieldNumber = 15,
    kSourceFieldNumber = 1,
    kIdsFieldNumber = 2,
    kPathsFieldNumber = 3,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.types.source.Source source = 1;
  bool has_source() const;
  void clear_source() ;
  const ::sensoris::protobuf::types::source::Source& source() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::source::Source* release_source();
  ::sensoris::protobuf::types::source::Source* mutable_source();
  void set_allocated_source(::sensoris::protobuf::types::source::Source* value);
  void unsafe_arena_set_allocated_source(::sensoris::protobuf::types::source::Source* value);
  ::sensoris::protobuf::types::source::Source* unsafe_arena_release_source();

  private:
  const ::sensoris::protobuf::types::source::Source& _internal_source() const;
  ::sensoris::protobuf::types::source::Source* _internal_mutable_source();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
  bool has_ids() const;
  private:
  bool _internal_has_ids() const;

  public:
  void clear_ids() ;
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& ids() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* release_ids();
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* mutable_ids();
  void set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* value);
  void unsafe_arena_set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* value);
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* unsafe_arena_release_ids();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& _internal_ids() const;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* _internal_mutable_ids();

  public:
  // .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
  bool has_paths() const;
  private:
  bool _internal_has_paths() const;

  public:
  void clear_paths() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& paths() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Paths* release_paths();
  ::sensoris::protobuf::messages::data::DataMessage_Paths* mutable_paths();
  void set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value);
  void unsafe_arena_set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value);
  ::sensoris::protobuf::messages::data::DataMessage_Paths* unsafe_arena_release_paths();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Paths& _internal_paths() const;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* _internal_mutable_paths();

  public:
  void clear_event_reference();
  EventReferenceCase event_reference_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage.EventSource)
 private:
  class _Internal;
  void set_has_ids();
  void set_has_paths();

  inline bool has_event_reference() const;
  inline void clear_has_event_reference();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::source::Source* source_;
    union EventReferenceUnion {
      constexpr EventReferenceUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* ids_;
      ::sensoris::protobuf::messages::data::DataMessage_Paths* paths_;
    } event_reference_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class EventGroup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.EventGroup) */ {
 public:
  inline EventGroup() : EventGroup(nullptr) {}
  ~EventGroup() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventGroup(::google::protobuf::internal::ConstantInitialized);

  inline EventGroup(const EventGroup& from)
      : EventGroup(nullptr, from) {}
  EventGroup(EventGroup&& from) noexcept
    : EventGroup() {
    *this = ::std::move(from);
  }

  inline EventGroup& operator=(const EventGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventGroup& operator=(EventGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventGroup* internal_default_instance() {
    return reinterpret_cast<const EventGroup*>(
               &_EventGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EventGroup& a, EventGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(EventGroup* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventGroup* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventGroup& from) {
    EventGroup::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EventGroup* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.EventGroup";
  }
  protected:
  explicit EventGroup(::google::protobuf::Arena* arena);
  EventGroup(::google::protobuf::Arena* arena, const EventGroup& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Envelope = EventGroup_Envelope;

  // accessors -------------------------------------------------------

  enum : int {
    kEnvelopeFieldNumber = 1,
    kLocalizationCategoryFieldNumber = 2,
    kObjectDetectionCategoryFieldNumber = 3,
    kWeatherCategoryFieldNumber = 4,
    kDrivingBehaviorCategoryFieldNumber = 5,
    kIntersectionAttributionCategoryFieldNumber = 6,
    kRoadAttributionCategoryFieldNumber = 7,
    kTrafficRegulationCategoryFieldNumber = 8,
    kTrafficEventsCategoryFieldNumber = 9,
    kTrafficManeuverCategoryFieldNumber = 10,
    kBrakeCategoryFieldNumber = 11,
    kPowertrainCategoryFieldNumber = 12,
    kMapCategoryFieldNumber = 13,
    kVehicleDeviceCategoryFieldNumber = 14,
  };
  // .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope& envelope() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::EventGroup_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* value);
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope& _internal_envelope() const;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* _internal_mutable_envelope();

  public:
  // .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
  bool has_localization_category() const;
  void clear_localization_category() ;
  const ::sensoris::protobuf::categories::localization::LocalizationCategory& localization_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::localization::LocalizationCategory* release_localization_category();
  ::sensoris::protobuf::categories::localization::LocalizationCategory* mutable_localization_category();
  void set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* value);
  void unsafe_arena_set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* value);
  ::sensoris::protobuf::categories::localization::LocalizationCategory* unsafe_arena_release_localization_category();

  private:
  const ::sensoris::protobuf::categories::localization::LocalizationCategory& _internal_localization_category() const;
  ::sensoris::protobuf::categories::localization::LocalizationCategory* _internal_mutable_localization_category();

  public:
  // .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
  bool has_object_detection_category() const;
  void clear_object_detection_category() ;
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& object_detection_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* release_object_detection_category();
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* mutable_object_detection_category();
  void set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* value);
  void unsafe_arena_set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* value);
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* unsafe_arena_release_object_detection_category();

  private:
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& _internal_object_detection_category() const;
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* _internal_mutable_object_detection_category();

  public:
  // .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
  bool has_weather_category() const;
  void clear_weather_category() ;
  const ::sensoris::protobuf::categories::weather::WeatherCategory& weather_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::weather::WeatherCategory* release_weather_category();
  ::sensoris::protobuf::categories::weather::WeatherCategory* mutable_weather_category();
  void set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* value);
  void unsafe_arena_set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* value);
  ::sensoris::protobuf::categories::weather::WeatherCategory* unsafe_arena_release_weather_category();

  private:
  const ::sensoris::protobuf::categories::weather::WeatherCategory& _internal_weather_category() const;
  ::sensoris::protobuf::categories::weather::WeatherCategory* _internal_mutable_weather_category();

  public:
  // .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
  bool has_driving_behavior_category() const;
  void clear_driving_behavior_category() ;
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& driving_behavior_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* release_driving_behavior_category();
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* mutable_driving_behavior_category();
  void set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* value);
  void unsafe_arena_set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* value);
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* unsafe_arena_release_driving_behavior_category();

  private:
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& _internal_driving_behavior_category() const;
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* _internal_mutable_driving_behavior_category();

  public:
  // .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
  bool has_intersection_attribution_category() const;
  void clear_intersection_attribution_category() ;
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& intersection_attribution_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* release_intersection_attribution_category();
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* mutable_intersection_attribution_category();
  void set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* value);
  void unsafe_arena_set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* value);
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* unsafe_arena_release_intersection_attribution_category();

  private:
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& _internal_intersection_attribution_category() const;
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* _internal_mutable_intersection_attribution_category();

  public:
  // .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
  bool has_road_attribution_category() const;
  void clear_road_attribution_category() ;
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& road_attribution_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* release_road_attribution_category();
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* mutable_road_attribution_category();
  void set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* value);
  void unsafe_arena_set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* value);
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* unsafe_arena_release_road_attribution_category();

  private:
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& _internal_road_attribution_category() const;
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* _internal_mutable_road_attribution_category();

  public:
  // .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
  bool has_traffic_regulation_category() const;
  void clear_traffic_regulation_category() ;
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& traffic_regulation_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* release_traffic_regulation_category();
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* mutable_traffic_regulation_category();
  void set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* value);
  void unsafe_arena_set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* value);
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* unsafe_arena_release_traffic_regulation_category();

  private:
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& _internal_traffic_regulation_category() const;
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* _internal_mutable_traffic_regulation_category();

  public:
  // .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
  bool has_traffic_events_category() const;
  void clear_traffic_events_category() ;
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& traffic_events_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* release_traffic_events_category();
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* mutable_traffic_events_category();
  void set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* value);
  void unsafe_arena_set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* value);
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* unsafe_arena_release_traffic_events_category();

  private:
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& _internal_traffic_events_category() const;
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* _internal_mutable_traffic_events_category();

  public:
  // .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
  bool has_traffic_maneuver_category() const;
  void clear_traffic_maneuver_category() ;
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& traffic_maneuver_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* release_traffic_maneuver_category();
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* mutable_traffic_maneuver_category();
  void set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* value);
  void unsafe_arena_set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* value);
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* unsafe_arena_release_traffic_maneuver_category();

  private:
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& _internal_traffic_maneuver_category() const;
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* _internal_mutable_traffic_maneuver_category();

  public:
  // .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
  bool has_brake_category() const;
  void clear_brake_category() ;
  const ::sensoris::protobuf::categories::brake::BrakeCategory& brake_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::brake::BrakeCategory* release_brake_category();
  ::sensoris::protobuf::categories::brake::BrakeCategory* mutable_brake_category();
  void set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* value);
  void unsafe_arena_set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* value);
  ::sensoris::protobuf::categories::brake::BrakeCategory* unsafe_arena_release_brake_category();

  private:
  const ::sensoris::protobuf::categories::brake::BrakeCategory& _internal_brake_category() const;
  ::sensoris::protobuf::categories::brake::BrakeCategory* _internal_mutable_brake_category();

  public:
  // .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
  bool has_powertrain_category() const;
  void clear_powertrain_category() ;
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& powertrain_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::powertrain::PowertrainCategory* release_powertrain_category();
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* mutable_powertrain_category();
  void set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* value);
  void unsafe_arena_set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* value);
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* unsafe_arena_release_powertrain_category();

  private:
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& _internal_powertrain_category() const;
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* _internal_mutable_powertrain_category();

  public:
  // .sensoris.protobuf.categories.map.MapCategory map_category = 13;
  bool has_map_category() const;
  void clear_map_category() ;
  const ::sensoris::protobuf::categories::map::MapCategory& map_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::map::MapCategory* release_map_category();
  ::sensoris::protobuf::categories::map::MapCategory* mutable_map_category();
  void set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* value);
  void unsafe_arena_set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* value);
  ::sensoris::protobuf::categories::map::MapCategory* unsafe_arena_release_map_category();

  private:
  const ::sensoris::protobuf::categories::map::MapCategory& _internal_map_category() const;
  ::sensoris::protobuf::categories::map::MapCategory* _internal_mutable_map_category();

  public:
  // .sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory vehicle_device_category = 14;
  bool has_vehicle_device_category() const;
  void clear_vehicle_device_category() ;
  const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory& vehicle_device_category() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* release_vehicle_device_category();
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* mutable_vehicle_device_category();
  void set_allocated_vehicle_device_category(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* value);
  void unsafe_arena_set_allocated_vehicle_device_category(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* value);
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* unsafe_arena_release_vehicle_device_category();

  private:
  const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory& _internal_vehicle_device_category() const;
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* _internal_mutable_vehicle_device_category();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.EventGroup)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 14,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::messages::data::EventGroup_Envelope* envelope_;
    ::sensoris::protobuf::categories::localization::LocalizationCategory* localization_category_;
    ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* object_detection_category_;
    ::sensoris::protobuf::categories::weather::WeatherCategory* weather_category_;
    ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* driving_behavior_category_;
    ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* intersection_attribution_category_;
    ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* road_attribution_category_;
    ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* traffic_regulation_category_;
    ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* traffic_events_category_;
    ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* traffic_maneuver_category_;
    ::sensoris::protobuf::categories::brake::BrakeCategory* brake_category_;
    ::sensoris::protobuf::categories::powertrain::PowertrainCategory* powertrain_category_;
    ::sensoris::protobuf::categories::map::MapCategory* map_category_;
    ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* vehicle_device_category_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessage) */ {
 public:
  inline DataMessage() : DataMessage(nullptr) {}
  ~DataMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessage(::google::protobuf::internal::ConstantInitialized);

  inline DataMessage(const DataMessage& from)
      : DataMessage(nullptr, from) {}
  DataMessage(DataMessage&& from) noexcept
    : DataMessage() {
    *this = ::std::move(from);
  }

  inline DataMessage& operator=(const DataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessage& operator=(DataMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessage* internal_default_instance() {
    return reinterpret_cast<const DataMessage*>(
               &_DataMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DataMessage& a, DataMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessage& from) {
    DataMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessage";
  }
  protected:
  explicit DataMessage(::google::protobuf::Arena* arena);
  DataMessage(::google::protobuf::Arena* arena, const DataMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AbsolutePaths = DataMessage_AbsolutePaths;
  using Paths = DataMessage_Paths;
  using Envelope = DataMessage_Envelope;
  using EventRelation = DataMessage_EventRelation;
  using EventSource = DataMessage_EventSource;

  // accessors -------------------------------------------------------

  enum : int {
    kEventGroupFieldNumber = 2,
    kEventRelationFieldNumber = 3,
    kEventSourceFieldNumber = 4,
    kEnvelopeFieldNumber = 1,
  };
  // repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
  int event_group_size() const;
  private:
  int _internal_event_group_size() const;

  public:
  void clear_event_group() ;
  ::sensoris::protobuf::messages::data::EventGroup* mutable_event_group(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >*
      mutable_event_group();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>& _internal_event_group() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>* _internal_mutable_event_group();
  public:
  const ::sensoris::protobuf::messages::data::EventGroup& event_group(int index) const;
  ::sensoris::protobuf::messages::data::EventGroup* add_event_group();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup >&
      event_group() const;
  // repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
  int event_relation_size() const;
  private:
  int _internal_event_relation_size() const;

  public:
  void clear_event_relation() ;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation* mutable_event_relation(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >*
      mutable_event_relation();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>& _internal_event_relation() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>* _internal_mutable_event_relation();
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_EventRelation& event_relation(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation* add_event_relation();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation >&
      event_relation() const;
  // repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
  int event_source_size() const;
  private:
  int _internal_event_source_size() const;

  public:
  void clear_event_source() ;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource* mutable_event_source(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >*
      mutable_event_source();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>& _internal_event_source() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>* _internal_mutable_event_source();
  public:
  const ::sensoris::protobuf::messages::data::DataMessage_EventSource& event_source(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage_EventSource* add_event_source();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource >&
      event_source() const;
  // .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope& envelope() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessage_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* value);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope& _internal_envelope() const;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* _internal_mutable_envelope();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::EventGroup > event_group_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventRelation > event_relation_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage_EventSource > event_source_;
    ::sensoris::protobuf::messages::data::DataMessage_Envelope* envelope_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};// -------------------------------------------------------------------

class DataMessages final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.messages.data.DataMessages) */ {
 public:
  inline DataMessages() : DataMessages(nullptr) {}
  ~DataMessages() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DataMessages(::google::protobuf::internal::ConstantInitialized);

  inline DataMessages(const DataMessages& from)
      : DataMessages(nullptr, from) {}
  DataMessages(DataMessages&& from) noexcept
    : DataMessages() {
    *this = ::std::move(from);
  }

  inline DataMessages& operator=(const DataMessages& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMessages& operator=(DataMessages&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMessages& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMessages* internal_default_instance() {
    return reinterpret_cast<const DataMessages*>(
               &_DataMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DataMessages& a, DataMessages& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMessages* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMessages* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMessages* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMessages>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataMessages& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DataMessages& from) {
    DataMessages::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataMessages* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.messages.data.DataMessages";
  }
  protected:
  explicit DataMessages(::google::protobuf::Arena* arena);
  DataMessages(::google::protobuf::Arena* arena, const DataMessages& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Envelope = DataMessages_Envelope;

  // accessors -------------------------------------------------------

  enum : int {
    kDataMessageFieldNumber = 2,
    kEnvelopeFieldNumber = 1,
  };
  // repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
  int data_message_size() const;
  private:
  int _internal_data_message_size() const;

  public:
  void clear_data_message() ;
  ::sensoris::protobuf::messages::data::DataMessage* mutable_data_message(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >*
      mutable_data_message();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>& _internal_data_message() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>* _internal_mutable_data_message();
  public:
  const ::sensoris::protobuf::messages::data::DataMessage& data_message(int index) const;
  ::sensoris::protobuf::messages::data::DataMessage* add_data_message();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage >&
      data_message() const;
  // .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope& envelope() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::messages::data::DataMessages_Envelope* release_envelope();
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* value);
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope& _internal_envelope() const;
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* _internal_mutable_envelope();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.messages.data.DataMessages)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::messages::data::DataMessage > data_message_;
    ::sensoris::protobuf::messages::data::DataMessages_Envelope* envelope_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fmessages_2fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EventGroup_Envelope_Origin

// .sensoris.protobuf.types.base.Timestamp timestamp = 1;
inline bool EventGroup_Envelope_Origin::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventGroup_Envelope_Origin::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::base::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp&>(::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Timestamp& EventGroup_Envelope_Origin::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  return _internal_timestamp();
}
inline void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::unsafe_arena_release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::_internal_mutable_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::sensoris::protobuf::types::base::Timestamp* EventGroup_Envelope_Origin::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::base::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
  return _msg;
}
inline void EventGroup_Envelope_Origin::set_allocated_timestamp(::sensoris::protobuf::types::base::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.timestamp)
}

// .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
inline bool EventGroup_Envelope_Origin::has_position_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& EventGroup_Envelope_Origin::_internal_position_and_accuracy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy* p = _impl_.position_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::PositionAndAccuracy&>(::sensoris::protobuf::types::spatial::_PositionAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& EventGroup_Envelope_Origin::position_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  return _internal_position_and_accuracy();
}
inline void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_and_accuracy_);
  }
  _impl_.position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::release_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* released = _impl_.position_and_accuracy_;
  _impl_.position_and_accuracy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::unsafe_arena_release_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* temp = _impl_.position_and_accuracy_;
  _impl_.position_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::_internal_mutable_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.position_and_accuracy_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(GetArena());
    _impl_.position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(p);
  }
  return _impl_.position_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* EventGroup_Envelope_Origin::mutable_position_and_accuracy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* _msg = _internal_mutable_position_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
  return _msg;
}
inline void EventGroup_Envelope_Origin::set_allocated_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.position_and_accuracy)
}

// .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
inline bool EventGroup_Envelope_Origin::has_orientation_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.orientation_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& EventGroup_Envelope_Origin::_internal_orientation_and_accuracy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::spatial::RotationAndAccuracy* p = _impl_.orientation_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::RotationAndAccuracy&>(::sensoris::protobuf::types::spatial::_RotationAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& EventGroup_Envelope_Origin::orientation_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  return _internal_orientation_and_accuracy();
}
inline void EventGroup_Envelope_Origin::unsafe_arena_set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_and_accuracy_);
  }
  _impl_.orientation_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RotationAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::release_orientation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* released = _impl_.orientation_and_accuracy_;
  _impl_.orientation_and_accuracy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::unsafe_arena_release_orientation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* temp = _impl_.orientation_and_accuracy_;
  _impl_.orientation_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::_internal_mutable_orientation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.orientation_and_accuracy_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::spatial::RotationAndAccuracy>(GetArena());
    _impl_.orientation_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RotationAndAccuracy*>(p);
  }
  return _impl_.orientation_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::RotationAndAccuracy* EventGroup_Envelope_Origin::mutable_orientation_and_accuracy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::spatial::RotationAndAccuracy* _msg = _internal_mutable_orientation_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
  return _msg;
}
inline void EventGroup_Envelope_Origin::set_allocated_orientation_and_accuracy(::sensoris::protobuf::types::spatial::RotationAndAccuracy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.orientation_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RotationAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.Origin.orientation_and_accuracy)
}

// -------------------------------------------------------------------

// EventGroup_Envelope

// .sensoris.protobuf.messages.data.EventGroup.Envelope.Origin origin = 1;
inline bool EventGroup_Envelope::has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline void EventGroup_Envelope::clear_origin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& EventGroup_Envelope::_internal_origin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin&>(::sensoris::protobuf::messages::data::_EventGroup_Envelope_Origin_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin& EventGroup_Envelope::origin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  return _internal_origin();
}
inline void EventGroup_Envelope::unsafe_arena_set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::release_origin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* released = _impl_.origin_;
  _impl_.origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::unsafe_arena_release_origin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::_internal_mutable_origin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin>(GetArena());
    _impl_.origin_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(p);
  }
  return _impl_.origin_;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* EventGroup_Envelope::mutable_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
  return _msg;
}
inline void EventGroup_Envelope::set_allocated_origin(::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(_impl_.origin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.origin_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope_Origin*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.Envelope.origin)
}

// repeated .google.protobuf.Any extension = 15;
inline int EventGroup_Envelope::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int EventGroup_Envelope::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* EventGroup_Envelope::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* EventGroup_Envelope::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& EventGroup_Envelope::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* EventGroup_Envelope::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& EventGroup_Envelope::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.EventGroup.Envelope.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
EventGroup_Envelope::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
EventGroup_Envelope::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// EventGroup

// .sensoris.protobuf.messages.data.EventGroup.Envelope envelope = 1;
inline bool EventGroup::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline void EventGroup::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope& EventGroup::_internal_envelope() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::EventGroup_Envelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::EventGroup_Envelope&>(::sensoris::protobuf::messages::data::_EventGroup_Envelope_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::EventGroup_Envelope& EventGroup::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.envelope)
  return _internal_envelope();
}
inline void EventGroup::unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.envelope)
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::unsafe_arena_release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::_internal_mutable_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.envelope_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::EventGroup_Envelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::messages::data::EventGroup_Envelope* EventGroup::mutable_envelope() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::EventGroup_Envelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.envelope)
  return _msg;
}
inline void EventGroup::set_allocated_envelope(::sensoris::protobuf::messages::data::EventGroup_Envelope* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::EventGroup_Envelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.envelope)
}

// .sensoris.protobuf.categories.localization.LocalizationCategory localization_category = 2;
inline bool EventGroup::has_localization_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.localization_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::localization::LocalizationCategory& EventGroup::_internal_localization_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::localization::LocalizationCategory* p = _impl_.localization_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::localization::LocalizationCategory&>(::sensoris::protobuf::categories::localization::_LocalizationCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::localization::LocalizationCategory& EventGroup::localization_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.localization_category)
  return _internal_localization_category();
}
inline void EventGroup::unsafe_arena_set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.localization_category_);
  }
  _impl_.localization_category_ = reinterpret_cast<::sensoris::protobuf::categories::localization::LocalizationCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.localization_category)
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::release_localization_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::categories::localization::LocalizationCategory* released = _impl_.localization_category_;
  _impl_.localization_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::unsafe_arena_release_localization_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.localization_category)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::categories::localization::LocalizationCategory* temp = _impl_.localization_category_;
  _impl_.localization_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::_internal_mutable_localization_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.localization_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::localization::LocalizationCategory>(GetArena());
    _impl_.localization_category_ = reinterpret_cast<::sensoris::protobuf::categories::localization::LocalizationCategory*>(p);
  }
  return _impl_.localization_category_;
}
inline ::sensoris::protobuf::categories::localization::LocalizationCategory* EventGroup::mutable_localization_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::localization::LocalizationCategory* _msg = _internal_mutable_localization_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.localization_category)
  return _msg;
}
inline void EventGroup::set_allocated_localization_category(::sensoris::protobuf::categories::localization::LocalizationCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.localization_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.localization_category_ = reinterpret_cast<::sensoris::protobuf::categories::localization::LocalizationCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.localization_category)
}

// .sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory object_detection_category = 3;
inline bool EventGroup::has_object_detection_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_detection_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& EventGroup::_internal_object_detection_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* p = _impl_.object_detection_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory&>(::sensoris::protobuf::categories::objectdetection::_ObjectDetectionCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& EventGroup::object_detection_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  return _internal_object_detection_category();
}
inline void EventGroup::unsafe_arena_set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_detection_category_);
  }
  _impl_.object_detection_category_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::release_object_detection_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* released = _impl_.object_detection_category_;
  _impl_.object_detection_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::unsafe_arena_release_object_detection_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.object_detection_category)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* temp = _impl_.object_detection_category_;
  _impl_.object_detection_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::_internal_mutable_object_detection_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.object_detection_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory>(GetArena());
    _impl_.object_detection_category_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory*>(p);
  }
  return _impl_.object_detection_category_;
}
inline ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* EventGroup::mutable_object_detection_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* _msg = _internal_mutable_object_detection_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
  return _msg;
}
inline void EventGroup::set_allocated_object_detection_category(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_detection_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.object_detection_category_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.object_detection_category)
}

// .sensoris.protobuf.categories.weather.WeatherCategory weather_category = 4;
inline bool EventGroup::has_weather_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.weather_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::weather::WeatherCategory& EventGroup::_internal_weather_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::weather::WeatherCategory* p = _impl_.weather_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::weather::WeatherCategory&>(::sensoris::protobuf::categories::weather::_WeatherCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::weather::WeatherCategory& EventGroup::weather_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.weather_category)
  return _internal_weather_category();
}
inline void EventGroup::unsafe_arena_set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.weather_category_);
  }
  _impl_.weather_category_ = reinterpret_cast<::sensoris::protobuf::categories::weather::WeatherCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.weather_category)
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::release_weather_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::categories::weather::WeatherCategory* released = _impl_.weather_category_;
  _impl_.weather_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::unsafe_arena_release_weather_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.weather_category)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::categories::weather::WeatherCategory* temp = _impl_.weather_category_;
  _impl_.weather_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::_internal_mutable_weather_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.weather_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::weather::WeatherCategory>(GetArena());
    _impl_.weather_category_ = reinterpret_cast<::sensoris::protobuf::categories::weather::WeatherCategory*>(p);
  }
  return _impl_.weather_category_;
}
inline ::sensoris::protobuf::categories::weather::WeatherCategory* EventGroup::mutable_weather_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::weather::WeatherCategory* _msg = _internal_mutable_weather_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.weather_category)
  return _msg;
}
inline void EventGroup::set_allocated_weather_category(::sensoris::protobuf::categories::weather::WeatherCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.weather_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.weather_category_ = reinterpret_cast<::sensoris::protobuf::categories::weather::WeatherCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.weather_category)
}

// .sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory driving_behavior_category = 5;
inline bool EventGroup::has_driving_behavior_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.driving_behavior_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& EventGroup::_internal_driving_behavior_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* p = _impl_.driving_behavior_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory&>(::sensoris::protobuf::categories::drivingbehavior::_DrivingBehaviorCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& EventGroup::driving_behavior_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  return _internal_driving_behavior_category();
}
inline void EventGroup::unsafe_arena_set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.driving_behavior_category_);
  }
  _impl_.driving_behavior_category_ = reinterpret_cast<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::release_driving_behavior_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* released = _impl_.driving_behavior_category_;
  _impl_.driving_behavior_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::unsafe_arena_release_driving_behavior_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* temp = _impl_.driving_behavior_category_;
  _impl_.driving_behavior_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::_internal_mutable_driving_behavior_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.driving_behavior_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory>(GetArena());
    _impl_.driving_behavior_category_ = reinterpret_cast<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory*>(p);
  }
  return _impl_.driving_behavior_category_;
}
inline ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* EventGroup::mutable_driving_behavior_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* _msg = _internal_mutable_driving_behavior_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
  return _msg;
}
inline void EventGroup::set_allocated_driving_behavior_category(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.driving_behavior_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.driving_behavior_category_ = reinterpret_cast<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.driving_behavior_category)
}

// .sensoris.protobuf.categories.intersectionattribution.IntersectionAttributionCategory intersection_attribution_category = 6;
inline bool EventGroup::has_intersection_attribution_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.intersection_attribution_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& EventGroup::_internal_intersection_attribution_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* p = _impl_.intersection_attribution_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory&>(::sensoris::protobuf::categories::intersectionattribution::_IntersectionAttributionCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory& EventGroup::intersection_attribution_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  return _internal_intersection_attribution_category();
}
inline void EventGroup::unsafe_arena_set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intersection_attribution_category_);
  }
  _impl_.intersection_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::release_intersection_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* released = _impl_.intersection_attribution_category_;
  _impl_.intersection_attribution_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::unsafe_arena_release_intersection_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* temp = _impl_.intersection_attribution_category_;
  _impl_.intersection_attribution_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::_internal_mutable_intersection_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.intersection_attribution_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory>(GetArena());
    _impl_.intersection_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory*>(p);
  }
  return _impl_.intersection_attribution_category_;
}
inline ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* EventGroup::mutable_intersection_attribution_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* _msg = _internal_mutable_intersection_attribution_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
  return _msg;
}
inline void EventGroup::set_allocated_intersection_attribution_category(::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intersection_attribution_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.intersection_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::intersectionattribution::IntersectionAttributionCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.intersection_attribution_category)
}

// .sensoris.protobuf.categories.roadattribution.RoadAttributionCategory road_attribution_category = 7;
inline bool EventGroup::has_road_attribution_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.road_attribution_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& EventGroup::_internal_road_attribution_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* p = _impl_.road_attribution_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory&>(::sensoris::protobuf::categories::roadattribution::_RoadAttributionCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory& EventGroup::road_attribution_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  return _internal_road_attribution_category();
}
inline void EventGroup::unsafe_arena_set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.road_attribution_category_);
  }
  _impl_.road_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::release_road_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* released = _impl_.road_attribution_category_;
  _impl_.road_attribution_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::unsafe_arena_release_road_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* temp = _impl_.road_attribution_category_;
  _impl_.road_attribution_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::_internal_mutable_road_attribution_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  if (_impl_.road_attribution_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory>(GetArena());
    _impl_.road_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory*>(p);
  }
  return _impl_.road_attribution_category_;
}
inline ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* EventGroup::mutable_road_attribution_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* _msg = _internal_mutable_road_attribution_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
  return _msg;
}
inline void EventGroup::set_allocated_road_attribution_category(::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.road_attribution_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.road_attribution_category_ = reinterpret_cast<::sensoris::protobuf::categories::roadattribution::RoadAttributionCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.road_attribution_category)
}

// .sensoris.protobuf.categories.trafficregulation.TrafficRegulationCategory traffic_regulation_category = 8;
inline bool EventGroup::has_traffic_regulation_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.traffic_regulation_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& EventGroup::_internal_traffic_regulation_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* p = _impl_.traffic_regulation_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory&>(::sensoris::protobuf::categories::trafficregulation::_TrafficRegulationCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory& EventGroup::traffic_regulation_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  return _internal_traffic_regulation_category();
}
inline void EventGroup::unsafe_arena_set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_regulation_category_);
  }
  _impl_.traffic_regulation_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::release_traffic_regulation_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* released = _impl_.traffic_regulation_category_;
  _impl_.traffic_regulation_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::unsafe_arena_release_traffic_regulation_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* temp = _impl_.traffic_regulation_category_;
  _impl_.traffic_regulation_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::_internal_mutable_traffic_regulation_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000080u;
  if (_impl_.traffic_regulation_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory>(GetArena());
    _impl_.traffic_regulation_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory*>(p);
  }
  return _impl_.traffic_regulation_category_;
}
inline ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* EventGroup::mutable_traffic_regulation_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* _msg = _internal_mutable_traffic_regulation_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
  return _msg;
}
inline void EventGroup::set_allocated_traffic_regulation_category(::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_regulation_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.traffic_regulation_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficregulation::TrafficRegulationCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_regulation_category)
}

// .sensoris.protobuf.categories.trafficevents.TrafficEventsCategory traffic_events_category = 9;
inline bool EventGroup::has_traffic_events_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.traffic_events_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& EventGroup::_internal_traffic_events_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* p = _impl_.traffic_events_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory&>(::sensoris::protobuf::categories::trafficevents::_TrafficEventsCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory& EventGroup::traffic_events_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  return _internal_traffic_events_category();
}
inline void EventGroup::unsafe_arena_set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_events_category_);
  }
  _impl_.traffic_events_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::release_traffic_events_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* released = _impl_.traffic_events_category_;
  _impl_.traffic_events_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::unsafe_arena_release_traffic_events_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* temp = _impl_.traffic_events_category_;
  _impl_.traffic_events_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::_internal_mutable_traffic_events_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000100u;
  if (_impl_.traffic_events_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory>(GetArena());
    _impl_.traffic_events_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory*>(p);
  }
  return _impl_.traffic_events_category_;
}
inline ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* EventGroup::mutable_traffic_events_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* _msg = _internal_mutable_traffic_events_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
  return _msg;
}
inline void EventGroup::set_allocated_traffic_events_category(::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_events_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.traffic_events_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficevents::TrafficEventsCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_events_category)
}

// .sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory traffic_maneuver_category = 10;
inline bool EventGroup::has_traffic_maneuver_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.traffic_maneuver_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& EventGroup::_internal_traffic_maneuver_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* p = _impl_.traffic_maneuver_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory&>(::sensoris::protobuf::categories::trafficmaneuver::_TrafficManeuverCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& EventGroup::traffic_maneuver_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  return _internal_traffic_maneuver_category();
}
inline void EventGroup::unsafe_arena_set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_maneuver_category_);
  }
  _impl_.traffic_maneuver_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::release_traffic_maneuver_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* released = _impl_.traffic_maneuver_category_;
  _impl_.traffic_maneuver_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::unsafe_arena_release_traffic_maneuver_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* temp = _impl_.traffic_maneuver_category_;
  _impl_.traffic_maneuver_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::_internal_mutable_traffic_maneuver_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000200u;
  if (_impl_.traffic_maneuver_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory>(GetArena());
    _impl_.traffic_maneuver_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory*>(p);
  }
  return _impl_.traffic_maneuver_category_;
}
inline ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* EventGroup::mutable_traffic_maneuver_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* _msg = _internal_mutable_traffic_maneuver_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
  return _msg;
}
inline void EventGroup::set_allocated_traffic_maneuver_category(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.traffic_maneuver_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.traffic_maneuver_category_ = reinterpret_cast<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.traffic_maneuver_category)
}

// .sensoris.protobuf.categories.brake.BrakeCategory brake_category = 11;
inline bool EventGroup::has_brake_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.brake_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::brake::BrakeCategory& EventGroup::_internal_brake_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::brake::BrakeCategory* p = _impl_.brake_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::brake::BrakeCategory&>(::sensoris::protobuf::categories::brake::_BrakeCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::brake::BrakeCategory& EventGroup::brake_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.brake_category)
  return _internal_brake_category();
}
inline void EventGroup::unsafe_arena_set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.brake_category_);
  }
  _impl_.brake_category_ = reinterpret_cast<::sensoris::protobuf::categories::brake::BrakeCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.brake_category)
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::release_brake_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::sensoris::protobuf::categories::brake::BrakeCategory* released = _impl_.brake_category_;
  _impl_.brake_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::unsafe_arena_release_brake_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.brake_category)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::sensoris::protobuf::categories::brake::BrakeCategory* temp = _impl_.brake_category_;
  _impl_.brake_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::_internal_mutable_brake_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000400u;
  if (_impl_.brake_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::brake::BrakeCategory>(GetArena());
    _impl_.brake_category_ = reinterpret_cast<::sensoris::protobuf::categories::brake::BrakeCategory*>(p);
  }
  return _impl_.brake_category_;
}
inline ::sensoris::protobuf::categories::brake::BrakeCategory* EventGroup::mutable_brake_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::brake::BrakeCategory* _msg = _internal_mutable_brake_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.brake_category)
  return _msg;
}
inline void EventGroup::set_allocated_brake_category(::sensoris::protobuf::categories::brake::BrakeCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.brake_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.brake_category_ = reinterpret_cast<::sensoris::protobuf::categories::brake::BrakeCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.brake_category)
}

// .sensoris.protobuf.categories.powertrain.PowertrainCategory powertrain_category = 12;
inline bool EventGroup::has_powertrain_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.powertrain_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& EventGroup::_internal_powertrain_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::powertrain::PowertrainCategory* p = _impl_.powertrain_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::powertrain::PowertrainCategory&>(::sensoris::protobuf::categories::powertrain::_PowertrainCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& EventGroup::powertrain_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  return _internal_powertrain_category();
}
inline void EventGroup::unsafe_arena_set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.powertrain_category_);
  }
  _impl_.powertrain_category_ = reinterpret_cast<::sensoris::protobuf::categories::powertrain::PowertrainCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::release_powertrain_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* released = _impl_.powertrain_category_;
  _impl_.powertrain_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::unsafe_arena_release_powertrain_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.powertrain_category)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* temp = _impl_.powertrain_category_;
  _impl_.powertrain_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::_internal_mutable_powertrain_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000800u;
  if (_impl_.powertrain_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::powertrain::PowertrainCategory>(GetArena());
    _impl_.powertrain_category_ = reinterpret_cast<::sensoris::protobuf::categories::powertrain::PowertrainCategory*>(p);
  }
  return _impl_.powertrain_category_;
}
inline ::sensoris::protobuf::categories::powertrain::PowertrainCategory* EventGroup::mutable_powertrain_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::powertrain::PowertrainCategory* _msg = _internal_mutable_powertrain_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
  return _msg;
}
inline void EventGroup::set_allocated_powertrain_category(::sensoris::protobuf::categories::powertrain::PowertrainCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.powertrain_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.powertrain_category_ = reinterpret_cast<::sensoris::protobuf::categories::powertrain::PowertrainCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.powertrain_category)
}

// .sensoris.protobuf.categories.map.MapCategory map_category = 13;
inline bool EventGroup::has_map_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::map::MapCategory& EventGroup::_internal_map_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::map::MapCategory* p = _impl_.map_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::map::MapCategory&>(::sensoris::protobuf::categories::map::_MapCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::map::MapCategory& EventGroup::map_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.map_category)
  return _internal_map_category();
}
inline void EventGroup::unsafe_arena_set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_category_);
  }
  _impl_.map_category_ = reinterpret_cast<::sensoris::protobuf::categories::map::MapCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.map_category)
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::release_map_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::sensoris::protobuf::categories::map::MapCategory* released = _impl_.map_category_;
  _impl_.map_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::unsafe_arena_release_map_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.map_category)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::sensoris::protobuf::categories::map::MapCategory* temp = _impl_.map_category_;
  _impl_.map_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::_internal_mutable_map_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00001000u;
  if (_impl_.map_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::map::MapCategory>(GetArena());
    _impl_.map_category_ = reinterpret_cast<::sensoris::protobuf::categories::map::MapCategory*>(p);
  }
  return _impl_.map_category_;
}
inline ::sensoris::protobuf::categories::map::MapCategory* EventGroup::mutable_map_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::map::MapCategory* _msg = _internal_mutable_map_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.map_category)
  return _msg;
}
inline void EventGroup::set_allocated_map_category(::sensoris::protobuf::categories::map::MapCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.map_category_ = reinterpret_cast<::sensoris::protobuf::categories::map::MapCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.map_category)
}

// .sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory vehicle_device_category = 14;
inline bool EventGroup::has_vehicle_device_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vehicle_device_category_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory& EventGroup::_internal_vehicle_device_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* p = _impl_.vehicle_device_category_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory&>(::sensoris::protobuf::categories::vehicledevice::_VehicleDeviceCategory_default_instance_);
}
inline const ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory& EventGroup::vehicle_device_category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.EventGroup.vehicle_device_category)
  return _internal_vehicle_device_category();
}
inline void EventGroup::unsafe_arena_set_allocated_vehicle_device_category(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_device_category_);
  }
  _impl_.vehicle_device_category_ = reinterpret_cast<::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.EventGroup.vehicle_device_category)
}
inline ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* EventGroup::release_vehicle_device_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* released = _impl_.vehicle_device_category_;
  _impl_.vehicle_device_category_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* EventGroup::unsafe_arena_release_vehicle_device_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.EventGroup.vehicle_device_category)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* temp = _impl_.vehicle_device_category_;
  _impl_.vehicle_device_category_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* EventGroup::_internal_mutable_vehicle_device_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00002000u;
  if (_impl_.vehicle_device_category_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory>(GetArena());
    _impl_.vehicle_device_category_ = reinterpret_cast<::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory*>(p);
  }
  return _impl_.vehicle_device_category_;
}
inline ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* EventGroup::mutable_vehicle_device_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* _msg = _internal_mutable_vehicle_device_category();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.EventGroup.vehicle_device_category)
  return _msg;
}
inline void EventGroup::set_allocated_vehicle_device_category(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_device_category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.vehicle_device_category_ = reinterpret_cast<::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.EventGroup.vehicle_device_category)
}

// -------------------------------------------------------------------

// DataMessage_AbsolutePaths_Path

// repeated int64 field_number = 1;
inline int DataMessage_AbsolutePaths_Path::_internal_field_number_size() const {
  return _internal_field_number().size();
}
inline int DataMessage_AbsolutePaths_Path::field_number_size() const {
  return _internal_field_number_size();
}
inline void DataMessage_AbsolutePaths_Path::clear_field_number() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.field_number_.Clear();
}
inline ::int64_t DataMessage_AbsolutePaths_Path::field_number(int index) const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  return _internal_field_number().Get(index);
}
inline void DataMessage_AbsolutePaths_Path::set_field_number(int index, ::int64_t value) {
  _internal_mutable_field_number()->Set(index, value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
}
inline void DataMessage_AbsolutePaths_Path::add_field_number(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_field_number()->Add(value);
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& DataMessage_AbsolutePaths_Path::field_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  return _internal_field_number();
}
inline ::google::protobuf::RepeatedField<::int64_t>* DataMessage_AbsolutePaths_Path::mutable_field_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path.field_number)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_field_number();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& DataMessage_AbsolutePaths_Path::_internal_field_number()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.field_number_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* DataMessage_AbsolutePaths_Path::_internal_mutable_field_number() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.field_number_;
}

// -------------------------------------------------------------------

// DataMessage_AbsolutePaths

// repeated .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.Path path = 1;
inline int DataMessage_AbsolutePaths::_internal_path_size() const {
  return _internal_path().size();
}
inline int DataMessage_AbsolutePaths::path_size() const {
  return _internal_path_size();
}
inline void DataMessage_AbsolutePaths::clear_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* DataMessage_AbsolutePaths::mutable_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return _internal_mutable_path()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>* DataMessage_AbsolutePaths::mutable_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_path();
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path& DataMessage_AbsolutePaths::path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return _internal_path().Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* DataMessage_AbsolutePaths::add_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path* _add = _internal_mutable_path()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>& DataMessage_AbsolutePaths::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.AbsolutePaths.path)
  return _internal_path();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>&
DataMessage_AbsolutePaths::_internal_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.path_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths_Path>*
DataMessage_AbsolutePaths::_internal_mutable_path() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.path_;
}

// -------------------------------------------------------------------

// DataMessage_Paths

// .sensoris.protobuf.messages.data.DataMessage.AbsolutePaths absolute_paths = 1;
inline bool DataMessage_Paths::has_absolute_paths() const {
  return type_case() == kAbsolutePaths;
}
inline bool DataMessage_Paths::_internal_has_absolute_paths() const {
  return type_case() == kAbsolutePaths;
}
inline void DataMessage_Paths::set_has_absolute_paths() {
  _impl_._oneof_case_[0] = kAbsolutePaths;
}
inline void DataMessage_Paths::clear_absolute_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kAbsolutePaths) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.absolute_paths_;
    }
    clear_has_type();
  }
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::release_absolute_paths() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  if (type_case() == kAbsolutePaths) {
    clear_has_type();
    auto* temp = _impl_.type_.absolute_paths_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.absolute_paths_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& DataMessage_Paths::_internal_absolute_paths() const {
  return type_case() == kAbsolutePaths ? *_impl_.type_.absolute_paths_ : reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths&>(::sensoris::protobuf::messages::data::_DataMessage_AbsolutePaths_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths& DataMessage_Paths::absolute_paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  return _internal_absolute_paths();
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::unsafe_arena_release_absolute_paths() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  if (type_case() == kAbsolutePaths) {
    clear_has_type();
    auto* temp = _impl_.type_.absolute_paths_;
    _impl_.type_.absolute_paths_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DataMessage_Paths::unsafe_arena_set_allocated_absolute_paths(::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_absolute_paths();
    _impl_.type_.absolute_paths_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::_internal_mutable_absolute_paths() {
  if (type_case() != kAbsolutePaths) {
    clear_type();
    set_has_absolute_paths();
    _impl_.type_.absolute_paths_ = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths>(GetArena());
  }
  return _impl_.type_.absolute_paths_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* DataMessage_Paths::mutable_absolute_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_AbsolutePaths* _msg = _internal_mutable_absolute_paths();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Paths.absolute_paths)
  return _msg;
}

inline bool DataMessage_Paths::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void DataMessage_Paths::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline DataMessage_Paths::TypeCase DataMessage_Paths::type_case() const {
  return DataMessage_Paths::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataMessage_Envelope_Ids

// .google.protobuf.StringValue session_id = 1;
inline bool DataMessage_Envelope_Ids::has_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_session_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::StringValue* p = _impl_.session_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::session_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  return _internal_session_id();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_session_id(::google::protobuf::StringValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_id_);
  }
  _impl_.session_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::StringValue* released = _impl_.session_id_;
  _impl_.session_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::StringValue* temp = _impl_.session_id_;
  _impl_.session_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::_internal_mutable_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.session_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArena());
    _impl_.session_id_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.session_id_;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::StringValue* _msg = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_session_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.session_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.session_id)
}

// .google.protobuf.Int64Value message_id = 2;
inline bool DataMessage_Envelope_Ids::has_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_Ids::_internal_message_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.message_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_Ids::message_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  return _internal_message_id();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_message_id(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_id_);
  }
  _impl_.message_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::release_message_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.message_id_;
  _impl_.message_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::unsafe_arena_release_message_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.message_id_;
  _impl_.message_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::_internal_mutable_message_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.message_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.message_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.message_id_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_Ids::mutable_message_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_message_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_message_id(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.message_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.message_id)
}

// .google.protobuf.BoolValue last_message_of_session = 3;
inline bool DataMessage_Envelope_Ids::has_last_message_of_session() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_message_of_session_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& DataMessage_Envelope_Ids::_internal_last_message_of_session() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::BoolValue* p = _impl_.last_message_of_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& DataMessage_Envelope_Ids::last_message_of_session() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  return _internal_last_message_of_session();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_last_message_of_session(::google::protobuf::BoolValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_message_of_session_);
  }
  _impl_.last_message_of_session_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::release_last_message_of_session() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::BoolValue* released = _impl_.last_message_of_session_;
  _impl_.last_message_of_session_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::unsafe_arena_release_last_message_of_session() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::BoolValue* temp = _impl_.last_message_of_session_;
  _impl_.last_message_of_session_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::_internal_mutable_last_message_of_session() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.last_message_of_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArena());
    _impl_.last_message_of_session_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.last_message_of_session_;
}
inline ::google::protobuf::BoolValue* DataMessage_Envelope_Ids::mutable_last_message_of_session() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::BoolValue* _msg = _internal_mutable_last_message_of_session();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_last_message_of_session(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_message_of_session_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.last_message_of_session_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.last_message_of_session)
}

// .google.protobuf.StringValue vehicle_fleet_id = 4;
inline bool DataMessage_Envelope_Ids::has_vehicle_fleet_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vehicle_fleet_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_vehicle_fleet_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::StringValue* p = _impl_.vehicle_fleet_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::vehicle_fleet_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  return _internal_vehicle_fleet_id();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_fleet_id_);
  }
  _impl_.vehicle_fleet_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_vehicle_fleet_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::StringValue* released = _impl_.vehicle_fleet_id_;
  _impl_.vehicle_fleet_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_vehicle_fleet_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::StringValue* temp = _impl_.vehicle_fleet_id_;
  _impl_.vehicle_fleet_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::_internal_mutable_vehicle_fleet_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.vehicle_fleet_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArena());
    _impl_.vehicle_fleet_id_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.vehicle_fleet_id_;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_vehicle_fleet_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::StringValue* _msg = _internal_mutable_vehicle_fleet_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_vehicle_fleet_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_fleet_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.vehicle_fleet_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_fleet_id)
}

// .google.protobuf.StringValue vehicle_id = 5;
inline bool DataMessage_Envelope_Ids::has_vehicle_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vehicle_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_vehicle_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::StringValue* p = _impl_.vehicle_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::vehicle_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  return _internal_vehicle_id();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_vehicle_id(::google::protobuf::StringValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_id_);
  }
  _impl_.vehicle_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_vehicle_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::StringValue* released = _impl_.vehicle_id_;
  _impl_.vehicle_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_vehicle_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::StringValue* temp = _impl_.vehicle_id_;
  _impl_.vehicle_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::_internal_mutable_vehicle_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.vehicle_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArena());
    _impl_.vehicle_id_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.vehicle_id_;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_vehicle_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::StringValue* _msg = _internal_mutable_vehicle_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_vehicle_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.vehicle_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.vehicle_id)
}

// .google.protobuf.StringValue driver_id = 6;
inline bool DataMessage_Envelope_Ids::has_driver_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.driver_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::_internal_driver_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::StringValue* p = _impl_.driver_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_Ids::driver_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  return _internal_driver_id();
}
inline void DataMessage_Envelope_Ids::unsafe_arena_set_allocated_driver_id(::google::protobuf::StringValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.driver_id_);
  }
  _impl_.driver_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::release_driver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::StringValue* released = _impl_.driver_id_;
  _impl_.driver_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::unsafe_arena_release_driver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::StringValue* temp = _impl_.driver_id_;
  _impl_.driver_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::_internal_mutable_driver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.driver_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArena());
    _impl_.driver_id_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.driver_id_;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_Ids::mutable_driver_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::StringValue* _msg = _internal_mutable_driver_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
  return _msg;
}
inline void DataMessage_Envelope_Ids::set_allocated_driver_id(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.driver_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.driver_id_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.Ids.driver_id)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_FieldResolutionOverride

// .sensoris.protobuf.messages.data.DataMessage.Paths paths = 1;
inline bool DataMessage_Envelope_FieldResolutionOverride::has_paths() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.paths_ != nullptr);
  return value;
}
inline void DataMessage_Envelope_FieldResolutionOverride::clear_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.paths_ != nullptr) _impl_.paths_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_Envelope_FieldResolutionOverride::_internal_paths() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Paths* p = _impl_.paths_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Paths&>(::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_Envelope_FieldResolutionOverride::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  return _internal_paths();
}
inline void DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.paths_);
  }
  _impl_.paths_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::release_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* released = _impl_.paths_;
  _impl_.paths_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_release_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Paths* temp = _impl_.paths_;
  _impl_.paths_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::_internal_mutable_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.paths_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Paths>(GetArena());
    _impl_.paths_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths*>(p);
  }
  return _impl_.paths_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_Envelope_FieldResolutionOverride::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Paths* _msg = _internal_mutable_paths();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
  return _msg;
}
inline void DataMessage_Envelope_FieldResolutionOverride::set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths*>(_impl_.paths_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.paths_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.paths)
}

// .google.protobuf.Int64Value exponent = 2;
inline bool DataMessage_Envelope_FieldResolutionOverride::has_exponent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exponent_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_FieldResolutionOverride::_internal_exponent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.exponent_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_FieldResolutionOverride::exponent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  return _internal_exponent();
}
inline void DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_set_allocated_exponent(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exponent_);
  }
  _impl_.exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::release_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.exponent_;
  _impl_.exponent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::unsafe_arena_release_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.exponent_;
  _impl_.exponent_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::_internal_mutable_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.exponent_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.exponent_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_FieldResolutionOverride::mutable_exponent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_exponent();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
  return _msg;
}
inline void DataMessage_Envelope_FieldResolutionOverride::set_allocated_exponent(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exponent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride.exponent)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_VehicleDimensions

// .google.protobuf.Int64Value distance_to_front = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_front() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_front_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_front() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_front_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_front() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  return _internal_distance_to_front();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_front(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_front_);
  }
  _impl_.distance_to_front_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_front() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_front_;
  _impl_.distance_to_front_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_front() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_front_;
  _impl_.distance_to_front_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_front() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.distance_to_front_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_front_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_front_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_front() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_front();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_front(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_front_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.distance_to_front_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_front)
}

// .google.protobuf.Int64Value distance_to_back = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_back() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_back_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_back() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_back_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_back() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  return _internal_distance_to_back();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_back(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_back_);
  }
  _impl_.distance_to_back_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_back() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_back_;
  _impl_.distance_to_back_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_back() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_back_;
  _impl_.distance_to_back_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_back() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.distance_to_back_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_back_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_back_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_back() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_back();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_back(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_back_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.distance_to_back_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_back)
}

// .google.protobuf.Int64Value distance_to_left = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_left() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_left_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_left() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_left_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_left() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  return _internal_distance_to_left();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_left(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_left_);
  }
  _impl_.distance_to_left_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_left_;
  _impl_.distance_to_left_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_left_;
  _impl_.distance_to_left_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.distance_to_left_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_left_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_left_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_left() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_left();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_left(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_left_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.distance_to_left_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_left)
}

// .google.protobuf.Int64Value distance_to_right = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_right() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_right_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_right() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_right_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_right() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  return _internal_distance_to_right();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_right(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_right_);
  }
  _impl_.distance_to_right_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_right_;
  _impl_.distance_to_right_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_right_;
  _impl_.distance_to_right_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.distance_to_right_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_right_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_right_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_right() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_right();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_right(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_right_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.distance_to_right_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_right)
}

// .google.protobuf.Int64Value distance_to_top = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_top() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_top_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_top() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_top_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_top() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  return _internal_distance_to_top();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_top(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_top_);
  }
  _impl_.distance_to_top_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_top() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_top_;
  _impl_.distance_to_top_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_top() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_top_;
  _impl_.distance_to_top_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_top() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.distance_to_top_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_top_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_top_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_top() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_top();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_top(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_top_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.distance_to_top_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_top)
}

// .google.protobuf.Int64Value distance_to_ground = 6 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool DataMessage_Envelope_VehicleDimensions::has_distance_to_ground() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distance_to_ground_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::_internal_distance_to_ground() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.distance_to_ground_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& DataMessage_Envelope_VehicleDimensions::distance_to_ground() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  return _internal_distance_to_ground();
}
inline void DataMessage_Envelope_VehicleDimensions::unsafe_arena_set_allocated_distance_to_ground(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_ground_);
  }
  _impl_.distance_to_ground_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::release_distance_to_ground() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Int64Value* released = _impl_.distance_to_ground_;
  _impl_.distance_to_ground_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::unsafe_arena_release_distance_to_ground() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Int64Value* temp = _impl_.distance_to_ground_;
  _impl_.distance_to_ground_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::_internal_mutable_distance_to_ground() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.distance_to_ground_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.distance_to_ground_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.distance_to_ground_;
}
inline ::google::protobuf::Int64Value* DataMessage_Envelope_VehicleDimensions::mutable_distance_to_ground() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_distance_to_ground();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
  return _msg;
}
inline void DataMessage_Envelope_VehicleDimensions::set_allocated_distance_to_ground(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.distance_to_ground_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.distance_to_ground_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions.distance_to_ground)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_MapIdentification_MapVersion

// .google.protobuf.StringValue source = 1;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_MapIdentification_MapVersion::_internal_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::StringValue* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::StringValue&>(::google::protobuf::_StringValue_default_instance_);
}
inline const ::google::protobuf::StringValue& DataMessage_Envelope_MapIdentification_MapVersion::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  return _internal_source();
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_source(::google::protobuf::StringValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::StringValue* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::StringValue* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::_internal_mutable_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.source_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::StringValue>(GetArena());
    _impl_.source_ = reinterpret_cast<::google::protobuf::StringValue*>(p);
  }
  return _impl_.source_;
}
inline ::google::protobuf::StringValue* DataMessage_Envelope_MapIdentification_MapVersion::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::StringValue* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
  return _msg;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_source(::google::protobuf::StringValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::google::protobuf::StringValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.source)
}

// .sensoris.protobuf.types.base.Version version = 2;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessage_Envelope_MapIdentification_MapVersion::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::base::Version* p = _impl_.version_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Version&>(::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Version& DataMessage_Envelope_MapIdentification_MapVersion::version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  return _internal_version();
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_version(::sensoris::protobuf::types::base::Version* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }
  _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::base::Version* released = _impl_.version_;
  _impl_.version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::base::Version* temp = _impl_.version_;
  _impl_.version_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.version_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArena());
    _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(p);
  }
  return _impl_.version_;
}
inline ::sensoris::protobuf::types::base::Version* DataMessage_Envelope_MapIdentification_MapVersion::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::base::Version* _msg = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
  return _msg;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_version(::sensoris::protobuf::types::base::Version* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.version)
}

// .sensoris.protobuf.types.base.Timestamp extraction_timestamp = 3;
inline bool DataMessage_Envelope_MapIdentification_MapVersion::has_extraction_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extraction_timestamp_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Timestamp& DataMessage_Envelope_MapIdentification_MapVersion::_internal_extraction_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::base::Timestamp* p = _impl_.extraction_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Timestamp&>(::sensoris::protobuf::types::base::_Timestamp_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Timestamp& DataMessage_Envelope_MapIdentification_MapVersion::extraction_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  return _internal_extraction_timestamp();
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extraction_timestamp_);
  }
  _impl_.extraction_timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::release_extraction_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Timestamp* released = _impl_.extraction_timestamp_;
  _impl_.extraction_timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::unsafe_arena_release_extraction_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Timestamp* temp = _impl_.extraction_timestamp_;
  _impl_.extraction_timestamp_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::_internal_mutable_extraction_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.extraction_timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(GetArena());
    _impl_.extraction_timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(p);
  }
  return _impl_.extraction_timestamp_;
}
inline ::sensoris::protobuf::types::base::Timestamp* DataMessage_Envelope_MapIdentification_MapVersion::mutable_extraction_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::base::Timestamp* _msg = _internal_mutable_extraction_timestamp();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
  return _msg;
}
inline void DataMessage_Envelope_MapIdentification_MapVersion::set_allocated_extraction_timestamp(::sensoris::protobuf::types::base::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extraction_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.extraction_timestamp_ = reinterpret_cast<::sensoris::protobuf::types::base::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion.extraction_timestamp)
}

// -------------------------------------------------------------------

// DataMessage_Envelope_MapIdentification

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion provider_version = 1;
inline bool DataMessage_Envelope_MapIdentification::has_provider_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.provider_version_ != nullptr);
  return value;
}
inline void DataMessage_Envelope_MapIdentification::clear_provider_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.provider_version_ != nullptr) _impl_.provider_version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::_internal_provider_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* p = _impl_.provider_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::provider_version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  return _internal_provider_version();
}
inline void DataMessage_Envelope_MapIdentification::unsafe_arena_set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.provider_version_);
  }
  _impl_.provider_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::release_provider_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* released = _impl_.provider_version_;
  _impl_.provider_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::unsafe_arena_release_provider_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = _impl_.provider_version_;
  _impl_.provider_version_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::_internal_mutable_provider_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.provider_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion>(GetArena());
    _impl_.provider_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(p);
  }
  return _impl_.provider_version_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::mutable_provider_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* _msg = _internal_mutable_provider_version();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
  return _msg;
}
inline void DataMessage_Envelope_MapIdentification::set_allocated_provider_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(_impl_.provider_version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.provider_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.provider_version)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.MapVersion compiler_version = 2;
inline bool DataMessage_Envelope_MapIdentification::has_compiler_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compiler_version_ != nullptr);
  return value;
}
inline void DataMessage_Envelope_MapIdentification::clear_compiler_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.compiler_version_ != nullptr) _impl_.compiler_version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::_internal_compiler_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* p = _impl_.compiler_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_MapVersion_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion& DataMessage_Envelope_MapIdentification::compiler_version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  return _internal_compiler_version();
}
inline void DataMessage_Envelope_MapIdentification::unsafe_arena_set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compiler_version_);
  }
  _impl_.compiler_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::release_compiler_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* released = _impl_.compiler_version_;
  _impl_.compiler_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::unsafe_arena_release_compiler_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* temp = _impl_.compiler_version_;
  _impl_.compiler_version_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::_internal_mutable_compiler_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.compiler_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion>(GetArena());
    _impl_.compiler_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(p);
  }
  return _impl_.compiler_version_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* DataMessage_Envelope_MapIdentification::mutable_compiler_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* _msg = _internal_mutable_compiler_version();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
  return _msg;
}
inline void DataMessage_Envelope_MapIdentification::set_allocated_compiler_version(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(_impl_.compiler_version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.compiler_version_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_MapVersion*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.compiler_version)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.Format format = 3;
inline void DataMessage_Envelope_MapIdentification::clear_format() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.format_ = 0;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::format() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.format)
  return _internal_format();
}
inline void DataMessage_Envelope_MapIdentification::set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification.format)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format DataMessage_Envelope_MapIdentification::_internal_format() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format>(_impl_.format_);
}
inline void DataMessage_Envelope_MapIdentification::_internal_set_format(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.format_ = value;
}

// -------------------------------------------------------------------

// DataMessage_Envelope

// .sensoris.protobuf.messages.data.DataMessage.Envelope.Ids ids = 1;
inline bool DataMessage_Envelope::has_ids() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ids_ != nullptr);
  return value;
}
inline void DataMessage_Envelope::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ids_ != nullptr) _impl_.ids_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& DataMessage_Envelope::_internal_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* p = _impl_.ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_Ids_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids& DataMessage_Envelope::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  return _internal_ids();
}
inline void DataMessage_Envelope::unsafe_arena_set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ids_);
  }
  _impl_.ids_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::release_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* released = _impl_.ids_;
  _impl_.ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::unsafe_arena_release_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* temp = _impl_.ids_;
  _impl_.ids_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::_internal_mutable_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids>(GetArena());
    _impl_.ids_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(p);
  }
  return _impl_.ids_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* DataMessage_Envelope::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* _msg = _internal_mutable_ids();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
  return _msg;
}
inline void DataMessage_Envelope::set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(_impl_.ids_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ids_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_Ids*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.ids)
}

// repeated .sensoris.protobuf.types.job.Ids job_ids = 2;
inline int DataMessage_Envelope::_internal_job_ids_size() const {
  return _internal_job_ids().size();
}
inline int DataMessage_Envelope::job_ids_size() const {
  return _internal_job_ids_size();
}
inline ::sensoris::protobuf::types::job::Ids* DataMessage_Envelope::mutable_job_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.job_ids)
  return _internal_mutable_job_ids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>* DataMessage_Envelope::mutable_job_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.Envelope.job_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_job_ids();
}
inline const ::sensoris::protobuf::types::job::Ids& DataMessage_Envelope::job_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.job_ids)
  return _internal_job_ids().Get(index);
}
inline ::sensoris::protobuf::types::job::Ids* DataMessage_Envelope::add_job_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::types::job::Ids* _add = _internal_mutable_job_ids()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.Envelope.job_ids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>& DataMessage_Envelope::job_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.Envelope.job_ids)
  return _internal_job_ids();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>&
DataMessage_Envelope::_internal_job_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.job_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::job::Ids>*
DataMessage_Envelope::_internal_mutable_job_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.job_ids_;
}

// repeated .sensoris.protobuf.messages.data.DataMessage.Envelope.FieldResolutionOverride field_resolution_override = 3;
inline int DataMessage_Envelope::_internal_field_resolution_override_size() const {
  return _internal_field_resolution_override().size();
}
inline int DataMessage_Envelope::field_resolution_override_size() const {
  return _internal_field_resolution_override_size();
}
inline void DataMessage_Envelope::clear_field_resolution_override() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.field_resolution_override_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* DataMessage_Envelope::mutable_field_resolution_override(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return _internal_mutable_field_resolution_override()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>* DataMessage_Envelope::mutable_field_resolution_override()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_field_resolution_override();
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride& DataMessage_Envelope::field_resolution_override(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return _internal_field_resolution_override().Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* DataMessage_Envelope::add_field_resolution_override() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride* _add = _internal_mutable_field_resolution_override()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>& DataMessage_Envelope::field_resolution_override() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.Envelope.field_resolution_override)
  return _internal_field_resolution_override();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>&
DataMessage_Envelope::_internal_field_resolution_override() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.field_resolution_override_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_Envelope_FieldResolutionOverride>*
DataMessage_Envelope::_internal_mutable_field_resolution_override() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.field_resolution_override_;
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.VehicleDimensions vehicle_dimensions = 4;
inline bool DataMessage_Envelope::has_vehicle_dimensions() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vehicle_dimensions_ != nullptr);
  return value;
}
inline void DataMessage_Envelope::clear_vehicle_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vehicle_dimensions_ != nullptr) _impl_.vehicle_dimensions_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& DataMessage_Envelope::_internal_vehicle_dimensions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* p = _impl_.vehicle_dimensions_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_VehicleDimensions_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions& DataMessage_Envelope::vehicle_dimensions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  return _internal_vehicle_dimensions();
}
inline void DataMessage_Envelope::unsafe_arena_set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vehicle_dimensions_);
  }
  _impl_.vehicle_dimensions_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::release_vehicle_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* released = _impl_.vehicle_dimensions_;
  _impl_.vehicle_dimensions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::unsafe_arena_release_vehicle_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* temp = _impl_.vehicle_dimensions_;
  _impl_.vehicle_dimensions_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::_internal_mutable_vehicle_dimensions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.vehicle_dimensions_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions>(GetArena());
    _impl_.vehicle_dimensions_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(p);
  }
  return _impl_.vehicle_dimensions_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* DataMessage_Envelope::mutable_vehicle_dimensions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* _msg = _internal_mutable_vehicle_dimensions();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
  return _msg;
}
inline void DataMessage_Envelope::set_allocated_vehicle_dimensions(::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(_impl_.vehicle_dimensions_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.vehicle_dimensions_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_VehicleDimensions*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.vehicle_dimensions)
}

// .sensoris.protobuf.messages.data.DataMessage.Envelope.MapIdentification map_identification = 5;
inline bool DataMessage_Envelope::has_map_identification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_identification_ != nullptr);
  return value;
}
inline void DataMessage_Envelope::clear_map_identification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.map_identification_ != nullptr) _impl_.map_identification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& DataMessage_Envelope::_internal_map_identification() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* p = _impl_.map_identification_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_MapIdentification_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification& DataMessage_Envelope::map_identification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  return _internal_map_identification();
}
inline void DataMessage_Envelope::unsafe_arena_set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_identification_);
  }
  _impl_.map_identification_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::release_map_identification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* released = _impl_.map_identification_;
  _impl_.map_identification_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::unsafe_arena_release_map_identification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* temp = _impl_.map_identification_;
  _impl_.map_identification_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::_internal_mutable_map_identification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.map_identification_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification>(GetArena());
    _impl_.map_identification_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(p);
  }
  return _impl_.map_identification_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* DataMessage_Envelope::mutable_map_identification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* _msg = _internal_mutable_map_identification();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
  return _msg;
}
inline void DataMessage_Envelope::set_allocated_map_identification(::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(_impl_.map_identification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.map_identification_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.Envelope.map_identification)
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_Envelope::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int DataMessage_Envelope::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* DataMessage_Envelope::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* DataMessage_Envelope::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& DataMessage_Envelope::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* DataMessage_Envelope::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& DataMessage_Envelope::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.Envelope.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
DataMessage_Envelope::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
DataMessage_Envelope::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// DataMessage_EventRelation

// repeated .google.protobuf.Int64Value from_id = 1;
inline int DataMessage_EventRelation::_internal_from_id_size() const {
  return _internal_from_id().size();
}
inline int DataMessage_EventRelation::from_id_size() const {
  return _internal_from_id_size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::mutable_from_id(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return _internal_mutable_from_id()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* DataMessage_EventRelation::mutable_from_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_from_id();
}
inline const ::google::protobuf::Int64Value& DataMessage_EventRelation::from_id(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return _internal_from_id().Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::add_from_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Int64Value* _add = _internal_mutable_from_id()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& DataMessage_EventRelation::from_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.from_id)
  return _internal_from_id();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>&
DataMessage_EventRelation::_internal_from_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.from_id_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>*
DataMessage_EventRelation::_internal_mutable_from_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.from_id_;
}

// .sensoris.protobuf.messages.data.DataMessage.EventRelation.Type type = 2;
inline void DataMessage_EventRelation::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type DataMessage_EventRelation::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.type)
  return _internal_type();
}
inline void DataMessage_EventRelation::set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.messages.data.DataMessage.EventRelation.type)
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type DataMessage_EventRelation::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type>(_impl_.type_);
}
inline void DataMessage_EventRelation::_internal_set_type(::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// repeated .google.protobuf.Int64Value to_id = 3;
inline int DataMessage_EventRelation::_internal_to_id_size() const {
  return _internal_to_id().size();
}
inline int DataMessage_EventRelation::to_id_size() const {
  return _internal_to_id_size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::mutable_to_id(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return _internal_mutable_to_id()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* DataMessage_EventRelation::mutable_to_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_to_id();
}
inline const ::google::protobuf::Int64Value& DataMessage_EventRelation::to_id(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return _internal_to_id().Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventRelation::add_to_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Int64Value* _add = _internal_mutable_to_id()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& DataMessage_EventRelation::to_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.to_id)
  return _internal_to_id();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>&
DataMessage_EventRelation::_internal_to_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.to_id_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>*
DataMessage_EventRelation::_internal_mutable_to_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.to_id_;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_EventRelation::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int DataMessage_EventRelation::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* DataMessage_EventRelation::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* DataMessage_EventRelation::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& DataMessage_EventRelation::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* DataMessage_EventRelation::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& DataMessage_EventRelation::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventRelation.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
DataMessage_EventRelation::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
DataMessage_EventRelation::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// DataMessage_EventSource_EventEnvelopeIds

// repeated .google.protobuf.Int64Value id = 2;
inline int DataMessage_EventSource_EventEnvelopeIds::_internal_id_size() const {
  return _internal_id().size();
}
inline int DataMessage_EventSource_EventEnvelopeIds::id_size() const {
  return _internal_id_size();
}
inline ::google::protobuf::Int64Value* DataMessage_EventSource_EventEnvelopeIds::mutable_id(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return _internal_mutable_id()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>* DataMessage_EventSource_EventEnvelopeIds::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_id();
}
inline const ::google::protobuf::Int64Value& DataMessage_EventSource_EventEnvelopeIds::id(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return _internal_id().Get(index);
}
inline ::google::protobuf::Int64Value* DataMessage_EventSource_EventEnvelopeIds::add_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Int64Value* _add = _internal_mutable_id()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>& DataMessage_EventSource_EventEnvelopeIds::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds.id)
  return _internal_id();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>&
DataMessage_EventSource_EventEnvelopeIds::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Int64Value>*
DataMessage_EventSource_EventEnvelopeIds::_internal_mutable_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.id_;
}

// -------------------------------------------------------------------

// DataMessage_EventSource

// .sensoris.protobuf.types.source.Source source = 1;
inline bool DataMessage_EventSource::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::source::Source& DataMessage_EventSource::_internal_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::source::Source* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::source::Source&>(::sensoris::protobuf::types::source::_Source_default_instance_);
}
inline const ::sensoris::protobuf::types::source::Source& DataMessage_EventSource::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  return _internal_source();
}
inline void DataMessage_EventSource::unsafe_arena_set_allocated_source(::sensoris::protobuf::types::source::Source* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::sensoris::protobuf::types::source::Source*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::source::Source* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::unsafe_arena_release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::source::Source* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::_internal_mutable_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.source_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::source::Source>(GetArena());
    _impl_.source_ = reinterpret_cast<::sensoris::protobuf::types::source::Source*>(p);
  }
  return _impl_.source_;
}
inline ::sensoris::protobuf::types::source::Source* DataMessage_EventSource::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::source::Source* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
  return _msg;
}
inline void DataMessage_EventSource::set_allocated_source(::sensoris::protobuf::types::source::Source* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::sensoris::protobuf::types::source::Source*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.source)
}

// .sensoris.protobuf.messages.data.DataMessage.EventSource.EventEnvelopeIds ids = 2;
inline bool DataMessage_EventSource::has_ids() const {
  return event_reference_case() == kIds;
}
inline bool DataMessage_EventSource::_internal_has_ids() const {
  return event_reference_case() == kIds;
}
inline void DataMessage_EventSource::set_has_ids() {
  _impl_._oneof_case_[0] = kIds;
}
inline void DataMessage_EventSource::clear_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (event_reference_case() == kIds) {
    if (GetArena() == nullptr) {
      delete _impl_.event_reference_.ids_;
    }
    clear_has_event_reference();
  }
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::release_ids() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  if (event_reference_case() == kIds) {
    clear_has_event_reference();
    auto* temp = _impl_.event_reference_.ids_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_reference_.ids_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& DataMessage_EventSource::_internal_ids() const {
  return event_reference_case() == kIds ? *_impl_.event_reference_.ids_ : reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds&>(::sensoris::protobuf::messages::data::_DataMessage_EventSource_EventEnvelopeIds_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds& DataMessage_EventSource::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  return _internal_ids();
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::unsafe_arena_release_ids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  if (event_reference_case() == kIds) {
    clear_has_event_reference();
    auto* temp = _impl_.event_reference_.ids_;
    _impl_.event_reference_.ids_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DataMessage_EventSource::unsafe_arena_set_allocated_ids(::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event_reference();
  if (value) {
    set_has_ids();
    _impl_.event_reference_.ids_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::_internal_mutable_ids() {
  if (event_reference_case() != kIds) {
    clear_event_reference();
    set_has_ids();
    _impl_.event_reference_.ids_ = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds>(GetArena());
  }
  return _impl_.event_reference_.ids_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* DataMessage_EventSource::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_EventSource_EventEnvelopeIds* _msg = _internal_mutable_ids();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.ids)
  return _msg;
}

// .sensoris.protobuf.messages.data.DataMessage.Paths paths = 3;
inline bool DataMessage_EventSource::has_paths() const {
  return event_reference_case() == kPaths;
}
inline bool DataMessage_EventSource::_internal_has_paths() const {
  return event_reference_case() == kPaths;
}
inline void DataMessage_EventSource::set_has_paths() {
  _impl_._oneof_case_[0] = kPaths;
}
inline void DataMessage_EventSource::clear_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (event_reference_case() == kPaths) {
    if (GetArena() == nullptr) {
      delete _impl_.event_reference_.paths_;
    }
    clear_has_event_reference();
  }
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::release_paths() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  if (event_reference_case() == kPaths) {
    clear_has_event_reference();
    auto* temp = _impl_.event_reference_.paths_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_reference_.paths_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_EventSource::_internal_paths() const {
  return event_reference_case() == kPaths ? *_impl_.event_reference_.paths_ : reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Paths&>(::sensoris::protobuf::messages::data::_DataMessage_Paths_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Paths& DataMessage_EventSource::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  return _internal_paths();
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::unsafe_arena_release_paths() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  if (event_reference_case() == kPaths) {
    clear_has_event_reference();
    auto* temp = _impl_.event_reference_.paths_;
    _impl_.event_reference_.paths_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DataMessage_EventSource::unsafe_arena_set_allocated_paths(::sensoris::protobuf::messages::data::DataMessage_Paths* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event_reference();
  if (value) {
    set_has_paths();
    _impl_.event_reference_.paths_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::_internal_mutable_paths() {
  if (event_reference_case() != kPaths) {
    clear_event_reference();
    set_has_paths();
    _impl_.event_reference_.paths_ = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Paths>(GetArena());
  }
  return _impl_.event_reference_.paths_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Paths* DataMessage_EventSource::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Paths* _msg = _internal_mutable_paths();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.paths)
  return _msg;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessage_EventSource::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int DataMessage_EventSource::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* DataMessage_EventSource::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* DataMessage_EventSource::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& DataMessage_EventSource::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* DataMessage_EventSource::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& DataMessage_EventSource::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.EventSource.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
DataMessage_EventSource::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
DataMessage_EventSource::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

inline bool DataMessage_EventSource::has_event_reference() const {
  return event_reference_case() != EVENT_REFERENCE_NOT_SET;
}
inline void DataMessage_EventSource::clear_has_event_reference() {
  _impl_._oneof_case_[0] = EVENT_REFERENCE_NOT_SET;
}
inline DataMessage_EventSource::EventReferenceCase DataMessage_EventSource::event_reference_case() const {
  return DataMessage_EventSource::EventReferenceCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataMessage

// .sensoris.protobuf.messages.data.DataMessage.Envelope envelope = 1;
inline bool DataMessage::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline void DataMessage::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope& DataMessage::_internal_envelope() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessage_Envelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessage_Envelope&>(::sensoris::protobuf::messages::data::_DataMessage_Envelope_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessage_Envelope& DataMessage::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.envelope)
  return _internal_envelope();
}
inline void DataMessage::unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessage.envelope)
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::unsafe_arena_release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessage.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::_internal_mutable_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.envelope_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessage_Envelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::messages::data::DataMessage_Envelope* DataMessage::mutable_envelope() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessage_Envelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.envelope)
  return _msg;
}
inline void DataMessage::set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessage_Envelope* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessage_Envelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessage.envelope)
}

// repeated .sensoris.protobuf.messages.data.EventGroup event_group = 2;
inline int DataMessage::_internal_event_group_size() const {
  return _internal_event_group().size();
}
inline int DataMessage::event_group_size() const {
  return _internal_event_group_size();
}
inline void DataMessage::clear_event_group() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_group_.Clear();
}
inline ::sensoris::protobuf::messages::data::EventGroup* DataMessage::mutable_event_group(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_group)
  return _internal_mutable_event_group()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>* DataMessage::mutable_event_group()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_group)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_event_group();
}
inline const ::sensoris::protobuf::messages::data::EventGroup& DataMessage::event_group(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_group)
  return _internal_event_group().Get(index);
}
inline ::sensoris::protobuf::messages::data::EventGroup* DataMessage::add_event_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::EventGroup* _add = _internal_mutable_event_group()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_group)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>& DataMessage::event_group() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_group)
  return _internal_event_group();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>&
DataMessage::_internal_event_group() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_group_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::EventGroup>*
DataMessage::_internal_mutable_event_group() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.event_group_;
}

// repeated .sensoris.protobuf.messages.data.DataMessage.EventRelation event_relation = 3;
inline int DataMessage::_internal_event_relation_size() const {
  return _internal_event_relation().size();
}
inline int DataMessage::event_relation_size() const {
  return _internal_event_relation_size();
}
inline void DataMessage::clear_event_relation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_relation_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation* DataMessage::mutable_event_relation(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return _internal_mutable_event_relation()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>* DataMessage::mutable_event_relation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_relation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_event_relation();
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventRelation& DataMessage::event_relation(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return _internal_event_relation().Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventRelation* DataMessage::add_event_relation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::DataMessage_EventRelation* _add = _internal_mutable_event_relation()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>& DataMessage::event_relation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_relation)
  return _internal_event_relation();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>&
DataMessage::_internal_event_relation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_relation_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventRelation>*
DataMessage::_internal_mutable_event_relation() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.event_relation_;
}

// repeated .sensoris.protobuf.messages.data.DataMessage.EventSource event_source = 4;
inline int DataMessage::_internal_event_source_size() const {
  return _internal_event_source().size();
}
inline int DataMessage::event_source_size() const {
  return _internal_event_source_size();
}
inline void DataMessage::clear_event_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.event_source_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource* DataMessage::mutable_event_source(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessage.event_source)
  return _internal_mutable_event_source()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>* DataMessage::mutable_event_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessage.event_source)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_event_source();
}
inline const ::sensoris::protobuf::messages::data::DataMessage_EventSource& DataMessage::event_source(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessage.event_source)
  return _internal_event_source().Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage_EventSource* DataMessage::add_event_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::DataMessage_EventSource* _add = _internal_mutable_event_source()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessage.event_source)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>& DataMessage::event_source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessage.event_source)
  return _internal_event_source();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>&
DataMessage::_internal_event_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.event_source_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage_EventSource>*
DataMessage::_internal_mutable_event_source() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.event_source_;
}

// -------------------------------------------------------------------

// DataMessages_Envelope

// .sensoris.protobuf.types.base.Version version = 1;
inline bool DataMessages_Envelope::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Version& DataMessages_Envelope::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::base::Version* p = _impl_.version_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Version&>(::sensoris::protobuf::types::base::_Version_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Version& DataMessages_Envelope::version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  return _internal_version();
}
inline void DataMessages_Envelope::unsafe_arena_set_allocated_version(::sensoris::protobuf::types::base::Version* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }
  _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Version* released = _impl_.version_;
  _impl_.version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::unsafe_arena_release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessages.Envelope.version)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Version* temp = _impl_.version_;
  _impl_.version_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.version_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::Version>(GetArena());
    _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(p);
  }
  return _impl_.version_;
}
inline ::sensoris::protobuf::types::base::Version* DataMessages_Envelope::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::base::Version* _msg = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
  return _msg;
}
inline void DataMessages_Envelope::set_allocated_version(::sensoris::protobuf::types::base::Version* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.version_ = reinterpret_cast<::sensoris::protobuf::types::base::Version*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessages.Envelope.version)
}

// repeated .sensoris.protobuf.types.base.Entity submitter = 2;
inline int DataMessages_Envelope::_internal_submitter_size() const {
  return _internal_submitter().size();
}
inline int DataMessages_Envelope::submitter_size() const {
  return _internal_submitter_size();
}
inline ::sensoris::protobuf::types::base::Entity* DataMessages_Envelope::mutable_submitter(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return _internal_mutable_submitter()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>* DataMessages_Envelope::mutable_submitter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_submitter();
}
inline const ::sensoris::protobuf::types::base::Entity& DataMessages_Envelope::submitter(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return _internal_submitter().Get(index);
}
inline ::sensoris::protobuf::types::base::Entity* DataMessages_Envelope::add_submitter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::types::base::Entity* _add = _internal_mutable_submitter()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>& DataMessages_Envelope::submitter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.Envelope.submitter)
  return _internal_submitter();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>&
DataMessages_Envelope::_internal_submitter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.submitter_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::Entity>*
DataMessages_Envelope::_internal_mutable_submitter() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.submitter_;
}

// repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
inline int DataMessages_Envelope::_internal_extension_type_url_and_version_size() const {
  return _internal_extension_type_url_and_version().size();
}
inline int DataMessages_Envelope::extension_type_url_and_version_size() const {
  return _internal_extension_type_url_and_version_size();
}
inline ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion* DataMessages_Envelope::mutable_extension_type_url_and_version(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.extension_type_url_and_version)
  return _internal_mutable_extension_type_url_and_version()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>* DataMessages_Envelope::mutable_extension_type_url_and_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension_type_url_and_version)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension_type_url_and_version();
}
inline const ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion& DataMessages_Envelope::extension_type_url_and_version(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.extension_type_url_and_version)
  return _internal_extension_type_url_and_version().Get(index);
}
inline ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion* DataMessages_Envelope::add_extension_type_url_and_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion* _add = _internal_mutable_extension_type_url_and_version()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.Envelope.extension_type_url_and_version)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>& DataMessages_Envelope::extension_type_url_and_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension_type_url_and_version)
  return _internal_extension_type_url_and_version();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>&
DataMessages_Envelope::_internal_extension_type_url_and_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_type_url_and_version_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>*
DataMessages_Envelope::_internal_mutable_extension_type_url_and_version() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_type_url_and_version_;
}

// repeated .google.protobuf.Any extension = 15;
inline int DataMessages_Envelope::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int DataMessages_Envelope::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* DataMessages_Envelope::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* DataMessages_Envelope::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& DataMessages_Envelope::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* DataMessages_Envelope::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& DataMessages_Envelope::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.Envelope.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
DataMessages_Envelope::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
DataMessages_Envelope::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// DataMessages

// .sensoris.protobuf.messages.data.DataMessages.Envelope envelope = 1;
inline bool DataMessages::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline void DataMessages::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::messages::data::DataMessages_Envelope& DataMessages::_internal_envelope() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::messages::data::DataMessages_Envelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::messages::data::DataMessages_Envelope&>(::sensoris::protobuf::messages::data::_DataMessages_Envelope_default_instance_);
}
inline const ::sensoris::protobuf::messages::data::DataMessages_Envelope& DataMessages::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.envelope)
  return _internal_envelope();
}
inline void DataMessages::unsafe_arena_set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessages_Envelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.messages.data.DataMessages.envelope)
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::unsafe_arena_release_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.messages.data.DataMessages.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::_internal_mutable_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.envelope_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::messages::data::DataMessages_Envelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessages_Envelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::messages::data::DataMessages_Envelope* DataMessages::mutable_envelope() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::messages::data::DataMessages_Envelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.envelope)
  return _msg;
}
inline void DataMessages::set_allocated_envelope(::sensoris::protobuf::messages::data::DataMessages_Envelope* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::messages::data::DataMessages_Envelope*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessages_Envelope*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::messages::data::DataMessages_Envelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.messages.data.DataMessages.envelope)
}

// repeated .sensoris.protobuf.messages.data.DataMessage data_message = 2;
inline int DataMessages::_internal_data_message_size() const {
  return _internal_data_message().size();
}
inline int DataMessages::data_message_size() const {
  return _internal_data_message_size();
}
inline void DataMessages::clear_data_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_message_.Clear();
}
inline ::sensoris::protobuf::messages::data::DataMessage* DataMessages::mutable_data_message(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.messages.data.DataMessages.data_message)
  return _internal_mutable_data_message()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>* DataMessages::mutable_data_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.messages.data.DataMessages.data_message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_message();
}
inline const ::sensoris::protobuf::messages::data::DataMessage& DataMessages::data_message(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.messages.data.DataMessages.data_message)
  return _internal_data_message().Get(index);
}
inline ::sensoris::protobuf::messages::data::DataMessage* DataMessages::add_data_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::messages::data::DataMessage* _add = _internal_mutable_data_message()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.messages.data.DataMessages.data_message)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>& DataMessages::data_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.messages.data.DataMessages.data_message)
  return _internal_data_message();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>&
DataMessages::_internal_data_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_message_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::messages::data::DataMessage>*
DataMessages::_internal_mutable_data_message() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_message_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace messages
}  // namespace protobuf
}  // namespace sensoris


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format>() {
  return ::sensoris::protobuf::messages::data::DataMessage_Envelope_MapIdentification_Format_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type>() {
  return ::sensoris::protobuf::messages::data::DataMessage_EventRelation_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2fmessages_2fdata_2eproto_2epb_2eh
