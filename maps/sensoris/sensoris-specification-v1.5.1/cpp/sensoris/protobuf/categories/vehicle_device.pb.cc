// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/vehicle_device.proto

#include "sensoris/protobuf/categories/vehicle_device.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace vehicledevice {

inline constexpr ExteriorLightStatus_TypeAndStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus_Type >(0)},
        status_{static_cast< ::sensoris::protobuf::categories::vehicledevice::Status >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExteriorLightStatus_TypeAndStatus::ExteriorLightStatus_TypeAndStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExteriorLightStatus_TypeAndStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExteriorLightStatus_TypeAndStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExteriorLightStatus_TypeAndStatusDefaultTypeInternal() {}
  union {
    ExteriorLightStatus_TypeAndStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExteriorLightStatus_TypeAndStatusDefaultTypeInternal _ExteriorLightStatus_TypeAndStatus_default_instance_;

inline constexpr ExteriorLightStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_and_status_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExteriorLightStatus::ExteriorLightStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExteriorLightStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExteriorLightStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExteriorLightStatusDefaultTypeInternal() {}
  union {
    ExteriorLightStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExteriorLightStatusDefaultTypeInternal _ExteriorLightStatus_default_instance_;

inline constexpr WiperStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        speed_and_accuracy_{nullptr},
        speed_type_{static_cast< ::sensoris::protobuf::categories::vehicledevice::WiperStatus_SpeedType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR WiperStatus::WiperStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WiperStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WiperStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WiperStatusDefaultTypeInternal() {}
  union {
    WiperStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WiperStatusDefaultTypeInternal _WiperStatus_default_instance_;

inline constexpr VehicleDeviceCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exterior_light_status_{},
        front_wiper_status_{},
        rear_wiper_status_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleDeviceCategory::VehicleDeviceCategory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleDeviceCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleDeviceCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleDeviceCategoryDefaultTypeInternal() {}
  union {
    VehicleDeviceCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleDeviceCategoryDefaultTypeInternal _VehicleDeviceCategory_default_instance_;
}  // namespace vehicledevice
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus, _impl_.type_and_status_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::WiperStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::WiperStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::WiperStatus, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::WiperStatus, _impl_.speed_type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::WiperStatus, _impl_.speed_and_accuracy_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _impl_.exterior_light_status_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _impl_.front_wiper_status_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory, _impl_.rear_wiper_status_),
    0,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus)},
        {10, 20, -1, sizeof(::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus)},
        {22, 33, -1, sizeof(::sensoris::protobuf::categories::vehicledevice::WiperStatus)},
        {36, 48, -1, sizeof(::sensoris::protobuf::categories::vehicledevice::VehicleDeviceCategory)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::categories::vehicledevice::_ExteriorLightStatus_TypeAndStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::vehicledevice::_ExteriorLightStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::vehicledevice::_WiperStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::vehicledevice::_VehicleDeviceCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n1sensoris/protobuf/categories/vehicle_d"
    "evice.proto\022*sensoris.protobuf.categorie"
    "s.vehicledevice\032\"sensoris/protobuf/types"
    "/base.proto\"\247\004\n\023ExteriorLightStatus\022=\n\010e"
    "nvelope\030\001 \001(\0132+.sensoris.protobuf.types."
    "base.EventEnvelope\022f\n\017type_and_status\030\002 "
    "\003(\0132M.sensoris.protobuf.categories.vehic"
    "ledevice.ExteriorLightStatus.TypeAndStat"
    "us\032\350\002\n\rTypeAndStatus\022`\n\004type\030\001 \001(\0162R.sen"
    "soris.protobuf.categories.vehicledevice."
    "ExteriorLightStatus.TypeAndStatus.Type\022B"
    "\n\006status\030\002 \001(\01622.sensoris.protobuf.categ"
    "ories.vehicledevice.Status\"\260\001\n\004Type\022\020\n\014U"
    "NKNOWN_TYPE\020\000\022\r\n\tLOW_BEAMS\020\001\022\016\n\nHIGH_BEA"
    "MS\020\002\022\023\n\017FOG_LIGHT_FRONT\020\003\022\022\n\016FOG_LIGHT_R"
    "EAR\020\004\022\n\n\006HAZARD\020\005\022\r\n\tLEFT_TURN\020\006\022\016\n\nRIGH"
    "T_TURN\020\007\022\t\n\005BRAKE\020\010\022\013\n\007REVERSE\020\t\022\013\n\007PARK"
    "ING\020\n\"\360\002\n\013WiperStatus\022=\n\010envelope\030\001 \001(\0132"
    "+.sensoris.protobuf.types.base.EventEnve"
    "lope\022U\n\nspeed_type\030\002 \001(\0162A.sensoris.prot"
    "obuf.categories.vehicledevice.WiperStatu"
    "s.SpeedType\022U\n\022speed_and_accuracy\030\003 \001(\0132"
    "3.sensoris.protobuf.types.base.Int64Valu"
    "eAndAccuracyB\004\210\265\030\000\"t\n\tSpeedType\022\026\n\022UNKNO"
    "WN_SPEED_TYPE\020\000\022\007\n\003OFF\020\001\022\010\n\004SLOW\020\002\022\n\n\006ME"
    "DIUM\020\003\022\010\n\004FAST\020\004\022\r\n\tAUTOMATIC\020\005\022\013\n\007WASHI"
    "NG\020\006\022\n\n\006SINGLE\020\007\"\342\002\n\025VehicleDeviceCatego"
    "ry\022@\n\010envelope\030\001 \001(\0132..sensoris.protobuf"
    ".types.base.CategoryEnvelope\022^\n\025exterior"
    "_light_status\030\002 \003(\0132\?.sensoris.protobuf."
    "categories.vehicledevice.ExteriorLightSt"
    "atus\022S\n\022front_wiper_status\030\003 \003(\01327.senso"
    "ris.protobuf.categories.vehicledevice.Wi"
    "perStatus\022R\n\021rear_wiper_status\030\004 \003(\01327.s"
    "ensoris.protobuf.categories.vehicledevic"
    "e.WiperStatus*-\n\006Status\022\022\n\016UNKNOWN_STATU"
    "S\020\000\022\006\n\002ON\020\001\022\007\n\003OFF\020\002B\200\001\n%org.sensoris.ca"
    "tegories.vehicledeviceB\035SensorisVehicleD"
    "eviceCategoryP\001Z3sensoris.org/specificat"
    "ion/categories/vehicledevice\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_deps[1] =
    {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto = {
    false,
    false,
    1599,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto,
    "sensoris/protobuf/categories/vehicle_device.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto);
namespace sensoris {
namespace protobuf {
namespace categories {
namespace vehicledevice {
const ::google::protobuf::EnumDescriptor* ExteriorLightStatus_TypeAndStatus_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ExteriorLightStatus_TypeAndStatus_Type_internal_data_[] = {
    720896u, 0u, };
bool ExteriorLightStatus_TypeAndStatus_Type_IsValid(int value) {
  return 0 <= value && value <= 10;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::UNKNOWN_TYPE;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::LOW_BEAMS;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::HIGH_BEAMS;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::FOG_LIGHT_FRONT;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::FOG_LIGHT_REAR;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::HAZARD;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::LEFT_TURN;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::RIGHT_TURN;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::BRAKE;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::REVERSE;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::PARKING;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::Type_MIN;
constexpr ExteriorLightStatus_TypeAndStatus_Type ExteriorLightStatus_TypeAndStatus::Type_MAX;
constexpr int ExteriorLightStatus_TypeAndStatus::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* WiperStatus_SpeedType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t WiperStatus_SpeedType_internal_data_[] = {
    524288u, 0u, };
bool WiperStatus_SpeedType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WiperStatus_SpeedType WiperStatus::UNKNOWN_SPEED_TYPE;
constexpr WiperStatus_SpeedType WiperStatus::OFF;
constexpr WiperStatus_SpeedType WiperStatus::SLOW;
constexpr WiperStatus_SpeedType WiperStatus::MEDIUM;
constexpr WiperStatus_SpeedType WiperStatus::FAST;
constexpr WiperStatus_SpeedType WiperStatus::AUTOMATIC;
constexpr WiperStatus_SpeedType WiperStatus::WASHING;
constexpr WiperStatus_SpeedType WiperStatus::SINGLE;
constexpr WiperStatus_SpeedType WiperStatus::SpeedType_MIN;
constexpr WiperStatus_SpeedType WiperStatus::SpeedType_MAX;
constexpr int WiperStatus::SpeedType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Status_internal_data_[] = {
    196608u, 0u, };
bool Status_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class ExteriorLightStatus_TypeAndStatus::_Internal {
 public:
};

ExteriorLightStatus_TypeAndStatus::ExteriorLightStatus_TypeAndStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
}
ExteriorLightStatus_TypeAndStatus::ExteriorLightStatus_TypeAndStatus(
    ::google::protobuf::Arena* arena, const ExteriorLightStatus_TypeAndStatus& from)
    : ExteriorLightStatus_TypeAndStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ExteriorLightStatus_TypeAndStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExteriorLightStatus_TypeAndStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::status_));
}
ExteriorLightStatus_TypeAndStatus::~ExteriorLightStatus_TypeAndStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExteriorLightStatus_TypeAndStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ExteriorLightStatus_TypeAndStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ExteriorLightStatus_TypeAndStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ExteriorLightStatus_TypeAndStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ExteriorLightStatus_TypeAndStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.categories.vehicledevice.Status status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExteriorLightStatus_TypeAndStatus, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.status_)}},
    // .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExteriorLightStatus_TypeAndStatus, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.categories.vehicledevice.Status status = 2;
    {PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ExteriorLightStatus_TypeAndStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // .sensoris.protobuf.categories.vehicledevice.Status status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  return target;
}

::size_t ExteriorLightStatus_TypeAndStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .sensoris.protobuf.categories.vehicledevice.Status status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ExteriorLightStatus_TypeAndStatus::_class_data_ = {
    ExteriorLightStatus_TypeAndStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ExteriorLightStatus_TypeAndStatus::GetClassData() const {
  return &_class_data_;
}

void ExteriorLightStatus_TypeAndStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ExteriorLightStatus_TypeAndStatus*>(&to_msg);
  auto& from = static_cast<const ExteriorLightStatus_TypeAndStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExteriorLightStatus_TypeAndStatus::CopyFrom(const ExteriorLightStatus_TypeAndStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ExteriorLightStatus_TypeAndStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ExteriorLightStatus_TypeAndStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ExteriorLightStatus_TypeAndStatus::InternalSwap(ExteriorLightStatus_TypeAndStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.status_)
      + sizeof(ExteriorLightStatus_TypeAndStatus::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ExteriorLightStatus_TypeAndStatus, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata ExteriorLightStatus_TypeAndStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[0]);
}
// ===================================================================

class ExteriorLightStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ExteriorLightStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const ExteriorLightStatus* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& ExteriorLightStatus::_Internal::envelope(const ExteriorLightStatus* msg) {
  return *msg->_impl_.envelope_;
}
void ExteriorLightStatus::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ExteriorLightStatus::ExteriorLightStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
}
inline PROTOBUF_NDEBUG_INLINE ExteriorLightStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_and_status_{visibility, arena, from.type_and_status_} {}

ExteriorLightStatus::ExteriorLightStatus(
    ::google::protobuf::Arena* arena,
    const ExteriorLightStatus& from)
    : ::google::protobuf::Message(arena) {
  ExteriorLightStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
}
inline PROTOBUF_NDEBUG_INLINE ExteriorLightStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_and_status_{visibility, arena} {}

inline void ExteriorLightStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
ExteriorLightStatus::~ExteriorLightStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExteriorLightStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ExteriorLightStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_and_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ExteriorLightStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ExteriorLightStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExteriorLightStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_.type_and_status_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;
    {PROTOBUF_FIELD_OFFSET(ExteriorLightStatus, _impl_.type_and_status_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus_TypeAndStatus>()},
  }}, {{
  }},
};

::uint8_t* ExteriorLightStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_type_and_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_type_and_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  return target;
}

::size_t ExteriorLightStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;
  total_size += 1UL * this->_internal_type_and_status_size();
  for (const auto& msg : this->_internal_type_and_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ExteriorLightStatus::_class_data_ = {
    ExteriorLightStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ExteriorLightStatus::GetClassData() const {
  return &_class_data_;
}

void ExteriorLightStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ExteriorLightStatus*>(&to_msg);
  auto& from = static_cast<const ExteriorLightStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_type_and_status()->MergeFrom(
      from._internal_type_and_status());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
        from._internal_envelope());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExteriorLightStatus::CopyFrom(const ExteriorLightStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ExteriorLightStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ExteriorLightStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ExteriorLightStatus::InternalSwap(ExteriorLightStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.type_and_status_.InternalSwap(&other->_impl_.type_and_status_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata ExteriorLightStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[1]);
}
// ===================================================================

class WiperStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<WiperStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const WiperStatus* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& speed_and_accuracy(const WiperStatus* msg);
  static void set_has_speed_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& WiperStatus::_Internal::envelope(const WiperStatus* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& WiperStatus::_Internal::speed_and_accuracy(const WiperStatus* msg) {
  return *msg->_impl_.speed_and_accuracy_;
}
void WiperStatus::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void WiperStatus::clear_speed_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.speed_and_accuracy_ != nullptr) _impl_.speed_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
WiperStatus::WiperStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.vehicledevice.WiperStatus)
}
inline PROTOBUF_NDEBUG_INLINE WiperStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WiperStatus::WiperStatus(
    ::google::protobuf::Arena* arena,
    const WiperStatus& from)
    : ::google::protobuf::Message(arena) {
  WiperStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.speed_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(arena, *from._impl_.speed_and_accuracy_)
                : nullptr;
  _impl_.speed_type_ = from._impl_.speed_type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.vehicledevice.WiperStatus)
}
inline PROTOBUF_NDEBUG_INLINE WiperStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WiperStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, speed_type_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::speed_type_));
}
WiperStatus::~WiperStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WiperStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.speed_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WiperStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.speed_and_accuracy_ != nullptr);
      _impl_.speed_and_accuracy_->Clear();
    }
  }
  _impl_.speed_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WiperStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> WiperStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WiperStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WiperStatus, _impl_.speed_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.speed_type_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.speed_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;
    {PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.speed_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.speed_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* WiperStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;
  if (this->_internal_speed_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_speed_type(), target);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::speed_and_accuracy(this),
        _Internal::speed_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  return target;
}

::size_t WiperStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_and_accuracy_);
    }

  }
  // .sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;
  if (this->_internal_speed_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_speed_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WiperStatus::_class_data_ = {
    WiperStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WiperStatus::GetClassData() const {
  return &_class_data_;
}

void WiperStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WiperStatus*>(&to_msg);
  auto& from = static_cast<const WiperStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_speed_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy::MergeFrom(
          from._internal_speed_and_accuracy());
    }
  }
  if (from._internal_speed_type() != 0) {
    _this->_internal_set_speed_type(from._internal_speed_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WiperStatus::CopyFrom(const WiperStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.vehicledevice.WiperStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WiperStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WiperStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WiperStatus::InternalSwap(WiperStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.speed_type_)
      + sizeof(WiperStatus::_impl_.speed_type_)
      - PROTOBUF_FIELD_OFFSET(WiperStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata WiperStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[2]);
}
// ===================================================================

class VehicleDeviceCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleDeviceCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::CategoryEnvelope& envelope(const VehicleDeviceCategory* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::CategoryEnvelope& VehicleDeviceCategory::_Internal::envelope(const VehicleDeviceCategory* msg) {
  return *msg->_impl_.envelope_;
}
void VehicleDeviceCategory::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VehicleDeviceCategory::VehicleDeviceCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
}
inline PROTOBUF_NDEBUG_INLINE VehicleDeviceCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exterior_light_status_{visibility, arena, from.exterior_light_status_},
        front_wiper_status_{visibility, arena, from.front_wiper_status_},
        rear_wiper_status_{visibility, arena, from.rear_wiper_status_} {}

VehicleDeviceCategory::VehicleDeviceCategory(
    ::google::protobuf::Arena* arena,
    const VehicleDeviceCategory& from)
    : ::google::protobuf::Message(arena) {
  VehicleDeviceCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::CategoryEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
}
inline PROTOBUF_NDEBUG_INLINE VehicleDeviceCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        exterior_light_status_{visibility, arena},
        front_wiper_status_{visibility, arena},
        rear_wiper_status_{visibility, arena} {}

inline void VehicleDeviceCategory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
VehicleDeviceCategory::~VehicleDeviceCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleDeviceCategory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleDeviceCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.exterior_light_status_.Clear();
  _impl_.front_wiper_status_.Clear();
  _impl_.rear_wiper_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleDeviceCategory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> VehicleDeviceCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleDeviceCategory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus rear_wiper_status = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.rear_wiper_status_)}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus exterior_light_status = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.exterior_light_status_)}},
    // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus front_wiper_status = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.front_wiper_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus exterior_light_status = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.exterior_light_status_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus front_wiper_status = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.front_wiper_status_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus rear_wiper_status = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleDeviceCategory, _impl_.rear_wiper_status_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::vehicledevice::ExteriorLightStatus>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::vehicledevice::WiperStatus>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::vehicledevice::WiperStatus>()},
  }}, {{
  }},
};

::uint8_t* VehicleDeviceCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus exterior_light_status = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_exterior_light_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_exterior_light_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus front_wiper_status = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_front_wiper_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_front_wiper_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus rear_wiper_status = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rear_wiper_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_rear_wiper_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  return target;
}

::size_t VehicleDeviceCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus exterior_light_status = 2;
  total_size += 1UL * this->_internal_exterior_light_status_size();
  for (const auto& msg : this->_internal_exterior_light_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus front_wiper_status = 3;
  total_size += 1UL * this->_internal_front_wiper_status_size();
  for (const auto& msg : this->_internal_front_wiper_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.vehicledevice.WiperStatus rear_wiper_status = 4;
  total_size += 1UL * this->_internal_rear_wiper_status_size();
  for (const auto& msg : this->_internal_rear_wiper_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleDeviceCategory::_class_data_ = {
    VehicleDeviceCategory::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleDeviceCategory::GetClassData() const {
  return &_class_data_;
}

void VehicleDeviceCategory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleDeviceCategory*>(&to_msg);
  auto& from = static_cast<const VehicleDeviceCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_exterior_light_status()->MergeFrom(
      from._internal_exterior_light_status());
  _this->_internal_mutable_front_wiper_status()->MergeFrom(
      from._internal_front_wiper_status());
  _this->_internal_mutable_rear_wiper_status()->MergeFrom(
      from._internal_rear_wiper_status());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::CategoryEnvelope::MergeFrom(
        from._internal_envelope());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleDeviceCategory::CopyFrom(const VehicleDeviceCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.vehicledevice.VehicleDeviceCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleDeviceCategory::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehicleDeviceCategory::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleDeviceCategory::InternalSwap(VehicleDeviceCategory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.exterior_light_status_.InternalSwap(&other->_impl_.exterior_light_status_);
  _impl_.front_wiper_status_.InternalSwap(&other->_impl_.front_wiper_status_);
  _impl_.rear_wiper_status_.InternalSwap(&other->_impl_.rear_wiper_status_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata VehicleDeviceCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fvehicle_5fdevice_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace vehicledevice
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
