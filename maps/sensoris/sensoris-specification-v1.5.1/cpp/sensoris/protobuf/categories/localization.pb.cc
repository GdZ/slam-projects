// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/localization.proto

#include "sensoris/protobuf/categories/localization.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace localization {

inline constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        count_{nullptr},
        hdop_{nullptr},
        vdop_{nullptr},
        pdop_{nullptr},
        tdop_{nullptr},
        snr_{nullptr},
        fix_type_{static_cast< ::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehiclePositionAndOrientation_NavigationSatelliteSystemStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehiclePositionAndOrientation_NavigationSatelliteSystemStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehiclePositionAndOrientation_NavigationSatelliteSystemStatusDefaultTypeInternal() {}
  union {
    VehiclePositionAndOrientation_NavigationSatelliteSystemStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehiclePositionAndOrientation_NavigationSatelliteSystemStatusDefaultTypeInternal _VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_default_instance_;

inline constexpr VehicleRotationRate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        value_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleRotationRate::VehicleRotationRate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleRotationRateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleRotationRateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleRotationRateDefaultTypeInternal() {}
  union {
    VehicleRotationRate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleRotationRateDefaultTypeInternal _VehicleRotationRate_default_instance_;

inline constexpr VehicleSpeed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        value_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleSpeed::VehicleSpeed(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleSpeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleSpeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleSpeedDefaultTypeInternal() {}
  union {
    VehicleSpeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleSpeedDefaultTypeInternal _VehicleSpeed_default_instance_;

inline constexpr VehiclePositionAndOrientation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        position_and_accuracy_{nullptr},
        orientation_and_accuracy_{nullptr},
        navigation_satellite_system_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehiclePositionAndOrientation::VehiclePositionAndOrientation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehiclePositionAndOrientationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehiclePositionAndOrientationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehiclePositionAndOrientationDefaultTypeInternal() {}
  union {
    VehiclePositionAndOrientation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehiclePositionAndOrientationDefaultTypeInternal _VehiclePositionAndOrientation_default_instance_;

inline constexpr VehicleOdometry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        end_timestamp_{nullptr},
        translation_and_accuracy_{nullptr},
        rotation_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleOdometry::VehicleOdometry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleOdometryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleOdometryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleOdometryDefaultTypeInternal() {}
  union {
    VehicleOdometry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleOdometryDefaultTypeInternal _VehicleOdometry_default_instance_;

inline constexpr VehicleAcceleration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        value_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleAcceleration::VehicleAcceleration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleAccelerationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleAccelerationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleAccelerationDefaultTypeInternal() {}
  union {
    VehicleAcceleration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleAccelerationDefaultTypeInternal _VehicleAcceleration_default_instance_;

inline constexpr LocalizationCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vehicle_position_and_orientation_{},
        vehicle_odometry_{},
        vehicle_speed_{},
        vehicle_acceleration_{},
        vehicle_rotation_rate_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationCategory::LocalizationCategory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocalizationCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationCategoryDefaultTypeInternal() {}
  union {
    LocalizationCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationCategoryDefaultTypeInternal _LocalizationCategory_default_instance_;
}  // namespace localization
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.fix_type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.hdop_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.vdop_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.pdop_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.tdop_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.snr_),
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _impl_.position_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _impl_.orientation_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation, _impl_.navigation_satellite_system_status_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _impl_.end_timestamp_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _impl_.translation_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleOdometry, _impl_.rotation_and_accuracy_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleSpeed, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleSpeed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleSpeed, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleSpeed, _impl_.value_and_accuracy_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleAcceleration, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleAcceleration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleAcceleration, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleAcceleration, _impl_.value_and_accuracy_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleRotationRate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleRotationRate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleRotationRate, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::VehicleRotationRate, _impl_.value_and_accuracy_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.vehicle_position_and_orientation_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.vehicle_odometry_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.vehicle_speed_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.vehicle_acceleration_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::localization::LocalizationCategory, _impl_.vehicle_rotation_rate_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus)},
        {22, 34, -1, sizeof(::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation)},
        {38, 50, -1, sizeof(::sensoris::protobuf::categories::localization::VehicleOdometry)},
        {54, 64, -1, sizeof(::sensoris::protobuf::categories::localization::VehicleSpeed)},
        {66, 76, -1, sizeof(::sensoris::protobuf::categories::localization::VehicleAcceleration)},
        {78, 88, -1, sizeof(::sensoris::protobuf::categories::localization::VehicleRotationRate)},
        {90, 104, -1, sizeof(::sensoris::protobuf::categories::localization::LocalizationCategory)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::categories::localization::_VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_VehiclePositionAndOrientation_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_VehicleOdometry_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_VehicleSpeed_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_VehicleAcceleration_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_VehicleRotationRate_default_instance_._instance,
    &::sensoris::protobuf::categories::localization::_LocalizationCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n/sensoris/protobuf/categories/localizat"
    "ion.proto\022)sensoris.protobuf.categories."
    "localization\032\"sensoris/protobuf/types/ba"
    "se.proto\032%sensoris/protobuf/types/spatia"
    "l.proto\"\203\n\n\035VehiclePositionAndOrientatio"
    "n\022=\n\010envelope\030\001 \001(\0132+.sensoris.protobuf."
    "types.base.EventEnvelope\022S\n\025position_and"
    "_accuracy\030\002 \001(\01324.sensoris.protobuf.type"
    "s.spatial.PositionAndAccuracy\022V\n\030orienta"
    "tion_and_accuracy\030\003 \001(\01324.sensoris.proto"
    "buf.types.spatial.RotationAndAccuracy\022\224\001"
    "\n\"navigation_satellite_system_status\030\004 \001"
    "(\0132h.sensoris.protobuf.categories.locali"
    "zation.VehiclePositionAndOrientation.Nav"
    "igationSatelliteSystemStatus\032\336\006\n\037Navigat"
    "ionSatelliteSystemStatus\022\202\001\n\010fix_type\030\001 "
    "\001(\0162p.sensoris.protobuf.categories.local"
    "ization.VehiclePositionAndOrientation.Na"
    "vigationSatelliteSystemStatus.FixType\0227\n"
    "\005count\030\002 \001(\0132(.sensoris.protobuf.types.b"
    "ase.Int64Value\022<\n\004hdop\030\003 \001(\0132(.sensoris."
    "protobuf.types.base.Int64ValueB\004\210\265\030\002\022<\n\004"
    "vdop\030\004 \001(\0132(.sensoris.protobuf.types.bas"
    "e.Int64ValueB\004\210\265\030\002\022<\n\004pdop\030\005 \001(\0132(.senso"
    "ris.protobuf.types.base.Int64ValueB\004\210\265\030\002"
    "\022<\n\004tdop\030\006 \001(\0132(.sensoris.protobuf.types"
    ".base.Int64ValueB\004\210\265\030\002\022;\n\003snr\030\010 \001(\0132(.se"
    "nsoris.protobuf.types.base.Int64ValueB\004\210"
    "\265\030\001\"\307\002\n\007FixType\022\024\n\020UNKNOWN_FIX_TYPE\020\000\022\010\n"
    "\004NONE\020\001\022\t\n\005TWO_D\020\002\022&\n\"TWO_D_SATELLITE_BA"
    "SED_AUGMENTATION\020\003\022#\n\037TWO_D_GROUND_BASED"
    "_AUGMENTATION\020\004\0221\n-TWO_D_SATELLITE_AND_G"
    "ROUND_BASED_AUGMENTATION\020\005\022\013\n\007THREE_D\020\006\022"
    "(\n$THREE_D_SATELLITE_BASED_AUGMENTATION\020"
    "\007\022%\n!THREE_D_GROUND_BASED_AUGMENTATION\020\010"
    "\0223\n/THREE_D_SATELLITE_AND_GROUND_BASED_A"
    "UGMENTATION\020\t\"\275\002\n\017VehicleOdometry\022=\n\010env"
    "elope\030\001 \001(\0132+.sensoris.protobuf.types.ba"
    "se.EventEnvelope\022>\n\rend_timestamp\030\002 \001(\0132"
    "\'.sensoris.protobuf.types.base.Timestamp"
    "\022V\n\030translation_and_accuracy\030\003 \001(\01324.sen"
    "soris.protobuf.types.spatial.PositionAnd"
    "Accuracy\022S\n\025rotation_and_accuracy\030\004 \001(\0132"
    "4.sensoris.protobuf.types.spatial.Rotati"
    "onAndAccuracy\"\246\001\n\014VehicleSpeed\022=\n\010envelo"
    "pe\030\001 \001(\0132+.sensoris.protobuf.types.base."
    "EventEnvelope\022W\n\022value_and_accuracy\030\002 \001("
    "\01325.sensoris.protobuf.types.spatial.XyzV"
    "ectorAndAccuracyB\004\210\265\030\001\"\255\001\n\023VehicleAccele"
    "ration\022=\n\010envelope\030\001 \001(\0132+.sensoris.prot"
    "obuf.types.base.EventEnvelope\022W\n\022value_a"
    "nd_accuracy\030\002 \001(\01325.sensoris.protobuf.ty"
    "pes.spatial.XyzVectorAndAccuracyB\004\210\265\030\001\"\252"
    "\001\n\023VehicleRotationRate\022=\n\010envelope\030\001 \001(\013"
    "2+.sensoris.protobuf.types.base.EventEnv"
    "elope\022T\n\022value_and_accuracy\030\002 \001(\01328.sens"
    "oris.protobuf.types.spatial.RotationRate"
    "AndAccuracy\"\257\004\n\024LocalizationCategory\022@\n\010"
    "envelope\030\001 \001(\0132..sensoris.protobuf.types"
    ".base.CategoryEnvelope\022r\n vehicle_positi"
    "on_and_orientation\030\002 \003(\0132H.sensoris.prot"
    "obuf.categories.localization.VehiclePosi"
    "tionAndOrientation\022T\n\020vehicle_odometry\030\003"
    " \003(\0132:.sensoris.protobuf.categories.loca"
    "lization.VehicleOdometry\022N\n\rvehicle_spee"
    "d\030\004 \003(\01327.sensoris.protobuf.categories.l"
    "ocalization.VehicleSpeed\022\\\n\024vehicle_acce"
    "leration\030\005 \003(\0132>.sensoris.protobuf.categ"
    "ories.localization.VehicleAcceleration\022]"
    "\n\025vehicle_rotation_rate\030\006 \003(\0132>.sensoris"
    ".protobuf.categories.localization.Vehicl"
    "eRotationRateB}\n$org.sensoris.categories"
    ".localizationB\034SensorisLocalizationCateg"
    "oryP\001Z2sensoris.org/specification/catego"
    "ries/localization\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_deps[2] =
    {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto = {
    false,
    false,
    2988,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto,
    "sensoris/protobuf/categories/localization.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_deps,
    2,
    7,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto(&descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto);
namespace sensoris {
namespace protobuf {
namespace categories {
namespace localization {
const ::google::protobuf::EnumDescriptor* VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType_internal_data_[] = {
    655360u, 0u, };
bool VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::UNKNOWN_FIX_TYPE;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::NONE;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::TWO_D;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::TWO_D_SATELLITE_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::TWO_D_GROUND_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::TWO_D_SATELLITE_AND_GROUND_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::THREE_D;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::THREE_D_SATELLITE_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::THREE_D_GROUND_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::THREE_D_SATELLITE_AND_GROUND_BASED_AUGMENTATION;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::FixType_MIN;
constexpr VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_FixType VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::FixType_MAX;
constexpr int VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::FixType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<VehiclePositionAndOrientation_NavigationSatelliteSystemStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Int64Value& count(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Int64Value& hdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_hdop(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::base::Int64Value& vdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_vdop(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::base::Int64Value& pdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_pdop(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::sensoris::protobuf::types::base::Int64Value& tdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_tdop(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::sensoris::protobuf::types::base::Int64Value& snr(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg);
  static void set_has_snr(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::count(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.count_;
}
const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::hdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.hdop_;
}
const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::vdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.vdop_;
}
const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::pdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.pdop_;
}
const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::tdop(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.tdop_;
}
const ::sensoris::protobuf::types::base::Int64Value& VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_Internal::snr(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* msg) {
  return *msg->_impl_.snr_;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.count_ != nullptr) _impl_.count_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_hdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.hdop_ != nullptr) _impl_.hdop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_vdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vdop_ != nullptr) _impl_.vdop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_pdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pdop_ != nullptr) _impl_.pdop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_tdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tdop_ != nullptr) _impl_.tdop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::clear_snr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.snr_ != nullptr) _impl_.snr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus(
    ::google::protobuf::Arena* arena,
    const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus& from)
    : ::google::protobuf::Message(arena) {
  VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.count_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.count_)
                : nullptr;
  _impl_.hdop_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.hdop_)
                : nullptr;
  _impl_.vdop_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.vdop_)
                : nullptr;
  _impl_.pdop_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.pdop_)
                : nullptr;
  _impl_.tdop_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.tdop_)
                : nullptr;
  _impl_.snr_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64Value>(arena, *from._impl_.snr_)
                : nullptr;
  _impl_.fix_type_ = from._impl_.fix_type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, fix_type_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::fix_type_));
}
VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::~VehiclePositionAndOrientation_NavigationSatelliteSystemStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.count_;
  delete _impl_.hdop_;
  delete _impl_.vdop_;
  delete _impl_.pdop_;
  delete _impl_.tdop_;
  delete _impl_.snr_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.count_ != nullptr);
      _impl_.count_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.hdop_ != nullptr);
      _impl_.hdop_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.vdop_ != nullptr);
      _impl_.vdop_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.pdop_ != nullptr);
      _impl_.pdop_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.tdop_ != nullptr);
      _impl_.tdop_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.snr_ != nullptr);
      _impl_.snr_->Clear();
    }
  }
  _impl_.fix_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehiclePositionAndOrientation_NavigationSatelliteSystemStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Int64Value snr = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.snr_)}},
    // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus.FixType fix_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.fix_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.fix_type_)}},
    // .sensoris.protobuf.types.base.Int64Value count = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.count_)}},
    // .sensoris.protobuf.types.base.Int64Value hdop = 3 [(.sensoris.protobuf.types.base.exponent) = 2];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.hdop_)}},
    // .sensoris.protobuf.types.base.Int64Value vdop = 4 [(.sensoris.protobuf.types.base.exponent) = 2];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.vdop_)}},
    // .sensoris.protobuf.types.base.Int64Value pdop = 5 [(.sensoris.protobuf.types.base.exponent) = 2];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.pdop_)}},
    // .sensoris.protobuf.types.base.Int64Value tdop = 6 [(.sensoris.protobuf.types.base.exponent) = 2];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.tdop_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus.FixType fix_type = 1;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.fix_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64Value count = 2;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value hdop = 3 [(.sensoris.protobuf.types.base.exponent) = 2];
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.hdop_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value vdop = 4 [(.sensoris.protobuf.types.base.exponent) = 2];
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.vdop_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value pdop = 5 [(.sensoris.protobuf.types.base.exponent) = 2];
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.pdop_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value tdop = 6 [(.sensoris.protobuf.types.base.exponent) = 2];
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.tdop_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value snr = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.snr_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
  }}, {{
  }},
};

::uint8_t* VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus.FixType fix_type = 1;
  if (this->_internal_fix_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_fix_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Int64Value count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::count(this),
        _Internal::count(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64Value hdop = 3 [(.sensoris.protobuf.types.base.exponent) = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::hdop(this),
        _Internal::hdop(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64Value vdop = 4 [(.sensoris.protobuf.types.base.exponent) = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::vdop(this),
        _Internal::vdop(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64Value pdop = 5 [(.sensoris.protobuf.types.base.exponent) = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::pdop(this),
        _Internal::pdop(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64Value tdop = 6 [(.sensoris.protobuf.types.base.exponent) = 2];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::tdop(this),
        _Internal::tdop(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64Value snr = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::snr(this),
        _Internal::snr(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  return target;
}

::size_t VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .sensoris.protobuf.types.base.Int64Value count = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.count_);
    }

    // .sensoris.protobuf.types.base.Int64Value hdop = 3 [(.sensoris.protobuf.types.base.exponent) = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hdop_);
    }

    // .sensoris.protobuf.types.base.Int64Value vdop = 4 [(.sensoris.protobuf.types.base.exponent) = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vdop_);
    }

    // .sensoris.protobuf.types.base.Int64Value pdop = 5 [(.sensoris.protobuf.types.base.exponent) = 2];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pdop_);
    }

    // .sensoris.protobuf.types.base.Int64Value tdop = 6 [(.sensoris.protobuf.types.base.exponent) = 2];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tdop_);
    }

    // .sensoris.protobuf.types.base.Int64Value snr = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.snr_);
    }

  }
  // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus.FixType fix_type = 1;
  if (this->_internal_fix_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_fix_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_class_data_ = {
    VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::GetClassData() const {
  return &_class_data_;
}

void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehiclePositionAndOrientation_NavigationSatelliteSystemStatus*>(&to_msg);
  auto& from = static_cast<const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_count()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_count());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_hdop()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_hdop());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_vdop()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_vdop());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_pdop()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_pdop());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_tdop()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_tdop());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_snr()->::sensoris::protobuf::types::base::Int64Value::MergeFrom(
          from._internal_snr());
    }
  }
  if (from._internal_fix_type() != 0) {
    _this->_internal_set_fix_type(from._internal_fix_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::CopyFrom(const VehiclePositionAndOrientation_NavigationSatelliteSystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::InternalSwap(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.fix_type_)
      + sizeof(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::_impl_.fix_type_)
      - PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation_NavigationSatelliteSystemStatus, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[0]);
}
// ===================================================================

class VehiclePositionAndOrientation::_Internal {
 public:
  using HasBits = decltype(std::declval<VehiclePositionAndOrientation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const VehiclePositionAndOrientation* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& position_and_accuracy(const VehiclePositionAndOrientation* msg);
  static void set_has_position_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& orientation_and_accuracy(const VehiclePositionAndOrientation* msg);
  static void set_has_orientation_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus& navigation_satellite_system_status(const VehiclePositionAndOrientation* msg);
  static void set_has_navigation_satellite_system_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& VehiclePositionAndOrientation::_Internal::envelope(const VehiclePositionAndOrientation* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& VehiclePositionAndOrientation::_Internal::position_and_accuracy(const VehiclePositionAndOrientation* msg) {
  return *msg->_impl_.position_and_accuracy_;
}
const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& VehiclePositionAndOrientation::_Internal::orientation_and_accuracy(const VehiclePositionAndOrientation* msg) {
  return *msg->_impl_.orientation_and_accuracy_;
}
const ::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus& VehiclePositionAndOrientation::_Internal::navigation_satellite_system_status(const VehiclePositionAndOrientation* msg) {
  return *msg->_impl_.navigation_satellite_system_status_;
}
void VehiclePositionAndOrientation::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehiclePositionAndOrientation::clear_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.position_and_accuracy_ != nullptr) _impl_.position_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void VehiclePositionAndOrientation::clear_orientation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.orientation_and_accuracy_ != nullptr) _impl_.orientation_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
VehiclePositionAndOrientation::VehiclePositionAndOrientation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePositionAndOrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehiclePositionAndOrientation::VehiclePositionAndOrientation(
    ::google::protobuf::Arena* arena,
    const VehiclePositionAndOrientation& from)
    : ::google::protobuf::Message(arena) {
  VehiclePositionAndOrientation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.position_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(arena, *from._impl_.position_and_accuracy_)
                : nullptr;
  _impl_.orientation_and_accuracy_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::RotationAndAccuracy>(arena, *from._impl_.orientation_and_accuracy_)
                : nullptr;
  _impl_.navigation_satellite_system_status_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus>(arena, *from._impl_.navigation_satellite_system_status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePositionAndOrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehiclePositionAndOrientation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, navigation_satellite_system_status_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::navigation_satellite_system_status_));
}
VehiclePositionAndOrientation::~VehiclePositionAndOrientation() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehiclePositionAndOrientation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.position_and_accuracy_;
  delete _impl_.orientation_and_accuracy_;
  delete _impl_.navigation_satellite_system_status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehiclePositionAndOrientation::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.position_and_accuracy_ != nullptr);
      _impl_.position_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.orientation_and_accuracy_ != nullptr);
      _impl_.orientation_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.navigation_satellite_system_status_ != nullptr);
      _impl_.navigation_satellite_system_status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehiclePositionAndOrientation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> VehiclePositionAndOrientation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehiclePositionAndOrientation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus navigation_satellite_system_status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.navigation_satellite_system_status_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.envelope_)}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.position_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.orientation_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.position_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.orientation_and_accuracy_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus navigation_satellite_system_status = 4;
    {PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.navigation_satellite_system_status_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RotationAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus>()},
  }}, {{
  }},
};

::uint8_t* VehiclePositionAndOrientation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::position_and_accuracy(this),
        _Internal::position_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::orientation_and_accuracy(this),
        _Internal::orientation_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus navigation_satellite_system_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::navigation_satellite_system_status(this),
        _Internal::navigation_satellite_system_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  return target;
}

::size_t VehiclePositionAndOrientation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.spatial.PositionAndAccuracy position_and_accuracy = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_and_accuracy_);
    }

    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.orientation_and_accuracy_);
    }

    // .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation.NavigationSatelliteSystemStatus navigation_satellite_system_status = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.navigation_satellite_system_status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehiclePositionAndOrientation::_class_data_ = {
    VehiclePositionAndOrientation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehiclePositionAndOrientation::GetClassData() const {
  return &_class_data_;
}

void VehiclePositionAndOrientation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehiclePositionAndOrientation*>(&to_msg);
  auto& from = static_cast<const VehiclePositionAndOrientation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_position_and_accuracy()->::sensoris::protobuf::types::spatial::PositionAndAccuracy::MergeFrom(
          from._internal_position_and_accuracy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_orientation_and_accuracy()->::sensoris::protobuf::types::spatial::RotationAndAccuracy::MergeFrom(
          from._internal_orientation_and_accuracy());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_navigation_satellite_system_status()->::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation_NavigationSatelliteSystemStatus::MergeFrom(
          from._internal_navigation_satellite_system_status());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehiclePositionAndOrientation::CopyFrom(const VehiclePositionAndOrientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehiclePositionAndOrientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehiclePositionAndOrientation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehiclePositionAndOrientation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehiclePositionAndOrientation::InternalSwap(VehiclePositionAndOrientation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.navigation_satellite_system_status_)
      + sizeof(VehiclePositionAndOrientation::_impl_.navigation_satellite_system_status_)
      - PROTOBUF_FIELD_OFFSET(VehiclePositionAndOrientation, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata VehiclePositionAndOrientation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[1]);
}
// ===================================================================

class VehicleOdometry::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleOdometry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const VehicleOdometry* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Timestamp& end_timestamp(const VehicleOdometry* msg);
  static void set_has_end_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& translation_and_accuracy(const VehicleOdometry* msg);
  static void set_has_translation_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& rotation_and_accuracy(const VehicleOdometry* msg);
  static void set_has_rotation_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& VehicleOdometry::_Internal::envelope(const VehicleOdometry* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::base::Timestamp& VehicleOdometry::_Internal::end_timestamp(const VehicleOdometry* msg) {
  return *msg->_impl_.end_timestamp_;
}
const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& VehicleOdometry::_Internal::translation_and_accuracy(const VehicleOdometry* msg) {
  return *msg->_impl_.translation_and_accuracy_;
}
const ::sensoris::protobuf::types::spatial::RotationAndAccuracy& VehicleOdometry::_Internal::rotation_and_accuracy(const VehicleOdometry* msg) {
  return *msg->_impl_.rotation_and_accuracy_;
}
void VehicleOdometry::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehicleOdometry::clear_end_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.end_timestamp_ != nullptr) _impl_.end_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void VehicleOdometry::clear_translation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.translation_and_accuracy_ != nullptr) _impl_.translation_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void VehicleOdometry::clear_rotation_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rotation_and_accuracy_ != nullptr) _impl_.rotation_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
VehicleOdometry::VehicleOdometry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehicleOdometry)
}
inline PROTOBUF_NDEBUG_INLINE VehicleOdometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehicleOdometry::VehicleOdometry(
    ::google::protobuf::Arena* arena,
    const VehicleOdometry& from)
    : ::google::protobuf::Message(arena) {
  VehicleOdometry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.end_timestamp_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Timestamp>(arena, *from._impl_.end_timestamp_)
                : nullptr;
  _impl_.translation_and_accuracy_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(arena, *from._impl_.translation_and_accuracy_)
                : nullptr;
  _impl_.rotation_and_accuracy_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::RotationAndAccuracy>(arena, *from._impl_.rotation_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehicleOdometry)
}
inline PROTOBUF_NDEBUG_INLINE VehicleOdometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehicleOdometry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, rotation_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::rotation_and_accuracy_));
}
VehicleOdometry::~VehicleOdometry() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehicleOdometry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleOdometry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.end_timestamp_;
  delete _impl_.translation_and_accuracy_;
  delete _impl_.rotation_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleOdometry::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehicleOdometry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_timestamp_ != nullptr);
      _impl_.end_timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.translation_and_accuracy_ != nullptr);
      _impl_.translation_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.rotation_and_accuracy_ != nullptr);
      _impl_.rotation_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleOdometry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> VehicleOdometry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleOdometry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy rotation_and_accuracy = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.rotation_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.envelope_)}},
    // .sensoris.protobuf.types.base.Timestamp end_timestamp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.end_timestamp_)}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.translation_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Timestamp end_timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.end_timestamp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.translation_and_accuracy_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy rotation_and_accuracy = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.rotation_and_accuracy_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Timestamp>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RotationAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* VehicleOdometry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehicleOdometry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Timestamp end_timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::end_timestamp(this),
        _Internal::end_timestamp(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::translation_and_accuracy(this),
        _Internal::translation_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy rotation_and_accuracy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::rotation_and_accuracy(this),
        _Internal::rotation_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehicleOdometry)
  return target;
}

::size_t VehicleOdometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehicleOdometry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.base.Timestamp end_timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_timestamp_);
    }

    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.translation_and_accuracy_);
    }

    // .sensoris.protobuf.types.spatial.RotationAndAccuracy rotation_and_accuracy = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rotation_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleOdometry::_class_data_ = {
    VehicleOdometry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleOdometry::GetClassData() const {
  return &_class_data_;
}

void VehicleOdometry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleOdometry*>(&to_msg);
  auto& from = static_cast<const VehicleOdometry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehicleOdometry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_end_timestamp()->::sensoris::protobuf::types::base::Timestamp::MergeFrom(
          from._internal_end_timestamp());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_translation_and_accuracy()->::sensoris::protobuf::types::spatial::PositionAndAccuracy::MergeFrom(
          from._internal_translation_and_accuracy());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_rotation_and_accuracy()->::sensoris::protobuf::types::spatial::RotationAndAccuracy::MergeFrom(
          from._internal_rotation_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleOdometry::CopyFrom(const VehicleOdometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehicleOdometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleOdometry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehicleOdometry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleOdometry::InternalSwap(VehicleOdometry* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.rotation_and_accuracy_)
      + sizeof(VehicleOdometry::_impl_.rotation_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(VehicleOdometry, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata VehicleOdometry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[2]);
}
// ===================================================================

class VehicleSpeed::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleSpeed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const VehicleSpeed* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& value_and_accuracy(const VehicleSpeed* msg);
  static void set_has_value_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& VehicleSpeed::_Internal::envelope(const VehicleSpeed* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& VehicleSpeed::_Internal::value_and_accuracy(const VehicleSpeed* msg) {
  return *msg->_impl_.value_and_accuracy_;
}
void VehicleSpeed::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehicleSpeed::clear_value_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_and_accuracy_ != nullptr) _impl_.value_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VehicleSpeed::VehicleSpeed(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehicleSpeed)
}
inline PROTOBUF_NDEBUG_INLINE VehicleSpeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehicleSpeed::VehicleSpeed(
    ::google::protobuf::Arena* arena,
    const VehicleSpeed& from)
    : ::google::protobuf::Message(arena) {
  VehicleSpeed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.value_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(arena, *from._impl_.value_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehicleSpeed)
}
inline PROTOBUF_NDEBUG_INLINE VehicleSpeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehicleSpeed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, value_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::value_and_accuracy_));
}
VehicleSpeed::~VehicleSpeed() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehicleSpeed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleSpeed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.value_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehicleSpeed)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.value_and_accuracy_ != nullptr);
      _impl_.value_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleSpeed::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VehicleSpeed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleSpeed_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.value_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.value_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* VehicleSpeed::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehicleSpeed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::value_and_accuracy(this),
        _Internal::value_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehicleSpeed)
  return target;
}

::size_t VehicleSpeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehicleSpeed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleSpeed::_class_data_ = {
    VehicleSpeed::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleSpeed::GetClassData() const {
  return &_class_data_;
}

void VehicleSpeed::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleSpeed*>(&to_msg);
  auto& from = static_cast<const VehicleSpeed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehicleSpeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value_and_accuracy()->::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy::MergeFrom(
          from._internal_value_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleSpeed::CopyFrom(const VehicleSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehicleSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleSpeed::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehicleSpeed::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleSpeed::InternalSwap(VehicleSpeed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.value_and_accuracy_)
      + sizeof(VehicleSpeed::_impl_.value_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(VehicleSpeed, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata VehicleSpeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[3]);
}
// ===================================================================

class VehicleAcceleration::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleAcceleration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const VehicleAcceleration* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& value_and_accuracy(const VehicleAcceleration* msg);
  static void set_has_value_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& VehicleAcceleration::_Internal::envelope(const VehicleAcceleration* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& VehicleAcceleration::_Internal::value_and_accuracy(const VehicleAcceleration* msg) {
  return *msg->_impl_.value_and_accuracy_;
}
void VehicleAcceleration::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehicleAcceleration::clear_value_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_and_accuracy_ != nullptr) _impl_.value_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VehicleAcceleration::VehicleAcceleration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehicleAcceleration)
}
inline PROTOBUF_NDEBUG_INLINE VehicleAcceleration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehicleAcceleration::VehicleAcceleration(
    ::google::protobuf::Arena* arena,
    const VehicleAcceleration& from)
    : ::google::protobuf::Message(arena) {
  VehicleAcceleration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.value_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(arena, *from._impl_.value_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehicleAcceleration)
}
inline PROTOBUF_NDEBUG_INLINE VehicleAcceleration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehicleAcceleration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, value_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::value_and_accuracy_));
}
VehicleAcceleration::~VehicleAcceleration() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehicleAcceleration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleAcceleration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.value_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleAcceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehicleAcceleration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.value_and_accuracy_ != nullptr);
      _impl_.value_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleAcceleration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VehicleAcceleration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleAcceleration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.value_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.value_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* VehicleAcceleration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehicleAcceleration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::value_and_accuracy(this),
        _Internal::value_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehicleAcceleration)
  return target;
}

::size_t VehicleAcceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehicleAcceleration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy value_and_accuracy = 2 [(.sensoris.protobuf.types.base.exponent) = 1];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleAcceleration::_class_data_ = {
    VehicleAcceleration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleAcceleration::GetClassData() const {
  return &_class_data_;
}

void VehicleAcceleration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleAcceleration*>(&to_msg);
  auto& from = static_cast<const VehicleAcceleration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehicleAcceleration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value_and_accuracy()->::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy::MergeFrom(
          from._internal_value_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleAcceleration::CopyFrom(const VehicleAcceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehicleAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleAcceleration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehicleAcceleration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleAcceleration::InternalSwap(VehicleAcceleration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.value_and_accuracy_)
      + sizeof(VehicleAcceleration::_impl_.value_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(VehicleAcceleration, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata VehicleAcceleration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[4]);
}
// ===================================================================

class VehicleRotationRate::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleRotationRate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const VehicleRotationRate* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::spatial::RotationRateAndAccuracy& value_and_accuracy(const VehicleRotationRate* msg);
  static void set_has_value_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& VehicleRotationRate::_Internal::envelope(const VehicleRotationRate* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::types::spatial::RotationRateAndAccuracy& VehicleRotationRate::_Internal::value_and_accuracy(const VehicleRotationRate* msg) {
  return *msg->_impl_.value_and_accuracy_;
}
void VehicleRotationRate::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VehicleRotationRate::clear_value_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_and_accuracy_ != nullptr) _impl_.value_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VehicleRotationRate::VehicleRotationRate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.VehicleRotationRate)
}
inline PROTOBUF_NDEBUG_INLINE VehicleRotationRate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehicleRotationRate::VehicleRotationRate(
    ::google::protobuf::Arena* arena,
    const VehicleRotationRate& from)
    : ::google::protobuf::Message(arena) {
  VehicleRotationRate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.value_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::RotationRateAndAccuracy>(arena, *from._impl_.value_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.VehicleRotationRate)
}
inline PROTOBUF_NDEBUG_INLINE VehicleRotationRate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehicleRotationRate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, value_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::value_and_accuracy_));
}
VehicleRotationRate::~VehicleRotationRate() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.VehicleRotationRate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleRotationRate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.value_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleRotationRate::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.VehicleRotationRate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.value_and_accuracy_ != nullptr);
      _impl_.value_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleRotationRate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> VehicleRotationRate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleRotationRate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.spatial.RotationRateAndAccuracy value_and_accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.value_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RotationRateAndAccuracy value_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.value_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RotationRateAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* VehicleRotationRate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.VehicleRotationRate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.RotationRateAndAccuracy value_and_accuracy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::value_and_accuracy(this),
        _Internal::value_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.VehicleRotationRate)
  return target;
}

::size_t VehicleRotationRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.VehicleRotationRate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.types.spatial.RotationRateAndAccuracy value_and_accuracy = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleRotationRate::_class_data_ = {
    VehicleRotationRate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleRotationRate::GetClassData() const {
  return &_class_data_;
}

void VehicleRotationRate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleRotationRate*>(&to_msg);
  auto& from = static_cast<const VehicleRotationRate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.VehicleRotationRate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value_and_accuracy()->::sensoris::protobuf::types::spatial::RotationRateAndAccuracy::MergeFrom(
          from._internal_value_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleRotationRate::CopyFrom(const VehicleRotationRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.VehicleRotationRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleRotationRate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VehicleRotationRate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleRotationRate::InternalSwap(VehicleRotationRate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.value_and_accuracy_)
      + sizeof(VehicleRotationRate::_impl_.value_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(VehicleRotationRate, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata VehicleRotationRate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[5]);
}
// ===================================================================

class LocalizationCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<LocalizationCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::CategoryEnvelope& envelope(const LocalizationCategory* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::CategoryEnvelope& LocalizationCategory::_Internal::envelope(const LocalizationCategory* msg) {
  return *msg->_impl_.envelope_;
}
void LocalizationCategory::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LocalizationCategory::LocalizationCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.localization.LocalizationCategory)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vehicle_position_and_orientation_{visibility, arena, from.vehicle_position_and_orientation_},
        vehicle_odometry_{visibility, arena, from.vehicle_odometry_},
        vehicle_speed_{visibility, arena, from.vehicle_speed_},
        vehicle_acceleration_{visibility, arena, from.vehicle_acceleration_},
        vehicle_rotation_rate_{visibility, arena, from.vehicle_rotation_rate_} {}

LocalizationCategory::LocalizationCategory(
    ::google::protobuf::Arena* arena,
    const LocalizationCategory& from)
    : ::google::protobuf::Message(arena) {
  LocalizationCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::CategoryEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.localization.LocalizationCategory)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vehicle_position_and_orientation_{visibility, arena},
        vehicle_odometry_{visibility, arena},
        vehicle_speed_{visibility, arena},
        vehicle_acceleration_{visibility, arena},
        vehicle_rotation_rate_{visibility, arena} {}

inline void LocalizationCategory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
LocalizationCategory::~LocalizationCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.localization.LocalizationCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocalizationCategory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LocalizationCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.localization.LocalizationCategory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vehicle_position_and_orientation_.Clear();
  _impl_.vehicle_odometry_.Clear();
  _impl_.vehicle_speed_.Clear();
  _impl_.vehicle_acceleration_.Clear();
  _impl_.vehicle_rotation_rate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocalizationCategory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> LocalizationCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocalizationCategory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation vehicle_position_and_orientation = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_position_and_orientation_)}},
    // repeated .sensoris.protobuf.categories.localization.VehicleOdometry vehicle_odometry = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_odometry_)}},
    // repeated .sensoris.protobuf.categories.localization.VehicleSpeed vehicle_speed = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_speed_)}},
    // repeated .sensoris.protobuf.categories.localization.VehicleAcceleration vehicle_acceleration = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_acceleration_)}},
    // repeated .sensoris.protobuf.categories.localization.VehicleRotationRate vehicle_rotation_rate = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_rotation_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation vehicle_position_and_orientation = 2;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_position_and_orientation_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.localization.VehicleOdometry vehicle_odometry = 3;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_odometry_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.localization.VehicleSpeed vehicle_speed = 4;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_speed_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.localization.VehicleAcceleration vehicle_acceleration = 5;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_acceleration_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.localization.VehicleRotationRate vehicle_rotation_rate = 6;
    {PROTOBUF_FIELD_OFFSET(LocalizationCategory, _impl_.vehicle_rotation_rate_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehiclePositionAndOrientation>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehicleOdometry>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehicleSpeed>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehicleAcceleration>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::localization::VehicleRotationRate>()},
  }}, {{
  }},
};

::uint8_t* LocalizationCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.localization.LocalizationCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation vehicle_position_and_orientation = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_position_and_orientation_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_position_and_orientation().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.localization.VehicleOdometry vehicle_odometry = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_odometry_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_odometry().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.localization.VehicleSpeed vehicle_speed = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_speed_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_speed().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.localization.VehicleAcceleration vehicle_acceleration = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_acceleration_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_acceleration().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.localization.VehicleRotationRate vehicle_rotation_rate = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_rotation_rate_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_rotation_rate().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.localization.LocalizationCategory)
  return target;
}

::size_t LocalizationCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.localization.LocalizationCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.localization.VehiclePositionAndOrientation vehicle_position_and_orientation = 2;
  total_size += 1UL * this->_internal_vehicle_position_and_orientation_size();
  for (const auto& msg : this->_internal_vehicle_position_and_orientation()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.localization.VehicleOdometry vehicle_odometry = 3;
  total_size += 1UL * this->_internal_vehicle_odometry_size();
  for (const auto& msg : this->_internal_vehicle_odometry()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.localization.VehicleSpeed vehicle_speed = 4;
  total_size += 1UL * this->_internal_vehicle_speed_size();
  for (const auto& msg : this->_internal_vehicle_speed()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.localization.VehicleAcceleration vehicle_acceleration = 5;
  total_size += 1UL * this->_internal_vehicle_acceleration_size();
  for (const auto& msg : this->_internal_vehicle_acceleration()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.localization.VehicleRotationRate vehicle_rotation_rate = 6;
  total_size += 1UL * this->_internal_vehicle_rotation_rate_size();
  for (const auto& msg : this->_internal_vehicle_rotation_rate()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocalizationCategory::_class_data_ = {
    LocalizationCategory::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LocalizationCategory::GetClassData() const {
  return &_class_data_;
}

void LocalizationCategory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocalizationCategory*>(&to_msg);
  auto& from = static_cast<const LocalizationCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.localization.LocalizationCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vehicle_position_and_orientation()->MergeFrom(
      from._internal_vehicle_position_and_orientation());
  _this->_internal_mutable_vehicle_odometry()->MergeFrom(
      from._internal_vehicle_odometry());
  _this->_internal_mutable_vehicle_speed()->MergeFrom(
      from._internal_vehicle_speed());
  _this->_internal_mutable_vehicle_acceleration()->MergeFrom(
      from._internal_vehicle_acceleration());
  _this->_internal_mutable_vehicle_rotation_rate()->MergeFrom(
      from._internal_vehicle_rotation_rate());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::CategoryEnvelope::MergeFrom(
        from._internal_envelope());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationCategory::CopyFrom(const LocalizationCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.localization.LocalizationCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocalizationCategory::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LocalizationCategory::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LocalizationCategory::InternalSwap(LocalizationCategory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vehicle_position_and_orientation_.InternalSwap(&other->_impl_.vehicle_position_and_orientation_);
  _impl_.vehicle_odometry_.InternalSwap(&other->_impl_.vehicle_odometry_);
  _impl_.vehicle_speed_.InternalSwap(&other->_impl_.vehicle_speed_);
  _impl_.vehicle_acceleration_.InternalSwap(&other->_impl_.vehicle_acceleration_);
  _impl_.vehicle_rotation_rate_.InternalSwap(&other->_impl_.vehicle_rotation_rate_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata LocalizationCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2flocalization_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
