// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/driving_behavior.proto

#include "sensoris/protobuf/categories/driving_behavior.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace drivingbehavior {

inline constexpr ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ParkingStatus_StatusAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatus_StatusAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatus_StatusAndConfidenceDefaultTypeInternal() {}
  union {
    ParkingStatus_StatusAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatus_StatusAndConfidenceDefaultTypeInternal _ParkingStatus_StatusAndConfidence_default_instance_;

inline constexpr ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ParkingStatus_DirectionAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatus_DirectionAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatus_DirectionAndConfidenceDefaultTypeInternal() {}
  union {
    ParkingStatus_DirectionAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatus_DirectionAndConfidenceDefaultTypeInternal _ParkingStatus_DirectionAndConfidence_default_instance_;

inline constexpr ParkingStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        status_and_confidence_{nullptr},
        direction_and_confidence_{nullptr},
        duration_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus::ParkingStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ParkingStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatusDefaultTypeInternal() {}
  union {
    ParkingStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatusDefaultTypeInternal _ParkingStatus_default_instance_;

inline constexpr DrivingBehaviorCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parking_status_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DrivingBehaviorCategory::DrivingBehaviorCategory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DrivingBehaviorCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrivingBehaviorCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrivingBehaviorCategoryDefaultTypeInternal() {}
  union {
    DrivingBehaviorCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrivingBehaviorCategoryDefaultTypeInternal _DrivingBehaviorCategory_default_instance_;
}  // namespace drivingbehavior
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.status_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.direction_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.duration_and_accuracy_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_.parking_status_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence)},
        {12, 22, -1, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence)},
        {24, 36, -1, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus)},
        {40, 50, -1, sizeof(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_StatusAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_DirectionAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_DrivingBehaviorCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n3sensoris/protobuf/categories/driving_b"
    "ehavior.proto\022,sensoris.protobuf.categor"
    "ies.drivingbehavior\032\"sensoris/protobuf/t"
    "ypes/base.proto\"\204\007\n\rParkingStatus\022=\n\010env"
    "elope\030\001 \001(\0132+.sensoris.protobuf.types.ba"
    "se.EventEnvelope\022n\n\025status_and_confidenc"
    "e\030\002 \001(\0132O.sensoris.protobuf.categories.d"
    "rivingbehavior.ParkingStatus.StatusAndCo"
    "nfidence\022t\n\030direction_and_confidence\030\003 \001"
    "(\0132R.sensoris.protobuf.categories.drivin"
    "gbehavior.ParkingStatus.DirectionAndConf"
    "idence\022X\n\025duration_and_accuracy\030\004 \001(\01323."
    "sensoris.protobuf.types.base.Int64ValueA"
    "ndAccuracyB\004\210\265\030\000\032\354\001\n\023StatusAndConfidence"
    "\022b\n\004type\030\001 \001(\0162T.sensoris.protobuf.categ"
    "ories.drivingbehavior.ParkingStatus.Stat"
    "usAndConfidence.Type\022<\n\nconfidence\030\002 \001(\013"
    "2(.sensoris.protobuf.types.base.Confiden"
    "ce\"3\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\013\n\007PARK_IN\020"
    "\001\022\014\n\010PARK_OUT\020\002\032\204\002\n\026DirectionAndConfiden"
    "ce\022e\n\004type\030\001 \001(\0162W.sensoris.protobuf.cat"
    "egories.drivingbehavior.ParkingStatus.Di"
    "rectionAndConfidence.Type\022<\n\nconfidence\030"
    "\002 \001(\0132(.sensoris.protobuf.types.base.Con"
    "fidence\"E\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\020\n\014LON"
    "GITUDINAL\020\001\022\013\n\007LATERAL\020\002\022\014\n\010DIAGONAL\020\003\"\260"
    "\001\n\027DrivingBehaviorCategory\022@\n\010envelope\030\001"
    " \001(\0132..sensoris.protobuf.types.base.Cate"
    "goryEnvelope\022S\n\016parking_status\030\002 \003(\0132;.s"
    "ensoris.protobuf.categories.drivingbehav"
    "ior.ParkingStatusB\206\001\n\'org.sensoris.categ"
    "ories.drivingbehaviorB\037SensorisDrivingBe"
    "haviorCategoryP\001Z5sensoris.org/specifica"
    "tion/categories/drivingbehavior\370\001\001b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_deps[1] =
    {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto = {
    false,
    false,
    1362,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
    "sensoris/protobuf/categories/driving_behavior.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto);
namespace sensoris {
namespace protobuf {
namespace categories {
namespace drivingbehavior {
const ::google::protobuf::EnumDescriptor* ParkingStatus_StatusAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ParkingStatus_StatusAndConfidence_Type_internal_data_[] = {
    196608u, 0u, };
bool ParkingStatus_StatusAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ParkingStatus_StatusAndConfidence_Type ParkingStatus_StatusAndConfidence::UNKNOWN_TYPE;
constexpr ParkingStatus_StatusAndConfidence_Type ParkingStatus_StatusAndConfidence::PARK_IN;
constexpr ParkingStatus_StatusAndConfidence_Type ParkingStatus_StatusAndConfidence::PARK_OUT;
constexpr ParkingStatus_StatusAndConfidence_Type ParkingStatus_StatusAndConfidence::Type_MIN;
constexpr ParkingStatus_StatusAndConfidence_Type ParkingStatus_StatusAndConfidence::Type_MAX;
constexpr int ParkingStatus_StatusAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ParkingStatus_DirectionAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ParkingStatus_DirectionAndConfidence_Type_internal_data_[] = {
    262144u, 0u, };
bool ParkingStatus_DirectionAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::UNKNOWN_TYPE;
constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::LONGITUDINAL;
constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::LATERAL;
constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::DIAGONAL;
constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::Type_MIN;
constexpr ParkingStatus_DirectionAndConfidence_Type ParkingStatus_DirectionAndConfidence::Type_MAX;
constexpr int ParkingStatus_DirectionAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ParkingStatus_StatusAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingStatus_StatusAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const ParkingStatus_StatusAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& ParkingStatus_StatusAndConfidence::_Internal::confidence(const ParkingStatus_StatusAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void ParkingStatus_StatusAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(
    ::google::protobuf::Arena* arena,
    const ParkingStatus_StatusAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  ParkingStatus_StatusAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ParkingStatus_StatusAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
ParkingStatus_StatusAndConfidence::~ParkingStatus_StatusAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ParkingStatus_StatusAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ParkingStatus_StatusAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ParkingStatus_StatusAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ParkingStatus_StatusAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ParkingStatus_StatusAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ParkingStatus_StatusAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* ParkingStatus_StatusAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  return target;
}

::size_t ParkingStatus_StatusAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ParkingStatus_StatusAndConfidence::_class_data_ = {
    ParkingStatus_StatusAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ParkingStatus_StatusAndConfidence::GetClassData() const {
  return &_class_data_;
}

void ParkingStatus_StatusAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ParkingStatus_StatusAndConfidence*>(&to_msg);
  auto& from = static_cast<const ParkingStatus_StatusAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus_StatusAndConfidence::CopyFrom(const ParkingStatus_StatusAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ParkingStatus_StatusAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ParkingStatus_StatusAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ParkingStatus_StatusAndConfidence::InternalSwap(ParkingStatus_StatusAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_)
      + sizeof(ParkingStatus_StatusAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata ParkingStatus_StatusAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[0]);
}
// ===================================================================

class ParkingStatus_DirectionAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingStatus_DirectionAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const ParkingStatus_DirectionAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& ParkingStatus_DirectionAndConfidence::_Internal::confidence(const ParkingStatus_DirectionAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void ParkingStatus_DirectionAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(
    ::google::protobuf::Arena* arena,
    const ParkingStatus_DirectionAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  ParkingStatus_DirectionAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ParkingStatus_DirectionAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
ParkingStatus_DirectionAndConfidence::~ParkingStatus_DirectionAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ParkingStatus_DirectionAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ParkingStatus_DirectionAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ParkingStatus_DirectionAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ParkingStatus_DirectionAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ParkingStatus_DirectionAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ParkingStatus_DirectionAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* ParkingStatus_DirectionAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  return target;
}

::size_t ParkingStatus_DirectionAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ParkingStatus_DirectionAndConfidence::_class_data_ = {
    ParkingStatus_DirectionAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ParkingStatus_DirectionAndConfidence::GetClassData() const {
  return &_class_data_;
}

void ParkingStatus_DirectionAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ParkingStatus_DirectionAndConfidence*>(&to_msg);
  auto& from = static_cast<const ParkingStatus_DirectionAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus_DirectionAndConfidence::CopyFrom(const ParkingStatus_DirectionAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ParkingStatus_DirectionAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ParkingStatus_DirectionAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ParkingStatus_DirectionAndConfidence::InternalSwap(ParkingStatus_DirectionAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_)
      + sizeof(ParkingStatus_DirectionAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata ParkingStatus_DirectionAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[1]);
}
// ===================================================================

class ParkingStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ParkingStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const ParkingStatus* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence& status_and_confidence(const ParkingStatus* msg);
  static void set_has_status_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence& direction_and_confidence(const ParkingStatus* msg);
  static void set_has_direction_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& duration_and_accuracy(const ParkingStatus* msg);
  static void set_has_duration_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& ParkingStatus::_Internal::envelope(const ParkingStatus* msg) {
  return *msg->_impl_.envelope_;
}
const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence& ParkingStatus::_Internal::status_and_confidence(const ParkingStatus* msg) {
  return *msg->_impl_.status_and_confidence_;
}
const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence& ParkingStatus::_Internal::direction_and_confidence(const ParkingStatus* msg) {
  return *msg->_impl_.direction_and_confidence_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& ParkingStatus::_Internal::duration_and_accuracy(const ParkingStatus* msg) {
  return *msg->_impl_.duration_and_accuracy_;
}
void ParkingStatus::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ParkingStatus::clear_duration_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.duration_and_accuracy_ != nullptr) _impl_.duration_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ParkingStatus::ParkingStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus::ParkingStatus(
    ::google::protobuf::Arena* arena,
    const ParkingStatus& from)
    : ::google::protobuf::Message(arena) {
  ParkingStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.status_and_confidence_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence>(arena, *from._impl_.status_and_confidence_)
                : nullptr;
  _impl_.direction_and_confidence_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence>(arena, *from._impl_.direction_and_confidence_)
                : nullptr;
  _impl_.duration_and_accuracy_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(arena, *from._impl_.duration_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
}
inline PROTOBUF_NDEBUG_INLINE ParkingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ParkingStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, duration_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::duration_and_accuracy_));
}
ParkingStatus::~ParkingStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ParkingStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.status_and_confidence_;
  delete _impl_.direction_and_confidence_;
  delete _impl_.duration_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ParkingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.status_and_confidence_ != nullptr);
      _impl_.status_and_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.direction_and_confidence_ != nullptr);
      _impl_.direction_and_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.duration_and_accuracy_ != nullptr);
      _impl_.duration_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ParkingStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> ParkingStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ParkingStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.status_and_confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.direction_and_confidence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.status_and_confidence_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.direction_and_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* ParkingStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::status_and_confidence(this),
        _Internal::status_and_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::direction_and_confidence(this),
        _Internal::direction_and_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::duration_and_accuracy(this),
        _Internal::duration_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  return target;
}

::size_t ParkingStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_and_confidence_);
    }

    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.direction_and_confidence_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.duration_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ParkingStatus::_class_data_ = {
    ParkingStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ParkingStatus::GetClassData() const {
  return &_class_data_;
}

void ParkingStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ParkingStatus*>(&to_msg);
  auto& from = static_cast<const ParkingStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_status_and_confidence()->::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence::MergeFrom(
          from._internal_status_and_confidence());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_direction_and_confidence()->::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence::MergeFrom(
          from._internal_direction_and_confidence());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_duration_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy::MergeFrom(
          from._internal_duration_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus::CopyFrom(const ParkingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ParkingStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ParkingStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ParkingStatus::InternalSwap(ParkingStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_)
      + sizeof(ParkingStatus::_impl_.duration_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata ParkingStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[2]);
}
// ===================================================================

class DrivingBehaviorCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<DrivingBehaviorCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::CategoryEnvelope& envelope(const DrivingBehaviorCategory* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::CategoryEnvelope& DrivingBehaviorCategory::_Internal::envelope(const DrivingBehaviorCategory* msg) {
  return *msg->_impl_.envelope_;
}
void DrivingBehaviorCategory::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DrivingBehaviorCategory::DrivingBehaviorCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
}
inline PROTOBUF_NDEBUG_INLINE DrivingBehaviorCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parking_status_{visibility, arena, from.parking_status_} {}

DrivingBehaviorCategory::DrivingBehaviorCategory(
    ::google::protobuf::Arena* arena,
    const DrivingBehaviorCategory& from)
    : ::google::protobuf::Message(arena) {
  DrivingBehaviorCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::CategoryEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
}
inline PROTOBUF_NDEBUG_INLINE DrivingBehaviorCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        parking_status_{visibility, arena} {}

inline void DrivingBehaviorCategory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
DrivingBehaviorCategory::~DrivingBehaviorCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrivingBehaviorCategory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DrivingBehaviorCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parking_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DrivingBehaviorCategory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DrivingBehaviorCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DrivingBehaviorCategory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.parking_status_)}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
    {PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.parking_status_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus>()},
  }}, {{
  }},
};

::uint8_t* DrivingBehaviorCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parking_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_parking_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  return target;
}

::size_t DrivingBehaviorCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
  total_size += 1UL * this->_internal_parking_status_size();
  for (const auto& msg : this->_internal_parking_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DrivingBehaviorCategory::_class_data_ = {
    DrivingBehaviorCategory::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DrivingBehaviorCategory::GetClassData() const {
  return &_class_data_;
}

void DrivingBehaviorCategory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DrivingBehaviorCategory*>(&to_msg);
  auto& from = static_cast<const DrivingBehaviorCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_parking_status()->MergeFrom(
      from._internal_parking_status());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::CategoryEnvelope::MergeFrom(
        from._internal_envelope());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrivingBehaviorCategory::CopyFrom(const DrivingBehaviorCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DrivingBehaviorCategory::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DrivingBehaviorCategory::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DrivingBehaviorCategory::InternalSwap(DrivingBehaviorCategory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parking_status_.InternalSwap(&other->_impl_.parking_status_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata DrivingBehaviorCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace drivingbehavior
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
