// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/object_detection.proto

#include "sensoris/protobuf/categories/object_detection.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {

inline constexpr StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObject_TypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_TypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_TypeAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_TypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_TypeAndConfidenceDefaultTypeInternal _StaticObject_TypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceTypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal _StaticObject_SurfaceTypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceColorAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal _StaticObject_SurfaceColorAndConfidence_default_instance_;

inline constexpr MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MovableObject_TypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovableObject_TypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovableObject_TypeAndConfidenceDefaultTypeInternal() {}
  union {
    MovableObject_TypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovableObject_TypeAndConfidenceDefaultTypeInternal _MovableObject_TypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        reflectivity_and_accuracy_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceMaterialAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal _StaticObject_SurfaceMaterialAndConfidence_default_instance_;

inline constexpr StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        lower_position_and_accuracy_{nullptr},
        upper_position_and_accuracy_{nullptr},
        lower_diameter_and_accuracy_{nullptr},
        upper_diameter_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObject_ConeAndAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_ConeAndAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_ConeAndAccuracyDefaultTypeInternal() {}
  union {
    StaticObject_ConeAndAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_ConeAndAccuracyDefaultTypeInternal _StaticObject_ConeAndAccuracy_default_instance_;

inline constexpr StaticObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        surface_color_and_confidence_{},
        envelope_{nullptr},
        object_id_{nullptr},
        existence_confidence_{nullptr},
        detection_status_{nullptr},
        type_and_confidence_{nullptr},
        surface_type_and_confidence_{nullptr},
        surface_material_and_confidence_{nullptr},
        geometry_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject::StaticObject(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StaticObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObjectDefaultTypeInternal() {}
  union {
    StaticObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObjectDefaultTypeInternal _StaticObject_default_instance_;

inline constexpr MovableObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        object_id_{nullptr},
        existence_confidence_{nullptr},
        detection_status_{nullptr},
        type_and_confidence_{nullptr},
        rectangular_box_and_accuracy_{nullptr},
        speed_and_accuracy_{nullptr},
        acceleration_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MovableObject::MovableObject(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MovableObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovableObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovableObjectDefaultTypeInternal() {}
  union {
    MovableObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovableObjectDefaultTypeInternal _MovableObject_default_instance_;

inline constexpr ObjectDetectionCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        movable_object_{},
        static_object_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ObjectDetectionCategory::ObjectDetectionCategory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ObjectDetectionCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectDetectionCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectDetectionCategoryDefaultTypeInternal() {}
  union {
    ObjectDetectionCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectDetectionCategoryDefaultTypeInternal _ObjectDetectionCategory_default_instance_;
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.object_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.existence_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.detection_status_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.type_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.rectangular_box_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.speed_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.acceleration_and_accuracy_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.extension_),
    0,
    1,
    2,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_.confidence_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.object_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.existence_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.detection_status_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.type_and_confidence_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_type_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_material_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_color_and_confidence_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.geometry_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    ~0u,
    5,
    6,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.envelope_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.movable_object_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.static_object_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence)},
        {12, 28, -1, sizeof(::sensoris::protobuf::categories::objectdetection::MovableObject)},
        {36, 46, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence)},
        {48, 61, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy)},
        {66, 76, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence)},
        {78, 89, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence)},
        {92, 102, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence)},
        {104, 123, -1, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject)},
        {133, 144, -1, sizeof(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::categories::objectdetection::_MovableObject_TypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_MovableObject_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_TypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_ConeAndAccuracy_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceTypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceMaterialAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceColorAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_ObjectDetectionCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n3sensoris/protobuf/categories/object_de"
    "tection.proto\022,sensoris.protobuf.categor"
    "ies.objectdetection\032\031google/protobuf/any"
    ".proto\032\036google/protobuf/wrappers.proto\032\""
    "sensoris/protobuf/types/base.proto\032%sens"
    "oris/protobuf/types/spatial.proto\"\275\010\n\rMo"
    "vableObject\022=\n\010envelope\030\001 \001(\0132+.sensoris"
    ".protobuf.types.base.EventEnvelope\022.\n\tob"
    "ject_id\030\002 \001(\0132\033.google.protobuf.Int64Val"
    "ue\022F\n\024existence_confidence\030\003 \001(\0132(.senso"
    "ris.protobuf.types.base.Confidence\022L\n\020de"
    "tection_status\030\004 \001(\01322.sensoris.protobuf"
    ".types.base.EventDetectionStatus\022j\n\023type"
    "_and_confidence\030\005 \001(\0132M.sensoris.protobu"
    "f.categories.objectdetection.MovableObje"
    "ct.TypeAndConfidence\022`\n\034rectangular_box_"
    "and_accuracy\030\006 \001(\0132:.sensoris.protobuf.t"
    "ypes.spatial.RectangularBoxAndAccuracy\022W"
    "\n\022speed_and_accuracy\030\007 \001(\01325.sensoris.pr"
    "otobuf.types.spatial.XyzVectorAndAccurac"
    "yB\004\210\265\030\001\022^\n\031acceleration_and_accuracy\030\010 \001"
    "(\01325.sensoris.protobuf.types.spatial.Xyz"
    "VectorAndAccuracyB\004\210\265\030\001\032\237\003\n\021TypeAndConfi"
    "dence\022`\n\004type\030\001 \001(\0162R.sensoris.protobuf."
    "categories.objectdetection.MovableObject"
    ".TypeAndConfidence.Type\022<\n\nconfidence\030\002 "
    "\001(\0132(.sensoris.protobuf.types.base.Confi"
    "dence\"\351\001\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\013\n\007VEHI"
    "CLE\020\001\022\031\n\025VEHICLE_PASSENGER_CAR\020\002\022\021\n\rVEHI"
    "CLE_TRUCK\020\003\022\017\n\013VEHICLE_BUS\020\004\022\020\n\014VEHICLE_"
    "TRAM\020\005\022\023\n\017VEHICLE_TRAILER\020\006\022\017\n\013TWO_WHEEL"
    "ER\020\007\022\032\n\026TWO_WHEELER_MOTORCYCLE\020\010\022\027\n\023TWO_"
    "WHEELER_BICYCLE\020\t\022\n\n\006PERSON\020\n\022\n\n\006ANIMAL\020"
    "\013\"\306\030\n\014StaticObject\022=\n\010envelope\030\001 \001(\0132+.s"
    "ensoris.protobuf.types.base.EventEnvelop"
    "e\022.\n\tobject_id\030\002 \001(\0132\033.google.protobuf.I"
    "nt64Value\022F\n\024existence_confidence\030\003 \001(\0132"
    "(.sensoris.protobuf.types.base.Confidenc"
    "e\022L\n\020detection_status\030\004 \001(\01322.sensoris.p"
    "rotobuf.types.base.EventDetectionStatus\022"
    "i\n\023type_and_confidence\030\005 \001(\0132L.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObject.TypeAndConfidence\022b\n\034rectangula"
    "r_box_and_accuracy\030\006 \001(\0132:.sensoris.prot"
    "obuf.types.spatial.RectangularBoxAndAccu"
    "racyH\000\022g\n\021cone_and_accuracy\030\007 \001(\0132J.sens"
    "oris.protobuf.categories.objectdetection"
    ".StaticObject.ConeAndAccuracyH\000\022x\n\033surfa"
    "ce_type_and_confidence\030\010 \001(\0132S.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObject.SurfaceTypeAndConfidence\022\200\001\n\037su"
    "rface_material_and_confidence\030\t \001(\0132W.se"
    "nsoris.protobuf.categories.objectdetecti"
    "on.StaticObject.SurfaceMaterialAndConfid"
    "ence\022z\n\034surface_color_and_confidence\030\n \003"
    "(\0132T.sensoris.protobuf.categories.object"
    "detection.StaticObject.SurfaceColorAndCo"
    "nfidence\032\327\005\n\021TypeAndConfidence\022_\n\004type\030\001"
    " \001(\0162Q.sensoris.protobuf.categories.obje"
    "ctdetection.StaticObject.TypeAndConfiden"
    "ce.Type\022<\n\nconfidence\030\002 \001(\0132(.sensoris.p"
    "rotobuf.types.base.Confidence\"\242\004\n\004Type\022\020"
    "\n\014UNKNOWN_TYPE\020\000\022\n\n\006BRIDGE\020\001\022\n\n\006TUNNEL\020\002"
    "\022\010\n\004POLE\020\003\022\016\n\nPOLE_LIGHT\020\004\022\022\n\016POLE_REFLE"
    "CTOR\020\005\022\023\n\017POLE_DELINEATOR\020\006\022\017\n\013POLE_GANT"
    "RY\020\007\022\r\n\tPOLE_SIGN\020\010\022\023\n\017POLE_GUARD_RAIL\020\t"
    "\022\007\n\003BAR\020\n\022\010\n\004TREE\020\013\022\013\n\007BOLLARD\020\014\022\010\n\004CONE"
    "\020\r\022\n\n\006BARREL\020\016\022\010\n\004WALL\020\017\022\022\n\016TRAFFIC_ISLA"
    "ND\020\020\022\016\n\nSPEED_BUMP\020\021\022\014\n\010POT_HOLE\020\022\022\021\n\rMA"
    "NHOLE_COVER\020\023\022\030\n\024MANHOLE_COVER_CLOSED\020\024\022"
    "\026\n\022MANHOLE_COVER_OPEN\020\025\022\017\n\013SIGN_BRIDGE\020\026"
    "\022\026\n\022TRAFFIC_LIGHT_BODY\020\027\022\027\n\023BARRIER_PARK"
    "ING_LOT\020\030\022\022\n\016SURFACE_RAISED\020\031\022\036\n\032TRAFFIC"
    "_ENFORCEMENT_CAMERA\020\032\022$\n TRAFFIC_ENFORCE"
    "MENT_CAMERA_FIXED\020\033\022%\n!TRAFFIC_ENFORCEME"
    "NT_CAMERA_MOBILE\020\034\032\260\003\n\017ConeAndAccuracy\022Y"
    "\n\033lower_position_and_accuracy\030\001 \001(\01324.se"
    "nsoris.protobuf.types.spatial.PositionAn"
    "dAccuracy\022Y\n\033upper_position_and_accuracy"
    "\030\002 \001(\01324.sensoris.protobuf.types.spatial"
    ".PositionAndAccuracy\022^\n\033lower_diameter_a"
    "nd_accuracy\030\003 \001(\01323.sensoris.protobuf.ty"
    "pes.base.Int64ValueAndAccuracyB\004\210\265\030\000\022^\n\033"
    "upper_diameter_and_accuracy\030\004 \001(\01323.sens"
    "oris.protobuf.types.base.Int64ValueAndAc"
    "curacyB\004\210\265\030\000\022\'\n\textension\030\017 \003(\0132\024.google"
    ".protobuf.Any\032\357\001\n\030SurfaceTypeAndConfiden"
    "ce\022f\n\004type\030\001 \001(\0162X.sensoris.protobuf.cat"
    "egories.objectdetection.StaticObject.Sur"
    "faceTypeAndConfidence.Type\022<\n\nconfidence"
    "\030\002 \001(\0132(.sensoris.protobuf.types.base.Co"
    "nfidence\"-\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\010\n\004FL"
    "AT\020\001\022\t\n\005ROUGH\020\002\032\225\003\n\034SurfaceMaterialAndCo"
    "nfidence\022j\n\004type\030\001 \001(\0162\\.sensoris.protob"
    "uf.categories.objectdetection.StaticObje"
    "ct.SurfaceMaterialAndConfidence.Type\022<\n\n"
    "confidence\030\002 \001(\0132(.sensoris.protobuf.typ"
    "es.base.Confidence\022\\\n\031reflectivity_and_a"
    "ccuracy\030\003 \001(\01323.sensoris.protobuf.types."
    "base.Int64ValueAndAccuracyB\004\210\265\030\000\"m\n\004Type"
    "\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005METAL\020\001\022\014\n\010CONCRET"
    "E\020\002\022\t\n\005STONE\020\003\022\010\n\004WOOD\020\004\022\013\n\007PLASTIC\020\005\022\013\n"
    "\007ASPHALT\020\006\022\013\n\007ORGANIC\020\007\032\334\002\n\031SurfaceColor"
    "AndConfidence\022g\n\004type\030\001 \001(\0162Y.sensoris.p"
    "rotobuf.categories.objectdetection.Stati"
    "cObject.SurfaceColorAndConfidence.Type\022<"
    "\n\nconfidence\030\002 \001(\0132(.sensoris.protobuf.t"
    "ypes.base.Confidence\"\227\001\n\004Type\022\017\n\013UNKOWN_"
    "TYPE\020\000\022\t\n\005OTHER\020\001\022\t\n\005WHITE\020\002\022\010\n\004GRAY\020\003\022\016"
    "\n\nGRAY_LIGHT\020\004\022\r\n\tGRAY_DARK\020\005\022\t\n\005BLACK\020\006"
    "\022\007\n\003RED\020\007\022\t\n\005GREEN\020\010\022\010\n\004BLUE\020\t\022\n\n\006YELLOW"
    "\020\n\022\n\n\006ORANGE\020\013B\n\n\010geometry\"\203\002\n\027ObjectDet"
    "ectionCategory\022@\n\010envelope\030\001 \001(\0132..senso"
    "ris.protobuf.types.base.CategoryEnvelope"
    "\022S\n\016movable_object\030\002 \003(\0132;.sensoris.prot"
    "obuf.categories.objectdetection.MovableO"
    "bject\022Q\n\rstatic_object\030\003 \003(\0132:.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObjectB\206\001\n\'org.sensoris.categories.obj"
    "ectdetectionB\037SensorisObjectDetectionCat"
    "egoryP\001Z5sensoris.org/specification/cate"
    "gories/objectdetection\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_deps[4] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto = {
    false,
    false,
    4873,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
    "sensoris/protobuf/categories/object_detection.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_deps,
    4,
    9,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {
const ::google::protobuf::EnumDescriptor* MovableObject_TypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MovableObject_TypeAndConfidence_Type_internal_data_[] = {
    786432u, 0u, };
bool MovableObject_TypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 11;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::UNKNOWN_TYPE;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE_PASSENGER_CAR;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE_TRUCK;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE_BUS;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE_TRAM;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::VEHICLE_TRAILER;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::TWO_WHEELER;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::TWO_WHEELER_MOTORCYCLE;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::TWO_WHEELER_BICYCLE;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::PERSON;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::ANIMAL;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::Type_MIN;
constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::Type_MAX;
constexpr int MovableObject_TypeAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StaticObject_TypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_TypeAndConfidence_Type_internal_data_[] = {
    1900544u, 0u, };
bool StaticObject_TypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 28;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::UNKNOWN_TYPE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::BRIDGE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TUNNEL;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_LIGHT;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_REFLECTOR;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_DELINEATOR;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_GANTRY;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_SIGN;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POLE_GUARD_RAIL;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::BAR;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TREE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::BOLLARD;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::CONE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::BARREL;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::WALL;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TRAFFIC_ISLAND;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::SPEED_BUMP;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::POT_HOLE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::MANHOLE_COVER;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::MANHOLE_COVER_CLOSED;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::MANHOLE_COVER_OPEN;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::SIGN_BRIDGE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TRAFFIC_LIGHT_BODY;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::BARRIER_PARKING_LOT;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::SURFACE_RAISED;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TRAFFIC_ENFORCEMENT_CAMERA;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TRAFFIC_ENFORCEMENT_CAMERA_FIXED;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::TRAFFIC_ENFORCEMENT_CAMERA_MOBILE;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::Type_MIN;
constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::Type_MAX;
constexpr int StaticObject_TypeAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StaticObject_SurfaceTypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceTypeAndConfidence_Type_internal_data_[] = {
    196608u, 0u, };
bool StaticObject_SurfaceTypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::UNKNOWN_TYPE;
constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::FLAT;
constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::ROUGH;
constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::Type_MIN;
constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::Type_MAX;
constexpr int StaticObject_SurfaceTypeAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StaticObject_SurfaceMaterialAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceMaterialAndConfidence_Type_internal_data_[] = {
    524288u, 0u, };
bool StaticObject_SurfaceMaterialAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::UNKNOWN_TYPE;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::METAL;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::CONCRETE;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::STONE;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::WOOD;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::PLASTIC;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::ASPHALT;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::ORGANIC;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::Type_MIN;
constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::Type_MAX;
constexpr int StaticObject_SurfaceMaterialAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StaticObject_SurfaceColorAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceColorAndConfidence_Type_internal_data_[] = {
    786432u, 0u, };
bool StaticObject_SurfaceColorAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 11;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::UNKOWN_TYPE;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::OTHER;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::WHITE;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::GRAY;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::GRAY_LIGHT;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::GRAY_DARK;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::BLACK;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::RED;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::GREEN;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::BLUE;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::YELLOW;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::ORANGE;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::Type_MIN;
constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::Type_MAX;
constexpr int StaticObject_SurfaceColorAndConfidence::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class MovableObject_TypeAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<MovableObject_TypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const MovableObject_TypeAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& MovableObject_TypeAndConfidence::_Internal::confidence(const MovableObject_TypeAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void MovableObject_TypeAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(
    ::google::protobuf::Arena* arena,
    const MovableObject_TypeAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  MovableObject_TypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MovableObject_TypeAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
MovableObject_TypeAndConfidence::~MovableObject_TypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovableObject_TypeAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MovableObject_TypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MovableObject_TypeAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> MovableObject_TypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MovableObject_TypeAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovableObject_TypeAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* MovableObject_TypeAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  return target;
}

::size_t MovableObject_TypeAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MovableObject_TypeAndConfidence::_class_data_ = {
    MovableObject_TypeAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MovableObject_TypeAndConfidence::GetClassData() const {
  return &_class_data_;
}

void MovableObject_TypeAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MovableObject_TypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const MovableObject_TypeAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovableObject_TypeAndConfidence::CopyFrom(const MovableObject_TypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MovableObject_TypeAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MovableObject_TypeAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MovableObject_TypeAndConfidence::InternalSwap(MovableObject_TypeAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_)
      + sizeof(MovableObject_TypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata MovableObject_TypeAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[0]);
}
// ===================================================================

class MovableObject::_Internal {
 public:
  using HasBits = decltype(std::declval<MovableObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MovableObject, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const MovableObject* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Int64Value& object_id(const MovableObject* msg);
  static void set_has_object_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::base::Confidence& existence_confidence(const MovableObject* msg);
  static void set_has_existence_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::base::EventDetectionStatus& detection_status(const MovableObject* msg);
  static void set_has_detection_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& type_and_confidence(const MovableObject* msg);
  static void set_has_type_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& rectangular_box_and_accuracy(const MovableObject* msg);
  static void set_has_rectangular_box_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& speed_and_accuracy(const MovableObject* msg);
  static void set_has_speed_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& acceleration_and_accuracy(const MovableObject* msg);
  static void set_has_acceleration_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& MovableObject::_Internal::envelope(const MovableObject* msg) {
  return *msg->_impl_.envelope_;
}
const ::google::protobuf::Int64Value& MovableObject::_Internal::object_id(const MovableObject* msg) {
  return *msg->_impl_.object_id_;
}
const ::sensoris::protobuf::types::base::Confidence& MovableObject::_Internal::existence_confidence(const MovableObject* msg) {
  return *msg->_impl_.existence_confidence_;
}
const ::sensoris::protobuf::types::base::EventDetectionStatus& MovableObject::_Internal::detection_status(const MovableObject* msg) {
  return *msg->_impl_.detection_status_;
}
const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& MovableObject::_Internal::type_and_confidence(const MovableObject* msg) {
  return *msg->_impl_.type_and_confidence_;
}
const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& MovableObject::_Internal::rectangular_box_and_accuracy(const MovableObject* msg) {
  return *msg->_impl_.rectangular_box_and_accuracy_;
}
const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::_Internal::speed_and_accuracy(const MovableObject* msg) {
  return *msg->_impl_.speed_and_accuracy_;
}
const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::_Internal::acceleration_and_accuracy(const MovableObject* msg) {
  return *msg->_impl_.acceleration_and_accuracy_;
}
void MovableObject::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MovableObject::clear_object_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.object_id_ != nullptr) _impl_.object_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MovableObject::clear_existence_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.existence_confidence_ != nullptr) _impl_.existence_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MovableObject::clear_detection_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.detection_status_ != nullptr) _impl_.detection_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void MovableObject::clear_rectangular_box_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rectangular_box_and_accuracy_ != nullptr) _impl_.rectangular_box_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void MovableObject::clear_speed_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.speed_and_accuracy_ != nullptr) _impl_.speed_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void MovableObject::clear_acceleration_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.acceleration_and_accuracy_ != nullptr) _impl_.acceleration_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
MovableObject::MovableObject(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.MovableObject)
}
inline PROTOBUF_NDEBUG_INLINE MovableObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovableObject::MovableObject(
    ::google::protobuf::Arena* arena,
    const MovableObject& from)
    : ::google::protobuf::Message(arena) {
  MovableObject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.object_id_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.object_id_)
                : nullptr;
  _impl_.existence_confidence_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.existence_confidence_)
                : nullptr;
  _impl_.detection_status_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventDetectionStatus>(arena, *from._impl_.detection_status_)
                : nullptr;
  _impl_.type_and_confidence_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence>(arena, *from._impl_.type_and_confidence_)
                : nullptr;
  _impl_.rectangular_box_and_accuracy_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>(arena, *from._impl_.rectangular_box_and_accuracy_)
                : nullptr;
  _impl_.speed_and_accuracy_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(arena, *from._impl_.speed_and_accuracy_)
                : nullptr;
  _impl_.acceleration_and_accuracy_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(arena, *from._impl_.acceleration_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.MovableObject)
}
inline PROTOBUF_NDEBUG_INLINE MovableObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MovableObject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, acceleration_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::acceleration_and_accuracy_));
}
MovableObject::~MovableObject() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.MovableObject)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovableObject::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.object_id_;
  delete _impl_.existence_confidence_;
  delete _impl_.detection_status_;
  delete _impl_.type_and_confidence_;
  delete _impl_.rectangular_box_and_accuracy_;
  delete _impl_.speed_and_accuracy_;
  delete _impl_.acceleration_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MovableObject::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.object_id_ != nullptr);
      _impl_.object_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.existence_confidence_ != nullptr);
      _impl_.existence_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.detection_status_ != nullptr);
      _impl_.detection_status_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.type_and_confidence_ != nullptr);
      _impl_.type_and_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.rectangular_box_and_accuracy_ != nullptr);
      _impl_.rectangular_box_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.speed_and_accuracy_ != nullptr);
      _impl_.speed_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.acceleration_and_accuracy_ != nullptr);
      _impl_.acceleration_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MovableObject::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 8, 0, 2> MovableObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovableObject, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MovableObject_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_)}},
    // .google.protobuf.Int64Value object_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.object_id_)}},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.existence_confidence_)}},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.detection_status_)}},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.type_and_confidence_)}},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.rectangular_box_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.speed_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value object_id = 2;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.object_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.existence_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.detection_status_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.type_and_confidence_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.rectangular_box_and_accuracy_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.speed_and_accuracy_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventDetectionStatus>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* MovableObject::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::object_id(this),
        _Internal::object_id(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::existence_confidence(this),
        _Internal::existence_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::detection_status(this),
        _Internal::detection_status(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::type_and_confidence(this),
        _Internal::type_and_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::rectangular_box_and_accuracy(this),
        _Internal::rectangular_box_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::speed_and_accuracy(this),
        _Internal::speed_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::acceleration_and_accuracy(this),
        _Internal::acceleration_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.MovableObject)
  return target;
}

::size_t MovableObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .google.protobuf.Int64Value object_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.object_id_);
    }

    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.existence_confidence_);
    }

    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.detection_status_);
    }

    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_and_confidence_);
    }

    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rectangular_box_and_accuracy_);
    }

    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_and_accuracy_);
    }

    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.acceleration_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MovableObject::_class_data_ = {
    MovableObject::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MovableObject::GetClassData() const {
  return &_class_data_;
}

void MovableObject::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MovableObject*>(&to_msg);
  auto& from = static_cast<const MovableObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_object_id()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_object_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_existence_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
          from._internal_existence_confidence());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_detection_status()->::sensoris::protobuf::types::base::EventDetectionStatus::MergeFrom(
          from._internal_detection_status());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_type_and_confidence()->::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence::MergeFrom(
          from._internal_type_and_confidence());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_rectangular_box_and_accuracy()->::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy::MergeFrom(
          from._internal_rectangular_box_and_accuracy());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_speed_and_accuracy()->::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy::MergeFrom(
          from._internal_speed_and_accuracy());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_acceleration_and_accuracy()->::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy::MergeFrom(
          from._internal_acceleration_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovableObject::CopyFrom(const MovableObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MovableObject::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MovableObject::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MovableObject::InternalSwap(MovableObject* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_)
      + sizeof(MovableObject::_impl_.acceleration_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata MovableObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[1]);
}
// ===================================================================

class StaticObject_TypeAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject_TypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const StaticObject_TypeAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& StaticObject_TypeAndConfidence::_Internal::confidence(const StaticObject_TypeAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void StaticObject_TypeAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(
    ::google::protobuf::Arena* arena,
    const StaticObject_TypeAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  StaticObject_TypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticObject_TypeAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_TypeAndConfidence::~StaticObject_TypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject_TypeAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StaticObject_TypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject_TypeAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StaticObject_TypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_TypeAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_TypeAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* StaticObject_TypeAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  return target;
}

::size_t StaticObject_TypeAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject_TypeAndConfidence::_class_data_ = {
    StaticObject_TypeAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject_TypeAndConfidence::GetClassData() const {
  return &_class_data_;
}

void StaticObject_TypeAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject_TypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_TypeAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_TypeAndConfidence::CopyFrom(const StaticObject_TypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject_TypeAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject_TypeAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject_TypeAndConfidence::InternalSwap(StaticObject_TypeAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_)
      + sizeof(StaticObject_TypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_TypeAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[2]);
}
// ===================================================================

class StaticObject_ConeAndAccuracy::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject_ConeAndAccuracy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& lower_position_and_accuracy(const StaticObject_ConeAndAccuracy* msg);
  static void set_has_lower_position_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& upper_position_and_accuracy(const StaticObject_ConeAndAccuracy* msg);
  static void set_has_upper_position_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& lower_diameter_and_accuracy(const StaticObject_ConeAndAccuracy* msg);
  static void set_has_lower_diameter_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& upper_diameter_and_accuracy(const StaticObject_ConeAndAccuracy* msg);
  static void set_has_upper_diameter_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::_Internal::lower_position_and_accuracy(const StaticObject_ConeAndAccuracy* msg) {
  return *msg->_impl_.lower_position_and_accuracy_;
}
const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::_Internal::upper_position_and_accuracy(const StaticObject_ConeAndAccuracy* msg) {
  return *msg->_impl_.upper_position_and_accuracy_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::_Internal::lower_diameter_and_accuracy(const StaticObject_ConeAndAccuracy* msg) {
  return *msg->_impl_.lower_diameter_and_accuracy_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::_Internal::upper_diameter_and_accuracy(const StaticObject_ConeAndAccuracy* msg) {
  return *msg->_impl_.upper_diameter_and_accuracy_;
}
void StaticObject_ConeAndAccuracy::clear_lower_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lower_position_and_accuracy_ != nullptr) _impl_.lower_position_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject_ConeAndAccuracy::clear_upper_position_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_position_and_accuracy_ != nullptr) _impl_.upper_position_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void StaticObject_ConeAndAccuracy::clear_lower_diameter_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lower_diameter_and_accuracy_ != nullptr) _impl_.lower_diameter_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void StaticObject_ConeAndAccuracy::clear_upper_diameter_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_diameter_and_accuracy_ != nullptr) _impl_.upper_diameter_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void StaticObject_ConeAndAccuracy::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(
    ::google::protobuf::Arena* arena,
    const StaticObject_ConeAndAccuracy& from)
    : ::google::protobuf::Message(arena) {
  StaticObject_ConeAndAccuracy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_position_and_accuracy_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(arena, *from._impl_.lower_position_and_accuracy_)
                : nullptr;
  _impl_.upper_position_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(arena, *from._impl_.upper_position_and_accuracy_)
                : nullptr;
  _impl_.lower_diameter_and_accuracy_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(arena, *from._impl_.lower_diameter_and_accuracy_)
                : nullptr;
  _impl_.upper_diameter_and_accuracy_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(arena, *from._impl_.upper_diameter_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void StaticObject_ConeAndAccuracy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_position_and_accuracy_),
           0,
           offsetof(Impl_, upper_diameter_and_accuracy_) -
               offsetof(Impl_, lower_position_and_accuracy_) +
               sizeof(Impl_::upper_diameter_and_accuracy_));
}
StaticObject_ConeAndAccuracy::~StaticObject_ConeAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject_ConeAndAccuracy::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lower_position_and_accuracy_;
  delete _impl_.upper_position_and_accuracy_;
  delete _impl_.lower_diameter_and_accuracy_;
  delete _impl_.upper_diameter_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StaticObject_ConeAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.lower_position_and_accuracy_ != nullptr);
      _impl_.lower_position_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.upper_position_and_accuracy_ != nullptr);
      _impl_.upper_position_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.lower_diameter_and_accuracy_ != nullptr);
      _impl_.lower_diameter_and_accuracy_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.upper_diameter_and_accuracy_ != nullptr);
      _impl_.upper_diameter_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject_ConeAndAccuracy::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> StaticObject_ConeAndAccuracy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950896,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_ConeAndAccuracy_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 4, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.extension_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* StaticObject_ConeAndAccuracy::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lower_position_and_accuracy(this),
        _Internal::lower_position_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::upper_position_and_accuracy(this),
        _Internal::upper_position_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::lower_diameter_and_accuracy(this),
        _Internal::lower_diameter_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::upper_diameter_and_accuracy(this),
        _Internal::upper_diameter_and_accuracy(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  return target;
}

::size_t StaticObject_ConeAndAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_position_and_accuracy_);
    }

    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_position_and_accuracy_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_diameter_and_accuracy_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_diameter_and_accuracy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject_ConeAndAccuracy::_class_data_ = {
    StaticObject_ConeAndAccuracy::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject_ConeAndAccuracy::GetClassData() const {
  return &_class_data_;
}

void StaticObject_ConeAndAccuracy::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject_ConeAndAccuracy*>(&to_msg);
  auto& from = static_cast<const StaticObject_ConeAndAccuracy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_lower_position_and_accuracy()->::sensoris::protobuf::types::spatial::PositionAndAccuracy::MergeFrom(
          from._internal_lower_position_and_accuracy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_upper_position_and_accuracy()->::sensoris::protobuf::types::spatial::PositionAndAccuracy::MergeFrom(
          from._internal_upper_position_and_accuracy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_lower_diameter_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy::MergeFrom(
          from._internal_lower_diameter_and_accuracy());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_upper_diameter_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy::MergeFrom(
          from._internal_upper_diameter_and_accuracy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_ConeAndAccuracy::CopyFrom(const StaticObject_ConeAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject_ConeAndAccuracy::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject_ConeAndAccuracy::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject_ConeAndAccuracy::InternalSwap(StaticObject_ConeAndAccuracy* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_)
      + sizeof(StaticObject_ConeAndAccuracy::_impl_.upper_diameter_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_)>(
          reinterpret_cast<char*>(&_impl_.lower_position_and_accuracy_),
          reinterpret_cast<char*>(&other->_impl_.lower_position_and_accuracy_));
}

::google::protobuf::Metadata StaticObject_ConeAndAccuracy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[3]);
}
// ===================================================================

class StaticObject_SurfaceTypeAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject_SurfaceTypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const StaticObject_SurfaceTypeAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceTypeAndConfidence::_Internal::confidence(const StaticObject_SurfaceTypeAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void StaticObject_SurfaceTypeAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(
    ::google::protobuf::Arena* arena,
    const StaticObject_SurfaceTypeAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  StaticObject_SurfaceTypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceTypeAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceTypeAndConfidence::~StaticObject_SurfaceTypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject_SurfaceTypeAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StaticObject_SurfaceTypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject_SurfaceTypeAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StaticObject_SurfaceTypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_SurfaceTypeAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceTypeAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* StaticObject_SurfaceTypeAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  return target;
}

::size_t StaticObject_SurfaceTypeAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject_SurfaceTypeAndConfidence::_class_data_ = {
    StaticObject_SurfaceTypeAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject_SurfaceTypeAndConfidence::GetClassData() const {
  return &_class_data_;
}

void StaticObject_SurfaceTypeAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceTypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceTypeAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceTypeAndConfidence::CopyFrom(const StaticObject_SurfaceTypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject_SurfaceTypeAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject_SurfaceTypeAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject_SurfaceTypeAndConfidence::InternalSwap(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceTypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceTypeAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[4]);
}
// ===================================================================

class StaticObject_SurfaceMaterialAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject_SurfaceMaterialAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const StaticObject_SurfaceMaterialAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& reflectivity_and_accuracy(const StaticObject_SurfaceMaterialAndConfidence* msg);
  static void set_has_reflectivity_and_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceMaterialAndConfidence::_Internal::confidence(const StaticObject_SurfaceMaterialAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_SurfaceMaterialAndConfidence::_Internal::reflectivity_and_accuracy(const StaticObject_SurfaceMaterialAndConfidence* msg) {
  return *msg->_impl_.reflectivity_and_accuracy_;
}
void StaticObject_SurfaceMaterialAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject_SurfaceMaterialAndConfidence::clear_reflectivity_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.reflectivity_and_accuracy_ != nullptr) _impl_.reflectivity_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(
    ::google::protobuf::Arena* arena,
    const StaticObject_SurfaceMaterialAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  StaticObject_SurfaceMaterialAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.reflectivity_and_accuracy_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(arena, *from._impl_.reflectivity_and_accuracy_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceMaterialAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceMaterialAndConfidence::~StaticObject_SurfaceMaterialAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject_SurfaceMaterialAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  delete _impl_.reflectivity_and_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StaticObject_SurfaceMaterialAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.confidence_ != nullptr);
      _impl_.confidence_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.reflectivity_and_accuracy_ != nullptr);
      _impl_.reflectivity_and_accuracy_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject_SurfaceMaterialAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> StaticObject_SurfaceMaterialAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_SurfaceMaterialAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_)}},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }}, {{
  }},
};

::uint8_t* StaticObject_SurfaceMaterialAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::reflectivity_and_accuracy(this),
        _Internal::reflectivity_and_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  return target;
}

::size_t StaticObject_SurfaceMaterialAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.reflectivity_and_accuracy_);
    }

  }
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject_SurfaceMaterialAndConfidence::_class_data_ = {
    StaticObject_SurfaceMaterialAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject_SurfaceMaterialAndConfidence::GetClassData() const {
  return &_class_data_;
}

void StaticObject_SurfaceMaterialAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceMaterialAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceMaterialAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
          from._internal_confidence());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_reflectivity_and_accuracy()->::sensoris::protobuf::types::base::Int64ValueAndAccuracy::MergeFrom(
          from._internal_reflectivity_and_accuracy());
    }
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceMaterialAndConfidence::CopyFrom(const StaticObject_SurfaceMaterialAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject_SurfaceMaterialAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject_SurfaceMaterialAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject_SurfaceMaterialAndConfidence::InternalSwap(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceMaterialAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceMaterialAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[5]);
}
// ===================================================================

class StaticObject_SurfaceColorAndConfidence::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject_SurfaceColorAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Confidence& confidence(const StaticObject_SurfaceColorAndConfidence* msg);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceColorAndConfidence::_Internal::confidence(const StaticObject_SurfaceColorAndConfidence* msg) {
  return *msg->_impl_.confidence_;
}
void StaticObject_SurfaceColorAndConfidence::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(
    ::google::protobuf::Arena* arena,
    const StaticObject_SurfaceColorAndConfidence& from)
    : ::google::protobuf::Message(arena) {
  StaticObject_SurfaceColorAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceColorAndConfidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceColorAndConfidence::~StaticObject_SurfaceColorAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject_SurfaceColorAndConfidence::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.confidence_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StaticObject_SurfaceColorAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject_SurfaceColorAndConfidence::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StaticObject_SurfaceColorAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_SurfaceColorAndConfidence_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceColorAndConfidence, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }}, {{
  }},
};

::uint8_t* StaticObject_SurfaceColorAndConfidence::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::confidence(this),
        _Internal::confidence(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  return target;
}

::size_t StaticObject_SurfaceColorAndConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.confidence_);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject_SurfaceColorAndConfidence::_class_data_ = {
    StaticObject_SurfaceColorAndConfidence::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject_SurfaceColorAndConfidence::GetClassData() const {
  return &_class_data_;
}

void StaticObject_SurfaceColorAndConfidence::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceColorAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceColorAndConfidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
        from._internal_confidence());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceColorAndConfidence::CopyFrom(const StaticObject_SurfaceColorAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject_SurfaceColorAndConfidence::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject_SurfaceColorAndConfidence::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject_SurfaceColorAndConfidence::InternalSwap(StaticObject_SurfaceColorAndConfidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceColorAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceColorAndConfidence::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[6]);
}
// ===================================================================

class StaticObject::_Internal {
 public:
  using HasBits = decltype(std::declval<StaticObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StaticObject, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._oneof_case_);
  static const ::sensoris::protobuf::types::base::EventEnvelope& envelope(const StaticObject* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Int64Value& object_id(const StaticObject* msg);
  static void set_has_object_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::base::Confidence& existence_confidence(const StaticObject* msg);
  static void set_has_existence_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::sensoris::protobuf::types::base::EventDetectionStatus& detection_status(const StaticObject* msg);
  static void set_has_detection_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& type_and_confidence(const StaticObject* msg);
  static void set_has_type_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& rectangular_box_and_accuracy(const StaticObject* msg);
  static const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& cone_and_accuracy(const StaticObject* msg);
  static const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& surface_type_and_confidence(const StaticObject* msg);
  static void set_has_surface_type_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& surface_material_and_confidence(const StaticObject* msg);
  static void set_has_surface_material_and_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::sensoris::protobuf::types::base::EventEnvelope& StaticObject::_Internal::envelope(const StaticObject* msg) {
  return *msg->_impl_.envelope_;
}
const ::google::protobuf::Int64Value& StaticObject::_Internal::object_id(const StaticObject* msg) {
  return *msg->_impl_.object_id_;
}
const ::sensoris::protobuf::types::base::Confidence& StaticObject::_Internal::existence_confidence(const StaticObject* msg) {
  return *msg->_impl_.existence_confidence_;
}
const ::sensoris::protobuf::types::base::EventDetectionStatus& StaticObject::_Internal::detection_status(const StaticObject* msg) {
  return *msg->_impl_.detection_status_;
}
const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& StaticObject::_Internal::type_and_confidence(const StaticObject* msg) {
  return *msg->_impl_.type_and_confidence_;
}
const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& StaticObject::_Internal::rectangular_box_and_accuracy(const StaticObject* msg) {
  return *msg->_impl_.geometry_.rectangular_box_and_accuracy_;
}
const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& StaticObject::_Internal::cone_and_accuracy(const StaticObject* msg) {
  return *msg->_impl_.geometry_.cone_and_accuracy_;
}
const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& StaticObject::_Internal::surface_type_and_confidence(const StaticObject* msg) {
  return *msg->_impl_.surface_type_and_confidence_;
}
const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& StaticObject::_Internal::surface_material_and_confidence(const StaticObject* msg) {
  return *msg->_impl_.surface_material_and_confidence_;
}
void StaticObject::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject::clear_object_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.object_id_ != nullptr) _impl_.object_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void StaticObject::clear_existence_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.existence_confidence_ != nullptr) _impl_.existence_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void StaticObject::clear_detection_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.detection_status_ != nullptr) _impl_.detection_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void StaticObject::set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* rectangular_box_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geometry();
  if (rectangular_box_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(rectangular_box_and_accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      rectangular_box_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, rectangular_box_and_accuracy, submessage_arena);
    }
    set_has_rectangular_box_and_accuracy();
    _impl_.geometry_.rectangular_box_and_accuracy_ = rectangular_box_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
}
void StaticObject::clear_rectangular_box_and_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (geometry_case() == kRectangularBoxAndAccuracy) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_.rectangular_box_and_accuracy_;
    }
    clear_has_geometry();
  }
}
void StaticObject::set_allocated_cone_and_accuracy(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* cone_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geometry();
  if (cone_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = cone_and_accuracy->GetArena();
    if (message_arena != submessage_arena) {
      cone_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, cone_and_accuracy, submessage_arena);
    }
    set_has_cone_and_accuracy();
    _impl_.geometry_.cone_and_accuracy_ = cone_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
}
StaticObject::StaticObject(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        surface_color_and_confidence_{visibility, arena, from.surface_color_and_confidence_},
        geometry_{},
        _oneof_case_{from._oneof_case_[0]} {}

StaticObject::StaticObject(
    ::google::protobuf::Arena* arena,
    const StaticObject& from)
    : ::google::protobuf::Message(arena) {
  StaticObject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.object_id_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.object_id_)
                : nullptr;
  _impl_.existence_confidence_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Confidence>(arena, *from._impl_.existence_confidence_)
                : nullptr;
  _impl_.detection_status_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::EventDetectionStatus>(arena, *from._impl_.detection_status_)
                : nullptr;
  _impl_.type_and_confidence_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence>(arena, *from._impl_.type_and_confidence_)
                : nullptr;
  _impl_.surface_type_and_confidence_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence>(arena, *from._impl_.surface_type_and_confidence_)
                : nullptr;
  _impl_.surface_material_and_confidence_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence>(arena, *from._impl_.surface_material_and_confidence_)
                : nullptr;
  switch (geometry_case()) {
    case GEOMETRY_NOT_SET:
      break;
      case kRectangularBoxAndAccuracy:
        _impl_.geometry_.rectangular_box_and_accuracy_ = CreateMaybeMessage<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>(arena, *from._impl_.geometry_.rectangular_box_and_accuracy_);
        break;
      case kConeAndAccuracy:
        _impl_.geometry_.cone_and_accuracy_ = CreateMaybeMessage<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy>(arena, *from._impl_.geometry_.cone_and_accuracy_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject)
}
inline PROTOBUF_NDEBUG_INLINE StaticObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        surface_color_and_confidence_{visibility, arena},
        geometry_{},
        _oneof_case_{} {}

inline void StaticObject::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, surface_material_and_confidence_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::surface_material_and_confidence_));
}
StaticObject::~StaticObject() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticObject::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  delete _impl_.object_id_;
  delete _impl_.existence_confidence_;
  delete _impl_.detection_status_;
  delete _impl_.type_and_confidence_;
  delete _impl_.surface_type_and_confidence_;
  delete _impl_.surface_material_and_confidence_;
  if (has_geometry()) {
    clear_geometry();
  }
  _impl_.~Impl_();
}

void StaticObject::clear_geometry() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (geometry_case()) {
    case kRectangularBoxAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.geometry_.rectangular_box_and_accuracy_;
      }
      break;
    }
    case kConeAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.geometry_.cone_and_accuracy_;
      }
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = GEOMETRY_NOT_SET;
}


PROTOBUF_NOINLINE void StaticObject::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.surface_color_and_confidence_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.object_id_ != nullptr);
      _impl_.object_id_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.existence_confidence_ != nullptr);
      _impl_.existence_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.detection_status_ != nullptr);
      _impl_.detection_status_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.type_and_confidence_ != nullptr);
      _impl_.type_and_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.surface_type_and_confidence_ != nullptr);
      _impl_.surface_type_and_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.surface_material_and_confidence_ != nullptr);
      _impl_.surface_material_and_confidence_->Clear();
    }
  }
  clear_geometry();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticObject::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 10, 0, 2> StaticObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StaticObject_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_)}},
    // .google.protobuf.Int64Value object_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.object_id_)}},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.existence_confidence_)}},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.detection_status_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.type_and_confidence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 7, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_type_and_confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 8, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 9, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_color_and_confidence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value object_id = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.object_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.existence_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.detection_status_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.type_and_confidence_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.geometry_.rectangular_box_and_accuracy_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.geometry_.cone_and_accuracy_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_type_and_confidence_), _Internal::kHasBitsOffset + 5, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_), _Internal::kHasBitsOffset + 6, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_color_and_confidence_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventDetectionStatus>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>()},
  }}, {{
  }},
};

::uint8_t* StaticObject::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::object_id(this),
        _Internal::object_id(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::existence_confidence(this),
        _Internal::existence_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::detection_status(this),
        _Internal::detection_status(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::type_and_confidence(this),
        _Internal::type_and_confidence(this).GetCachedSize(), target, stream);
  }

  switch (geometry_case()) {
    case kRectangularBoxAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::rectangular_box_and_accuracy(this),
          _Internal::rectangular_box_and_accuracy(this).GetCachedSize(), target, stream);
      break;
    }
    case kConeAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::cone_and_accuracy(this),
          _Internal::cone_and_accuracy(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::surface_type_and_confidence(this),
        _Internal::surface_type_and_confidence(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::surface_material_and_confidence(this),
        _Internal::surface_material_and_confidence(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_surface_color_and_confidence_size()); i < n; i++) {
    const auto& repfield = this->_internal_surface_color_and_confidence().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject)
  return target;
}

::size_t StaticObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
  total_size += 1UL * this->_internal_surface_color_and_confidence_size();
  for (const auto& msg : this->_internal_surface_color_and_confidence()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
    }

    // .google.protobuf.Int64Value object_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.object_id_);
    }

    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.existence_confidence_);
    }

    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.detection_status_);
    }

    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.type_and_confidence_);
    }

    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.surface_type_and_confidence_);
    }

    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.surface_material_and_confidence_);
    }

  }
  switch (geometry_case()) {
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    case kRectangularBoxAndAccuracy: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geometry_.rectangular_box_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
    case kConeAndAccuracy: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.geometry_.cone_and_accuracy_);
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticObject::_class_data_ = {
    StaticObject::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StaticObject::GetClassData() const {
  return &_class_data_;
}

void StaticObject::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticObject*>(&to_msg);
  auto& from = static_cast<const StaticObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_surface_color_and_confidence()->MergeFrom(
      from._internal_surface_color_and_confidence());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::EventEnvelope::MergeFrom(
          from._internal_envelope());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_object_id()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_object_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_existence_confidence()->::sensoris::protobuf::types::base::Confidence::MergeFrom(
          from._internal_existence_confidence());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_detection_status()->::sensoris::protobuf::types::base::EventDetectionStatus::MergeFrom(
          from._internal_detection_status());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_type_and_confidence()->::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence::MergeFrom(
          from._internal_type_and_confidence());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_surface_type_and_confidence()->::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence::MergeFrom(
          from._internal_surface_type_and_confidence());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_surface_material_and_confidence()->::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence::MergeFrom(
          from._internal_surface_material_and_confidence());
    }
  }
  switch (from.geometry_case()) {
    case kRectangularBoxAndAccuracy: {
      _this->_internal_mutable_rectangular_box_and_accuracy()->::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy::MergeFrom(
          from._internal_rectangular_box_and_accuracy());
      break;
    }
    case kConeAndAccuracy: {
      _this->_internal_mutable_cone_and_accuracy()->::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy::MergeFrom(
          from._internal_cone_and_accuracy());
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject::CopyFrom(const StaticObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticObject::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StaticObject::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StaticObject::InternalSwap(StaticObject* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.surface_color_and_confidence_.InternalSwap(&other->_impl_.surface_color_and_confidence_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_)
      + sizeof(StaticObject::_impl_.surface_material_and_confidence_)
      - PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
  swap(_impl_.geometry_, other->_impl_.geometry_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StaticObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[7]);
}
// ===================================================================

class ObjectDetectionCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjectDetectionCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::CategoryEnvelope& envelope(const ObjectDetectionCategory* msg);
  static void set_has_envelope(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::CategoryEnvelope& ObjectDetectionCategory::_Internal::envelope(const ObjectDetectionCategory* msg) {
  return *msg->_impl_.envelope_;
}
void ObjectDetectionCategory::clear_envelope() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ObjectDetectionCategory::ObjectDetectionCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
}
inline PROTOBUF_NDEBUG_INLINE ObjectDetectionCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        movable_object_{visibility, arena, from.movable_object_},
        static_object_{visibility, arena, from.static_object_} {}

ObjectDetectionCategory::ObjectDetectionCategory(
    ::google::protobuf::Arena* arena,
    const ObjectDetectionCategory& from)
    : ::google::protobuf::Message(arena) {
  ObjectDetectionCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::CategoryEnvelope>(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
}
inline PROTOBUF_NDEBUG_INLINE ObjectDetectionCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        movable_object_{visibility, arena},
        static_object_{visibility, arena} {}

inline void ObjectDetectionCategory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
ObjectDetectionCategory::~ObjectDetectionCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObjectDetectionCategory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.envelope_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ObjectDetectionCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.movable_object_.Clear();
  _impl_.static_object_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ObjectDetectionCategory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> ObjectDetectionCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ObjectDetectionCategory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.movable_object_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.static_object_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.movable_object_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.static_object_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject>()},
  }}, {{
  }},
};

::uint8_t* ObjectDetectionCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::envelope(this),
        _Internal::envelope(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_movable_object_size()); i < n; i++) {
    const auto& repfield = this->_internal_movable_object().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_static_object_size()); i < n; i++) {
    const auto& repfield = this->_internal_static_object().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  return target;
}

::size_t ObjectDetectionCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
  total_size += 1UL * this->_internal_movable_object_size();
  for (const auto& msg : this->_internal_movable_object()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
  total_size += 1UL * this->_internal_static_object_size();
  for (const auto& msg : this->_internal_static_object()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.envelope_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ObjectDetectionCategory::_class_data_ = {
    ObjectDetectionCategory::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ObjectDetectionCategory::GetClassData() const {
  return &_class_data_;
}

void ObjectDetectionCategory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ObjectDetectionCategory*>(&to_msg);
  auto& from = static_cast<const ObjectDetectionCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_movable_object()->MergeFrom(
      from._internal_movable_object());
  _this->_internal_mutable_static_object()->MergeFrom(
      from._internal_static_object());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_envelope()->::sensoris::protobuf::types::base::CategoryEnvelope::MergeFrom(
        from._internal_envelope());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectDetectionCategory::CopyFrom(const ObjectDetectionCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ObjectDetectionCategory::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ObjectDetectionCategory::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ObjectDetectionCategory::InternalSwap(ObjectDetectionCategory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.movable_object_.InternalSwap(&other->_impl_.movable_object_);
  _impl_.static_object_.InternalSwap(&other->_impl_.static_object_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata ObjectDetectionCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
