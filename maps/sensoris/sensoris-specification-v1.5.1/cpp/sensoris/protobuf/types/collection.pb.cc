// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/collection.proto

#include "sensoris/protobuf/types/collection.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace types {
namespace collection {

inline constexpr CollectionExtents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        count_{nullptr},
        data_message_size_{nullptr},
        path_length_{nullptr},
        duration_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionExtents::CollectionExtents(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionExtentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionExtentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionExtentsDefaultTypeInternal() {}
  union {
    CollectionExtents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionExtentsDefaultTypeInternal _CollectionExtents_default_instance_;

inline constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{nullptr},
        type_{static_cast< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal() {}
  union {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_;

inline constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{nullptr},
        type_{static_cast< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal() {}
  union {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_;

inline constexpr CollectionAction_CollectionTask_CollectionConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        pre_trigger_offset_{nullptr},
        post_trigger_offset_{nullptr},
        trigger_frequency_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration::CollectionAction_CollectionTask_CollectionConfiguration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal() {}
  union {
    CollectionAction_CollectionTask_CollectionConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_default_instance_;

inline constexpr CollectionAction_CollectionTask_CollectionEventOrEventField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        event_or_event_field_to_collect_{nullptr},
        optional_{nullptr},
        requested_exponent_{nullptr},
        aggregation_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionEventOrEventField::CollectionAction_CollectionTask_CollectionEventOrEventField(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal() {}
  union {
    CollectionAction_CollectionTask_CollectionEventOrEventField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal _CollectionAction_CollectionTask_CollectionEventOrEventField_default_instance_;

inline constexpr CollectionAction_CollectionTask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        collection_event_or_event_field_{},
        extension_{},
        optional_{nullptr},
        prevent_overlapping_by_time_{nullptr},
        collection_configuration_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction_CollectionTask::CollectionAction_CollectionTask(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionAction_CollectionTaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionAction_CollectionTaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionAction_CollectionTaskDefaultTypeInternal() {}
  union {
    CollectionAction_CollectionTask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionAction_CollectionTaskDefaultTypeInternal _CollectionAction_CollectionTask_default_instance_;

inline constexpr CollectionAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        collection_task_{},
        extension_{},
        min_transmitted_message_extents_{nullptr},
        max_transmitted_message_extents_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionAction::CollectionAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionActionDefaultTypeInternal() {}
  union {
    CollectionAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionActionDefaultTypeInternal _CollectionAction_default_instance_;
}  // namespace collection
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_.data_message_size_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_.path_length_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_.duration_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionExtents, _impl_.extension_),
    0,
    1,
    2,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.event_or_event_field_to_collect_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.optional_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.requested_exponent_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.extension_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.aggregation_),
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.value_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.value_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _impl_.pre_trigger_offset_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _impl_.post_trigger_offset_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _impl_.trigger_frequency_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration, _impl_.extension_),
    0,
    1,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_.optional_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_.prevent_overlapping_by_time_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_.collection_event_or_event_field_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_.collection_configuration_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask, _impl_.extension_),
    0,
    1,
    ~0u,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _impl_.collection_task_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _impl_.min_transmitted_message_extents_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _impl_.max_transmitted_message_extents_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction, _impl_.extension_),
    ~0u,
    0,
    1,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::sensoris::protobuf::types::collection::CollectionExtents)},
        {18, 35, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField)},
        {43, 53, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset)},
        {55, 65, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency)},
        {67, 79, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration)},
        {83, 96, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask)},
        {101, 113, -1, sizeof(::sensoris::protobuf::types::collection::CollectionAction)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::types::collection::_CollectionExtents_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionEventOrEventField_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_default_instance_._instance,
    &::sensoris::protobuf::types::collection::_CollectionAction_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n(sensoris/protobuf/types/collection.pro"
    "to\022\"sensoris.protobuf.types.collection\032\031"
    "google/protobuf/any.proto\032\036google/protob"
    "uf/wrappers.proto\032\"sensoris/protobuf/typ"
    "es/base.proto\032!sensoris/protobuf/types/j"
    "ob.proto\"\201\002\n\021CollectionExtents\022*\n\005count\030"
    "\001 \001(\0132\033.google.protobuf.Int64Value\0226\n\021da"
    "ta_message_size\030\002 \001(\0132\033.google.protobuf."
    "Int64Value\0220\n\013path_length\030\003 \001(\0132\033.google"
    ".protobuf.Int64Value\022-\n\010duration\030\004 \001(\0132\033"
    ".google.protobuf.Int64Value\022\'\n\textension"
    "\030\017 \003(\0132\024.google.protobuf.Any\"\247\024\n\020Collect"
    "ionAction\022\\\n\017collection_task\030\001 \003(\0132C.sen"
    "soris.protobuf.types.collection.Collecti"
    "onAction.CollectionTask\022^\n\037min_transmitt"
    "ed_message_extents\030\002 \001(\01325.sensoris.prot"
    "obuf.types.collection.CollectionExtents\022"
    "^\n\037max_transmitted_message_extents\030\003 \001(\013"
    "25.sensoris.protobuf.types.collection.Co"
    "llectionExtents\022\'\n\textension\030\017 \003(\0132\024.goo"
    "gle.protobuf.Any\032\313\021\n\016CollectionTask\022,\n\010o"
    "ptional\030\001 \001(\0132\032.google.protobuf.BoolValu"
    "e\022\?\n\033prevent_overlapping_by_time\030\002 \001(\0132\032"
    ".google.protobuf.BoolValue\022\210\001\n\037collectio"
    "n_event_or_event_field\030\003 \003(\0132_.sensoris."
    "protobuf.types.collection.CollectionActi"
    "on.CollectionTask.CollectionEventOrEvent"
    "Field\022}\n\030collection_configuration\030\004 \001(\0132"
    "[.sensoris.protobuf.types.collection.Col"
    "lectionAction.CollectionTask.CollectionC"
    "onfiguration\022\'\n\textension\030\017 \003(\0132\024.google"
    ".protobuf.Any\032\236\006\n\033CollectionEventOrEvent"
    "Field\022^\n\037event_or_event_field_to_collect"
    "\030\001 \001(\01325.sensoris.protobuf.types.base.Ab"
    "soluteOrExtensionPath\022,\n\010optional\030\002 \001(\0132"
    "\032.google.protobuf.BoolValue\0223\n\rcurrent_v"
    "alue\030\003 \001(\0132\032.google.protobuf.BoolValueH\000"
    "\022\213\001\n\020aggregation_type\030\004 \001(\0162o.sensoris.p"
    "rotobuf.types.collection.CollectionActio"
    "n.CollectionTask.CollectionEventOrEventF"
    "ield.AggregationTypeH\000\022g\n absolute_histo"
    "gram_specification\030\005 \001(\0132;.sensoris.prot"
    "obuf.types.job.AbsoluteHistogramSpecific"
    "ationH\000\022g\n relative_histogram_specificat"
    "ion\030\006 \001(\0132;.sensoris.protobuf.types.job."
    "RelativeHistogramSpecificationH\000\0227\n\022requ"
    "ested_exponent\030\007 \001(\0132\033.google.protobuf.I"
    "nt64Value\022\'\n\textension\030\017 \003(\0132\024.google.pr"
    "otobuf.Any\"k\n\017AggregationType\022\034\n\030UNKNOWN"
    "_AGGREGATION_TYPE\020\000\022\007\n\003ALL\020\001\022\013\n\007MINIMUM\020"
    "\002\022\013\n\007MAXIMUM\020\003\022\013\n\007AVERAGE\020\004\022\n\n\006MEDIAN\020\005B"
    "\r\n\013aggregation\032\365\007\n\027CollectionConfigurati"
    "on\022\205\001\n\022pre_trigger_offset\030\001 \001(\0132i.sensor"
    "is.protobuf.types.collection.CollectionA"
    "ction.CollectionTask.CollectionConfigura"
    "tion.TriggerOffset\022\206\001\n\023post_trigger_offs"
    "et\030\002 \001(\0132i.sensoris.protobuf.types.colle"
    "ction.CollectionAction.CollectionTask.Co"
    "llectionConfiguration.TriggerOffset\022\207\001\n\021"
    "trigger_frequency\030\003 \001(\0132l.sensoris.proto"
    "buf.types.collection.CollectionAction.Co"
    "llectionTask.CollectionConfiguration.Tri"
    "ggerFrequency\022\'\n\textension\030\017 \003(\0132\024.googl"
    "e.protobuf.Any\032\354\001\n\rTriggerOffset\022|\n\004type"
    "\030\001 \001(\0162n.sensoris.protobuf.types.collect"
    "ion.CollectionAction.CollectionTask.Coll"
    "ectionConfiguration.TriggerOffset.Type\022*"
    "\n\005value\030\002 \001(\0132\033.google.protobuf.Int64Val"
    "ue\"1\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005COUNT\020\001\022"
    "\014\n\010DISTANCE\020\002\032\246\002\n\020TriggerFrequency\022\177\n\004ty"
    "pe\030\001 \001(\0162q.sensoris.protobuf.types.colle"
    "ction.CollectionAction.CollectionTask.Co"
    "llectionConfiguration.TriggerFrequency.T"
    "ype\022*\n\005value\030\002 \001(\0132\033.google.protobuf.Int"
    "64Value\"e\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\010\n\004ONC"
    "E\020\001\022\r\n\tON_CHANGE\020\002\022\013\n\007BY_TIME\020\003\022\017\n\013BY_DI"
    "STANCE\020\004\022\024\n\020NATIVE_FREQUENCY\020\005Bj\n\035org.se"
    "nsoris.types.collectionB\027SensorisCollect"
    "ionTypesP\001Z+sensoris.org/specification/t"
    "ypes/collection\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_deps[4] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto = {
    false,
    false,
    3186,
    descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto,
    "sensoris/protobuf/types/collection.proto",
    &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_deps,
    4,
    7,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto);
namespace sensoris {
namespace protobuf {
namespace types {
namespace collection {
const ::google::protobuf::EnumDescriptor* CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_internal_data_[] = {
    393216u, 0u, };
bool CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::UNKNOWN_AGGREGATION_TYPE;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::ALL;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::MINIMUM;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::MAXIMUM;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::AVERAGE;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::MEDIAN;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::AggregationType_MIN;
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::AggregationType_MAX;
constexpr int CollectionAction_CollectionTask_CollectionEventOrEventField::AggregationType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_internal_data_[] = {
    196608u, 0u, };
bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::UNKNOWN_TYPE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::COUNT;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::DISTANCE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Type_MIN;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Type_MAX;
constexpr int CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_internal_data_[] = {
    393216u, 0u, };
bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::UNKNOWN_TYPE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::ONCE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::ON_CHANGE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::BY_TIME;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::BY_DISTANCE;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::NATIVE_FREQUENCY;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Type_MIN;
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Type_MAX;
constexpr int CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class CollectionExtents::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionExtents>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_._has_bits_);
  static const ::google::protobuf::Int64Value& count(const CollectionExtents* msg);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Int64Value& data_message_size(const CollectionExtents* msg);
  static void set_has_data_message_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Int64Value& path_length(const CollectionExtents* msg);
  static void set_has_path_length(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::Int64Value& duration(const CollectionExtents* msg);
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::Int64Value& CollectionExtents::_Internal::count(const CollectionExtents* msg) {
  return *msg->_impl_.count_;
}
const ::google::protobuf::Int64Value& CollectionExtents::_Internal::data_message_size(const CollectionExtents* msg) {
  return *msg->_impl_.data_message_size_;
}
const ::google::protobuf::Int64Value& CollectionExtents::_Internal::path_length(const CollectionExtents* msg) {
  return *msg->_impl_.path_length_;
}
const ::google::protobuf::Int64Value& CollectionExtents::_Internal::duration(const CollectionExtents* msg) {
  return *msg->_impl_.duration_;
}
void CollectionExtents::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.count_ != nullptr) _impl_.count_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CollectionExtents::clear_data_message_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.data_message_size_ != nullptr) _impl_.data_message_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CollectionExtents::clear_path_length() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.path_length_ != nullptr) _impl_.path_length_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CollectionExtents::clear_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CollectionExtents::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
CollectionExtents::CollectionExtents(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionExtents)
}
inline PROTOBUF_NDEBUG_INLINE CollectionExtents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

CollectionExtents::CollectionExtents(
    ::google::protobuf::Arena* arena,
    const CollectionExtents& from)
    : ::google::protobuf::Message(arena) {
  CollectionExtents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.count_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.count_)
                : nullptr;
  _impl_.data_message_size_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.data_message_size_)
                : nullptr;
  _impl_.path_length_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.path_length_)
                : nullptr;
  _impl_.duration_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.duration_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionExtents)
}
inline PROTOBUF_NDEBUG_INLINE CollectionExtents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void CollectionExtents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, duration_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::duration_));
}
CollectionExtents::~CollectionExtents() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionExtents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionExtents::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.count_;
  delete _impl_.data_message_size_;
  delete _impl_.path_length_;
  delete _impl_.duration_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionExtents::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionExtents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.count_ != nullptr);
      _impl_.count_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.data_message_size_ != nullptr);
      _impl_.data_message_size_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.path_length_ != nullptr);
      _impl_.path_length_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.duration_ != nullptr);
      _impl_.duration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionExtents::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> CollectionExtents::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950896,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionExtents_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value count = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.count_)}},
    // .google.protobuf.Int64Value data_message_size = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.data_message_size_)}},
    // .google.protobuf.Int64Value path_length = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.path_length_)}},
    // .google.protobuf.Int64Value duration = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.duration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 4, PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value count = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value data_message_size = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.data_message_size_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value path_length = 3;
    {PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.path_length_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value duration = 4;
    {PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.duration_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.extension_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* CollectionExtents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionExtents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::count(this),
        _Internal::count(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value data_message_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::data_message_size(this),
        _Internal::data_message_size(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value path_length = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::path_length(this),
        _Internal::path_length(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::duration(this),
        _Internal::duration(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionExtents)
  return target;
}

::size_t CollectionExtents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionExtents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.Int64Value count = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.count_);
    }

    // .google.protobuf.Int64Value data_message_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_message_size_);
    }

    // .google.protobuf.Int64Value path_length = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.path_length_);
    }

    // .google.protobuf.Int64Value duration = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.duration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionExtents::_class_data_ = {
    CollectionExtents::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionExtents::GetClassData() const {
  return &_class_data_;
}

void CollectionExtents::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionExtents*>(&to_msg);
  auto& from = static_cast<const CollectionExtents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionExtents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_count()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_count());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_data_message_size()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_data_message_size());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_path_length()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_path_length());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_duration()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_duration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionExtents::CopyFrom(const CollectionExtents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionExtents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionExtents::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionExtents::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionExtents::InternalSwap(CollectionExtents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.duration_)
      + sizeof(CollectionExtents::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(CollectionExtents, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata CollectionExtents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[0]);
}
// ===================================================================

class CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction_CollectionTask_CollectionEventOrEventField>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_._oneof_case_);
  static const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& event_or_event_field_to_collect(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static void set_has_event_or_event_field_to_collect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::BoolValue& optional(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static void set_has_optional(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::BoolValue& current_value(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& absolute_histogram_specification(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& relative_histogram_specification(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static const ::google::protobuf::Int64Value& requested_exponent(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg);
  static void set_has_requested_exponent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::event_or_event_field_to_collect(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.event_or_event_field_to_collect_;
}
const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::optional(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.optional_;
}
const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::current_value(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.aggregation_.current_value_;
}
const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::absolute_histogram_specification(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.aggregation_.absolute_histogram_specification_;
}
const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::relative_histogram_specification(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.aggregation_.relative_histogram_specification_;
}
const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionEventOrEventField::_Internal::requested_exponent(const CollectionAction_CollectionTask_CollectionEventOrEventField* msg) {
  return *msg->_impl_.requested_exponent_;
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_event_or_event_field_to_collect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.event_or_event_field_to_collect_ != nullptr) _impl_.event_or_event_field_to_collect_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.optional_ != nullptr) _impl_.optional_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_current_value(::google::protobuf::BoolValue* current_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_aggregation();
  if (current_value) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(current_value)->GetArena();
    if (message_arena != submessage_arena) {
      current_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, current_value, submessage_arena);
    }
    set_has_current_value();
    _impl_.aggregation_.current_value_ = current_value;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_current_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (aggregation_case() == kCurrentValue) {
    if (GetArena() == nullptr) {
      delete _impl_.aggregation_.current_value_;
    }
    clear_has_aggregation();
  }
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_absolute_histogram_specification(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* absolute_histogram_specification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_aggregation();
  if (absolute_histogram_specification) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(absolute_histogram_specification)->GetArena();
    if (message_arena != submessage_arena) {
      absolute_histogram_specification = ::google::protobuf::internal::GetOwnedMessage(message_arena, absolute_histogram_specification, submessage_arena);
    }
    set_has_absolute_histogram_specification();
    _impl_.aggregation_.absolute_histogram_specification_ = absolute_histogram_specification;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_absolute_histogram_specification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (aggregation_case() == kAbsoluteHistogramSpecification) {
    if (GetArena() == nullptr) {
      delete _impl_.aggregation_.absolute_histogram_specification_;
    }
    clear_has_aggregation();
  }
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_relative_histogram_specification(::sensoris::protobuf::types::job::RelativeHistogramSpecification* relative_histogram_specification) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_aggregation();
  if (relative_histogram_specification) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(relative_histogram_specification)->GetArena();
    if (message_arena != submessage_arena) {
      relative_histogram_specification = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative_histogram_specification, submessage_arena);
    }
    set_has_relative_histogram_specification();
    _impl_.aggregation_.relative_histogram_specification_ = relative_histogram_specification;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_relative_histogram_specification() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (aggregation_case() == kRelativeHistogramSpecification) {
    if (GetArena() == nullptr) {
      delete _impl_.aggregation_.relative_histogram_specification_;
    }
    clear_has_aggregation();
  }
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_requested_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.requested_exponent_ != nullptr) _impl_.requested_exponent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
CollectionAction_CollectionTask_CollectionEventOrEventField::CollectionAction_CollectionTask_CollectionEventOrEventField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionEventOrEventField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_},
        aggregation_{},
        _oneof_case_{from._oneof_case_[0]} {}

CollectionAction_CollectionTask_CollectionEventOrEventField::CollectionAction_CollectionTask_CollectionEventOrEventField(
    ::google::protobuf::Arena* arena,
    const CollectionAction_CollectionTask_CollectionEventOrEventField& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction_CollectionTask_CollectionEventOrEventField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.event_or_event_field_to_collect_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath>(arena, *from._impl_.event_or_event_field_to_collect_)
                : nullptr;
  _impl_.optional_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.optional_)
                : nullptr;
  _impl_.requested_exponent_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.requested_exponent_)
                : nullptr;
  switch (aggregation_case()) {
    case AGGREGATION_NOT_SET:
      break;
      case kCurrentValue:
        _impl_.aggregation_.current_value_ = CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.aggregation_.current_value_);
        break;
      case kAggregationType:
        _impl_.aggregation_.aggregation_type_ = from._impl_.aggregation_.aggregation_type_;
        break;
      case kAbsoluteHistogramSpecification:
        _impl_.aggregation_.absolute_histogram_specification_ = CreateMaybeMessage<::sensoris::protobuf::types::job::AbsoluteHistogramSpecification>(arena, *from._impl_.aggregation_.absolute_histogram_specification_);
        break;
      case kRelativeHistogramSpecification:
        _impl_.aggregation_.relative_histogram_specification_ = CreateMaybeMessage<::sensoris::protobuf::types::job::RelativeHistogramSpecification>(arena, *from._impl_.aggregation_.relative_histogram_specification_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionEventOrEventField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_{visibility, arena},
        aggregation_{},
        _oneof_case_{} {}

inline void CollectionAction_CollectionTask_CollectionEventOrEventField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_or_event_field_to_collect_),
           0,
           offsetof(Impl_, requested_exponent_) -
               offsetof(Impl_, event_or_event_field_to_collect_) +
               sizeof(Impl_::requested_exponent_));
}
CollectionAction_CollectionTask_CollectionEventOrEventField::~CollectionAction_CollectionTask_CollectionEventOrEventField() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.event_or_event_field_to_collect_;
  delete _impl_.optional_;
  delete _impl_.requested_exponent_;
  if (has_aggregation()) {
    clear_aggregation();
  }
  _impl_.~Impl_();
}

void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_aggregation() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (aggregation_case()) {
    case kCurrentValue: {
      if (GetArena() == nullptr) {
        delete _impl_.aggregation_.current_value_;
      }
      break;
    }
    case kAggregationType: {
      // No need to clear
      break;
    }
    case kAbsoluteHistogramSpecification: {
      if (GetArena() == nullptr) {
        delete _impl_.aggregation_.absolute_histogram_specification_;
      }
      break;
    }
    case kRelativeHistogramSpecification: {
      if (GetArena() == nullptr) {
        delete _impl_.aggregation_.relative_histogram_specification_;
      }
      break;
    }
    case AGGREGATION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = AGGREGATION_NOT_SET;
}


PROTOBUF_NOINLINE void CollectionAction_CollectionTask_CollectionEventOrEventField::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.event_or_event_field_to_collect_ != nullptr);
      _impl_.event_or_event_field_to_collect_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_ != nullptr);
      _impl_.optional_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.requested_exponent_ != nullptr);
      _impl_.requested_exponent_->Clear();
    }
  }
  clear_aggregation();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction_CollectionTask_CollectionEventOrEventField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 7, 0, 2> CollectionAction_CollectionTask_CollectionEventOrEventField::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_CollectionTask_CollectionEventOrEventField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.event_or_event_field_to_collect_)}},
    // .google.protobuf.BoolValue optional = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.optional_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value requested_exponent = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 5, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.requested_exponent_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 6, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.event_or_event_field_to_collect_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue optional = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.optional_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue current_value = 3;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.aggregation_.current_value_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.AggregationType aggregation_type = 4;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.aggregation_.aggregation_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.job.AbsoluteHistogramSpecification absolute_histogram_specification = 5;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.aggregation_.absolute_histogram_specification_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.job.RelativeHistogramSpecification relative_histogram_specification = 6;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.aggregation_.relative_histogram_specification_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value requested_exponent = 7;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.requested_exponent_), _Internal::kHasBitsOffset + 2, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.extension_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::job::AbsoluteHistogramSpecification>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::job::RelativeHistogramSpecification>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction_CollectionTask_CollectionEventOrEventField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::event_or_event_field_to_collect(this),
        _Internal::event_or_event_field_to_collect(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue optional = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::optional(this),
        _Internal::optional(this).GetCachedSize(), target, stream);
  }

  switch (aggregation_case()) {
    case kCurrentValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::current_value(this),
          _Internal::current_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kAggregationType: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this->_internal_aggregation_type(), target);
      break;
    }
    case kAbsoluteHistogramSpecification: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::absolute_histogram_specification(this),
          _Internal::absolute_histogram_specification(this).GetCachedSize(), target, stream);
      break;
    }
    case kRelativeHistogramSpecification: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::relative_histogram_specification(this),
          _Internal::relative_histogram_specification(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .google.protobuf.Int64Value requested_exponent = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::requested_exponent(this),
        _Internal::requested_exponent(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  return target;
}

::size_t CollectionAction_CollectionTask_CollectionEventOrEventField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_or_event_field_to_collect_);
    }

    // .google.protobuf.BoolValue optional = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_);
    }

    // .google.protobuf.Int64Value requested_exponent = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.requested_exponent_);
    }

  }
  switch (aggregation_case()) {
    // .google.protobuf.BoolValue current_value = 3;
    case kCurrentValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aggregation_.current_value_);
      break;
    }
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.AggregationType aggregation_type = 4;
    case kAggregationType: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_aggregation_type());
      break;
    }
    // .sensoris.protobuf.types.job.AbsoluteHistogramSpecification absolute_histogram_specification = 5;
    case kAbsoluteHistogramSpecification: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aggregation_.absolute_histogram_specification_);
      break;
    }
    // .sensoris.protobuf.types.job.RelativeHistogramSpecification relative_histogram_specification = 6;
    case kRelativeHistogramSpecification: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aggregation_.relative_histogram_specification_);
      break;
    }
    case AGGREGATION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction_CollectionTask_CollectionEventOrEventField::_class_data_ = {
    CollectionAction_CollectionTask_CollectionEventOrEventField::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction_CollectionTask_CollectionEventOrEventField::GetClassData() const {
  return &_class_data_;
}

void CollectionAction_CollectionTask_CollectionEventOrEventField::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction_CollectionTask_CollectionEventOrEventField*>(&to_msg);
  auto& from = static_cast<const CollectionAction_CollectionTask_CollectionEventOrEventField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_event_or_event_field_to_collect()->::sensoris::protobuf::types::base::AbsoluteOrExtensionPath::MergeFrom(
          from._internal_event_or_event_field_to_collect());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_optional());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_requested_exponent()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_requested_exponent());
    }
  }
  switch (from.aggregation_case()) {
    case kCurrentValue: {
      _this->_internal_mutable_current_value()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_current_value());
      break;
    }
    case kAggregationType: {
      _this->_internal_set_aggregation_type(from._internal_aggregation_type());
      break;
    }
    case kAbsoluteHistogramSpecification: {
      _this->_internal_mutable_absolute_histogram_specification()->::sensoris::protobuf::types::job::AbsoluteHistogramSpecification::MergeFrom(
          from._internal_absolute_histogram_specification());
      break;
    }
    case kRelativeHistogramSpecification: {
      _this->_internal_mutable_relative_histogram_specification()->::sensoris::protobuf::types::job::RelativeHistogramSpecification::MergeFrom(
          from._internal_relative_histogram_specification());
      break;
    }
    case AGGREGATION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction_CollectionTask_CollectionEventOrEventField::CopyFrom(const CollectionAction_CollectionTask_CollectionEventOrEventField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction_CollectionTask_CollectionEventOrEventField::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction_CollectionTask_CollectionEventOrEventField::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction_CollectionTask_CollectionEventOrEventField::InternalSwap(CollectionAction_CollectionTask_CollectionEventOrEventField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.requested_exponent_)
      + sizeof(CollectionAction_CollectionTask_CollectionEventOrEventField::_impl_.requested_exponent_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionEventOrEventField, _impl_.event_or_event_field_to_collect_)>(
          reinterpret_cast<char*>(&_impl_.event_or_event_field_to_collect_),
          reinterpret_cast<char*>(&other->_impl_.event_or_event_field_to_collect_));
  swap(_impl_.aggregation_, other->_impl_.aggregation_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CollectionAction_CollectionTask_CollectionEventOrEventField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[1]);
}
// ===================================================================

class CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_._has_bits_);
  static const ::google::protobuf::Int64Value& value(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_Internal::value(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* msg) {
  return *msg->_impl_.value_;
}
void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(
    ::google::protobuf::Arena* arena,
    const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.value_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::type_));
}
CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::~CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.value_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.value_ != nullptr);
    _impl_.value_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Int64Value value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.value_)}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Int64Value value = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  return target;
}

::size_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value value = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_);
  }

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_class_data_ = {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::GetClassData() const {
  return &_class_data_;
}

void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(&to_msg);
  auto& from = static_cast<const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_value()->::google::protobuf::Int64Value::MergeFrom(
        from._internal_value());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.type_)
      + sizeof(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[2]);
}
// ===================================================================

class CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_._has_bits_);
  static const ::google::protobuf::Int64Value& value(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_Internal::value(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* msg) {
  return *msg->_impl_.value_;
}
void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(
    ::google::protobuf::Arena* arena,
    const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.value_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::type_));
}
CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::~CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.value_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.value_ != nullptr);
    _impl_.value_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Int64Value value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.value_)}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Int64Value value = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  return target;
}

::size_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value value = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_);
  }

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_class_data_ = {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::GetClassData() const {
  return &_class_data_;
}

void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(&to_msg);
  auto& from = static_cast<const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_value()->::google::protobuf::Int64Value::MergeFrom(
        from._internal_value());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.type_)
      + sizeof(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[3]);
}
// ===================================================================

class CollectionAction_CollectionTask_CollectionConfiguration::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction_CollectionTask_CollectionConfiguration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& pre_trigger_offset(const CollectionAction_CollectionTask_CollectionConfiguration* msg);
  static void set_has_pre_trigger_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& post_trigger_offset(const CollectionAction_CollectionTask_CollectionConfiguration* msg);
  static void set_has_post_trigger_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& trigger_frequency(const CollectionAction_CollectionTask_CollectionConfiguration* msg);
  static void set_has_trigger_frequency(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::_Internal::pre_trigger_offset(const CollectionAction_CollectionTask_CollectionConfiguration* msg) {
  return *msg->_impl_.pre_trigger_offset_;
}
const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::_Internal::post_trigger_offset(const CollectionAction_CollectionTask_CollectionConfiguration* msg) {
  return *msg->_impl_.post_trigger_offset_;
}
const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& CollectionAction_CollectionTask_CollectionConfiguration::_Internal::trigger_frequency(const CollectionAction_CollectionTask_CollectionConfiguration* msg) {
  return *msg->_impl_.trigger_frequency_;
}
void CollectionAction_CollectionTask_CollectionConfiguration::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
CollectionAction_CollectionTask_CollectionConfiguration::CollectionAction_CollectionTask_CollectionConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

CollectionAction_CollectionTask_CollectionConfiguration::CollectionAction_CollectionTask_CollectionConfiguration(
    ::google::protobuf::Arena* arena,
    const CollectionAction_CollectionTask_CollectionConfiguration& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction_CollectionTask_CollectionConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pre_trigger_offset_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>(arena, *from._impl_.pre_trigger_offset_)
                : nullptr;
  _impl_.post_trigger_offset_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>(arena, *from._impl_.post_trigger_offset_)
                : nullptr;
  _impl_.trigger_frequency_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency>(arena, *from._impl_.trigger_frequency_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask_CollectionConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void CollectionAction_CollectionTask_CollectionConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pre_trigger_offset_),
           0,
           offsetof(Impl_, trigger_frequency_) -
               offsetof(Impl_, pre_trigger_offset_) +
               sizeof(Impl_::trigger_frequency_));
}
CollectionAction_CollectionTask_CollectionConfiguration::~CollectionAction_CollectionTask_CollectionConfiguration() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pre_trigger_offset_;
  delete _impl_.post_trigger_offset_;
  delete _impl_.trigger_frequency_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionAction_CollectionTask_CollectionConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pre_trigger_offset_ != nullptr);
      _impl_.pre_trigger_offset_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.post_trigger_offset_ != nullptr);
      _impl_.post_trigger_offset_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.trigger_frequency_ != nullptr);
      _impl_.trigger_frequency_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction_CollectionTask_CollectionConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2> CollectionAction_CollectionTask_CollectionConfiguration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_CollectionTask_CollectionConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.pre_trigger_offset_)}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.post_trigger_offset_)}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.trigger_frequency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 3, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.pre_trigger_offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.post_trigger_offset_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.trigger_frequency_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.extension_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction_CollectionTask_CollectionConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::pre_trigger_offset(this),
        _Internal::pre_trigger_offset(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::post_trigger_offset(this),
        _Internal::post_trigger_offset(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::trigger_frequency(this),
        _Internal::trigger_frequency(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  return target;
}

::size_t CollectionAction_CollectionTask_CollectionConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pre_trigger_offset_);
    }

    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.post_trigger_offset_);
    }

    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trigger_frequency_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction_CollectionTask_CollectionConfiguration::_class_data_ = {
    CollectionAction_CollectionTask_CollectionConfiguration::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction_CollectionTask_CollectionConfiguration::GetClassData() const {
  return &_class_data_;
}

void CollectionAction_CollectionTask_CollectionConfiguration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction_CollectionTask_CollectionConfiguration*>(&to_msg);
  auto& from = static_cast<const CollectionAction_CollectionTask_CollectionConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pre_trigger_offset()->::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::MergeFrom(
          from._internal_pre_trigger_offset());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_post_trigger_offset()->::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::MergeFrom(
          from._internal_post_trigger_offset());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_trigger_frequency()->::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::MergeFrom(
          from._internal_trigger_frequency());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction_CollectionTask_CollectionConfiguration::CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction_CollectionTask_CollectionConfiguration::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction_CollectionTask_CollectionConfiguration::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction_CollectionTask_CollectionConfiguration::InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.trigger_frequency_)
      + sizeof(CollectionAction_CollectionTask_CollectionConfiguration::_impl_.trigger_frequency_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask_CollectionConfiguration, _impl_.pre_trigger_offset_)>(
          reinterpret_cast<char*>(&_impl_.pre_trigger_offset_),
          reinterpret_cast<char*>(&other->_impl_.pre_trigger_offset_));
}

::google::protobuf::Metadata CollectionAction_CollectionTask_CollectionConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[4]);
}
// ===================================================================

class CollectionAction_CollectionTask::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction_CollectionTask>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_._has_bits_);
  static const ::google::protobuf::BoolValue& optional(const CollectionAction_CollectionTask* msg);
  static void set_has_optional(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::BoolValue& prevent_overlapping_by_time(const CollectionAction_CollectionTask* msg);
  static void set_has_prevent_overlapping_by_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& collection_configuration(const CollectionAction_CollectionTask* msg);
  static void set_has_collection_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::_Internal::optional(const CollectionAction_CollectionTask* msg) {
  return *msg->_impl_.optional_;
}
const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::_Internal::prevent_overlapping_by_time(const CollectionAction_CollectionTask* msg) {
  return *msg->_impl_.prevent_overlapping_by_time_;
}
const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& CollectionAction_CollectionTask::_Internal::collection_configuration(const CollectionAction_CollectionTask* msg) {
  return *msg->_impl_.collection_configuration_;
}
void CollectionAction_CollectionTask::clear_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.optional_ != nullptr) _impl_.optional_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CollectionAction_CollectionTask::clear_prevent_overlapping_by_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.prevent_overlapping_by_time_ != nullptr) _impl_.prevent_overlapping_by_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CollectionAction_CollectionTask::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
CollectionAction_CollectionTask::CollectionAction_CollectionTask(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        collection_event_or_event_field_{visibility, arena, from.collection_event_or_event_field_},
        extension_{visibility, arena, from.extension_} {}

CollectionAction_CollectionTask::CollectionAction_CollectionTask(
    ::google::protobuf::Arena* arena,
    const CollectionAction_CollectionTask& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction_CollectionTask* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.optional_)
                : nullptr;
  _impl_.prevent_overlapping_by_time_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::BoolValue>(arena, *from._impl_.prevent_overlapping_by_time_)
                : nullptr;
  _impl_.collection_configuration_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration>(arena, *from._impl_.collection_configuration_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction_CollectionTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        collection_event_or_event_field_{visibility, arena},
        extension_{visibility, arena} {}

inline void CollectionAction_CollectionTask::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_),
           0,
           offsetof(Impl_, collection_configuration_) -
               offsetof(Impl_, optional_) +
               sizeof(Impl_::collection_configuration_));
}
CollectionAction_CollectionTask::~CollectionAction_CollectionTask() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction_CollectionTask::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.optional_;
  delete _impl_.prevent_overlapping_by_time_;
  delete _impl_.collection_configuration_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionAction_CollectionTask::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collection_event_or_event_field_.Clear();
  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optional_ != nullptr);
      _impl_.optional_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.prevent_overlapping_by_time_ != nullptr);
      _impl_.prevent_overlapping_by_time_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.collection_configuration_ != nullptr);
      _impl_.collection_configuration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction_CollectionTask::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> CollectionAction_CollectionTask::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950896,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_CollectionTask_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.BoolValue optional = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.optional_)}},
    // .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.prevent_overlapping_by_time_)}},
    // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.collection_event_or_event_field_)}},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.collection_configuration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 4, PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.BoolValue optional = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.optional_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.prevent_overlapping_by_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.collection_event_or_event_field_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.collection_configuration_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.extension_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::BoolValue>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction_CollectionTask::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.BoolValue optional = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::optional(this),
        _Internal::optional(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::prevent_overlapping_by_time(this),
        _Internal::prevent_overlapping_by_time(this).GetCachedSize(), target, stream);
  }

  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_collection_event_or_event_field_size()); i < n; i++) {
    const auto& repfield = this->_internal_collection_event_or_event_field().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::collection_configuration(this),
        _Internal::collection_configuration(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  return target;
}

::size_t CollectionAction_CollectionTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
  total_size += 1UL * this->_internal_collection_event_or_event_field_size();
  for (const auto& msg : this->_internal_collection_event_or_event_field()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.BoolValue optional = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_);
    }

    // .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.prevent_overlapping_by_time_);
    }

    // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.collection_configuration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction_CollectionTask::_class_data_ = {
    CollectionAction_CollectionTask::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction_CollectionTask::GetClassData() const {
  return &_class_data_;
}

void CollectionAction_CollectionTask::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction_CollectionTask*>(&to_msg);
  auto& from = static_cast<const CollectionAction_CollectionTask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_collection_event_or_event_field()->MergeFrom(
      from._internal_collection_event_or_event_field());
  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_optional());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_prevent_overlapping_by_time()->::google::protobuf::BoolValue::MergeFrom(
          from._internal_prevent_overlapping_by_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_collection_configuration()->::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration::MergeFrom(
          from._internal_collection_configuration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction_CollectionTask::CopyFrom(const CollectionAction_CollectionTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction_CollectionTask::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction_CollectionTask::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction_CollectionTask::InternalSwap(CollectionAction_CollectionTask* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.collection_event_or_event_field_.InternalSwap(&other->_impl_.collection_event_or_event_field_);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.collection_configuration_)
      + sizeof(CollectionAction_CollectionTask::_impl_.collection_configuration_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction_CollectionTask, _impl_.optional_)>(
          reinterpret_cast<char*>(&_impl_.optional_),
          reinterpret_cast<char*>(&other->_impl_.optional_));
}

::google::protobuf::Metadata CollectionAction_CollectionTask::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[5]);
}
// ===================================================================

class CollectionAction::_Internal {
 public:
  using HasBits = decltype(std::declval<CollectionAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::collection::CollectionExtents& min_transmitted_message_extents(const CollectionAction* msg);
  static void set_has_min_transmitted_message_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::collection::CollectionExtents& max_transmitted_message_extents(const CollectionAction* msg);
  static void set_has_max_transmitted_message_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::_Internal::min_transmitted_message_extents(const CollectionAction* msg) {
  return *msg->_impl_.min_transmitted_message_extents_;
}
const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::_Internal::max_transmitted_message_extents(const CollectionAction* msg) {
  return *msg->_impl_.max_transmitted_message_extents_;
}
void CollectionAction::clear_extension() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extension_.Clear();
}
CollectionAction::CollectionAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.collection.CollectionAction)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        collection_task_{visibility, arena, from.collection_task_},
        extension_{visibility, arena, from.extension_} {}

CollectionAction::CollectionAction(
    ::google::protobuf::Arena* arena,
    const CollectionAction& from)
    : ::google::protobuf::Message(arena) {
  CollectionAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_transmitted_message_extents_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionExtents>(arena, *from._impl_.min_transmitted_message_extents_)
                : nullptr;
  _impl_.max_transmitted_message_extents_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionExtents>(arena, *from._impl_.max_transmitted_message_extents_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.collection.CollectionAction)
}
inline PROTOBUF_NDEBUG_INLINE CollectionAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        collection_task_{visibility, arena},
        extension_{visibility, arena} {}

inline void CollectionAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_transmitted_message_extents_),
           0,
           offsetof(Impl_, max_transmitted_message_extents_) -
               offsetof(Impl_, min_transmitted_message_extents_) +
               sizeof(Impl_::max_transmitted_message_extents_));
}
CollectionAction::~CollectionAction() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.collection.CollectionAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.min_transmitted_message_extents_;
  delete _impl_.max_transmitted_message_extents_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionAction::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.collection.CollectionAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collection_task_.Clear();
  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.min_transmitted_message_extents_ != nullptr);
      _impl_.min_transmitted_message_extents_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.max_transmitted_message_extents_ != nullptr);
      _impl_.max_transmitted_message_extents_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2> CollectionAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.collection_task_)}},
    // .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.min_transmitted_message_extents_)}},
    // .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.max_transmitted_message_extents_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 3, PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.collection_task_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.min_transmitted_message_extents_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
    {PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.max_transmitted_message_extents_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.extension_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionExtents>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::collection::CollectionExtents>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* CollectionAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.collection.CollectionAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_collection_task_size()); i < n; i++) {
    const auto& repfield = this->_internal_collection_task().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::min_transmitted_message_extents(this),
        _Internal::min_transmitted_message_extents(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::max_transmitted_message_extents(this),
        _Internal::max_transmitted_message_extents(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extension_size()); i < n; i++) {
    const auto& repfield = this->_internal_extension().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.collection.CollectionAction)
  return target;
}

::size_t CollectionAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.collection.CollectionAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
  total_size += 1UL * this->_internal_collection_task_size();
  for (const auto& msg : this->_internal_collection_task()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.Any extension = 15;
  total_size += 1UL * this->_internal_extension_size();
  for (const auto& msg : this->_internal_extension()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.min_transmitted_message_extents_);
    }

    // .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.max_transmitted_message_extents_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionAction::_class_data_ = {
    CollectionAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionAction::GetClassData() const {
  return &_class_data_;
}

void CollectionAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionAction*>(&to_msg);
  auto& from = static_cast<const CollectionAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.collection.CollectionAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_collection_task()->MergeFrom(
      from._internal_collection_task());
  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_min_transmitted_message_extents()->::sensoris::protobuf::types::collection::CollectionExtents::MergeFrom(
          from._internal_min_transmitted_message_extents());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_max_transmitted_message_extents()->::sensoris::protobuf::types::collection::CollectionExtents::MergeFrom(
          from._internal_max_transmitted_message_extents());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionAction::CopyFrom(const CollectionAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.collection.CollectionAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionAction::InternalSwap(CollectionAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.collection_task_.InternalSwap(&other->_impl_.collection_task_);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.max_transmitted_message_extents_)
      + sizeof(CollectionAction::_impl_.max_transmitted_message_extents_)
      - PROTOBUF_FIELD_OFFSET(CollectionAction, _impl_.min_transmitted_message_extents_)>(
          reinterpret_cast<char*>(&_impl_.min_transmitted_message_extents_),
          reinterpret_cast<char*>(&other->_impl_.min_transmitted_message_extents_));
}

::google::protobuf::Metadata CollectionAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace collection
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
