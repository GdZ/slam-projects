/**
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/collection.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/wrappers.pb.h"
#include "sensoris/protobuf/types/base.pb.h"
#include "sensoris/protobuf/types/job.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
namespace sensoris {
namespace protobuf {
namespace types {
namespace collection {
class CollectionAction;
struct CollectionActionDefaultTypeInternal;
extern CollectionActionDefaultTypeInternal _CollectionAction_default_instance_;
class CollectionAction_CollectionTask;
struct CollectionAction_CollectionTaskDefaultTypeInternal;
extern CollectionAction_CollectionTaskDefaultTypeInternal _CollectionAction_CollectionTask_default_instance_;
class CollectionAction_CollectionTask_CollectionConfiguration;
struct CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal;
extern CollectionAction_CollectionTask_CollectionConfigurationDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_default_instance_;
class CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency;
struct CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal;
extern CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequencyDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_;
class CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset;
struct CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal;
extern CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffsetDefaultTypeInternal _CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_;
class CollectionAction_CollectionTask_CollectionEventOrEventField;
struct CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal;
extern CollectionAction_CollectionTask_CollectionEventOrEventFieldDefaultTypeInternal _CollectionAction_CollectionTask_CollectionEventOrEventField_default_instance_;
class CollectionExtents;
struct CollectionExtentsDefaultTypeInternal;
extern CollectionExtentsDefaultTypeInternal _CollectionExtents_default_instance_;
}  // namespace collection
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sensoris {
namespace protobuf {
namespace types {
namespace collection {
enum CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType : int {
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_UNKNOWN_AGGREGATION_TYPE = 0,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_ALL = 1,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MINIMUM = 2,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MAXIMUM = 3,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AVERAGE = 4,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MEDIAN = 5,
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_IsValid(int value);
extern const uint32_t CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_internal_data_[];
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_MIN = static_cast<CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(0);
constexpr CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_MAX = static_cast<CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(5);
constexpr int CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor();
template <typename T>
const std::string& CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Name(T value) {
  static_assert(std::is_same<T, CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AggregationType_Name().");
  return CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Name(static_cast<CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(value));
}
template <>
inline const std::string& CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Name(CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Parse(absl::string_view name, CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(
      CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor(), name, value);
}
enum CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type : int {
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_UNKNOWN_TYPE = 0,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_COUNT = 1,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_DISTANCE = 2,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_IsValid(int value);
extern const uint32_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_internal_data_[];
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_MIN = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>(0);
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_MAX = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>(2);
constexpr int CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor();
template <typename T>
const std::string& CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Name(T value) {
  static_assert(std::is_same<T, CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Name(static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>(value));
}
template <>
inline const std::string& CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Name(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Parse(absl::string_view name, CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>(
      CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor(), name, value);
}
enum CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type : int {
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_UNKNOWN_TYPE = 0,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_ONCE = 1,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_ON_CHANGE = 2,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_BY_TIME = 3,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_BY_DISTANCE = 4,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_NATIVE_FREQUENCY = 5,
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_IsValid(int value);
extern const uint32_t CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_internal_data_[];
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_MIN = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>(0);
constexpr CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_MAX = static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>(5);
constexpr int CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor();
template <typename T>
const std::string& CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Name(T value) {
  static_assert(std::is_same<T, CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Name(static_cast<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>(value));
}
template <>
inline const std::string& CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Name(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Parse(absl::string_view name, CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>(
      CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CollectionExtents final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionExtents) */ {
 public:
  inline CollectionExtents() : CollectionExtents(nullptr) {}
  ~CollectionExtents() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionExtents(::google::protobuf::internal::ConstantInitialized);

  inline CollectionExtents(const CollectionExtents& from)
      : CollectionExtents(nullptr, from) {}
  CollectionExtents(CollectionExtents&& from) noexcept
    : CollectionExtents() {
    *this = ::std::move(from);
  }

  inline CollectionExtents& operator=(const CollectionExtents& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionExtents& operator=(CollectionExtents&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionExtents& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionExtents* internal_default_instance() {
    return reinterpret_cast<const CollectionExtents*>(
               &_CollectionExtents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CollectionExtents& a, CollectionExtents& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionExtents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionExtents* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionExtents* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionExtents>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionExtents& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionExtents& from) {
    CollectionExtents::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionExtents* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionExtents";
  }
  protected:
  explicit CollectionExtents(::google::protobuf::Arena* arena);
  CollectionExtents(::google::protobuf::Arena* arena, const CollectionExtents& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionFieldNumber = 15,
    kCountFieldNumber = 1,
    kDataMessageSizeFieldNumber = 2,
    kPathLengthFieldNumber = 3,
    kDurationFieldNumber = 4,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .google.protobuf.Int64Value count = 1;
  bool has_count() const;
  void clear_count() ;
  const ::google::protobuf::Int64Value& count() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_count();
  ::google::protobuf::Int64Value* mutable_count();
  void set_allocated_count(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_count(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_count();

  private:
  const ::google::protobuf::Int64Value& _internal_count() const;
  ::google::protobuf::Int64Value* _internal_mutable_count();

  public:
  // .google.protobuf.Int64Value data_message_size = 2;
  bool has_data_message_size() const;
  void clear_data_message_size() ;
  const ::google::protobuf::Int64Value& data_message_size() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_data_message_size();
  ::google::protobuf::Int64Value* mutable_data_message_size();
  void set_allocated_data_message_size(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_data_message_size(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_data_message_size();

  private:
  const ::google::protobuf::Int64Value& _internal_data_message_size() const;
  ::google::protobuf::Int64Value* _internal_mutable_data_message_size();

  public:
  // .google.protobuf.Int64Value path_length = 3;
  bool has_path_length() const;
  void clear_path_length() ;
  const ::google::protobuf::Int64Value& path_length() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_path_length();
  ::google::protobuf::Int64Value* mutable_path_length();
  void set_allocated_path_length(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_path_length(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_path_length();

  private:
  const ::google::protobuf::Int64Value& _internal_path_length() const;
  ::google::protobuf::Int64Value* _internal_mutable_path_length();

  public:
  // .google.protobuf.Int64Value duration = 4;
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Int64Value& duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_duration();
  ::google::protobuf::Int64Value* mutable_duration();
  void set_allocated_duration(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Int64Value& _internal_duration() const;
  ::google::protobuf::Int64Value* _internal_mutable_duration();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionExtents)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::google::protobuf::Int64Value* count_;
    ::google::protobuf::Int64Value* data_message_size_;
    ::google::protobuf::Int64Value* path_length_;
    ::google::protobuf::Int64Value* duration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset) */ {
 public:
  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset() : CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(nullptr) {}
  ~CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from)
      : CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(nullptr, from) {}
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset&& from) noexcept
    : CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset() {
    *this = ::std::move(from);
  }

  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& operator=(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& operator=(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* internal_default_instance() {
    return reinterpret_cast<const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(
               &_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& a, CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from) {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset";
  }
  protected:
  explicit CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(::google::protobuf::Arena* arena);
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset(::google::protobuf::Arena* arena, const CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type;
  static constexpr Type UNKNOWN_TYPE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_UNKNOWN_TYPE;
  static constexpr Type COUNT = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_COUNT;
  static constexpr Type DISTANCE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_DISTANCE;
  static inline bool Type_IsValid(int value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_MIN;
  static constexpr Type Type_MAX = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .google.protobuf.Int64Value value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::google::protobuf::Int64Value& value() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_value();
  ::google::protobuf::Int64Value* mutable_value();
  void set_allocated_value(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_value(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_value();

  private:
  const ::google::protobuf::Int64Value& _internal_value() const;
  ::google::protobuf::Int64Value* _internal_mutable_value();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type type() const;
  void set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type value);

  private:
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Int64Value* value_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency) */ {
 public:
  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency() : CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(nullptr) {}
  ~CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from)
      : CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(nullptr, from) {}
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency&& from) noexcept
    : CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency() {
    *this = ::std::move(from);
  }

  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& operator=(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& operator=(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* internal_default_instance() {
    return reinterpret_cast<const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(
               &_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& a, CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from) {
    CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency";
  }
  protected:
  explicit CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(::google::protobuf::Arena* arena);
  CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency(::google::protobuf::Arena* arena, const CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type;
  static constexpr Type UNKNOWN_TYPE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_UNKNOWN_TYPE;
  static constexpr Type ONCE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_ONCE;
  static constexpr Type ON_CHANGE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_ON_CHANGE;
  static constexpr Type BY_TIME = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_BY_TIME;
  static constexpr Type BY_DISTANCE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_BY_DISTANCE;
  static constexpr Type NATIVE_FREQUENCY = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_NATIVE_FREQUENCY;
  static inline bool Type_IsValid(int value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_MIN;
  static constexpr Type Type_MAX = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .google.protobuf.Int64Value value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::google::protobuf::Int64Value& value() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_value();
  ::google::protobuf::Int64Value* mutable_value();
  void set_allocated_value(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_value(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_value();

  private:
  const ::google::protobuf::Int64Value& _internal_value() const;
  ::google::protobuf::Int64Value* _internal_mutable_value();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type type() const;
  void set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type value);

  private:
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Int64Value* value_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction_CollectionTask_CollectionConfiguration final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration) */ {
 public:
  inline CollectionAction_CollectionTask_CollectionConfiguration() : CollectionAction_CollectionTask_CollectionConfiguration(nullptr) {}
  ~CollectionAction_CollectionTask_CollectionConfiguration() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction_CollectionTask_CollectionConfiguration(const CollectionAction_CollectionTask_CollectionConfiguration& from)
      : CollectionAction_CollectionTask_CollectionConfiguration(nullptr, from) {}
  CollectionAction_CollectionTask_CollectionConfiguration(CollectionAction_CollectionTask_CollectionConfiguration&& from) noexcept
    : CollectionAction_CollectionTask_CollectionConfiguration() {
    *this = ::std::move(from);
  }

  inline CollectionAction_CollectionTask_CollectionConfiguration& operator=(const CollectionAction_CollectionTask_CollectionConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction_CollectionTask_CollectionConfiguration& operator=(CollectionAction_CollectionTask_CollectionConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction_CollectionTask_CollectionConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionAction_CollectionTask_CollectionConfiguration* internal_default_instance() {
    return reinterpret_cast<const CollectionAction_CollectionTask_CollectionConfiguration*>(
               &_CollectionAction_CollectionTask_CollectionConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CollectionAction_CollectionTask_CollectionConfiguration& a, CollectionAction_CollectionTask_CollectionConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction_CollectionTask_CollectionConfiguration* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction_CollectionTask_CollectionConfiguration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction_CollectionTask_CollectionConfiguration* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction_CollectionTask_CollectionConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction_CollectionTask_CollectionConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction_CollectionTask_CollectionConfiguration& from) {
    CollectionAction_CollectionTask_CollectionConfiguration::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction_CollectionTask_CollectionConfiguration* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration";
  }
  protected:
  explicit CollectionAction_CollectionTask_CollectionConfiguration(::google::protobuf::Arena* arena);
  CollectionAction_CollectionTask_CollectionConfiguration(::google::protobuf::Arena* arena, const CollectionAction_CollectionTask_CollectionConfiguration& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using TriggerOffset = CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset;
  using TriggerFrequency = CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency;

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionFieldNumber = 15,
    kPreTriggerOffsetFieldNumber = 1,
    kPostTriggerOffsetFieldNumber = 2,
    kTriggerFrequencyFieldNumber = 3,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
  bool has_pre_trigger_offset() const;
  void clear_pre_trigger_offset() ;
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& pre_trigger_offset() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* release_pre_trigger_offset();
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* mutable_pre_trigger_offset();
  void set_allocated_pre_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value);
  void unsafe_arena_set_allocated_pre_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* unsafe_arena_release_pre_trigger_offset();

  private:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& _internal_pre_trigger_offset() const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* _internal_mutable_pre_trigger_offset();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
  bool has_post_trigger_offset() const;
  void clear_post_trigger_offset() ;
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& post_trigger_offset() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* release_post_trigger_offset();
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* mutable_post_trigger_offset();
  void set_allocated_post_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value);
  void unsafe_arena_set_allocated_post_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* unsafe_arena_release_post_trigger_offset();

  private:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& _internal_post_trigger_offset() const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* _internal_mutable_post_trigger_offset();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
  bool has_trigger_frequency() const;
  void clear_trigger_frequency() ;
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& trigger_frequency() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* release_trigger_frequency();
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* mutable_trigger_frequency();
  void set_allocated_trigger_frequency(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* value);
  void unsafe_arena_set_allocated_trigger_frequency(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* value);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* unsafe_arena_release_trigger_frequency();

  private:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& _internal_trigger_frequency() const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* _internal_mutable_trigger_frequency();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* pre_trigger_offset_;
    ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* post_trigger_offset_;
    ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* trigger_frequency_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction_CollectionTask_CollectionEventOrEventField final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField) */ {
 public:
  inline CollectionAction_CollectionTask_CollectionEventOrEventField() : CollectionAction_CollectionTask_CollectionEventOrEventField(nullptr) {}
  ~CollectionAction_CollectionTask_CollectionEventOrEventField() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction_CollectionTask_CollectionEventOrEventField(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction_CollectionTask_CollectionEventOrEventField(const CollectionAction_CollectionTask_CollectionEventOrEventField& from)
      : CollectionAction_CollectionTask_CollectionEventOrEventField(nullptr, from) {}
  CollectionAction_CollectionTask_CollectionEventOrEventField(CollectionAction_CollectionTask_CollectionEventOrEventField&& from) noexcept
    : CollectionAction_CollectionTask_CollectionEventOrEventField() {
    *this = ::std::move(from);
  }

  inline CollectionAction_CollectionTask_CollectionEventOrEventField& operator=(const CollectionAction_CollectionTask_CollectionEventOrEventField& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction_CollectionTask_CollectionEventOrEventField& operator=(CollectionAction_CollectionTask_CollectionEventOrEventField&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction_CollectionTask_CollectionEventOrEventField& default_instance() {
    return *internal_default_instance();
  }
  enum AggregationCase {
    kCurrentValue = 3,
    kAggregationType = 4,
    kAbsoluteHistogramSpecification = 5,
    kRelativeHistogramSpecification = 6,
    AGGREGATION_NOT_SET = 0,
  };

  static inline const CollectionAction_CollectionTask_CollectionEventOrEventField* internal_default_instance() {
    return reinterpret_cast<const CollectionAction_CollectionTask_CollectionEventOrEventField*>(
               &_CollectionAction_CollectionTask_CollectionEventOrEventField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CollectionAction_CollectionTask_CollectionEventOrEventField& a, CollectionAction_CollectionTask_CollectionEventOrEventField& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction_CollectionTask_CollectionEventOrEventField* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction_CollectionTask_CollectionEventOrEventField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction_CollectionTask_CollectionEventOrEventField* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction_CollectionTask_CollectionEventOrEventField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction_CollectionTask_CollectionEventOrEventField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction_CollectionTask_CollectionEventOrEventField& from) {
    CollectionAction_CollectionTask_CollectionEventOrEventField::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction_CollectionTask_CollectionEventOrEventField* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField";
  }
  protected:
  explicit CollectionAction_CollectionTask_CollectionEventOrEventField(::google::protobuf::Arena* arena);
  CollectionAction_CollectionTask_CollectionEventOrEventField(::google::protobuf::Arena* arena, const CollectionAction_CollectionTask_CollectionEventOrEventField& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AggregationType = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType;
  static constexpr AggregationType UNKNOWN_AGGREGATION_TYPE = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_UNKNOWN_AGGREGATION_TYPE;
  static constexpr AggregationType ALL = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_ALL;
  static constexpr AggregationType MINIMUM = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MINIMUM;
  static constexpr AggregationType MAXIMUM = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MAXIMUM;
  static constexpr AggregationType AVERAGE = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AVERAGE;
  static constexpr AggregationType MEDIAN = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_MEDIAN;
  static inline bool AggregationType_IsValid(int value) {
    return CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_IsValid(value);
  }
  static constexpr AggregationType AggregationType_MIN = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_MIN;
  static constexpr AggregationType AggregationType_MAX = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_MAX;
  static constexpr int AggregationType_ARRAYSIZE = CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_AggregationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AggregationType_descriptor() {
    return CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor();
  }
  template <typename T>
  static inline const std::string& AggregationType_Name(T value) {
    return CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Name(value);
  }
  static inline bool AggregationType_Parse(absl::string_view name, AggregationType* value) {
    return CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionFieldNumber = 15,
    kEventOrEventFieldToCollectFieldNumber = 1,
    kOptionalFieldNumber = 2,
    kRequestedExponentFieldNumber = 7,
    kCurrentValueFieldNumber = 3,
    kAggregationTypeFieldNumber = 4,
    kAbsoluteHistogramSpecificationFieldNumber = 5,
    kRelativeHistogramSpecificationFieldNumber = 6,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
  bool has_event_or_event_field_to_collect() const;
  void clear_event_or_event_field_to_collect() ;
  const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& event_or_event_field_to_collect() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* release_event_or_event_field_to_collect();
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* mutable_event_or_event_field_to_collect();
  void set_allocated_event_or_event_field_to_collect(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* value);
  void unsafe_arena_set_allocated_event_or_event_field_to_collect(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* value);
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* unsafe_arena_release_event_or_event_field_to_collect();

  private:
  const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& _internal_event_or_event_field_to_collect() const;
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* _internal_mutable_event_or_event_field_to_collect();

  public:
  // .google.protobuf.BoolValue optional = 2;
  bool has_optional() const;
  void clear_optional() ;
  const ::google::protobuf::BoolValue& optional() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_optional();
  ::google::protobuf::BoolValue* mutable_optional();
  void set_allocated_optional(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_optional(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_optional();

  private:
  const ::google::protobuf::BoolValue& _internal_optional() const;
  ::google::protobuf::BoolValue* _internal_mutable_optional();

  public:
  // .google.protobuf.Int64Value requested_exponent = 7;
  bool has_requested_exponent() const;
  void clear_requested_exponent() ;
  const ::google::protobuf::Int64Value& requested_exponent() const;
  PROTOBUF_NODISCARD ::google::protobuf::Int64Value* release_requested_exponent();
  ::google::protobuf::Int64Value* mutable_requested_exponent();
  void set_allocated_requested_exponent(::google::protobuf::Int64Value* value);
  void unsafe_arena_set_allocated_requested_exponent(::google::protobuf::Int64Value* value);
  ::google::protobuf::Int64Value* unsafe_arena_release_requested_exponent();

  private:
  const ::google::protobuf::Int64Value& _internal_requested_exponent() const;
  ::google::protobuf::Int64Value* _internal_mutable_requested_exponent();

  public:
  // .google.protobuf.BoolValue current_value = 3;
  bool has_current_value() const;
  private:
  bool _internal_has_current_value() const;

  public:
  void clear_current_value() ;
  const ::google::protobuf::BoolValue& current_value() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_current_value();
  ::google::protobuf::BoolValue* mutable_current_value();
  void set_allocated_current_value(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_current_value(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_current_value();

  private:
  const ::google::protobuf::BoolValue& _internal_current_value() const;
  ::google::protobuf::BoolValue* _internal_mutable_current_value();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.AggregationType aggregation_type = 4;
  bool has_aggregation_type() const;
  void clear_aggregation_type() ;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType aggregation_type() const;
  void set_aggregation_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType value);

  private:
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType _internal_aggregation_type() const;
  void _internal_set_aggregation_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType value);

  public:
  // .sensoris.protobuf.types.job.AbsoluteHistogramSpecification absolute_histogram_specification = 5;
  bool has_absolute_histogram_specification() const;
  private:
  bool _internal_has_absolute_histogram_specification() const;

  public:
  void clear_absolute_histogram_specification() ;
  const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& absolute_histogram_specification() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* release_absolute_histogram_specification();
  ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* mutable_absolute_histogram_specification();
  void set_allocated_absolute_histogram_specification(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* value);
  void unsafe_arena_set_allocated_absolute_histogram_specification(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* value);
  ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* unsafe_arena_release_absolute_histogram_specification();

  private:
  const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& _internal_absolute_histogram_specification() const;
  ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* _internal_mutable_absolute_histogram_specification();

  public:
  // .sensoris.protobuf.types.job.RelativeHistogramSpecification relative_histogram_specification = 6;
  bool has_relative_histogram_specification() const;
  private:
  bool _internal_has_relative_histogram_specification() const;

  public:
  void clear_relative_histogram_specification() ;
  const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& relative_histogram_specification() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::job::RelativeHistogramSpecification* release_relative_histogram_specification();
  ::sensoris::protobuf::types::job::RelativeHistogramSpecification* mutable_relative_histogram_specification();
  void set_allocated_relative_histogram_specification(::sensoris::protobuf::types::job::RelativeHistogramSpecification* value);
  void unsafe_arena_set_allocated_relative_histogram_specification(::sensoris::protobuf::types::job::RelativeHistogramSpecification* value);
  ::sensoris::protobuf::types::job::RelativeHistogramSpecification* unsafe_arena_release_relative_histogram_specification();

  private:
  const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& _internal_relative_histogram_specification() const;
  ::sensoris::protobuf::types::job::RelativeHistogramSpecification* _internal_mutable_relative_histogram_specification();

  public:
  void clear_aggregation();
  AggregationCase aggregation_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField)
 private:
  class _Internal;
  void set_has_current_value();
  void set_has_aggregation_type();
  void set_has_absolute_histogram_specification();
  void set_has_relative_histogram_specification();

  inline bool has_aggregation() const;
  inline void clear_has_aggregation();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 7,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* event_or_event_field_to_collect_;
    ::google::protobuf::BoolValue* optional_;
    ::google::protobuf::Int64Value* requested_exponent_;
    union AggregationUnion {
      constexpr AggregationUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::BoolValue* current_value_;
      int aggregation_type_;
      ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* absolute_histogram_specification_;
      ::sensoris::protobuf::types::job::RelativeHistogramSpecification* relative_histogram_specification_;
    } aggregation_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction_CollectionTask final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction.CollectionTask) */ {
 public:
  inline CollectionAction_CollectionTask() : CollectionAction_CollectionTask(nullptr) {}
  ~CollectionAction_CollectionTask() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction_CollectionTask(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction_CollectionTask(const CollectionAction_CollectionTask& from)
      : CollectionAction_CollectionTask(nullptr, from) {}
  CollectionAction_CollectionTask(CollectionAction_CollectionTask&& from) noexcept
    : CollectionAction_CollectionTask() {
    *this = ::std::move(from);
  }

  inline CollectionAction_CollectionTask& operator=(const CollectionAction_CollectionTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction_CollectionTask& operator=(CollectionAction_CollectionTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction_CollectionTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionAction_CollectionTask* internal_default_instance() {
    return reinterpret_cast<const CollectionAction_CollectionTask*>(
               &_CollectionAction_CollectionTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CollectionAction_CollectionTask& a, CollectionAction_CollectionTask& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction_CollectionTask* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction_CollectionTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction_CollectionTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction_CollectionTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction_CollectionTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction_CollectionTask& from) {
    CollectionAction_CollectionTask::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction_CollectionTask* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction.CollectionTask";
  }
  protected:
  explicit CollectionAction_CollectionTask(::google::protobuf::Arena* arena);
  CollectionAction_CollectionTask(::google::protobuf::Arena* arena, const CollectionAction_CollectionTask& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using CollectionEventOrEventField = CollectionAction_CollectionTask_CollectionEventOrEventField;
  using CollectionConfiguration = CollectionAction_CollectionTask_CollectionConfiguration;

  // accessors -------------------------------------------------------

  enum : int {
    kCollectionEventOrEventFieldFieldNumber = 3,
    kExtensionFieldNumber = 15,
    kOptionalFieldNumber = 1,
    kPreventOverlappingByTimeFieldNumber = 2,
    kCollectionConfigurationFieldNumber = 4,
  };
  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
  int collection_event_or_event_field_size() const;
  private:
  int _internal_collection_event_or_event_field_size() const;

  public:
  void clear_collection_event_or_event_field() ;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField* mutable_collection_event_or_event_field(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField >*
      mutable_collection_event_or_event_field();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>& _internal_collection_event_or_event_field() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>* _internal_mutable_collection_event_or_event_field();
  public:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField& collection_event_or_event_field(int index) const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField* add_collection_event_or_event_field();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField >&
      collection_event_or_event_field() const;
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .google.protobuf.BoolValue optional = 1;
  bool has_optional() const;
  void clear_optional() ;
  const ::google::protobuf::BoolValue& optional() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_optional();
  ::google::protobuf::BoolValue* mutable_optional();
  void set_allocated_optional(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_optional(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_optional();

  private:
  const ::google::protobuf::BoolValue& _internal_optional() const;
  ::google::protobuf::BoolValue* _internal_mutable_optional();

  public:
  // .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
  bool has_prevent_overlapping_by_time() const;
  void clear_prevent_overlapping_by_time() ;
  const ::google::protobuf::BoolValue& prevent_overlapping_by_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_prevent_overlapping_by_time();
  ::google::protobuf::BoolValue* mutable_prevent_overlapping_by_time();
  void set_allocated_prevent_overlapping_by_time(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_prevent_overlapping_by_time(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_prevent_overlapping_by_time();

  private:
  const ::google::protobuf::BoolValue& _internal_prevent_overlapping_by_time() const;
  ::google::protobuf::BoolValue* _internal_mutable_prevent_overlapping_by_time();

  public:
  // .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
  bool has_collection_configuration() const;
  void clear_collection_configuration() ;
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& collection_configuration() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* release_collection_configuration();
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* mutable_collection_configuration();
  void set_allocated_collection_configuration(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* value);
  void unsafe_arena_set_allocated_collection_configuration(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* value);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* unsafe_arena_release_collection_configuration();

  private:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& _internal_collection_configuration() const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* _internal_mutable_collection_configuration();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction.CollectionTask)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField > collection_event_or_event_field_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::google::protobuf::BoolValue* optional_;
    ::google::protobuf::BoolValue* prevent_overlapping_by_time_;
    ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* collection_configuration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};// -------------------------------------------------------------------

class CollectionAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sensoris.protobuf.types.collection.CollectionAction) */ {
 public:
  inline CollectionAction() : CollectionAction(nullptr) {}
  ~CollectionAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CollectionAction(::google::protobuf::internal::ConstantInitialized);

  inline CollectionAction(const CollectionAction& from)
      : CollectionAction(nullptr, from) {}
  CollectionAction(CollectionAction&& from) noexcept
    : CollectionAction() {
    *this = ::std::move(from);
  }

  inline CollectionAction& operator=(const CollectionAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollectionAction& operator=(CollectionAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollectionAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollectionAction* internal_default_instance() {
    return reinterpret_cast<const CollectionAction*>(
               &_CollectionAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CollectionAction& a, CollectionAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CollectionAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollectionAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollectionAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CollectionAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollectionAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CollectionAction& from) {
    CollectionAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollectionAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sensoris.protobuf.types.collection.CollectionAction";
  }
  protected:
  explicit CollectionAction(::google::protobuf::Arena* arena);
  CollectionAction(::google::protobuf::Arena* arena, const CollectionAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using CollectionTask = CollectionAction_CollectionTask;

  // accessors -------------------------------------------------------

  enum : int {
    kCollectionTaskFieldNumber = 1,
    kExtensionFieldNumber = 15,
    kMinTransmittedMessageExtentsFieldNumber = 2,
    kMaxTransmittedMessageExtentsFieldNumber = 3,
  };
  // repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
  int collection_task_size() const;
  private:
  int _internal_collection_task_size() const;

  public:
  void clear_collection_task() ;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask* mutable_collection_task(int index);
  ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask >*
      mutable_collection_task();
  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>& _internal_collection_task() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>* _internal_mutable_collection_task();
  public:
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask& collection_task(int index) const;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask* add_collection_task();
  const ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask >&
      collection_task() const;
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_extension();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      extension() const;
  // .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
  bool has_min_transmitted_message_extents() const;
  void clear_min_transmitted_message_extents() ;
  const ::sensoris::protobuf::types::collection::CollectionExtents& min_transmitted_message_extents() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionExtents* release_min_transmitted_message_extents();
  ::sensoris::protobuf::types::collection::CollectionExtents* mutable_min_transmitted_message_extents();
  void set_allocated_min_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value);
  void unsafe_arena_set_allocated_min_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value);
  ::sensoris::protobuf::types::collection::CollectionExtents* unsafe_arena_release_min_transmitted_message_extents();

  private:
  const ::sensoris::protobuf::types::collection::CollectionExtents& _internal_min_transmitted_message_extents() const;
  ::sensoris::protobuf::types::collection::CollectionExtents* _internal_mutable_min_transmitted_message_extents();

  public:
  // .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
  bool has_max_transmitted_message_extents() const;
  void clear_max_transmitted_message_extents() ;
  const ::sensoris::protobuf::types::collection::CollectionExtents& max_transmitted_message_extents() const;
  PROTOBUF_NODISCARD ::sensoris::protobuf::types::collection::CollectionExtents* release_max_transmitted_message_extents();
  ::sensoris::protobuf::types::collection::CollectionExtents* mutable_max_transmitted_message_extents();
  void set_allocated_max_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value);
  void unsafe_arena_set_allocated_max_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value);
  ::sensoris::protobuf::types::collection::CollectionExtents* unsafe_arena_release_max_transmitted_message_extents();

  private:
  const ::sensoris::protobuf::types::collection::CollectionExtents& _internal_max_transmitted_message_extents() const;
  ::sensoris::protobuf::types::collection::CollectionExtents* _internal_mutable_max_transmitted_message_extents();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.collection.CollectionAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask > collection_task_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::collection::CollectionExtents* min_transmitted_message_extents_;
    ::sensoris::protobuf::types::collection::CollectionExtents* max_transmitted_message_extents_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CollectionExtents

// .google.protobuf.Int64Value count = 1;
inline bool CollectionExtents::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.count_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionExtents::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.count_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionExtents::count() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionExtents.count)
  return _internal_count();
}
inline void CollectionExtents::unsafe_arena_set_allocated_count(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.count_);
  }
  _impl_.count_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.count)
}
inline ::google::protobuf::Int64Value* CollectionExtents::release_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* released = _impl_.count_;
  _impl_.count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionExtents::unsafe_arena_release_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionExtents.count)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* temp = _impl_.count_;
  _impl_.count_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionExtents::_internal_mutable_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.count_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.count_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.count_;
}
inline ::google::protobuf::Int64Value* CollectionExtents::mutable_count() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_count();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionExtents.count)
  return _msg;
}
inline void CollectionExtents::set_allocated_count(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.count_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.count_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.count)
}

// .google.protobuf.Int64Value data_message_size = 2;
inline bool CollectionExtents::has_data_message_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_message_size_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionExtents::_internal_data_message_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.data_message_size_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionExtents::data_message_size() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionExtents.data_message_size)
  return _internal_data_message_size();
}
inline void CollectionExtents::unsafe_arena_set_allocated_data_message_size(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_message_size_);
  }
  _impl_.data_message_size_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.data_message_size)
}
inline ::google::protobuf::Int64Value* CollectionExtents::release_data_message_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.data_message_size_;
  _impl_.data_message_size_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionExtents::unsafe_arena_release_data_message_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionExtents.data_message_size)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.data_message_size_;
  _impl_.data_message_size_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionExtents::_internal_mutable_data_message_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.data_message_size_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.data_message_size_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.data_message_size_;
}
inline ::google::protobuf::Int64Value* CollectionExtents::mutable_data_message_size() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_data_message_size();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionExtents.data_message_size)
  return _msg;
}
inline void CollectionExtents::set_allocated_data_message_size(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_message_size_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.data_message_size_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.data_message_size)
}

// .google.protobuf.Int64Value path_length = 3;
inline bool CollectionExtents::has_path_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.path_length_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionExtents::_internal_path_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.path_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionExtents::path_length() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionExtents.path_length)
  return _internal_path_length();
}
inline void CollectionExtents::unsafe_arena_set_allocated_path_length(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.path_length_);
  }
  _impl_.path_length_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.path_length)
}
inline ::google::protobuf::Int64Value* CollectionExtents::release_path_length() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* released = _impl_.path_length_;
  _impl_.path_length_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionExtents::unsafe_arena_release_path_length() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionExtents.path_length)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* temp = _impl_.path_length_;
  _impl_.path_length_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionExtents::_internal_mutable_path_length() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.path_length_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.path_length_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.path_length_;
}
inline ::google::protobuf::Int64Value* CollectionExtents::mutable_path_length() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_path_length();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionExtents.path_length)
  return _msg;
}
inline void CollectionExtents::set_allocated_path_length(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.path_length_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.path_length_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.path_length)
}

// .google.protobuf.Int64Value duration = 4;
inline bool CollectionExtents::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionExtents::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionExtents::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionExtents.duration)
  return _internal_duration();
}
inline void CollectionExtents::unsafe_arena_set_allocated_duration(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.duration)
}
inline ::google::protobuf::Int64Value* CollectionExtents::release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Int64Value* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionExtents::unsafe_arena_release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionExtents.duration)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Int64Value* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionExtents::_internal_mutable_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Int64Value* CollectionExtents::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionExtents.duration)
  return _msg;
}
inline void CollectionExtents::set_allocated_duration(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionExtents.duration)
}

// repeated .google.protobuf.Any extension = 15;
inline int CollectionExtents::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int CollectionExtents::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* CollectionExtents::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionExtents.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CollectionExtents::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionExtents.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& CollectionExtents::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionExtents.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* CollectionExtents::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionExtents.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CollectionExtents::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionExtents.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CollectionExtents::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CollectionExtents::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// CollectionAction_CollectionTask_CollectionEventOrEventField

// .sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_or_event_field_to_collect = 1;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_event_or_event_field_to_collect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_or_event_field_to_collect_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_event_or_event_field_to_collect() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* p = _impl_.event_or_event_field_to_collect_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath&>(::sensoris::protobuf::types::base::_AbsoluteOrExtensionPath_default_instance_);
}
inline const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& CollectionAction_CollectionTask_CollectionEventOrEventField::event_or_event_field_to_collect() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.event_or_event_field_to_collect)
  return _internal_event_or_event_field_to_collect();
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_event_or_event_field_to_collect(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_or_event_field_to_collect_);
  }
  _impl_.event_or_event_field_to_collect_ = reinterpret_cast<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.event_or_event_field_to_collect)
}
inline ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* CollectionAction_CollectionTask_CollectionEventOrEventField::release_event_or_event_field_to_collect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* released = _impl_.event_or_event_field_to_collect_;
  _impl_.event_or_event_field_to_collect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_event_or_event_field_to_collect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.event_or_event_field_to_collect)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* temp = _impl_.event_or_event_field_to_collect_;
  _impl_.event_or_event_field_to_collect_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_event_or_event_field_to_collect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_or_event_field_to_collect_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath>(GetArena());
    _impl_.event_or_event_field_to_collect_ = reinterpret_cast<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath*>(p);
  }
  return _impl_.event_or_event_field_to_collect_;
}
inline ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_event_or_event_field_to_collect() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* _msg = _internal_mutable_event_or_event_field_to_collect();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.event_or_event_field_to_collect)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_event_or_event_field_to_collect(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_or_event_field_to_collect_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.event_or_event_field_to_collect_ = reinterpret_cast<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.event_or_event_field_to_collect)
}

// .google.protobuf.BoolValue optional = 2;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_optional() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_optional() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::BoolValue* p = _impl_.optional_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::optional() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.optional)
  return _internal_optional();
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_optional(::google::protobuf::BoolValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_);
  }
  _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.optional)
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::release_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* released = _impl_.optional_;
  _impl_.optional_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.optional)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* temp = _impl_.optional_;
  _impl_.optional_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.optional_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArena());
    _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.optional_;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_optional() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::BoolValue* _msg = _internal_mutable_optional();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.optional)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_optional(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.optional)
}

// .google.protobuf.BoolValue current_value = 3;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_current_value() const {
  return aggregation_case() == kCurrentValue;
}
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_has_current_value() const {
  return aggregation_case() == kCurrentValue;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_has_current_value() {
  _impl_._oneof_case_[0] = kCurrentValue;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::release_current_value() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
  if (aggregation_case() == kCurrentValue) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.current_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.aggregation_.current_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_current_value() const {
  return aggregation_case() == kCurrentValue ? *_impl_.aggregation_.current_value_ : reinterpret_cast<::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask_CollectionEventOrEventField::current_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
  return _internal_current_value();
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_current_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
  if (aggregation_case() == kCurrentValue) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.current_value_;
    _impl_.aggregation_.current_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_current_value(::google::protobuf::BoolValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_aggregation();
  if (value) {
    set_has_current_value();
    _impl_.aggregation_.current_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_current_value() {
  if (aggregation_case() != kCurrentValue) {
    clear_aggregation();
    set_has_current_value();
    _impl_.aggregation_.current_value_ = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArena());
  }
  return _impl_.aggregation_.current_value_;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_current_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::BoolValue* _msg = _internal_mutable_current_value();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.current_value)
  return _msg;
}

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.AggregationType aggregation_type = 4;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_aggregation_type() const {
  return aggregation_case() == kAggregationType;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_has_aggregation_type() {
  _impl_._oneof_case_[0] = kAggregationType;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_aggregation_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (aggregation_case() == kAggregationType) {
    _impl_.aggregation_.aggregation_type_ = 0;
    clear_has_aggregation();
  }
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::aggregation_type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.aggregation_type)
  return _internal_aggregation_type();
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_aggregation_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType value) {
  _internal_set_aggregation_type(value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.aggregation_type)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_aggregation_type() const {
  if (aggregation_case() == kAggregationType) {
    return static_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(_impl_.aggregation_.aggregation_type_);
  }
  return static_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>(0);
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_set_aggregation_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType value) {
  if (aggregation_case() != kAggregationType) {
    clear_aggregation();
    set_has_aggregation_type();
  }
  _impl_.aggregation_.aggregation_type_ = value;
}

// .sensoris.protobuf.types.job.AbsoluteHistogramSpecification absolute_histogram_specification = 5;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_absolute_histogram_specification() const {
  return aggregation_case() == kAbsoluteHistogramSpecification;
}
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_has_absolute_histogram_specification() const {
  return aggregation_case() == kAbsoluteHistogramSpecification;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_has_absolute_histogram_specification() {
  _impl_._oneof_case_[0] = kAbsoluteHistogramSpecification;
}
inline ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::release_absolute_histogram_specification() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
  if (aggregation_case() == kAbsoluteHistogramSpecification) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.absolute_histogram_specification_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.aggregation_.absolute_histogram_specification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_absolute_histogram_specification() const {
  return aggregation_case() == kAbsoluteHistogramSpecification ? *_impl_.aggregation_.absolute_histogram_specification_ : reinterpret_cast<::sensoris::protobuf::types::job::AbsoluteHistogramSpecification&>(::sensoris::protobuf::types::job::_AbsoluteHistogramSpecification_default_instance_);
}
inline const ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::absolute_histogram_specification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
  return _internal_absolute_histogram_specification();
}
inline ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_absolute_histogram_specification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
  if (aggregation_case() == kAbsoluteHistogramSpecification) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.absolute_histogram_specification_;
    _impl_.aggregation_.absolute_histogram_specification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_absolute_histogram_specification(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_aggregation();
  if (value) {
    set_has_absolute_histogram_specification();
    _impl_.aggregation_.absolute_histogram_specification_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
}
inline ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_absolute_histogram_specification() {
  if (aggregation_case() != kAbsoluteHistogramSpecification) {
    clear_aggregation();
    set_has_absolute_histogram_specification();
    _impl_.aggregation_.absolute_histogram_specification_ = CreateMaybeMessage<::sensoris::protobuf::types::job::AbsoluteHistogramSpecification>(GetArena());
  }
  return _impl_.aggregation_.absolute_histogram_specification_;
}
inline ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_absolute_histogram_specification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::job::AbsoluteHistogramSpecification* _msg = _internal_mutable_absolute_histogram_specification();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.absolute_histogram_specification)
  return _msg;
}

// .sensoris.protobuf.types.job.RelativeHistogramSpecification relative_histogram_specification = 6;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_relative_histogram_specification() const {
  return aggregation_case() == kRelativeHistogramSpecification;
}
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_has_relative_histogram_specification() const {
  return aggregation_case() == kRelativeHistogramSpecification;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_has_relative_histogram_specification() {
  _impl_._oneof_case_[0] = kRelativeHistogramSpecification;
}
inline ::sensoris::protobuf::types::job::RelativeHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::release_relative_histogram_specification() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
  if (aggregation_case() == kRelativeHistogramSpecification) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.relative_histogram_specification_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.aggregation_.relative_histogram_specification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_relative_histogram_specification() const {
  return aggregation_case() == kRelativeHistogramSpecification ? *_impl_.aggregation_.relative_histogram_specification_ : reinterpret_cast<::sensoris::protobuf::types::job::RelativeHistogramSpecification&>(::sensoris::protobuf::types::job::_RelativeHistogramSpecification_default_instance_);
}
inline const ::sensoris::protobuf::types::job::RelativeHistogramSpecification& CollectionAction_CollectionTask_CollectionEventOrEventField::relative_histogram_specification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
  return _internal_relative_histogram_specification();
}
inline ::sensoris::protobuf::types::job::RelativeHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_relative_histogram_specification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
  if (aggregation_case() == kRelativeHistogramSpecification) {
    clear_has_aggregation();
    auto* temp = _impl_.aggregation_.relative_histogram_specification_;
    _impl_.aggregation_.relative_histogram_specification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_relative_histogram_specification(::sensoris::protobuf::types::job::RelativeHistogramSpecification* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_aggregation();
  if (value) {
    set_has_relative_histogram_specification();
    _impl_.aggregation_.relative_histogram_specification_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
}
inline ::sensoris::protobuf::types::job::RelativeHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_relative_histogram_specification() {
  if (aggregation_case() != kRelativeHistogramSpecification) {
    clear_aggregation();
    set_has_relative_histogram_specification();
    _impl_.aggregation_.relative_histogram_specification_ = CreateMaybeMessage<::sensoris::protobuf::types::job::RelativeHistogramSpecification>(GetArena());
  }
  return _impl_.aggregation_.relative_histogram_specification_;
}
inline ::sensoris::protobuf::types::job::RelativeHistogramSpecification* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_relative_histogram_specification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::job::RelativeHistogramSpecification* _msg = _internal_mutable_relative_histogram_specification();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.relative_histogram_specification)
  return _msg;
}

// .google.protobuf.Int64Value requested_exponent = 7;
inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_requested_exponent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.requested_exponent_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_requested_exponent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.requested_exponent_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionEventOrEventField::requested_exponent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.requested_exponent)
  return _internal_requested_exponent();
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_set_allocated_requested_exponent(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requested_exponent_);
  }
  _impl_.requested_exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.requested_exponent)
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionEventOrEventField::release_requested_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* released = _impl_.requested_exponent_;
  _impl_.requested_exponent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionEventOrEventField::unsafe_arena_release_requested_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.requested_exponent)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Int64Value* temp = _impl_.requested_exponent_;
  _impl_.requested_exponent_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_requested_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.requested_exponent_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.requested_exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.requested_exponent_;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_requested_exponent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_requested_exponent();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.requested_exponent)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::set_allocated_requested_exponent(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requested_exponent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.requested_exponent_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.requested_exponent)
}

// repeated .google.protobuf.Any extension = 15;
inline int CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int CollectionAction_CollectionTask_CollectionEventOrEventField::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CollectionAction_CollectionTask_CollectionEventOrEventField::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& CollectionAction_CollectionTask_CollectionEventOrEventField::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask_CollectionEventOrEventField::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CollectionAction_CollectionTask_CollectionEventOrEventField::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CollectionAction_CollectionTask_CollectionEventOrEventField::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

inline bool CollectionAction_CollectionTask_CollectionEventOrEventField::has_aggregation() const {
  return aggregation_case() != AGGREGATION_NOT_SET;
}
inline void CollectionAction_CollectionTask_CollectionEventOrEventField::clear_has_aggregation() {
  _impl_._oneof_case_[0] = AGGREGATION_NOT_SET;
}
inline CollectionAction_CollectionTask_CollectionEventOrEventField::AggregationCase CollectionAction_CollectionTask_CollectionEventOrEventField::aggregation_case() const {
  return CollectionAction_CollectionTask_CollectionEventOrEventField::AggregationCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.Type type = 1;
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.type)
  return _internal_type();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.type)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>(_impl_.type_);
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_internal_set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// .google.protobuf.Int64Value value = 2;
inline bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.value)
  return _internal_value();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::unsafe_arena_set_allocated_value(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.value)
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.value_;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.value)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset::set_allocated_value(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset.value)
}

// -------------------------------------------------------------------

// CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.Type type = 1;
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.type)
  return _internal_type();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.type)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>(_impl_.type_);
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_internal_set_type(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// .google.protobuf.Int64Value value = 2;
inline bool CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Int64Value* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.value)
  return _internal_value();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::unsafe_arena_set_allocated_value(::google::protobuf::Int64Value* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.value)
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Int64Value* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArena());
    _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.value_;
}
inline ::google::protobuf::Int64Value* CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Int64Value* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.value)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency::set_allocated_value(::google::protobuf::Int64Value* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency.value)
}

// -------------------------------------------------------------------

// CollectionAction_CollectionTask_CollectionConfiguration

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset pre_trigger_offset = 1;
inline bool CollectionAction_CollectionTask_CollectionConfiguration::has_pre_trigger_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pre_trigger_offset_ != nullptr);
  return value;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::clear_pre_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pre_trigger_offset_ != nullptr) _impl_.pre_trigger_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::_internal_pre_trigger_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* p = _impl_.pre_trigger_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset&>(::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::pre_trigger_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.pre_trigger_offset)
  return _internal_pre_trigger_offset();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_set_allocated_pre_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pre_trigger_offset_);
  }
  _impl_.pre_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.pre_trigger_offset)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::release_pre_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* released = _impl_.pre_trigger_offset_;
  _impl_.pre_trigger_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_release_pre_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.pre_trigger_offset)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* temp = _impl_.pre_trigger_offset_;
  _impl_.pre_trigger_offset_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::_internal_mutable_pre_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pre_trigger_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>(GetArena());
    _impl_.pre_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(p);
  }
  return _impl_.pre_trigger_offset_;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::mutable_pre_trigger_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* _msg = _internal_mutable_pre_trigger_offset();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.pre_trigger_offset)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::set_allocated_pre_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(_impl_.pre_trigger_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pre_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.pre_trigger_offset)
}

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerOffset post_trigger_offset = 2;
inline bool CollectionAction_CollectionTask_CollectionConfiguration::has_post_trigger_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.post_trigger_offset_ != nullptr);
  return value;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::clear_post_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.post_trigger_offset_ != nullptr) _impl_.post_trigger_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::_internal_post_trigger_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* p = _impl_.post_trigger_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset&>(::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset& CollectionAction_CollectionTask_CollectionConfiguration::post_trigger_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.post_trigger_offset)
  return _internal_post_trigger_offset();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_set_allocated_post_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.post_trigger_offset_);
  }
  _impl_.post_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.post_trigger_offset)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::release_post_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* released = _impl_.post_trigger_offset_;
  _impl_.post_trigger_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_release_post_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.post_trigger_offset)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* temp = _impl_.post_trigger_offset_;
  _impl_.post_trigger_offset_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::_internal_mutable_post_trigger_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.post_trigger_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset>(GetArena());
    _impl_.post_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(p);
  }
  return _impl_.post_trigger_offset_;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* CollectionAction_CollectionTask_CollectionConfiguration::mutable_post_trigger_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* _msg = _internal_mutable_post_trigger_offset();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.post_trigger_offset)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::set_allocated_post_trigger_offset(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(_impl_.post_trigger_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.post_trigger_offset_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.post_trigger_offset)
}

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.TriggerFrequency trigger_frequency = 3;
inline bool CollectionAction_CollectionTask_CollectionConfiguration::has_trigger_frequency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trigger_frequency_ != nullptr);
  return value;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::clear_trigger_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.trigger_frequency_ != nullptr) _impl_.trigger_frequency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& CollectionAction_CollectionTask_CollectionConfiguration::_internal_trigger_frequency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* p = _impl_.trigger_frequency_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency&>(::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency& CollectionAction_CollectionTask_CollectionConfiguration::trigger_frequency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.trigger_frequency)
  return _internal_trigger_frequency();
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_set_allocated_trigger_frequency(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trigger_frequency_);
  }
  _impl_.trigger_frequency_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.trigger_frequency)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* CollectionAction_CollectionTask_CollectionConfiguration::release_trigger_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* released = _impl_.trigger_frequency_;
  _impl_.trigger_frequency_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* CollectionAction_CollectionTask_CollectionConfiguration::unsafe_arena_release_trigger_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.trigger_frequency)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* temp = _impl_.trigger_frequency_;
  _impl_.trigger_frequency_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* CollectionAction_CollectionTask_CollectionConfiguration::_internal_mutable_trigger_frequency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.trigger_frequency_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency>(GetArena());
    _impl_.trigger_frequency_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(p);
  }
  return _impl_.trigger_frequency_;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* CollectionAction_CollectionTask_CollectionConfiguration::mutable_trigger_frequency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* _msg = _internal_mutable_trigger_frequency();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.trigger_frequency)
  return _msg;
}
inline void CollectionAction_CollectionTask_CollectionConfiguration::set_allocated_trigger_frequency(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(_impl_.trigger_frequency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.trigger_frequency_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.trigger_frequency)
}

// repeated .google.protobuf.Any extension = 15;
inline int CollectionAction_CollectionTask_CollectionConfiguration::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int CollectionAction_CollectionTask_CollectionConfiguration::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask_CollectionConfiguration::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CollectionAction_CollectionTask_CollectionConfiguration::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& CollectionAction_CollectionTask_CollectionConfiguration::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask_CollectionConfiguration::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CollectionAction_CollectionTask_CollectionConfiguration::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CollectionAction_CollectionTask_CollectionConfiguration::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CollectionAction_CollectionTask_CollectionConfiguration::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// CollectionAction_CollectionTask

// .google.protobuf.BoolValue optional = 1;
inline bool CollectionAction_CollectionTask::has_optional() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optional_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::_internal_optional() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::BoolValue* p = _impl_.optional_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::optional() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.optional)
  return _internal_optional();
}
inline void CollectionAction_CollectionTask::unsafe_arena_set_allocated_optional(::google::protobuf::BoolValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_);
  }
  _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.optional)
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::release_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* released = _impl_.optional_;
  _impl_.optional_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::unsafe_arena_release_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.optional)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* temp = _impl_.optional_;
  _impl_.optional_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::_internal_mutable_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.optional_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArena());
    _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.optional_;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::mutable_optional() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::BoolValue* _msg = _internal_mutable_optional();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.optional)
  return _msg;
}
inline void CollectionAction_CollectionTask::set_allocated_optional(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optional_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.optional_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.optional)
}

// .google.protobuf.BoolValue prevent_overlapping_by_time = 2;
inline bool CollectionAction_CollectionTask::has_prevent_overlapping_by_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.prevent_overlapping_by_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::_internal_prevent_overlapping_by_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::BoolValue* p = _impl_.prevent_overlapping_by_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& CollectionAction_CollectionTask::prevent_overlapping_by_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.prevent_overlapping_by_time)
  return _internal_prevent_overlapping_by_time();
}
inline void CollectionAction_CollectionTask::unsafe_arena_set_allocated_prevent_overlapping_by_time(::google::protobuf::BoolValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prevent_overlapping_by_time_);
  }
  _impl_.prevent_overlapping_by_time_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.prevent_overlapping_by_time)
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::release_prevent_overlapping_by_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* released = _impl_.prevent_overlapping_by_time_;
  _impl_.prevent_overlapping_by_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::unsafe_arena_release_prevent_overlapping_by_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.prevent_overlapping_by_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* temp = _impl_.prevent_overlapping_by_time_;
  _impl_.prevent_overlapping_by_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::_internal_mutable_prevent_overlapping_by_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.prevent_overlapping_by_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::BoolValue>(GetArena());
    _impl_.prevent_overlapping_by_time_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.prevent_overlapping_by_time_;
}
inline ::google::protobuf::BoolValue* CollectionAction_CollectionTask::mutable_prevent_overlapping_by_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::BoolValue* _msg = _internal_mutable_prevent_overlapping_by_time();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.prevent_overlapping_by_time)
  return _msg;
}
inline void CollectionAction_CollectionTask::set_allocated_prevent_overlapping_by_time(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prevent_overlapping_by_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.prevent_overlapping_by_time_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.prevent_overlapping_by_time)
}

// repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionEventOrEventField collection_event_or_event_field = 3;
inline int CollectionAction_CollectionTask::_internal_collection_event_or_event_field_size() const {
  return _internal_collection_event_or_event_field().size();
}
inline int CollectionAction_CollectionTask::collection_event_or_event_field_size() const {
  return _internal_collection_event_or_event_field_size();
}
inline void CollectionAction_CollectionTask::clear_collection_event_or_event_field() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.collection_event_or_event_field_.Clear();
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField* CollectionAction_CollectionTask::mutable_collection_event_or_event_field(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_event_or_event_field)
  return _internal_mutable_collection_event_or_event_field()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>* CollectionAction_CollectionTask::mutable_collection_event_or_event_field()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_event_or_event_field)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_collection_event_or_event_field();
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField& CollectionAction_CollectionTask::collection_event_or_event_field(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_event_or_event_field)
  return _internal_collection_event_or_event_field().Get(index);
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField* CollectionAction_CollectionTask::add_collection_event_or_event_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField* _add = _internal_mutable_collection_event_or_event_field()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_event_or_event_field)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>& CollectionAction_CollectionTask::collection_event_or_event_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_event_or_event_field)
  return _internal_collection_event_or_event_field();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>&
CollectionAction_CollectionTask::_internal_collection_event_or_event_field() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.collection_event_or_event_field_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField>*
CollectionAction_CollectionTask::_internal_mutable_collection_event_or_event_field() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.collection_event_or_event_field_;
}

// .sensoris.protobuf.types.collection.CollectionAction.CollectionTask.CollectionConfiguration collection_configuration = 4;
inline bool CollectionAction_CollectionTask::has_collection_configuration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.collection_configuration_ != nullptr);
  return value;
}
inline void CollectionAction_CollectionTask::clear_collection_configuration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.collection_configuration_ != nullptr) _impl_.collection_configuration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& CollectionAction_CollectionTask::_internal_collection_configuration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* p = _impl_.collection_configuration_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration&>(::sensoris::protobuf::types::collection::_CollectionAction_CollectionTask_CollectionConfiguration_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration& CollectionAction_CollectionTask::collection_configuration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_configuration)
  return _internal_collection_configuration();
}
inline void CollectionAction_CollectionTask::unsafe_arena_set_allocated_collection_configuration(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.collection_configuration_);
  }
  _impl_.collection_configuration_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_configuration)
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* CollectionAction_CollectionTask::release_collection_configuration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* released = _impl_.collection_configuration_;
  _impl_.collection_configuration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* CollectionAction_CollectionTask::unsafe_arena_release_collection_configuration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_configuration)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* temp = _impl_.collection_configuration_;
  _impl_.collection_configuration_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* CollectionAction_CollectionTask::_internal_mutable_collection_configuration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.collection_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration>(GetArena());
    _impl_.collection_configuration_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration*>(p);
  }
  return _impl_.collection_configuration_;
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* CollectionAction_CollectionTask::mutable_collection_configuration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* _msg = _internal_mutable_collection_configuration();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_configuration)
  return _msg;
}
inline void CollectionAction_CollectionTask::set_allocated_collection_configuration(::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration*>(_impl_.collection_configuration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.collection_configuration_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.collection_configuration)
}

// repeated .google.protobuf.Any extension = 15;
inline int CollectionAction_CollectionTask::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int CollectionAction_CollectionTask::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CollectionAction_CollectionTask::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& CollectionAction_CollectionTask::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* CollectionAction_CollectionTask::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CollectionAction_CollectionTask::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.CollectionTask.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CollectionAction_CollectionTask::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CollectionAction_CollectionTask::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// CollectionAction

// repeated .sensoris.protobuf.types.collection.CollectionAction.CollectionTask collection_task = 1;
inline int CollectionAction::_internal_collection_task_size() const {
  return _internal_collection_task().size();
}
inline int CollectionAction::collection_task_size() const {
  return _internal_collection_task_size();
}
inline void CollectionAction::clear_collection_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.collection_task_.Clear();
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask* CollectionAction::mutable_collection_task(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.collection_task)
  return _internal_mutable_collection_task()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>* CollectionAction::mutable_collection_task()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.collection_task)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_collection_task();
}
inline const ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask& CollectionAction::collection_task(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.collection_task)
  return _internal_collection_task().Get(index);
}
inline ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask* CollectionAction::add_collection_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask* _add = _internal_mutable_collection_task()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.collection_task)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>& CollectionAction::collection_task() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.collection_task)
  return _internal_collection_task();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>&
CollectionAction::_internal_collection_task() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.collection_task_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask>*
CollectionAction::_internal_mutable_collection_task() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.collection_task_;
}

// .sensoris.protobuf.types.collection.CollectionExtents min_transmitted_message_extents = 2;
inline bool CollectionAction::has_min_transmitted_message_extents() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_transmitted_message_extents_ != nullptr);
  return value;
}
inline void CollectionAction::clear_min_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.min_transmitted_message_extents_ != nullptr) _impl_.min_transmitted_message_extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::_internal_min_transmitted_message_extents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionExtents* p = _impl_.min_transmitted_message_extents_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionExtents&>(::sensoris::protobuf::types::collection::_CollectionExtents_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::min_transmitted_message_extents() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.min_transmitted_message_extents)
  return _internal_min_transmitted_message_extents();
}
inline void CollectionAction::unsafe_arena_set_allocated_min_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_transmitted_message_extents_);
  }
  _impl_.min_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.min_transmitted_message_extents)
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::release_min_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::collection::CollectionExtents* released = _impl_.min_transmitted_message_extents_;
  _impl_.min_transmitted_message_extents_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::unsafe_arena_release_min_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.min_transmitted_message_extents)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::collection::CollectionExtents* temp = _impl_.min_transmitted_message_extents_;
  _impl_.min_transmitted_message_extents_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::_internal_mutable_min_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.min_transmitted_message_extents_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionExtents>(GetArena());
    _impl_.min_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(p);
  }
  return _impl_.min_transmitted_message_extents_;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::mutable_min_transmitted_message_extents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionExtents* _msg = _internal_mutable_min_transmitted_message_extents();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.min_transmitted_message_extents)
  return _msg;
}
inline void CollectionAction::set_allocated_min_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(_impl_.min_transmitted_message_extents_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.min_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.min_transmitted_message_extents)
}

// .sensoris.protobuf.types.collection.CollectionExtents max_transmitted_message_extents = 3;
inline bool CollectionAction::has_max_transmitted_message_extents() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_transmitted_message_extents_ != nullptr);
  return value;
}
inline void CollectionAction::clear_max_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.max_transmitted_message_extents_ != nullptr) _impl_.max_transmitted_message_extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::_internal_max_transmitted_message_extents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sensoris::protobuf::types::collection::CollectionExtents* p = _impl_.max_transmitted_message_extents_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::collection::CollectionExtents&>(::sensoris::protobuf::types::collection::_CollectionExtents_default_instance_);
}
inline const ::sensoris::protobuf::types::collection::CollectionExtents& CollectionAction::max_transmitted_message_extents() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.max_transmitted_message_extents)
  return _internal_max_transmitted_message_extents();
}
inline void CollectionAction::unsafe_arena_set_allocated_max_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_transmitted_message_extents_);
  }
  _impl_.max_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.types.collection.CollectionAction.max_transmitted_message_extents)
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::release_max_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::collection::CollectionExtents* released = _impl_.max_transmitted_message_extents_;
  _impl_.max_transmitted_message_extents_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::unsafe_arena_release_max_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.types.collection.CollectionAction.max_transmitted_message_extents)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::collection::CollectionExtents* temp = _impl_.max_transmitted_message_extents_;
  _impl_.max_transmitted_message_extents_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::_internal_mutable_max_transmitted_message_extents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.max_transmitted_message_extents_ == nullptr) {
    auto* p = CreateMaybeMessage<::sensoris::protobuf::types::collection::CollectionExtents>(GetArena());
    _impl_.max_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(p);
  }
  return _impl_.max_transmitted_message_extents_;
}
inline ::sensoris::protobuf::types::collection::CollectionExtents* CollectionAction::mutable_max_transmitted_message_extents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::collection::CollectionExtents* _msg = _internal_mutable_max_transmitted_message_extents();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.max_transmitted_message_extents)
  return _msg;
}
inline void CollectionAction::set_allocated_max_transmitted_message_extents(::sensoris::protobuf::types::collection::CollectionExtents* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(_impl_.max_transmitted_message_extents_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.max_transmitted_message_extents_ = reinterpret_cast<::sensoris::protobuf::types::collection::CollectionExtents*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.collection.CollectionAction.max_transmitted_message_extents)
}

// repeated .google.protobuf.Any extension = 15;
inline int CollectionAction::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int CollectionAction::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* CollectionAction::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.types.collection.CollectionAction.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CollectionAction::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.types.collection.CollectionAction.extension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& CollectionAction::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.types.collection.CollectionAction.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* CollectionAction::add_extension() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.types.collection.CollectionAction.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CollectionAction::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.types.collection.CollectionAction.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CollectionAction::_internal_extension() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CollectionAction::_internal_mutable_extension() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extension_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace collection
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType>() {
  return ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionEventOrEventField_AggregationType_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type>() {
  return ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerOffset_Type_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type>() {
  return ::sensoris::protobuf::types::collection::CollectionAction_CollectionTask_CollectionConfiguration_TriggerFrequency_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_sensoris_2fprotobuf_2ftypes_2fcollection_2eproto_2epb_2eh
