// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/job.proto

#include "sensoris/protobuf/types/job.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace types {
namespace job {

inline constexpr HistogramSpecificationBins_Bin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lower_endpoint_inclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HistogramSpecificationBins_Bin::HistogramSpecificationBins_Bin(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistogramSpecificationBins_BinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistogramSpecificationBins_BinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistogramSpecificationBins_BinDefaultTypeInternal() {}
  union {
    HistogramSpecificationBins_Bin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistogramSpecificationBins_BinDefaultTypeInternal _HistogramSpecificationBins_Bin_default_instance_;

inline constexpr HistogramSpecificationBins::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bin_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistogramSpecificationBins::HistogramSpecificationBins(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistogramSpecificationBinsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistogramSpecificationBinsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistogramSpecificationBinsDefaultTypeInternal() {}
  union {
    HistogramSpecificationBins _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistogramSpecificationBinsDefaultTypeInternal _HistogramSpecificationBins_default_instance_;

inline constexpr RelativeHistogramSpecification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        minimum_total_elements_{nullptr},
        lower_endpoint_inclusive_{nullptr},
        upper_endpoint_inclusive_{nullptr},
        relative_frequency_exponent_{nullptr},
        bins_number_of_bins_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeHistogramSpecification::RelativeHistogramSpecification(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelativeHistogramSpecificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeHistogramSpecificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeHistogramSpecificationDefaultTypeInternal() {}
  union {
    RelativeHistogramSpecification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeHistogramSpecificationDefaultTypeInternal _RelativeHistogramSpecification_default_instance_;

inline constexpr Ids::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : submitter_{},
        job_id_{},
        vehicle_fleet_id_{},
        vehicle_id_{},
        driver_id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ids::Ids(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdsDefaultTypeInternal() {}
  union {
    Ids _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdsDefaultTypeInternal _Ids_default_instance_;

inline constexpr AbsoluteHistogramSpecification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        minimum_total_elements_{nullptr},
        lower_endpoint_inclusive_{nullptr},
        upper_endpoint_inclusive_{nullptr},
        bins_number_of_bins_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteHistogramSpecification::AbsoluteHistogramSpecification(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AbsoluteHistogramSpecificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteHistogramSpecificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteHistogramSpecificationDefaultTypeInternal() {}
  union {
    AbsoluteHistogramSpecification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteHistogramSpecificationDefaultTypeInternal _AbsoluteHistogramSpecification_default_instance_;
}  // namespace job
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
static ::_pb::Metadata file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fjob_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fjob_2eproto = nullptr;
const ::uint32_t TableStruct_sensoris_2fprotobuf_2ftypes_2fjob_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _impl_.submitter_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _impl_.job_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _impl_.vehicle_fleet_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _impl_.vehicle_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::Ids, _impl_.driver_id_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::HistogramSpecificationBins_Bin, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::HistogramSpecificationBins_Bin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::HistogramSpecificationBins_Bin, _impl_.lower_endpoint_inclusive_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::HistogramSpecificationBins, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::HistogramSpecificationBins, _impl_.bin_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_.minimum_total_elements_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_.lower_endpoint_inclusive_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_.upper_endpoint_inclusive_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_.bins_number_of_bins_),
    0,
    1,
    ~0u,
    ~0u,
    2,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_.minimum_total_elements_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_.lower_endpoint_inclusive_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_.upper_endpoint_inclusive_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_.relative_frequency_exponent_),
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_.bins_number_of_bins_),
    0,
    1,
    ~0u,
    ~0u,
    2,
    3,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sensoris::protobuf::types::job::Ids)},
        {13, 22, -1, sizeof(::sensoris::protobuf::types::job::HistogramSpecificationBins_Bin)},
        {23, -1, -1, sizeof(::sensoris::protobuf::types::job::HistogramSpecificationBins)},
        {32, 46, -1, sizeof(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification)},
        {51, 66, -1, sizeof(::sensoris::protobuf::types::job::RelativeHistogramSpecification)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sensoris::protobuf::types::job::_Ids_default_instance_._instance,
    &::sensoris::protobuf::types::job::_HistogramSpecificationBins_Bin_default_instance_._instance,
    &::sensoris::protobuf::types::job::_HistogramSpecificationBins_default_instance_._instance,
    &::sensoris::protobuf::types::job::_AbsoluteHistogramSpecification_default_instance_._instance,
    &::sensoris::protobuf::types::job::_RelativeHistogramSpecification_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!sensoris/protobuf/types/job.proto\022\033sen"
    "soris.protobuf.types.job\032\036google/protobu"
    "f/wrappers.proto\032\"sensoris/protobuf/type"
    "s/base.proto\"\207\002\n\003Ids\0227\n\tsubmitter\030\001 \003(\0132"
    "$.sensoris.protobuf.types.base.Entity\022,\n"
    "\006job_id\030\002 \003(\0132\034.google.protobuf.StringVa"
    "lue\0226\n\020vehicle_fleet_id\030\003 \003(\0132\034.google.p"
    "rotobuf.StringValue\0220\n\nvehicle_id\030\004 \003(\0132"
    "\034.google.protobuf.StringValue\022/\n\tdriver_"
    "id\030\005 \003(\0132\034.google.protobuf.StringValue\"\304"
    "\001\n\032HistogramSpecificationBins\022H\n\003bin\030\001 \003"
    "(\0132;.sensoris.protobuf.types.job.Histogr"
    "amSpecificationBins.Bin\032\\\n\003Bin\022U\n\030lower_"
    "endpoint_inclusive\030\001 \001(\01323.sensoris.prot"
    "obuf.types.base.Int64ValueAndExponent\"\242\003"
    "\n\036AbsoluteHistogramSpecification\022;\n\026mini"
    "mum_total_elements\030\001 \001(\0132\033.google.protob"
    "uf.Int64Value\022U\n\030lower_endpoint_inclusiv"
    "e\030\002 \001(\01323.sensoris.protobuf.types.base.I"
    "nt64ValueAndExponent\022G\n\004bins\030\003 \001(\01327.sen"
    "soris.protobuf.types.job.HistogramSpecif"
    "icationBinsH\000\0225\n\016number_of_bins\030\004 \001(\0132\033."
    "google.protobuf.Int64ValueH\000\022U\n\030upper_en"
    "dpoint_inclusive\030\005 \001(\01323.sensoris.protob"
    "uf.types.base.Int64ValueAndExponentB\025\n\023b"
    "ins_number_of_bins\"\344\003\n\036RelativeHistogram"
    "Specification\022;\n\026minimum_total_elements\030"
    "\001 \001(\0132\033.google.protobuf.Int64Value\022U\n\030lo"
    "wer_endpoint_inclusive\030\002 \001(\01323.sensoris."
    "protobuf.types.base.Int64ValueAndExponen"
    "t\022G\n\004bins\030\003 \001(\01327.sensoris.protobuf.type"
    "s.job.HistogramSpecificationBinsH\000\0225\n\016nu"
    "mber_of_bins\030\004 \001(\0132\033.google.protobuf.Int"
    "64ValueH\000\022U\n\030upper_endpoint_inclusive\030\005 "
    "\001(\01323.sensoris.protobuf.types.base.Int64"
    "ValueAndExponent\022@\n\033relative_frequency_e"
    "xponent\030\006 \001(\0132\033.google.protobuf.Int64Val"
    "ueB\025\n\023bins_number_of_binsBU\n\026org.sensori"
    "s.types.jobB\020SensorisJobTypesP\001Z$sensori"
    "s.org/specification/types/job\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto = {
    false,
    false,
    1600,
    descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fjob_2eproto,
    "sensoris/protobuf/types/job.proto",
    &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2ftypes_2fjob_2eproto::offsets,
    file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto,
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fjob_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fjob_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter() {
  return &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sensoris_2fprotobuf_2ftypes_2fjob_2eproto(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto);
namespace sensoris {
namespace protobuf {
namespace types {
namespace job {
// ===================================================================

class Ids::_Internal {
 public:
};

void Ids::clear_submitter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.submitter_.Clear();
}
void Ids::clear_job_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.job_id_.Clear();
}
void Ids::clear_vehicle_fleet_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vehicle_fleet_id_.Clear();
}
void Ids::clear_vehicle_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vehicle_id_.Clear();
}
void Ids::clear_driver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.driver_id_.Clear();
}
Ids::Ids(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.job.Ids)
}
inline PROTOBUF_NDEBUG_INLINE Ids::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : submitter_{visibility, arena, from.submitter_},
        job_id_{visibility, arena, from.job_id_},
        vehicle_fleet_id_{visibility, arena, from.vehicle_fleet_id_},
        vehicle_id_{visibility, arena, from.vehicle_id_},
        driver_id_{visibility, arena, from.driver_id_},
        _cached_size_{0} {}

Ids::Ids(
    ::google::protobuf::Arena* arena,
    const Ids& from)
    : ::google::protobuf::Message(arena) {
  Ids* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.job.Ids)
}
inline PROTOBUF_NDEBUG_INLINE Ids::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : submitter_{visibility, arena},
        job_id_{visibility, arena},
        vehicle_fleet_id_{visibility, arena},
        vehicle_id_{visibility, arena},
        driver_id_{visibility, arena},
        _cached_size_{0} {}

inline void Ids::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Ids::~Ids() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.job.Ids)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ids::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Ids::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.job.Ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.submitter_.Clear();
  _impl_.job_id_.Clear();
  _impl_.vehicle_fleet_id_.Clear();
  _impl_.vehicle_id_.Clear();
  _impl_.driver_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Ids::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> Ids::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Ids_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .sensoris.protobuf.types.base.Entity submitter = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Ids, _impl_.submitter_)}},
    // repeated .google.protobuf.StringValue job_id = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Ids, _impl_.job_id_)}},
    // repeated .google.protobuf.StringValue vehicle_fleet_id = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Ids, _impl_.vehicle_fleet_id_)}},
    // repeated .google.protobuf.StringValue vehicle_id = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Ids, _impl_.vehicle_id_)}},
    // repeated .google.protobuf.StringValue driver_id = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(Ids, _impl_.driver_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sensoris.protobuf.types.base.Entity submitter = 1;
    {PROTOBUF_FIELD_OFFSET(Ids, _impl_.submitter_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.StringValue job_id = 2;
    {PROTOBUF_FIELD_OFFSET(Ids, _impl_.job_id_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.StringValue vehicle_fleet_id = 3;
    {PROTOBUF_FIELD_OFFSET(Ids, _impl_.vehicle_fleet_id_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.StringValue vehicle_id = 4;
    {PROTOBUF_FIELD_OFFSET(Ids, _impl_.vehicle_id_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.StringValue driver_id = 5;
    {PROTOBUF_FIELD_OFFSET(Ids, _impl_.driver_id_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Entity>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }}, {{
  }},
};

::uint8_t* Ids::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.job.Ids)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sensoris.protobuf.types.base.Entity submitter = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_submitter_size()); i < n; i++) {
    const auto& repfield = this->_internal_submitter().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.StringValue job_id = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_job_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_job_id().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.StringValue vehicle_fleet_id = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_fleet_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_fleet_id().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.StringValue vehicle_id = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vehicle_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_vehicle_id().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.StringValue driver_id = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_driver_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_driver_id().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.job.Ids)
  return target;
}

::size_t Ids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.job.Ids)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.types.base.Entity submitter = 1;
  total_size += 1UL * this->_internal_submitter_size();
  for (const auto& msg : this->_internal_submitter()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.StringValue job_id = 2;
  total_size += 1UL * this->_internal_job_id_size();
  for (const auto& msg : this->_internal_job_id()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.StringValue vehicle_fleet_id = 3;
  total_size += 1UL * this->_internal_vehicle_fleet_id_size();
  for (const auto& msg : this->_internal_vehicle_fleet_id()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.StringValue vehicle_id = 4;
  total_size += 1UL * this->_internal_vehicle_id_size();
  for (const auto& msg : this->_internal_vehicle_id()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .google.protobuf.StringValue driver_id = 5;
  total_size += 1UL * this->_internal_driver_id_size();
  for (const auto& msg : this->_internal_driver_id()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Ids::_class_data_ = {
    Ids::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Ids::GetClassData() const {
  return &_class_data_;
}

void Ids::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Ids*>(&to_msg);
  auto& from = static_cast<const Ids&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.job.Ids)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_submitter()->MergeFrom(
      from._internal_submitter());
  _this->_internal_mutable_job_id()->MergeFrom(
      from._internal_job_id());
  _this->_internal_mutable_vehicle_fleet_id()->MergeFrom(
      from._internal_vehicle_fleet_id());
  _this->_internal_mutable_vehicle_id()->MergeFrom(
      from._internal_vehicle_id());
  _this->_internal_mutable_driver_id()->MergeFrom(
      from._internal_driver_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ids::CopyFrom(const Ids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.job.Ids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Ids::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Ids::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Ids::InternalSwap(Ids* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.submitter_.InternalSwap(&other->_impl_.submitter_);
  _impl_.job_id_.InternalSwap(&other->_impl_.job_id_);
  _impl_.vehicle_fleet_id_.InternalSwap(&other->_impl_.vehicle_fleet_id_);
  _impl_.vehicle_id_.InternalSwap(&other->_impl_.vehicle_id_);
  _impl_.driver_id_.InternalSwap(&other->_impl_.driver_id_);
}

::google::protobuf::Metadata Ids::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[0]);
}
// ===================================================================

class HistogramSpecificationBins_Bin::_Internal {
 public:
  using HasBits = decltype(std::declval<HistogramSpecificationBins_Bin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins_Bin, _impl_._has_bits_);
  static const ::sensoris::protobuf::types::base::Int64ValueAndExponent& lower_endpoint_inclusive(const HistogramSpecificationBins_Bin* msg);
  static void set_has_lower_endpoint_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::sensoris::protobuf::types::base::Int64ValueAndExponent& HistogramSpecificationBins_Bin::_Internal::lower_endpoint_inclusive(const HistogramSpecificationBins_Bin* msg) {
  return *msg->_impl_.lower_endpoint_inclusive_;
}
void HistogramSpecificationBins_Bin::clear_lower_endpoint_inclusive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lower_endpoint_inclusive_ != nullptr) _impl_.lower_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HistogramSpecificationBins_Bin::HistogramSpecificationBins_Bin(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
}
inline PROTOBUF_NDEBUG_INLINE HistogramSpecificationBins_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HistogramSpecificationBins_Bin::HistogramSpecificationBins_Bin(
    ::google::protobuf::Arena* arena,
    const HistogramSpecificationBins_Bin& from)
    : ::google::protobuf::Message(arena) {
  HistogramSpecificationBins_Bin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_endpoint_inclusive_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndExponent>(arena, *from._impl_.lower_endpoint_inclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
}
inline PROTOBUF_NDEBUG_INLINE HistogramSpecificationBins_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HistogramSpecificationBins_Bin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lower_endpoint_inclusive_ = {};
}
HistogramSpecificationBins_Bin::~HistogramSpecificationBins_Bin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistogramSpecificationBins_Bin::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lower_endpoint_inclusive_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HistogramSpecificationBins_Bin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lower_endpoint_inclusive_ != nullptr);
    _impl_.lower_endpoint_inclusive_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HistogramSpecificationBins_Bin::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HistogramSpecificationBins_Bin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins_Bin, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HistogramSpecificationBins_Bin_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins_Bin, _impl_.lower_endpoint_inclusive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins_Bin, _impl_.lower_endpoint_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>()},
  }}, {{
  }},
};

::uint8_t* HistogramSpecificationBins_Bin::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lower_endpoint_inclusive(this),
        _Internal::lower_endpoint_inclusive(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  return target;
}

::size_t HistogramSpecificationBins_Bin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_endpoint_inclusive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HistogramSpecificationBins_Bin::_class_data_ = {
    HistogramSpecificationBins_Bin::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HistogramSpecificationBins_Bin::GetClassData() const {
  return &_class_data_;
}

void HistogramSpecificationBins_Bin::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HistogramSpecificationBins_Bin*>(&to_msg);
  auto& from = static_cast<const HistogramSpecificationBins_Bin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lower_endpoint_inclusive()->::sensoris::protobuf::types::base::Int64ValueAndExponent::MergeFrom(
        from._internal_lower_endpoint_inclusive());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistogramSpecificationBins_Bin::CopyFrom(const HistogramSpecificationBins_Bin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.job.HistogramSpecificationBins.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HistogramSpecificationBins_Bin::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HistogramSpecificationBins_Bin::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HistogramSpecificationBins_Bin::InternalSwap(HistogramSpecificationBins_Bin* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lower_endpoint_inclusive_, other->_impl_.lower_endpoint_inclusive_);
}

::google::protobuf::Metadata HistogramSpecificationBins_Bin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[1]);
}
// ===================================================================

class HistogramSpecificationBins::_Internal {
 public:
};

HistogramSpecificationBins::HistogramSpecificationBins(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.job.HistogramSpecificationBins)
}
inline PROTOBUF_NDEBUG_INLINE HistogramSpecificationBins::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bin_{visibility, arena, from.bin_},
        _cached_size_{0} {}

HistogramSpecificationBins::HistogramSpecificationBins(
    ::google::protobuf::Arena* arena,
    const HistogramSpecificationBins& from)
    : ::google::protobuf::Message(arena) {
  HistogramSpecificationBins* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.job.HistogramSpecificationBins)
}
inline PROTOBUF_NDEBUG_INLINE HistogramSpecificationBins::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bin_{visibility, arena},
        _cached_size_{0} {}

inline void HistogramSpecificationBins::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HistogramSpecificationBins::~HistogramSpecificationBins() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.job.HistogramSpecificationBins)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistogramSpecificationBins::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HistogramSpecificationBins::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.job.HistogramSpecificationBins)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bin_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HistogramSpecificationBins::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HistogramSpecificationBins::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HistogramSpecificationBins_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .sensoris.protobuf.types.job.HistogramSpecificationBins.Bin bin = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins, _impl_.bin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sensoris.protobuf.types.job.HistogramSpecificationBins.Bin bin = 1;
    {PROTOBUF_FIELD_OFFSET(HistogramSpecificationBins, _impl_.bin_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::job::HistogramSpecificationBins_Bin>()},
  }}, {{
  }},
};

::uint8_t* HistogramSpecificationBins::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.job.HistogramSpecificationBins)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sensoris.protobuf.types.job.HistogramSpecificationBins.Bin bin = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bin_size()); i < n; i++) {
    const auto& repfield = this->_internal_bin().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.job.HistogramSpecificationBins)
  return target;
}

::size_t HistogramSpecificationBins::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.job.HistogramSpecificationBins)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sensoris.protobuf.types.job.HistogramSpecificationBins.Bin bin = 1;
  total_size += 1UL * this->_internal_bin_size();
  for (const auto& msg : this->_internal_bin()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HistogramSpecificationBins::_class_data_ = {
    HistogramSpecificationBins::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HistogramSpecificationBins::GetClassData() const {
  return &_class_data_;
}

void HistogramSpecificationBins::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HistogramSpecificationBins*>(&to_msg);
  auto& from = static_cast<const HistogramSpecificationBins&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.job.HistogramSpecificationBins)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bin()->MergeFrom(
      from._internal_bin());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistogramSpecificationBins::CopyFrom(const HistogramSpecificationBins& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.job.HistogramSpecificationBins)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HistogramSpecificationBins::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HistogramSpecificationBins::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HistogramSpecificationBins::InternalSwap(HistogramSpecificationBins* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bin_.InternalSwap(&other->_impl_.bin_);
}

::google::protobuf::Metadata HistogramSpecificationBins::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[2]);
}
// ===================================================================

class AbsoluteHistogramSpecification::_Internal {
 public:
  using HasBits = decltype(std::declval<AbsoluteHistogramSpecification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::AbsoluteHistogramSpecification, _impl_._oneof_case_);
  static const ::google::protobuf::Int64Value& minimum_total_elements(const AbsoluteHistogramSpecification* msg);
  static void set_has_minimum_total_elements(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndExponent& lower_endpoint_inclusive(const AbsoluteHistogramSpecification* msg);
  static void set_has_lower_endpoint_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::job::HistogramSpecificationBins& bins(const AbsoluteHistogramSpecification* msg);
  static const ::google::protobuf::Int64Value& number_of_bins(const AbsoluteHistogramSpecification* msg);
  static const ::sensoris::protobuf::types::base::Int64ValueAndExponent& upper_endpoint_inclusive(const AbsoluteHistogramSpecification* msg);
  static void set_has_upper_endpoint_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::google::protobuf::Int64Value& AbsoluteHistogramSpecification::_Internal::minimum_total_elements(const AbsoluteHistogramSpecification* msg) {
  return *msg->_impl_.minimum_total_elements_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndExponent& AbsoluteHistogramSpecification::_Internal::lower_endpoint_inclusive(const AbsoluteHistogramSpecification* msg) {
  return *msg->_impl_.lower_endpoint_inclusive_;
}
const ::sensoris::protobuf::types::job::HistogramSpecificationBins& AbsoluteHistogramSpecification::_Internal::bins(const AbsoluteHistogramSpecification* msg) {
  return *msg->_impl_.bins_number_of_bins_.bins_;
}
const ::google::protobuf::Int64Value& AbsoluteHistogramSpecification::_Internal::number_of_bins(const AbsoluteHistogramSpecification* msg) {
  return *msg->_impl_.bins_number_of_bins_.number_of_bins_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndExponent& AbsoluteHistogramSpecification::_Internal::upper_endpoint_inclusive(const AbsoluteHistogramSpecification* msg) {
  return *msg->_impl_.upper_endpoint_inclusive_;
}
void AbsoluteHistogramSpecification::clear_minimum_total_elements() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.minimum_total_elements_ != nullptr) _impl_.minimum_total_elements_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AbsoluteHistogramSpecification::clear_lower_endpoint_inclusive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lower_endpoint_inclusive_ != nullptr) _impl_.lower_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void AbsoluteHistogramSpecification::set_allocated_bins(::sensoris::protobuf::types::job::HistogramSpecificationBins* bins) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_bins_number_of_bins();
  if (bins) {
    ::google::protobuf::Arena* submessage_arena = bins->GetArena();
    if (message_arena != submessage_arena) {
      bins = ::google::protobuf::internal::GetOwnedMessage(message_arena, bins, submessage_arena);
    }
    set_has_bins();
    _impl_.bins_number_of_bins_.bins_ = bins;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.job.AbsoluteHistogramSpecification.bins)
}
void AbsoluteHistogramSpecification::set_allocated_number_of_bins(::google::protobuf::Int64Value* number_of_bins) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_bins_number_of_bins();
  if (number_of_bins) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(number_of_bins)->GetArena();
    if (message_arena != submessage_arena) {
      number_of_bins = ::google::protobuf::internal::GetOwnedMessage(message_arena, number_of_bins, submessage_arena);
    }
    set_has_number_of_bins();
    _impl_.bins_number_of_bins_.number_of_bins_ = number_of_bins;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.job.AbsoluteHistogramSpecification.number_of_bins)
}
void AbsoluteHistogramSpecification::clear_number_of_bins() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (bins_number_of_bins_case() == kNumberOfBins) {
    if (GetArena() == nullptr) {
      delete _impl_.bins_number_of_bins_.number_of_bins_;
    }
    clear_has_bins_number_of_bins();
  }
}
void AbsoluteHistogramSpecification::clear_upper_endpoint_inclusive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_endpoint_inclusive_ != nullptr) _impl_.upper_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
AbsoluteHistogramSpecification::AbsoluteHistogramSpecification(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
}
inline PROTOBUF_NDEBUG_INLINE AbsoluteHistogramSpecification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bins_number_of_bins_{},
        _oneof_case_{from._oneof_case_[0]} {}

AbsoluteHistogramSpecification::AbsoluteHistogramSpecification(
    ::google::protobuf::Arena* arena,
    const AbsoluteHistogramSpecification& from)
    : ::google::protobuf::Message(arena) {
  AbsoluteHistogramSpecification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.minimum_total_elements_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.minimum_total_elements_)
                : nullptr;
  _impl_.lower_endpoint_inclusive_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndExponent>(arena, *from._impl_.lower_endpoint_inclusive_)
                : nullptr;
  _impl_.upper_endpoint_inclusive_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndExponent>(arena, *from._impl_.upper_endpoint_inclusive_)
                : nullptr;
  switch (bins_number_of_bins_case()) {
    case BINS_NUMBER_OF_BINS_NOT_SET:
      break;
      case kBins:
        _impl_.bins_number_of_bins_.bins_ = CreateMaybeMessage<::sensoris::protobuf::types::job::HistogramSpecificationBins>(arena, *from._impl_.bins_number_of_bins_.bins_);
        break;
      case kNumberOfBins:
        _impl_.bins_number_of_bins_.number_of_bins_ = CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.bins_number_of_bins_.number_of_bins_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
}
inline PROTOBUF_NDEBUG_INLINE AbsoluteHistogramSpecification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bins_number_of_bins_{},
        _oneof_case_{} {}

inline void AbsoluteHistogramSpecification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_total_elements_),
           0,
           offsetof(Impl_, upper_endpoint_inclusive_) -
               offsetof(Impl_, minimum_total_elements_) +
               sizeof(Impl_::upper_endpoint_inclusive_));
}
AbsoluteHistogramSpecification::~AbsoluteHistogramSpecification() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AbsoluteHistogramSpecification::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.minimum_total_elements_;
  delete _impl_.lower_endpoint_inclusive_;
  delete _impl_.upper_endpoint_inclusive_;
  if (has_bins_number_of_bins()) {
    clear_bins_number_of_bins();
  }
  _impl_.~Impl_();
}

void AbsoluteHistogramSpecification::clear_bins_number_of_bins() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (bins_number_of_bins_case()) {
    case kBins: {
      if (GetArena() == nullptr) {
        delete _impl_.bins_number_of_bins_.bins_;
      }
      break;
    }
    case kNumberOfBins: {
      if (GetArena() == nullptr) {
        delete _impl_.bins_number_of_bins_.number_of_bins_;
      }
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BINS_NUMBER_OF_BINS_NOT_SET;
}


PROTOBUF_NOINLINE void AbsoluteHistogramSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.minimum_total_elements_ != nullptr);
      _impl_.minimum_total_elements_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lower_endpoint_inclusive_ != nullptr);
      _impl_.lower_endpoint_inclusive_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.upper_endpoint_inclusive_ != nullptr);
      _impl_.upper_endpoint_inclusive_->Clear();
    }
  }
  clear_bins_number_of_bins();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AbsoluteHistogramSpecification::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> AbsoluteHistogramSpecification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AbsoluteHistogramSpecification_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.minimum_total_elements_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.lower_endpoint_inclusive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 4, PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.upper_endpoint_inclusive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.minimum_total_elements_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    {PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.lower_endpoint_inclusive_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.job.HistogramSpecificationBins bins = 3;
    {PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.bins_number_of_bins_.bins_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value number_of_bins = 4;
    {PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.bins_number_of_bins_.number_of_bins_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    {PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.upper_endpoint_inclusive_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::job::HistogramSpecificationBins>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>()},
  }}, {{
  }},
};

::uint8_t* AbsoluteHistogramSpecification::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value minimum_total_elements = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::minimum_total_elements(this),
        _Internal::minimum_total_elements(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::lower_endpoint_inclusive(this),
        _Internal::lower_endpoint_inclusive(this).GetCachedSize(), target, stream);
  }

  switch (bins_number_of_bins_case()) {
    case kBins: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::bins(this),
          _Internal::bins(this).GetCachedSize(), target, stream);
      break;
    }
    case kNumberOfBins: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::number_of_bins(this),
          _Internal::number_of_bins(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::upper_endpoint_inclusive(this),
        _Internal::upper_endpoint_inclusive(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  return target;
}

::size_t AbsoluteHistogramSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.minimum_total_elements_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_endpoint_inclusive_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_endpoint_inclusive_);
    }

  }
  switch (bins_number_of_bins_case()) {
    // .sensoris.protobuf.types.job.HistogramSpecificationBins bins = 3;
    case kBins: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bins_number_of_bins_.bins_);
      break;
    }
    // .google.protobuf.Int64Value number_of_bins = 4;
    case kNumberOfBins: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bins_number_of_bins_.number_of_bins_);
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AbsoluteHistogramSpecification::_class_data_ = {
    AbsoluteHistogramSpecification::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AbsoluteHistogramSpecification::GetClassData() const {
  return &_class_data_;
}

void AbsoluteHistogramSpecification::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AbsoluteHistogramSpecification*>(&to_msg);
  auto& from = static_cast<const AbsoluteHistogramSpecification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_minimum_total_elements()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_minimum_total_elements());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_lower_endpoint_inclusive()->::sensoris::protobuf::types::base::Int64ValueAndExponent::MergeFrom(
          from._internal_lower_endpoint_inclusive());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_upper_endpoint_inclusive()->::sensoris::protobuf::types::base::Int64ValueAndExponent::MergeFrom(
          from._internal_upper_endpoint_inclusive());
    }
  }
  switch (from.bins_number_of_bins_case()) {
    case kBins: {
      _this->_internal_mutable_bins()->::sensoris::protobuf::types::job::HistogramSpecificationBins::MergeFrom(
          from._internal_bins());
      break;
    }
    case kNumberOfBins: {
      _this->_internal_mutable_number_of_bins()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_number_of_bins());
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteHistogramSpecification::CopyFrom(const AbsoluteHistogramSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.job.AbsoluteHistogramSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AbsoluteHistogramSpecification::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AbsoluteHistogramSpecification::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AbsoluteHistogramSpecification::InternalSwap(AbsoluteHistogramSpecification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.upper_endpoint_inclusive_)
      + sizeof(AbsoluteHistogramSpecification::_impl_.upper_endpoint_inclusive_)
      - PROTOBUF_FIELD_OFFSET(AbsoluteHistogramSpecification, _impl_.minimum_total_elements_)>(
          reinterpret_cast<char*>(&_impl_.minimum_total_elements_),
          reinterpret_cast<char*>(&other->_impl_.minimum_total_elements_));
  swap(_impl_.bins_number_of_bins_, other->_impl_.bins_number_of_bins_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AbsoluteHistogramSpecification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[3]);
}
// ===================================================================

class RelativeHistogramSpecification::_Internal {
 public:
  using HasBits = decltype(std::declval<RelativeHistogramSpecification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::job::RelativeHistogramSpecification, _impl_._oneof_case_);
  static const ::google::protobuf::Int64Value& minimum_total_elements(const RelativeHistogramSpecification* msg);
  static void set_has_minimum_total_elements(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::sensoris::protobuf::types::base::Int64ValueAndExponent& lower_endpoint_inclusive(const RelativeHistogramSpecification* msg);
  static void set_has_lower_endpoint_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::sensoris::protobuf::types::job::HistogramSpecificationBins& bins(const RelativeHistogramSpecification* msg);
  static const ::google::protobuf::Int64Value& number_of_bins(const RelativeHistogramSpecification* msg);
  static const ::sensoris::protobuf::types::base::Int64ValueAndExponent& upper_endpoint_inclusive(const RelativeHistogramSpecification* msg);
  static void set_has_upper_endpoint_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::google::protobuf::Int64Value& relative_frequency_exponent(const RelativeHistogramSpecification* msg);
  static void set_has_relative_frequency_exponent(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::Int64Value& RelativeHistogramSpecification::_Internal::minimum_total_elements(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.minimum_total_elements_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndExponent& RelativeHistogramSpecification::_Internal::lower_endpoint_inclusive(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.lower_endpoint_inclusive_;
}
const ::sensoris::protobuf::types::job::HistogramSpecificationBins& RelativeHistogramSpecification::_Internal::bins(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.bins_number_of_bins_.bins_;
}
const ::google::protobuf::Int64Value& RelativeHistogramSpecification::_Internal::number_of_bins(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.bins_number_of_bins_.number_of_bins_;
}
const ::sensoris::protobuf::types::base::Int64ValueAndExponent& RelativeHistogramSpecification::_Internal::upper_endpoint_inclusive(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.upper_endpoint_inclusive_;
}
const ::google::protobuf::Int64Value& RelativeHistogramSpecification::_Internal::relative_frequency_exponent(const RelativeHistogramSpecification* msg) {
  return *msg->_impl_.relative_frequency_exponent_;
}
void RelativeHistogramSpecification::clear_minimum_total_elements() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.minimum_total_elements_ != nullptr) _impl_.minimum_total_elements_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RelativeHistogramSpecification::clear_lower_endpoint_inclusive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lower_endpoint_inclusive_ != nullptr) _impl_.lower_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RelativeHistogramSpecification::set_allocated_bins(::sensoris::protobuf::types::job::HistogramSpecificationBins* bins) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_bins_number_of_bins();
  if (bins) {
    ::google::protobuf::Arena* submessage_arena = bins->GetArena();
    if (message_arena != submessage_arena) {
      bins = ::google::protobuf::internal::GetOwnedMessage(message_arena, bins, submessage_arena);
    }
    set_has_bins();
    _impl_.bins_number_of_bins_.bins_ = bins;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.job.RelativeHistogramSpecification.bins)
}
void RelativeHistogramSpecification::set_allocated_number_of_bins(::google::protobuf::Int64Value* number_of_bins) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_bins_number_of_bins();
  if (number_of_bins) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(number_of_bins)->GetArena();
    if (message_arena != submessage_arena) {
      number_of_bins = ::google::protobuf::internal::GetOwnedMessage(message_arena, number_of_bins, submessage_arena);
    }
    set_has_number_of_bins();
    _impl_.bins_number_of_bins_.number_of_bins_ = number_of_bins;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.job.RelativeHistogramSpecification.number_of_bins)
}
void RelativeHistogramSpecification::clear_number_of_bins() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (bins_number_of_bins_case() == kNumberOfBins) {
    if (GetArena() == nullptr) {
      delete _impl_.bins_number_of_bins_.number_of_bins_;
    }
    clear_has_bins_number_of_bins();
  }
}
void RelativeHistogramSpecification::clear_upper_endpoint_inclusive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.upper_endpoint_inclusive_ != nullptr) _impl_.upper_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void RelativeHistogramSpecification::clear_relative_frequency_exponent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.relative_frequency_exponent_ != nullptr) _impl_.relative_frequency_exponent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
RelativeHistogramSpecification::RelativeHistogramSpecification(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.job.RelativeHistogramSpecification)
}
inline PROTOBUF_NDEBUG_INLINE RelativeHistogramSpecification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bins_number_of_bins_{},
        _oneof_case_{from._oneof_case_[0]} {}

RelativeHistogramSpecification::RelativeHistogramSpecification(
    ::google::protobuf::Arena* arena,
    const RelativeHistogramSpecification& from)
    : ::google::protobuf::Message(arena) {
  RelativeHistogramSpecification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.minimum_total_elements_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.minimum_total_elements_)
                : nullptr;
  _impl_.lower_endpoint_inclusive_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndExponent>(arena, *from._impl_.lower_endpoint_inclusive_)
                : nullptr;
  _impl_.upper_endpoint_inclusive_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::sensoris::protobuf::types::base::Int64ValueAndExponent>(arena, *from._impl_.upper_endpoint_inclusive_)
                : nullptr;
  _impl_.relative_frequency_exponent_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.relative_frequency_exponent_)
                : nullptr;
  switch (bins_number_of_bins_case()) {
    case BINS_NUMBER_OF_BINS_NOT_SET:
      break;
      case kBins:
        _impl_.bins_number_of_bins_.bins_ = CreateMaybeMessage<::sensoris::protobuf::types::job::HistogramSpecificationBins>(arena, *from._impl_.bins_number_of_bins_.bins_);
        break;
      case kNumberOfBins:
        _impl_.bins_number_of_bins_.number_of_bins_ = CreateMaybeMessage<::google::protobuf::Int64Value>(arena, *from._impl_.bins_number_of_bins_.number_of_bins_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.job.RelativeHistogramSpecification)
}
inline PROTOBUF_NDEBUG_INLINE RelativeHistogramSpecification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bins_number_of_bins_{},
        _oneof_case_{} {}

inline void RelativeHistogramSpecification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_total_elements_),
           0,
           offsetof(Impl_, relative_frequency_exponent_) -
               offsetof(Impl_, minimum_total_elements_) +
               sizeof(Impl_::relative_frequency_exponent_));
}
RelativeHistogramSpecification::~RelativeHistogramSpecification() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelativeHistogramSpecification::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.minimum_total_elements_;
  delete _impl_.lower_endpoint_inclusive_;
  delete _impl_.upper_endpoint_inclusive_;
  delete _impl_.relative_frequency_exponent_;
  if (has_bins_number_of_bins()) {
    clear_bins_number_of_bins();
  }
  _impl_.~Impl_();
}

void RelativeHistogramSpecification::clear_bins_number_of_bins() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (bins_number_of_bins_case()) {
    case kBins: {
      if (GetArena() == nullptr) {
        delete _impl_.bins_number_of_bins_.bins_;
      }
      break;
    }
    case kNumberOfBins: {
      if (GetArena() == nullptr) {
        delete _impl_.bins_number_of_bins_.number_of_bins_;
      }
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BINS_NUMBER_OF_BINS_NOT_SET;
}


PROTOBUF_NOINLINE void RelativeHistogramSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.minimum_total_elements_ != nullptr);
      _impl_.minimum_total_elements_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lower_endpoint_inclusive_ != nullptr);
      _impl_.lower_endpoint_inclusive_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.upper_endpoint_inclusive_ != nullptr);
      _impl_.upper_endpoint_inclusive_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.relative_frequency_exponent_ != nullptr);
      _impl_.relative_frequency_exponent_->Clear();
    }
  }
  clear_bins_number_of_bins();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelativeHistogramSpecification::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> RelativeHistogramSpecification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RelativeHistogramSpecification_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.minimum_total_elements_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.lower_endpoint_inclusive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 4, PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.upper_endpoint_inclusive_)}},
    // .google.protobuf.Int64Value relative_frequency_exponent = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 5, PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.relative_frequency_exponent_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.minimum_total_elements_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.lower_endpoint_inclusive_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.job.HistogramSpecificationBins bins = 3;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.bins_number_of_bins_.bins_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value number_of_bins = 4;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.bins_number_of_bins_.number_of_bins_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.upper_endpoint_inclusive_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value relative_frequency_exponent = 6;
    {PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.relative_frequency_exponent_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::job::HistogramSpecificationBins>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
    {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }}, {{
  }},
};

::uint8_t* RelativeHistogramSpecification::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Int64Value minimum_total_elements = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::minimum_total_elements(this),
        _Internal::minimum_total_elements(this).GetCachedSize(), target, stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::lower_endpoint_inclusive(this),
        _Internal::lower_endpoint_inclusive(this).GetCachedSize(), target, stream);
  }

  switch (bins_number_of_bins_case()) {
    case kBins: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::bins(this),
          _Internal::bins(this).GetCachedSize(), target, stream);
      break;
    }
    case kNumberOfBins: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::number_of_bins(this),
          _Internal::number_of_bins(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::upper_endpoint_inclusive(this),
        _Internal::upper_endpoint_inclusive(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Int64Value relative_frequency_exponent = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::relative_frequency_exponent(this),
        _Internal::relative_frequency_exponent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  return target;
}

::size_t RelativeHistogramSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.Int64Value minimum_total_elements = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.minimum_total_elements_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndExponent lower_endpoint_inclusive = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lower_endpoint_inclusive_);
    }

    // .sensoris.protobuf.types.base.Int64ValueAndExponent upper_endpoint_inclusive = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upper_endpoint_inclusive_);
    }

    // .google.protobuf.Int64Value relative_frequency_exponent = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.relative_frequency_exponent_);
    }

  }
  switch (bins_number_of_bins_case()) {
    // .sensoris.protobuf.types.job.HistogramSpecificationBins bins = 3;
    case kBins: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bins_number_of_bins_.bins_);
      break;
    }
    // .google.protobuf.Int64Value number_of_bins = 4;
    case kNumberOfBins: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bins_number_of_bins_.number_of_bins_);
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelativeHistogramSpecification::_class_data_ = {
    RelativeHistogramSpecification::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelativeHistogramSpecification::GetClassData() const {
  return &_class_data_;
}

void RelativeHistogramSpecification::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelativeHistogramSpecification*>(&to_msg);
  auto& from = static_cast<const RelativeHistogramSpecification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_minimum_total_elements()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_minimum_total_elements());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_lower_endpoint_inclusive()->::sensoris::protobuf::types::base::Int64ValueAndExponent::MergeFrom(
          from._internal_lower_endpoint_inclusive());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_upper_endpoint_inclusive()->::sensoris::protobuf::types::base::Int64ValueAndExponent::MergeFrom(
          from._internal_upper_endpoint_inclusive());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_relative_frequency_exponent()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_relative_frequency_exponent());
    }
  }
  switch (from.bins_number_of_bins_case()) {
    case kBins: {
      _this->_internal_mutable_bins()->::sensoris::protobuf::types::job::HistogramSpecificationBins::MergeFrom(
          from._internal_bins());
      break;
    }
    case kNumberOfBins: {
      _this->_internal_mutable_number_of_bins()->::google::protobuf::Int64Value::MergeFrom(
          from._internal_number_of_bins());
      break;
    }
    case BINS_NUMBER_OF_BINS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeHistogramSpecification::CopyFrom(const RelativeHistogramSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.job.RelativeHistogramSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelativeHistogramSpecification::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelativeHistogramSpecification::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelativeHistogramSpecification::InternalSwap(RelativeHistogramSpecification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.relative_frequency_exponent_)
      + sizeof(RelativeHistogramSpecification::_impl_.relative_frequency_exponent_)
      - PROTOBUF_FIELD_OFFSET(RelativeHistogramSpecification, _impl_.minimum_total_elements_)>(
          reinterpret_cast<char*>(&_impl_.minimum_total_elements_),
          reinterpret_cast<char*>(&other->_impl_.minimum_total_elements_));
  swap(_impl_.bins_number_of_bins_, other->_impl_.bins_number_of_bins_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RelativeHistogramSpecification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_getter, &descriptor_table_sensoris_2fprotobuf_2ftypes_2fjob_2eproto_once,
      file_level_metadata_sensoris_2fprotobuf_2ftypes_2fjob_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace job
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
