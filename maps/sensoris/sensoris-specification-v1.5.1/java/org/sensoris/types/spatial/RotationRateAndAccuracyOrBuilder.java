/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/spatial.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.types.spatial;

public interface RotationRateAndAccuracyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.spatial.RotationRateAndAccuracy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Yaw angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value yaw = 1 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return Whether the yaw field is set.
   */
  boolean hasYaw();
  /**
   * <pre>
   * Yaw angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value yaw = 1 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return The yaw.
   */
  org.sensoris.types.base.Int64Value getYaw();
  /**
   * <pre>
   * Yaw angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value yaw = 1 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getYawOrBuilder();

  /**
   * <pre>
   * Pitch angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value pitch = 2 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return Whether the pitch field is set.
   */
  boolean hasPitch();
  /**
   * <pre>
   * Pitch angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value pitch = 2 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return The pitch.
   */
  org.sensoris.types.base.Int64Value getPitch();
  /**
   * <pre>
   * Pitch angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value pitch = 2 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getPitchOrBuilder();

  /**
   * <pre>
   * Roll angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value roll = 3 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return Whether the roll field is set.
   */
  boolean hasRoll();
  /**
   * <pre>
   * Roll angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value roll = 3 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return The roll.
   */
  org.sensoris.types.base.Int64Value getRoll();
  /**
   * <pre>
   * Roll angle rate.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value roll = 3 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getRollOrBuilder();

  /**
   * <pre>
   * Accuracy as combined standard deviation of yaw, pitch and roll angle rates.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range [0, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value combined_std_dev = 4 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return Whether the combinedStdDev field is set.
   */
  boolean hasCombinedStdDev();
  /**
   * <pre>
   * Accuracy as combined standard deviation of yaw, pitch and roll angle rates.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range [0, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value combined_std_dev = 4 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return The combinedStdDev.
   */
  com.google.protobuf.Int64Value getCombinedStdDev();
  /**
   * <pre>
   * Accuracy as combined standard deviation of yaw, pitch and roll angle rates.
   *
   * &#64;unit Degree per Second
   * &#64;resolution 0.01
   * &#64;range [0, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value combined_std_dev = 4 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   */
  com.google.protobuf.Int64ValueOrBuilder getCombinedStdDevOrBuilder();

  /**
   * <pre>
   * Accuracy as standard deviation of yaw angle rate, pitch angle rate and roll angle rates.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RotationRateAndAccuracy.StdDev std_dev = 5;</code>
   * @return Whether the stdDev field is set.
   */
  boolean hasStdDev();
  /**
   * <pre>
   * Accuracy as standard deviation of yaw angle rate, pitch angle rate and roll angle rates.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RotationRateAndAccuracy.StdDev std_dev = 5;</code>
   * @return The stdDev.
   */
  org.sensoris.types.spatial.RotationRateAndAccuracy.StdDev getStdDev();
  /**
   * <pre>
   * Accuracy as standard deviation of yaw angle rate, pitch angle rate and roll angle rates.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RotationRateAndAccuracy.StdDev std_dev = 5;</code>
   */
  org.sensoris.types.spatial.RotationRateAndAccuracy.StdDevOrBuilder getStdDevOrBuilder();

  /**
   * <pre>
   * Accuracy as 3 x 3 covariance matrix of (yaw, yaw), (yaw, pitch), (yaw, roll), (pitch, yaw), (pitch, pitch), (pitch, roll), (roll, yaw), (roll, pitch), (roll, roll) angle rates.
   *
   * &#64;unit Degree squared per Second squared
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Matrix3x3 covariance = 6 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return Whether the covariance field is set.
   */
  boolean hasCovariance();
  /**
   * <pre>
   * Accuracy as 3 x 3 covariance matrix of (yaw, yaw), (yaw, pitch), (yaw, roll), (pitch, yaw), (pitch, pitch), (pitch, roll), (roll, yaw), (roll, pitch), (roll, roll) angle rates.
   *
   * &#64;unit Degree squared per Second squared
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Matrix3x3 covariance = 6 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   * @return The covariance.
   */
  org.sensoris.types.base.Int64Matrix3x3 getCovariance();
  /**
   * <pre>
   * Accuracy as 3 x 3 covariance matrix of (yaw, yaw), (yaw, pitch), (yaw, roll), (pitch, yaw), (pitch, pitch), (pitch, roll), (roll, yaw), (roll, pitch), (roll, roll) angle rates.
   *
   * &#64;unit Degree squared per Second squared
   * &#64;resolution 0.01
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Matrix3x3 covariance = 6 [(.sensoris.protobuf.types.base.exponent) = 2];</code>
   */
  org.sensoris.types.base.Int64Matrix3x3OrBuilder getCovarianceOrBuilder();

  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  java.util.List<com.google.protobuf.Any> 
      getExtensionList();
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  com.google.protobuf.Any getExtension(int index);
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  int getExtensionCount();
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
      getExtensionOrBuilderList();
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
      int index);

  org.sensoris.types.spatial.RotationRateAndAccuracy.AccuracyCase getAccuracyCase();
}
