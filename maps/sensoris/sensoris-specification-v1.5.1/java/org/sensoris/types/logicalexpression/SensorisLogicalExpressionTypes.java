/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/logical_expression.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.types.logicalexpression;

public final class SensorisLogicalExpressionTypes {
  private SensorisLogicalExpressionTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0sensoris/protobuf/types/logical_expres" +
      "sion.proto\022)sensoris.protobuf.types.logi" +
      "calexpression\032\031google/protobuf/any.proto" +
      "\032\036google/protobuf/wrappers.proto\032\"sensor" +
      "is/protobuf/types/base.proto\"\345\021\n\021Logical" +
      "Expression\022\'\n\003not\030\001 \001(\0132\032.google.protobu" +
      "f.BoolValue\022^\n\010operator\030\002 \001(\0162L.sensoris" +
      ".protobuf.types.logicalexpression.Logica" +
      "lExpression.LogicalOperator\022\\\n\007operand\030\003" +
      " \003(\0132K.sensoris.protobuf.types.logicalex" +
      "pression.LogicalExpression.LogicalOperan" +
      "d\022\'\n\textension\030\017 \003(\0132\024.google.protobuf.A" +
      "ny\032\375\016\n\016LogicalOperand\022\'\n\003not\030\001 \001(\0132\032.goo" +
      "gle.protobuf.BoolValue\022\201\001\n\025comparison_ex" +
      "pression\030\002 \001(\0132`.sensoris.protobuf.types" +
      ".logicalexpression.LogicalExpression.Log" +
      "icalOperand.ComparisonExpressionH\000\022\'\n\tex" +
      "tension\030\017 \003(\0132\024.google.protobuf.Any\032\375\014\n\024" +
      "ComparisonExpression\022\'\n\003not\030\001 \001(\0132\032.goog" +
      "le.protobuf.BoolValue\022\203\001\n\017first_operatio" +
      "n\030\002 \001(\0132j.sensoris.protobuf.types.logica" +
      "lexpression.LogicalExpression.LogicalOpe" +
      "rand.ComparisonExpression.Operation\022\211\001\n\010" +
      "operator\030\003 \001(\0162w.sensoris.protobuf.types" +
      ".logicalexpression.LogicalExpression.Log" +
      "icalOperand.ComparisonExpression.Compari" +
      "sonOperatorType\022\204\001\n\020second_operation\030\004 \001" +
      "(\0132j.sensoris.protobuf.types.logicalexpr" +
      "ession.LogicalExpression.LogicalOperand." +
      "ComparisonExpression.Operation\022\'\n\textens" +
      "ion\030\017 \003(\0132\024.google.protobuf.Any\032\336\007\n\tOper" +
      "ation\022\211\001\n\rfirst_operand\030\001 \001(\0132r.sensoris" +
      ".protobuf.types.logicalexpression.Logica" +
      "lExpression.LogicalOperand.ComparisonExp" +
      "ression.Operation.Operand\022\212\001\n\010operator\030\002" +
      " \001(\0162x.sensoris.protobuf.types.logicalex" +
      "pression.LogicalExpression.LogicalOperan" +
      "d.ComparisonExpression.Operation.Operati" +
      "onType\022\212\001\n\016second_operand\030\003 \001(\0132r.sensor" +
      "is.protobuf.types.logicalexpression.Logi" +
      "calExpression.LogicalOperand.ComparisonE" +
      "xpression.Operation.Operand\022\'\n\textension" +
      "\030\017 \003(\0132\024.google.protobuf.Any\032\206\003\n\007Operand" +
      "\022W\n\030int64_value_and_exponent\030\001 \001(\01323.sen" +
      "soris.protobuf.types.base.Int64ValueAndE" +
      "xponentH\000\0220\n\nbool_value\030\002 \001(\0132\032.google.p" +
      "rotobuf.BoolValueH\000\0224\n\014string_value\030\003 \001(" +
      "\0132\034.google.protobuf.StringValueH\000\0222\n\013byt" +
      "es_value\030\004 \001(\0132\033.google.protobuf.BytesVa" +
      "lueH\000\022R\n\021event_field_value\030\005 \001(\01325.senso" +
      "ris.protobuf.types.base.AbsoluteOrExtens" +
      "ionPathH\000\022\'\n\textension\030\017 \003(\0132\024.google.pr" +
      "otobuf.AnyB\t\n\007operand\"y\n\rOperationType\022\032" +
      "\n\026UNKNOWN_OPERATION_TYPE\020\000\022\020\n\014NO_OPERATI" +
      "ON\020\001\022\007\n\003SUM\020\002\022\017\n\013SUBTRACTION\020\003\022\022\n\016MULTIP" +
      "LICATION\020\004\022\014\n\010DIVISION\020\005\"\230\001\n\026ComparisonO" +
      "peratorType\022$\n UNKNOWN_COMPARISON_OPERAT" +
      "OR_TYPE\020\000\022\t\n\005EQUAL\020\001\022\r\n\tNOT_EQUAL\020\002\022\013\n\007G" +
      "REATER\020\003\022\010\n\004LESS\020\004\022\024\n\020GREATER_OR_EQUAL\020\005" +
      "\022\021\n\rLESS_OR_EQUAL\020\006B\025\n\023expression_functi" +
      "on\"@\n\017LogicalOperator\022\034\n\030UNKNOWN_LOGICAL" +
      "_OPERATOR\020\000\022\007\n\003AND\020\001\022\006\n\002OR\020\002B\177\n$org.sens" +
      "oris.types.logicalexpressionB\036SensorisLo" +
      "gicalExpressionTypesP\001Z2sensoris.org/spe" +
      "cification/types/logicalexpression\370\001\001b\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          org.sensoris.types.base.SensorisBaseTypes.getDescriptor(),
        });
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor,
        new java.lang.String[] { "Not", "Operator", "Operand", "Extension", });
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor =
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor.getNestedTypes().get(0);
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor,
        new java.lang.String[] { "Not", "ComparisonExpression", "Extension", "ExpressionFunction", });
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor =
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor.getNestedTypes().get(0);
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor,
        new java.lang.String[] { "Not", "FirstOperation", "Operator", "SecondOperation", "Extension", });
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor =
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor.getNestedTypes().get(0);
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor,
        new java.lang.String[] { "FirstOperand", "Operator", "SecondOperand", "Extension", });
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor =
      internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor.getNestedTypes().get(0);
    internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor,
        new java.lang.String[] { "Int64ValueAndExponent", "BoolValue", "StringValue", "BytesValue", "EventFieldValue", "Extension", "Operand", });
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    org.sensoris.types.base.SensorisBaseTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
