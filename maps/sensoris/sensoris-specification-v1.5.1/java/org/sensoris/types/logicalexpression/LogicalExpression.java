/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/logical_expression.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.types.logicalexpression;

/**
 * <pre>
 * Defines constituents for boolean expressions which consists of an operator applied on multiple operands.
 *
 * The operands may include boolean expressions, arithmetic expressions as well as sensor, map, or system parameters.
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression}
 */
public final class LogicalExpression extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression)
    LogicalExpressionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LogicalExpression.newBuilder() to construct.
  private LogicalExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogicalExpression() {
    operator_ = 0;
    operand_ = java.util.Collections.emptyList();
    extension_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LogicalExpression();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.types.logicalexpression.LogicalExpression.class, org.sensoris.types.logicalexpression.LogicalExpression.Builder.class);
  }

  /**
   * <pre>
   * Logical boolean operator.
   * </pre>
   *
   * Protobuf enum {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator}
   */
  public enum LogicalOperator
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown.
     * </pre>
     *
     * <code>UNKNOWN_LOGICAL_OPERATOR = 0;</code>
     */
    UNKNOWN_LOGICAL_OPERATOR(0),
    /**
     * <pre>
     * Conjunction operator logical AND.
     * </pre>
     *
     * <code>AND = 1;</code>
     */
    AND(1),
    /**
     * <pre>
     * Conjunction operator logical OR.
     * </pre>
     *
     * <code>OR = 2;</code>
     */
    OR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown.
     * </pre>
     *
     * <code>UNKNOWN_LOGICAL_OPERATOR = 0;</code>
     */
    public static final int UNKNOWN_LOGICAL_OPERATOR_VALUE = 0;
    /**
     * <pre>
     * Conjunction operator logical AND.
     * </pre>
     *
     * <code>AND = 1;</code>
     */
    public static final int AND_VALUE = 1;
    /**
     * <pre>
     * Conjunction operator logical OR.
     * </pre>
     *
     * <code>OR = 2;</code>
     */
    public static final int OR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogicalOperator valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogicalOperator forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_LOGICAL_OPERATOR;
        case 1: return AND;
        case 2: return OR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LogicalOperator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>() {
            public LogicalOperator findValueByNumber(int number) {
              return LogicalOperator.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.sensoris.types.logicalexpression.LogicalExpression.getDescriptor().getEnumTypes().get(0);
    }

    private static final LogicalOperator[] VALUES = values();

    public static LogicalOperator valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LogicalOperator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator)
  }

  public interface LogicalOperandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return Whether the not field is set.
     */
    boolean hasNot();
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return The not.
     */
    com.google.protobuf.BoolValue getNot();
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getNotOrBuilder();

    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     * @return Whether the comparisonExpression field is set.
     */
    boolean hasComparisonExpression();
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     * @return The comparisonExpression.
     */
    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getComparisonExpression();
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     */
    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder getComparisonExpressionOrBuilder();

    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getExtensionList();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    com.google.protobuf.Any getExtension(int index);
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    int getExtensionCount();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getExtensionOrBuilderList();
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
        int index);

    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ExpressionFunctionCase getExpressionFunctionCase();
  }
  /**
   * <pre>
   * Logical operand with a boolean result of TRUE or FALSE, resulting either out of a comparison expression or a boolean function.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand}
   */
  public static final class LogicalOperand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand)
      LogicalOperandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalOperand.newBuilder() to construct.
    private LogicalOperand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalOperand() {
      extension_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalOperand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder.class);
    }

    public interface ComparisonExpressionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return Whether the not field is set.
       */
      boolean hasNot();
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return The not.
       */
      com.google.protobuf.BoolValue getNot();
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      com.google.protobuf.BoolValueOrBuilder getNotOrBuilder();

      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       * @return Whether the firstOperation field is set.
       */
      boolean hasFirstOperation();
      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       * @return The firstOperation.
       */
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getFirstOperation();
      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       */
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getFirstOperationOrBuilder();

      /**
       * <pre>
       * Operator for comparison of the two boolean expressions.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
       * @return The enum numeric value on the wire for operator.
       */
      int getOperatorValue();
      /**
       * <pre>
       * Operator for comparison of the two boolean expressions.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
       * @return The operator.
       */
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType getOperator();

      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       * @return Whether the secondOperation field is set.
       */
      boolean hasSecondOperation();
      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       * @return The secondOperation.
       */
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getSecondOperation();
      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       */
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getSecondOperationOrBuilder();

      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      java.util.List<com.google.protobuf.Any> 
          getExtensionList();
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      com.google.protobuf.Any getExtension(int index);
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      int getExtensionCount();
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
          getExtensionOrBuilderList();
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     *
     * Only data types that are comparable can be evaluated:
     * - int64 to int64 including the interpretation of exponent usage, also used for enum value to enum value
     * - bool to bool
     * - string to string
     * - bytes to bytes
     *
     * &#64;example Vehicle speed &gt; 2 [m/s].
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression}
     */
    public static final class ComparisonExpression extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)
        ComparisonExpressionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ComparisonExpression.newBuilder() to construct.
      private ComparisonExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ComparisonExpression() {
        operator_ = 0;
        extension_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ComparisonExpression();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder.class);
      }

      /**
       * <pre>
       * Comparison operator type.
       * </pre>
       *
       * Protobuf enum {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType}
       */
      public enum ComparisonOperatorType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Unknown.
         * </pre>
         *
         * <code>UNKNOWN_COMPARISON_OPERATOR_TYPE = 0;</code>
         */
        UNKNOWN_COMPARISON_OPERATOR_TYPE(0),
        /**
         * <pre>
         * Returns TRUE if first_operation is equal to second_operation.
         * </pre>
         *
         * <code>EQUAL = 1;</code>
         */
        EQUAL(1),
        /**
         * <pre>
         * Returns TRUE if first_operation is not equal to second_operation.
         * </pre>
         *
         * <code>NOT_EQUAL = 2;</code>
         */
        NOT_EQUAL(2),
        /**
         * <pre>
         * Returns TRUE if first_operation is greater than second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>GREATER = 3;</code>
         */
        GREATER(3),
        /**
         * <pre>
         * Return TRUE if first_operation is less than second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>LESS = 4;</code>
         */
        LESS(4),
        /**
         * <pre>
         * Returns TRUE if first_operation is greater than or equal to second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>GREATER_OR_EQUAL = 5;</code>
         */
        GREATER_OR_EQUAL(5),
        /**
         * <pre>
         * Returns TRUE if first_operation is less than or equal to second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>LESS_OR_EQUAL = 6;</code>
         */
        LESS_OR_EQUAL(6),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Unknown.
         * </pre>
         *
         * <code>UNKNOWN_COMPARISON_OPERATOR_TYPE = 0;</code>
         */
        public static final int UNKNOWN_COMPARISON_OPERATOR_TYPE_VALUE = 0;
        /**
         * <pre>
         * Returns TRUE if first_operation is equal to second_operation.
         * </pre>
         *
         * <code>EQUAL = 1;</code>
         */
        public static final int EQUAL_VALUE = 1;
        /**
         * <pre>
         * Returns TRUE if first_operation is not equal to second_operation.
         * </pre>
         *
         * <code>NOT_EQUAL = 2;</code>
         */
        public static final int NOT_EQUAL_VALUE = 2;
        /**
         * <pre>
         * Returns TRUE if first_operation is greater than second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>GREATER = 3;</code>
         */
        public static final int GREATER_VALUE = 3;
        /**
         * <pre>
         * Return TRUE if first_operation is less than second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>LESS = 4;</code>
         */
        public static final int LESS_VALUE = 4;
        /**
         * <pre>
         * Returns TRUE if first_operation is greater than or equal to second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>GREATER_OR_EQUAL = 5;</code>
         */
        public static final int GREATER_OR_EQUAL_VALUE = 5;
        /**
         * <pre>
         * Returns TRUE if first_operation is less than or equal to second_operation. Only defined if both operations are of type int64.
         * </pre>
         *
         * <code>LESS_OR_EQUAL = 6;</code>
         */
        public static final int LESS_OR_EQUAL_VALUE = 6;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ComparisonOperatorType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ComparisonOperatorType forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN_COMPARISON_OPERATOR_TYPE;
            case 1: return EQUAL;
            case 2: return NOT_EQUAL;
            case 3: return GREATER;
            case 4: return LESS;
            case 5: return GREATER_OR_EQUAL;
            case 6: return LESS_OR_EQUAL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ComparisonOperatorType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ComparisonOperatorType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ComparisonOperatorType>() {
                public ComparisonOperatorType findValueByNumber(int number) {
                  return ComparisonOperatorType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDescriptor().getEnumTypes().get(0);
        }

        private static final ComparisonOperatorType[] VALUES = values();

        public static ComparisonOperatorType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ComparisonOperatorType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType)
      }

      public interface OperationOrBuilder extends
          // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         * @return Whether the firstOperand field is set.
         */
        boolean hasFirstOperand();
        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         * @return The firstOperand.
         */
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getFirstOperand();
        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         */
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getFirstOperandOrBuilder();

        /**
         * <pre>
         * Operator.
         *
         * If the operator is a binary operator, then the field second_operand shall be set.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
         * @return The enum numeric value on the wire for operator.
         */
        int getOperatorValue();
        /**
         * <pre>
         * Operator.
         *
         * If the operator is a binary operator, then the field second_operand shall be set.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
         * @return The operator.
         */
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType getOperator();

        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         * @return Whether the secondOperand field is set.
         */
        boolean hasSecondOperand();
        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         * @return The secondOperand.
         */
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getSecondOperand();
        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         */
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getSecondOperandOrBuilder();

        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        java.util.List<com.google.protobuf.Any> 
            getExtensionList();
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        com.google.protobuf.Any getExtension(int index);
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        int getExtensionCount();
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
            getExtensionOrBuilderList();
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
            int index);
      }
      /**
       * <pre>
       * Operation.
       * </pre>
       *
       * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation}
       */
      public static final class Operation extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)
          OperationOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Operation.newBuilder() to construct.
        private Operation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Operation() {
          operator_ = 0;
          extension_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Operation();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder.class);
        }

        /**
         * <pre>
         * Operation type.
         * </pre>
         *
         * Protobuf enum {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType}
         */
        public enum OperationType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <pre>
           * Unknown.
           * </pre>
           *
           * <code>UNKNOWN_OPERATION_TYPE = 0;</code>
           */
          UNKNOWN_OPERATION_TYPE(0),
          /**
           * <pre>
           * No operation.
           *
           * The value of first_operand is returned.
           * </pre>
           *
           * <code>NO_OPERATION = 1;</code>
           */
          NO_OPERATION(1),
          /**
           * <pre>
           * Addition operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand + second_operand) is returned.
           * </pre>
           *
           * <code>SUM = 2;</code>
           */
          SUM(2),
          /**
           * <pre>
           * Subtraction operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand - second_operand) is returned.
           * </pre>
           *
           * <code>SUBTRACTION = 3;</code>
           */
          SUBTRACTION(3),
          /**
           * <pre>
           * Multiplication operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand * second_operand) is returned.
           * </pre>
           *
           * <code>MULTIPLICATION = 4;</code>
           */
          MULTIPLICATION(4),
          /**
           * <pre>
           * Division operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand / second_operand) is returned.
           * </pre>
           *
           * <code>DIVISION = 5;</code>
           */
          DIVISION(5),
          UNRECOGNIZED(-1),
          ;

          /**
           * <pre>
           * Unknown.
           * </pre>
           *
           * <code>UNKNOWN_OPERATION_TYPE = 0;</code>
           */
          public static final int UNKNOWN_OPERATION_TYPE_VALUE = 0;
          /**
           * <pre>
           * No operation.
           *
           * The value of first_operand is returned.
           * </pre>
           *
           * <code>NO_OPERATION = 1;</code>
           */
          public static final int NO_OPERATION_VALUE = 1;
          /**
           * <pre>
           * Addition operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand + second_operand) is returned.
           * </pre>
           *
           * <code>SUM = 2;</code>
           */
          public static final int SUM_VALUE = 2;
          /**
           * <pre>
           * Subtraction operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand - second_operand) is returned.
           * </pre>
           *
           * <code>SUBTRACTION = 3;</code>
           */
          public static final int SUBTRACTION_VALUE = 3;
          /**
           * <pre>
           * Multiplication operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand * second_operand) is returned.
           * </pre>
           *
           * <code>MULTIPLICATION = 4;</code>
           */
          public static final int MULTIPLICATION_VALUE = 4;
          /**
           * <pre>
           * Division operation. Only defined if both operands are of type int64.
           *
           * The value of (first_operand / second_operand) is returned.
           * </pre>
           *
           * <code>DIVISION = 5;</code>
           */
          public static final int DIVISION_VALUE = 5;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static OperationType valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static OperationType forNumber(int value) {
            switch (value) {
              case 0: return UNKNOWN_OPERATION_TYPE;
              case 1: return NO_OPERATION;
              case 2: return SUM;
              case 3: return SUBTRACTION;
              case 4: return MULTIPLICATION;
              case 5: return DIVISION;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<OperationType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              OperationType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<OperationType>() {
                  public OperationType findValueByNumber(int number) {
                    return OperationType.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDescriptor().getEnumTypes().get(0);
          }

          private static final OperationType[] VALUES = values();

          public static OperationType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private OperationType(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType)
        }

        public interface OperandOrBuilder extends
            // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           * @return Whether the int64ValueAndExponent field is set.
           */
          boolean hasInt64ValueAndExponent();
          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           * @return The int64ValueAndExponent.
           */
          org.sensoris.types.base.Int64ValueAndExponent getInt64ValueAndExponent();
          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           */
          org.sensoris.types.base.Int64ValueAndExponentOrBuilder getInt64ValueAndExponentOrBuilder();

          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           * @return Whether the boolValue field is set.
           */
          boolean hasBoolValue();
          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           * @return The boolValue.
           */
          com.google.protobuf.BoolValue getBoolValue();
          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           */
          com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder();

          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           * @return Whether the stringValue field is set.
           */
          boolean hasStringValue();
          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           * @return The stringValue.
           */
          com.google.protobuf.StringValue getStringValue();
          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           */
          com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder();

          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           * @return Whether the bytesValue field is set.
           */
          boolean hasBytesValue();
          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           * @return The bytesValue.
           */
          com.google.protobuf.BytesValue getBytesValue();
          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           */
          com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder();

          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           * @return Whether the eventFieldValue field is set.
           */
          boolean hasEventFieldValue();
          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           * @return The eventFieldValue.
           */
          org.sensoris.types.base.AbsoluteOrExtensionPath getEventFieldValue();
          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           */
          org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder getEventFieldValueOrBuilder();

          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          java.util.List<com.google.protobuf.Any> 
              getExtensionList();
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          com.google.protobuf.Any getExtension(int index);
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          int getExtensionCount();
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
              getExtensionOrBuilderList();
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
              int index);

          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.OperandCase getOperandCase();
        }
        /**
         * <pre>
         * Operand as part of an operation, which can be either a constant value or a field value of a SENSORIS event.
         * </pre>
         *
         * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand}
         */
        public static final class Operand extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)
            OperandOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Operand.newBuilder() to construct.
          private Operand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Operand() {
            extension_ = java.util.Collections.emptyList();
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Operand();
          }

          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder.class);
          }

          private int operandCase_ = 0;
          @SuppressWarnings("serial")
          private java.lang.Object operand_;
          public enum OperandCase
              implements com.google.protobuf.Internal.EnumLite,
                  com.google.protobuf.AbstractMessage.InternalOneOfEnum {
            INT64_VALUE_AND_EXPONENT(1),
            BOOL_VALUE(2),
            STRING_VALUE(3),
            BYTES_VALUE(4),
            EVENT_FIELD_VALUE(5),
            OPERAND_NOT_SET(0);
            private final int value;
            private OperandCase(int value) {
              this.value = value;
            }
            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static OperandCase valueOf(int value) {
              return forNumber(value);
            }

            public static OperandCase forNumber(int value) {
              switch (value) {
                case 1: return INT64_VALUE_AND_EXPONENT;
                case 2: return BOOL_VALUE;
                case 3: return STRING_VALUE;
                case 4: return BYTES_VALUE;
                case 5: return EVENT_FIELD_VALUE;
                case 0: return OPERAND_NOT_SET;
                default: return null;
              }
            }
            public int getNumber() {
              return this.value;
            }
          };

          public OperandCase
          getOperandCase() {
            return OperandCase.forNumber(
                operandCase_);
          }

          public static final int INT64_VALUE_AND_EXPONENT_FIELD_NUMBER = 1;
          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           * @return Whether the int64ValueAndExponent field is set.
           */
          @java.lang.Override
          public boolean hasInt64ValueAndExponent() {
            return operandCase_ == 1;
          }
          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           * @return The int64ValueAndExponent.
           */
          @java.lang.Override
          public org.sensoris.types.base.Int64ValueAndExponent getInt64ValueAndExponent() {
            if (operandCase_ == 1) {
               return (org.sensoris.types.base.Int64ValueAndExponent) operand_;
            }
            return org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
          }
          /**
           * <pre>
           * Int64 value and exponent.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
           */
          @java.lang.Override
          public org.sensoris.types.base.Int64ValueAndExponentOrBuilder getInt64ValueAndExponentOrBuilder() {
            if (operandCase_ == 1) {
               return (org.sensoris.types.base.Int64ValueAndExponent) operand_;
            }
            return org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
          }

          public static final int BOOL_VALUE_FIELD_NUMBER = 2;
          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           * @return Whether the boolValue field is set.
           */
          @java.lang.Override
          public boolean hasBoolValue() {
            return operandCase_ == 2;
          }
          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           * @return The boolValue.
           */
          @java.lang.Override
          public com.google.protobuf.BoolValue getBoolValue() {
            if (operandCase_ == 2) {
               return (com.google.protobuf.BoolValue) operand_;
            }
            return com.google.protobuf.BoolValue.getDefaultInstance();
          }
          /**
           * <pre>
           * Boolean value.
           * </pre>
           *
           * <code>.google.protobuf.BoolValue bool_value = 2;</code>
           */
          @java.lang.Override
          public com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder() {
            if (operandCase_ == 2) {
               return (com.google.protobuf.BoolValue) operand_;
            }
            return com.google.protobuf.BoolValue.getDefaultInstance();
          }

          public static final int STRING_VALUE_FIELD_NUMBER = 3;
          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           * @return Whether the stringValue field is set.
           */
          @java.lang.Override
          public boolean hasStringValue() {
            return operandCase_ == 3;
          }
          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           * @return The stringValue.
           */
          @java.lang.Override
          public com.google.protobuf.StringValue getStringValue() {
            if (operandCase_ == 3) {
               return (com.google.protobuf.StringValue) operand_;
            }
            return com.google.protobuf.StringValue.getDefaultInstance();
          }
          /**
           * <pre>
           * String value.
           * </pre>
           *
           * <code>.google.protobuf.StringValue string_value = 3;</code>
           */
          @java.lang.Override
          public com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder() {
            if (operandCase_ == 3) {
               return (com.google.protobuf.StringValue) operand_;
            }
            return com.google.protobuf.StringValue.getDefaultInstance();
          }

          public static final int BYTES_VALUE_FIELD_NUMBER = 4;
          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           * @return Whether the bytesValue field is set.
           */
          @java.lang.Override
          public boolean hasBytesValue() {
            return operandCase_ == 4;
          }
          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           * @return The bytesValue.
           */
          @java.lang.Override
          public com.google.protobuf.BytesValue getBytesValue() {
            if (operandCase_ == 4) {
               return (com.google.protobuf.BytesValue) operand_;
            }
            return com.google.protobuf.BytesValue.getDefaultInstance();
          }
          /**
           * <pre>
           * Bytes value.
           * </pre>
           *
           * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
           */
          @java.lang.Override
          public com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder() {
            if (operandCase_ == 4) {
               return (com.google.protobuf.BytesValue) operand_;
            }
            return com.google.protobuf.BytesValue.getDefaultInstance();
          }

          public static final int EVENT_FIELD_VALUE_FIELD_NUMBER = 5;
          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           * @return Whether the eventFieldValue field is set.
           */
          @java.lang.Override
          public boolean hasEventFieldValue() {
            return operandCase_ == 5;
          }
          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           * @return The eventFieldValue.
           */
          @java.lang.Override
          public org.sensoris.types.base.AbsoluteOrExtensionPath getEventFieldValue() {
            if (operandCase_ == 5) {
               return (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_;
            }
            return org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
          }
          /**
           * <pre>
           * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
           *
           * Actual event field value has to be one of the supported operands, see alternatives in oneof.
           *
           * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
           */
          @java.lang.Override
          public org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder getEventFieldValueOrBuilder() {
            if (operandCase_ == 5) {
               return (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_;
            }
            return org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
          }

          public static final int EXTENSION_FIELD_NUMBER = 15;
          @SuppressWarnings("serial")
          private java.util.List<com.google.protobuf.Any> extension_;
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          @java.lang.Override
          public java.util.List<com.google.protobuf.Any> getExtensionList() {
            return extension_;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          @java.lang.Override
          public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
              getExtensionOrBuilderList() {
            return extension_;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          @java.lang.Override
          public int getExtensionCount() {
            return extension_.size();
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          @java.lang.Override
          public com.google.protobuf.Any getExtension(int index) {
            return extension_.get(index);
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          @java.lang.Override
          public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
              int index) {
            return extension_.get(index);
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (operandCase_ == 1) {
              output.writeMessage(1, (org.sensoris.types.base.Int64ValueAndExponent) operand_);
            }
            if (operandCase_ == 2) {
              output.writeMessage(2, (com.google.protobuf.BoolValue) operand_);
            }
            if (operandCase_ == 3) {
              output.writeMessage(3, (com.google.protobuf.StringValue) operand_);
            }
            if (operandCase_ == 4) {
              output.writeMessage(4, (com.google.protobuf.BytesValue) operand_);
            }
            if (operandCase_ == 5) {
              output.writeMessage(5, (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_);
            }
            for (int i = 0; i < extension_.size(); i++) {
              output.writeMessage(15, extension_.get(i));
            }
            getUnknownFields().writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (operandCase_ == 1) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, (org.sensoris.types.base.Int64ValueAndExponent) operand_);
            }
            if (operandCase_ == 2) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, (com.google.protobuf.BoolValue) operand_);
            }
            if (operandCase_ == 3) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, (com.google.protobuf.StringValue) operand_);
            }
            if (operandCase_ == 4) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, (com.google.protobuf.BytesValue) operand_);
            }
            if (operandCase_ == 5) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(5, (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_);
            }
            for (int i = 0; i < extension_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(15, extension_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)) {
              return super.equals(obj);
            }
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand other = (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand) obj;

            if (!getExtensionList()
                .equals(other.getExtensionList())) return false;
            if (!getOperandCase().equals(other.getOperandCase())) return false;
            switch (operandCase_) {
              case 1:
                if (!getInt64ValueAndExponent()
                    .equals(other.getInt64ValueAndExponent())) return false;
                break;
              case 2:
                if (!getBoolValue()
                    .equals(other.getBoolValue())) return false;
                break;
              case 3:
                if (!getStringValue()
                    .equals(other.getStringValue())) return false;
                break;
              case 4:
                if (!getBytesValue()
                    .equals(other.getBytesValue())) return false;
                break;
              case 5:
                if (!getEventFieldValue()
                    .equals(other.getEventFieldValue())) return false;
                break;
              case 0:
              default:
            }
            if (!getUnknownFields().equals(other.getUnknownFields())) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getExtensionCount() > 0) {
              hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
              hash = (53 * hash) + getExtensionList().hashCode();
            }
            switch (operandCase_) {
              case 1:
                hash = (37 * hash) + INT64_VALUE_AND_EXPONENT_FIELD_NUMBER;
                hash = (53 * hash) + getInt64ValueAndExponent().hashCode();
                break;
              case 2:
                hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getBoolValue().hashCode();
                break;
              case 3:
                hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getStringValue().hashCode();
                break;
              case 4:
                hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getBytesValue().hashCode();
                break;
              case 5:
                hash = (37 * hash) + EVENT_FIELD_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getEventFieldValue().hashCode();
                break;
              case 0:
              default:
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }

          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * <pre>
           * Operand as part of an operation, which can be either a constant value or a field value of a SENSORIS event.
           * </pre>
           *
           * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder.class);
            }

            // Construct using org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.newBuilder()
            private Builder() {

            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);

            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              bitField0_ = 0;
              if (int64ValueAndExponentBuilder_ != null) {
                int64ValueAndExponentBuilder_.clear();
              }
              if (boolValueBuilder_ != null) {
                boolValueBuilder_.clear();
              }
              if (stringValueBuilder_ != null) {
                stringValueBuilder_.clear();
              }
              if (bytesValueBuilder_ != null) {
                bytesValueBuilder_.clear();
              }
              if (eventFieldValueBuilder_ != null) {
                eventFieldValueBuilder_.clear();
              }
              if (extensionBuilder_ == null) {
                extension_ = java.util.Collections.emptyList();
              } else {
                extension_ = null;
                extensionBuilder_.clear();
              }
              bitField0_ = (bitField0_ & ~0x00000020);
              operandCase_ = 0;
              operand_ = null;
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_Operand_descriptor;
            }

            @java.lang.Override
            public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getDefaultInstanceForType() {
              return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance();
            }

            @java.lang.Override
            public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand build() {
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand buildPartial() {
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand result = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand(this);
              buildPartialRepeatedFields(result);
              if (bitField0_ != 0) { buildPartial0(result); }
              buildPartialOneofs(result);
              onBuilt();
              return result;
            }

            private void buildPartialRepeatedFields(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand result) {
              if (extensionBuilder_ == null) {
                if (((bitField0_ & 0x00000020) != 0)) {
                  extension_ = java.util.Collections.unmodifiableList(extension_);
                  bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.extension_ = extension_;
              } else {
                result.extension_ = extensionBuilder_.build();
              }
            }

            private void buildPartial0(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand result) {
              int from_bitField0_ = bitField0_;
            }

            private void buildPartialOneofs(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand result) {
              result.operandCase_ = operandCase_;
              result.operand_ = this.operand_;
              if (operandCase_ == 1 &&
                  int64ValueAndExponentBuilder_ != null) {
                result.operand_ = int64ValueAndExponentBuilder_.build();
              }
              if (operandCase_ == 2 &&
                  boolValueBuilder_ != null) {
                result.operand_ = boolValueBuilder_.build();
              }
              if (operandCase_ == 3 &&
                  stringValueBuilder_ != null) {
                result.operand_ = stringValueBuilder_.build();
              }
              if (operandCase_ == 4 &&
                  bytesValueBuilder_ != null) {
                result.operand_ = bytesValueBuilder_.build();
              }
              if (operandCase_ == 5 &&
                  eventFieldValueBuilder_ != null) {
                result.operand_ = eventFieldValueBuilder_.build();
              }
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand) {
                return mergeFrom((org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand other) {
              if (other == org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance()) return this;
              if (extensionBuilder_ == null) {
                if (!other.extension_.isEmpty()) {
                  if (extension_.isEmpty()) {
                    extension_ = other.extension_;
                    bitField0_ = (bitField0_ & ~0x00000020);
                  } else {
                    ensureExtensionIsMutable();
                    extension_.addAll(other.extension_);
                  }
                  onChanged();
                }
              } else {
                if (!other.extension_.isEmpty()) {
                  if (extensionBuilder_.isEmpty()) {
                    extensionBuilder_.dispose();
                    extensionBuilder_ = null;
                    extension_ = other.extension_;
                    bitField0_ = (bitField0_ & ~0x00000020);
                    extensionBuilder_ = 
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                         getExtensionFieldBuilder() : null;
                  } else {
                    extensionBuilder_.addAllMessages(other.extension_);
                  }
                }
              }
              switch (other.getOperandCase()) {
                case INT64_VALUE_AND_EXPONENT: {
                  mergeInt64ValueAndExponent(other.getInt64ValueAndExponent());
                  break;
                }
                case BOOL_VALUE: {
                  mergeBoolValue(other.getBoolValue());
                  break;
                }
                case STRING_VALUE: {
                  mergeStringValue(other.getStringValue());
                  break;
                }
                case BYTES_VALUE: {
                  mergeBytesValue(other.getBytesValue());
                  break;
                }
                case EVENT_FIELD_VALUE: {
                  mergeEventFieldValue(other.getEventFieldValue());
                  break;
                }
                case OPERAND_NOT_SET: {
                  break;
                }
              }
              this.mergeUnknownFields(other.getUnknownFields());
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
              }
              try {
                boolean done = false;
                while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                    case 0:
                      done = true;
                      break;
                    case 10: {
                      input.readMessage(
                          getInt64ValueAndExponentFieldBuilder().getBuilder(),
                          extensionRegistry);
                      operandCase_ = 1;
                      break;
                    } // case 10
                    case 18: {
                      input.readMessage(
                          getBoolValueFieldBuilder().getBuilder(),
                          extensionRegistry);
                      operandCase_ = 2;
                      break;
                    } // case 18
                    case 26: {
                      input.readMessage(
                          getStringValueFieldBuilder().getBuilder(),
                          extensionRegistry);
                      operandCase_ = 3;
                      break;
                    } // case 26
                    case 34: {
                      input.readMessage(
                          getBytesValueFieldBuilder().getBuilder(),
                          extensionRegistry);
                      operandCase_ = 4;
                      break;
                    } // case 34
                    case 42: {
                      input.readMessage(
                          getEventFieldValueFieldBuilder().getBuilder(),
                          extensionRegistry);
                      operandCase_ = 5;
                      break;
                    } // case 42
                    case 122: {
                      com.google.protobuf.Any m =
                          input.readMessage(
                              com.google.protobuf.Any.parser(),
                              extensionRegistry);
                      if (extensionBuilder_ == null) {
                        ensureExtensionIsMutable();
                        extension_.add(m);
                      } else {
                        extensionBuilder_.addMessage(m);
                      }
                      break;
                    } // case 122
                    default: {
                      if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                        done = true; // was an endgroup tag
                      }
                      break;
                    } // default:
                  } // switch (tag)
                } // while (!done)
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
              } finally {
                onChanged();
              } // finally
              return this;
            }
            private int operandCase_ = 0;
            private java.lang.Object operand_;
            public OperandCase
                getOperandCase() {
              return OperandCase.forNumber(
                  operandCase_);
            }

            public Builder clearOperand() {
              operandCase_ = 0;
              operand_ = null;
              onChanged();
              return this;
            }

            private int bitField0_;

            private com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.base.Int64ValueAndExponent, org.sensoris.types.base.Int64ValueAndExponent.Builder, org.sensoris.types.base.Int64ValueAndExponentOrBuilder> int64ValueAndExponentBuilder_;
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             * @return Whether the int64ValueAndExponent field is set.
             */
            @java.lang.Override
            public boolean hasInt64ValueAndExponent() {
              return operandCase_ == 1;
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             * @return The int64ValueAndExponent.
             */
            @java.lang.Override
            public org.sensoris.types.base.Int64ValueAndExponent getInt64ValueAndExponent() {
              if (int64ValueAndExponentBuilder_ == null) {
                if (operandCase_ == 1) {
                  return (org.sensoris.types.base.Int64ValueAndExponent) operand_;
                }
                return org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
              } else {
                if (operandCase_ == 1) {
                  return int64ValueAndExponentBuilder_.getMessage();
                }
                return org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            public Builder setInt64ValueAndExponent(org.sensoris.types.base.Int64ValueAndExponent value) {
              if (int64ValueAndExponentBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                operand_ = value;
                onChanged();
              } else {
                int64ValueAndExponentBuilder_.setMessage(value);
              }
              operandCase_ = 1;
              return this;
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            public Builder setInt64ValueAndExponent(
                org.sensoris.types.base.Int64ValueAndExponent.Builder builderForValue) {
              if (int64ValueAndExponentBuilder_ == null) {
                operand_ = builderForValue.build();
                onChanged();
              } else {
                int64ValueAndExponentBuilder_.setMessage(builderForValue.build());
              }
              operandCase_ = 1;
              return this;
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            public Builder mergeInt64ValueAndExponent(org.sensoris.types.base.Int64ValueAndExponent value) {
              if (int64ValueAndExponentBuilder_ == null) {
                if (operandCase_ == 1 &&
                    operand_ != org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance()) {
                  operand_ = org.sensoris.types.base.Int64ValueAndExponent.newBuilder((org.sensoris.types.base.Int64ValueAndExponent) operand_)
                      .mergeFrom(value).buildPartial();
                } else {
                  operand_ = value;
                }
                onChanged();
              } else {
                if (operandCase_ == 1) {
                  int64ValueAndExponentBuilder_.mergeFrom(value);
                } else {
                  int64ValueAndExponentBuilder_.setMessage(value);
                }
              }
              operandCase_ = 1;
              return this;
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            public Builder clearInt64ValueAndExponent() {
              if (int64ValueAndExponentBuilder_ == null) {
                if (operandCase_ == 1) {
                  operandCase_ = 0;
                  operand_ = null;
                  onChanged();
                }
              } else {
                if (operandCase_ == 1) {
                  operandCase_ = 0;
                  operand_ = null;
                }
                int64ValueAndExponentBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            public org.sensoris.types.base.Int64ValueAndExponent.Builder getInt64ValueAndExponentBuilder() {
              return getInt64ValueAndExponentFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            @java.lang.Override
            public org.sensoris.types.base.Int64ValueAndExponentOrBuilder getInt64ValueAndExponentOrBuilder() {
              if ((operandCase_ == 1) && (int64ValueAndExponentBuilder_ != null)) {
                return int64ValueAndExponentBuilder_.getMessageOrBuilder();
              } else {
                if (operandCase_ == 1) {
                  return (org.sensoris.types.base.Int64ValueAndExponent) operand_;
                }
                return org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Int64 value and exponent.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.Int64ValueAndExponent int64_value_and_exponent = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.base.Int64ValueAndExponent, org.sensoris.types.base.Int64ValueAndExponent.Builder, org.sensoris.types.base.Int64ValueAndExponentOrBuilder> 
                getInt64ValueAndExponentFieldBuilder() {
              if (int64ValueAndExponentBuilder_ == null) {
                if (!(operandCase_ == 1)) {
                  operand_ = org.sensoris.types.base.Int64ValueAndExponent.getDefaultInstance();
                }
                int64ValueAndExponentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                    org.sensoris.types.base.Int64ValueAndExponent, org.sensoris.types.base.Int64ValueAndExponent.Builder, org.sensoris.types.base.Int64ValueAndExponentOrBuilder>(
                        (org.sensoris.types.base.Int64ValueAndExponent) operand_,
                        getParentForChildren(),
                        isClean());
                operand_ = null;
              }
              operandCase_ = 1;
              onChanged();
              return int64ValueAndExponentBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> boolValueBuilder_;
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             * @return Whether the boolValue field is set.
             */
            @java.lang.Override
            public boolean hasBoolValue() {
              return operandCase_ == 2;
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             * @return The boolValue.
             */
            @java.lang.Override
            public com.google.protobuf.BoolValue getBoolValue() {
              if (boolValueBuilder_ == null) {
                if (operandCase_ == 2) {
                  return (com.google.protobuf.BoolValue) operand_;
                }
                return com.google.protobuf.BoolValue.getDefaultInstance();
              } else {
                if (operandCase_ == 2) {
                  return boolValueBuilder_.getMessage();
                }
                return com.google.protobuf.BoolValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            public Builder setBoolValue(com.google.protobuf.BoolValue value) {
              if (boolValueBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                operand_ = value;
                onChanged();
              } else {
                boolValueBuilder_.setMessage(value);
              }
              operandCase_ = 2;
              return this;
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            public Builder setBoolValue(
                com.google.protobuf.BoolValue.Builder builderForValue) {
              if (boolValueBuilder_ == null) {
                operand_ = builderForValue.build();
                onChanged();
              } else {
                boolValueBuilder_.setMessage(builderForValue.build());
              }
              operandCase_ = 2;
              return this;
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            public Builder mergeBoolValue(com.google.protobuf.BoolValue value) {
              if (boolValueBuilder_ == null) {
                if (operandCase_ == 2 &&
                    operand_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
                  operand_ = com.google.protobuf.BoolValue.newBuilder((com.google.protobuf.BoolValue) operand_)
                      .mergeFrom(value).buildPartial();
                } else {
                  operand_ = value;
                }
                onChanged();
              } else {
                if (operandCase_ == 2) {
                  boolValueBuilder_.mergeFrom(value);
                } else {
                  boolValueBuilder_.setMessage(value);
                }
              }
              operandCase_ = 2;
              return this;
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            public Builder clearBoolValue() {
              if (boolValueBuilder_ == null) {
                if (operandCase_ == 2) {
                  operandCase_ = 0;
                  operand_ = null;
                  onChanged();
                }
              } else {
                if (operandCase_ == 2) {
                  operandCase_ = 0;
                  operand_ = null;
                }
                boolValueBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            public com.google.protobuf.BoolValue.Builder getBoolValueBuilder() {
              return getBoolValueFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            @java.lang.Override
            public com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder() {
              if ((operandCase_ == 2) && (boolValueBuilder_ != null)) {
                return boolValueBuilder_.getMessageOrBuilder();
              } else {
                if (operandCase_ == 2) {
                  return (com.google.protobuf.BoolValue) operand_;
                }
                return com.google.protobuf.BoolValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Boolean value.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue bool_value = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
                getBoolValueFieldBuilder() {
              if (boolValueBuilder_ == null) {
                if (!(operandCase_ == 2)) {
                  operand_ = com.google.protobuf.BoolValue.getDefaultInstance();
                }
                boolValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                        (com.google.protobuf.BoolValue) operand_,
                        getParentForChildren(),
                        isClean());
                operand_ = null;
              }
              operandCase_ = 2;
              onChanged();
              return boolValueBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> stringValueBuilder_;
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             * @return Whether the stringValue field is set.
             */
            @java.lang.Override
            public boolean hasStringValue() {
              return operandCase_ == 3;
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             * @return The stringValue.
             */
            @java.lang.Override
            public com.google.protobuf.StringValue getStringValue() {
              if (stringValueBuilder_ == null) {
                if (operandCase_ == 3) {
                  return (com.google.protobuf.StringValue) operand_;
                }
                return com.google.protobuf.StringValue.getDefaultInstance();
              } else {
                if (operandCase_ == 3) {
                  return stringValueBuilder_.getMessage();
                }
                return com.google.protobuf.StringValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            public Builder setStringValue(com.google.protobuf.StringValue value) {
              if (stringValueBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                operand_ = value;
                onChanged();
              } else {
                stringValueBuilder_.setMessage(value);
              }
              operandCase_ = 3;
              return this;
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            public Builder setStringValue(
                com.google.protobuf.StringValue.Builder builderForValue) {
              if (stringValueBuilder_ == null) {
                operand_ = builderForValue.build();
                onChanged();
              } else {
                stringValueBuilder_.setMessage(builderForValue.build());
              }
              operandCase_ = 3;
              return this;
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            public Builder mergeStringValue(com.google.protobuf.StringValue value) {
              if (stringValueBuilder_ == null) {
                if (operandCase_ == 3 &&
                    operand_ != com.google.protobuf.StringValue.getDefaultInstance()) {
                  operand_ = com.google.protobuf.StringValue.newBuilder((com.google.protobuf.StringValue) operand_)
                      .mergeFrom(value).buildPartial();
                } else {
                  operand_ = value;
                }
                onChanged();
              } else {
                if (operandCase_ == 3) {
                  stringValueBuilder_.mergeFrom(value);
                } else {
                  stringValueBuilder_.setMessage(value);
                }
              }
              operandCase_ = 3;
              return this;
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            public Builder clearStringValue() {
              if (stringValueBuilder_ == null) {
                if (operandCase_ == 3) {
                  operandCase_ = 0;
                  operand_ = null;
                  onChanged();
                }
              } else {
                if (operandCase_ == 3) {
                  operandCase_ = 0;
                  operand_ = null;
                }
                stringValueBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            public com.google.protobuf.StringValue.Builder getStringValueBuilder() {
              return getStringValueFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            @java.lang.Override
            public com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder() {
              if ((operandCase_ == 3) && (stringValueBuilder_ != null)) {
                return stringValueBuilder_.getMessageOrBuilder();
              } else {
                if (operandCase_ == 3) {
                  return (com.google.protobuf.StringValue) operand_;
                }
                return com.google.protobuf.StringValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * String value.
             * </pre>
             *
             * <code>.google.protobuf.StringValue string_value = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
                getStringValueFieldBuilder() {
              if (stringValueBuilder_ == null) {
                if (!(operandCase_ == 3)) {
                  operand_ = com.google.protobuf.StringValue.getDefaultInstance();
                }
                stringValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                        (com.google.protobuf.StringValue) operand_,
                        getParentForChildren(),
                        isClean());
                operand_ = null;
              }
              operandCase_ = 3;
              onChanged();
              return stringValueBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder> bytesValueBuilder_;
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             * @return Whether the bytesValue field is set.
             */
            @java.lang.Override
            public boolean hasBytesValue() {
              return operandCase_ == 4;
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             * @return The bytesValue.
             */
            @java.lang.Override
            public com.google.protobuf.BytesValue getBytesValue() {
              if (bytesValueBuilder_ == null) {
                if (operandCase_ == 4) {
                  return (com.google.protobuf.BytesValue) operand_;
                }
                return com.google.protobuf.BytesValue.getDefaultInstance();
              } else {
                if (operandCase_ == 4) {
                  return bytesValueBuilder_.getMessage();
                }
                return com.google.protobuf.BytesValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            public Builder setBytesValue(com.google.protobuf.BytesValue value) {
              if (bytesValueBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                operand_ = value;
                onChanged();
              } else {
                bytesValueBuilder_.setMessage(value);
              }
              operandCase_ = 4;
              return this;
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            public Builder setBytesValue(
                com.google.protobuf.BytesValue.Builder builderForValue) {
              if (bytesValueBuilder_ == null) {
                operand_ = builderForValue.build();
                onChanged();
              } else {
                bytesValueBuilder_.setMessage(builderForValue.build());
              }
              operandCase_ = 4;
              return this;
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            public Builder mergeBytesValue(com.google.protobuf.BytesValue value) {
              if (bytesValueBuilder_ == null) {
                if (operandCase_ == 4 &&
                    operand_ != com.google.protobuf.BytesValue.getDefaultInstance()) {
                  operand_ = com.google.protobuf.BytesValue.newBuilder((com.google.protobuf.BytesValue) operand_)
                      .mergeFrom(value).buildPartial();
                } else {
                  operand_ = value;
                }
                onChanged();
              } else {
                if (operandCase_ == 4) {
                  bytesValueBuilder_.mergeFrom(value);
                } else {
                  bytesValueBuilder_.setMessage(value);
                }
              }
              operandCase_ = 4;
              return this;
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            public Builder clearBytesValue() {
              if (bytesValueBuilder_ == null) {
                if (operandCase_ == 4) {
                  operandCase_ = 0;
                  operand_ = null;
                  onChanged();
                }
              } else {
                if (operandCase_ == 4) {
                  operandCase_ = 0;
                  operand_ = null;
                }
                bytesValueBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            public com.google.protobuf.BytesValue.Builder getBytesValueBuilder() {
              return getBytesValueFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            @java.lang.Override
            public com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder() {
              if ((operandCase_ == 4) && (bytesValueBuilder_ != null)) {
                return bytesValueBuilder_.getMessageOrBuilder();
              } else {
                if (operandCase_ == 4) {
                  return (com.google.protobuf.BytesValue) operand_;
                }
                return com.google.protobuf.BytesValue.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Bytes value.
             * </pre>
             *
             * <code>.google.protobuf.BytesValue bytes_value = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder> 
                getBytesValueFieldBuilder() {
              if (bytesValueBuilder_ == null) {
                if (!(operandCase_ == 4)) {
                  operand_ = com.google.protobuf.BytesValue.getDefaultInstance();
                }
                bytesValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder>(
                        (com.google.protobuf.BytesValue) operand_,
                        getParentForChildren(),
                        isClean());
                operand_ = null;
              }
              operandCase_ = 4;
              onChanged();
              return bytesValueBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.base.AbsoluteOrExtensionPath, org.sensoris.types.base.AbsoluteOrExtensionPath.Builder, org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder> eventFieldValueBuilder_;
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             * @return Whether the eventFieldValue field is set.
             */
            @java.lang.Override
            public boolean hasEventFieldValue() {
              return operandCase_ == 5;
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             * @return The eventFieldValue.
             */
            @java.lang.Override
            public org.sensoris.types.base.AbsoluteOrExtensionPath getEventFieldValue() {
              if (eventFieldValueBuilder_ == null) {
                if (operandCase_ == 5) {
                  return (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_;
                }
                return org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
              } else {
                if (operandCase_ == 5) {
                  return eventFieldValueBuilder_.getMessage();
                }
                return org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            public Builder setEventFieldValue(org.sensoris.types.base.AbsoluteOrExtensionPath value) {
              if (eventFieldValueBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                operand_ = value;
                onChanged();
              } else {
                eventFieldValueBuilder_.setMessage(value);
              }
              operandCase_ = 5;
              return this;
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            public Builder setEventFieldValue(
                org.sensoris.types.base.AbsoluteOrExtensionPath.Builder builderForValue) {
              if (eventFieldValueBuilder_ == null) {
                operand_ = builderForValue.build();
                onChanged();
              } else {
                eventFieldValueBuilder_.setMessage(builderForValue.build());
              }
              operandCase_ = 5;
              return this;
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            public Builder mergeEventFieldValue(org.sensoris.types.base.AbsoluteOrExtensionPath value) {
              if (eventFieldValueBuilder_ == null) {
                if (operandCase_ == 5 &&
                    operand_ != org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance()) {
                  operand_ = org.sensoris.types.base.AbsoluteOrExtensionPath.newBuilder((org.sensoris.types.base.AbsoluteOrExtensionPath) operand_)
                      .mergeFrom(value).buildPartial();
                } else {
                  operand_ = value;
                }
                onChanged();
              } else {
                if (operandCase_ == 5) {
                  eventFieldValueBuilder_.mergeFrom(value);
                } else {
                  eventFieldValueBuilder_.setMessage(value);
                }
              }
              operandCase_ = 5;
              return this;
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            public Builder clearEventFieldValue() {
              if (eventFieldValueBuilder_ == null) {
                if (operandCase_ == 5) {
                  operandCase_ = 0;
                  operand_ = null;
                  onChanged();
                }
              } else {
                if (operandCase_ == 5) {
                  operandCase_ = 0;
                  operand_ = null;
                }
                eventFieldValueBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            public org.sensoris.types.base.AbsoluteOrExtensionPath.Builder getEventFieldValueBuilder() {
              return getEventFieldValueFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            @java.lang.Override
            public org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder getEventFieldValueOrBuilder() {
              if ((operandCase_ == 5) && (eventFieldValueBuilder_ != null)) {
                return eventFieldValueBuilder_.getMessageOrBuilder();
              } else {
                if (operandCase_ == 5) {
                  return (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_;
                }
                return org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
              }
            }
            /**
             * <pre>
             * Field value of a SENSORIS event, referenced by it's path in SENSORIS DataMessages.
             *
             * Actual event field value has to be one of the supported operands, see alternatives in oneof.
             *
             * &#64;example A path of 2.2.2.4.2.1.1 references the data_message = 2 &gt; event_group = 2 &gt; localization_category = 2 &gt; vehicle_speed = 4 &gt; value_and_accuracy = 2 &gt; metric_vehicle = 1 &gt; x = 1.
             * </pre>
             *
             * <code>.sensoris.protobuf.types.base.AbsoluteOrExtensionPath event_field_value = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.base.AbsoluteOrExtensionPath, org.sensoris.types.base.AbsoluteOrExtensionPath.Builder, org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder> 
                getEventFieldValueFieldBuilder() {
              if (eventFieldValueBuilder_ == null) {
                if (!(operandCase_ == 5)) {
                  operand_ = org.sensoris.types.base.AbsoluteOrExtensionPath.getDefaultInstance();
                }
                eventFieldValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                    org.sensoris.types.base.AbsoluteOrExtensionPath, org.sensoris.types.base.AbsoluteOrExtensionPath.Builder, org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder>(
                        (org.sensoris.types.base.AbsoluteOrExtensionPath) operand_,
                        getParentForChildren(),
                        isClean());
                operand_ = null;
              }
              operandCase_ = 5;
              onChanged();
              return eventFieldValueBuilder_;
            }

            private java.util.List<com.google.protobuf.Any> extension_ =
              java.util.Collections.emptyList();
            private void ensureExtensionIsMutable() {
              if (!((bitField0_ & 0x00000020) != 0)) {
                extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
                bitField0_ |= 0x00000020;
               }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public java.util.List<com.google.protobuf.Any> getExtensionList() {
              if (extensionBuilder_ == null) {
                return java.util.Collections.unmodifiableList(extension_);
              } else {
                return extensionBuilder_.getMessageList();
              }
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public int getExtensionCount() {
              if (extensionBuilder_ == null) {
                return extension_.size();
              } else {
                return extensionBuilder_.getCount();
              }
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public com.google.protobuf.Any getExtension(int index) {
              if (extensionBuilder_ == null) {
                return extension_.get(index);
              } else {
                return extensionBuilder_.getMessage(index);
              }
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder setExtension(
                int index, com.google.protobuf.Any value) {
              if (extensionBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureExtensionIsMutable();
                extension_.set(index, value);
                onChanged();
              } else {
                extensionBuilder_.setMessage(index, value);
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder setExtension(
                int index, com.google.protobuf.Any.Builder builderForValue) {
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                extension_.set(index, builderForValue.build());
                onChanged();
              } else {
                extensionBuilder_.setMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder addExtension(com.google.protobuf.Any value) {
              if (extensionBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureExtensionIsMutable();
                extension_.add(value);
                onChanged();
              } else {
                extensionBuilder_.addMessage(value);
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder addExtension(
                int index, com.google.protobuf.Any value) {
              if (extensionBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureExtensionIsMutable();
                extension_.add(index, value);
                onChanged();
              } else {
                extensionBuilder_.addMessage(index, value);
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder addExtension(
                com.google.protobuf.Any.Builder builderForValue) {
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                extension_.add(builderForValue.build());
                onChanged();
              } else {
                extensionBuilder_.addMessage(builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder addExtension(
                int index, com.google.protobuf.Any.Builder builderForValue) {
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                extension_.add(index, builderForValue.build());
                onChanged();
              } else {
                extensionBuilder_.addMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder addAllExtension(
                java.lang.Iterable<? extends com.google.protobuf.Any> values) {
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, extension_);
                onChanged();
              } else {
                extensionBuilder_.addAllMessages(values);
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder clearExtension() {
              if (extensionBuilder_ == null) {
                extension_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
              } else {
                extensionBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public Builder removeExtension(int index) {
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                extension_.remove(index);
                onChanged();
              } else {
                extensionBuilder_.remove(index);
              }
              return this;
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public com.google.protobuf.Any.Builder getExtensionBuilder(
                int index) {
              return getExtensionFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
                int index) {
              if (extensionBuilder_ == null) {
                return extension_.get(index);  } else {
                return extensionBuilder_.getMessageOrBuilder(index);
              }
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
                 getExtensionOrBuilderList() {
              if (extensionBuilder_ != null) {
                return extensionBuilder_.getMessageOrBuilderList();
              } else {
                return java.util.Collections.unmodifiableList(extension_);
              }
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public com.google.protobuf.Any.Builder addExtensionBuilder() {
              return getExtensionFieldBuilder().addBuilder(
                  com.google.protobuf.Any.getDefaultInstance());
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public com.google.protobuf.Any.Builder addExtensionBuilder(
                int index) {
              return getExtensionFieldBuilder().addBuilder(
                  index, com.google.protobuf.Any.getDefaultInstance());
            }
            /**
             * <pre>
             * Proprietary extension.
             * </pre>
             *
             * <code>repeated .google.protobuf.Any extension = 15;</code>
             */
            public java.util.List<com.google.protobuf.Any.Builder> 
                 getExtensionBuilderList() {
              return getExtensionFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
                getExtensionFieldBuilder() {
              if (extensionBuilder_ == null) {
                extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                        extension_,
                        ((bitField0_ & 0x00000020) != 0),
                        getParentForChildren(),
                        isClean());
                extension_ = null;
              }
              return extensionBuilder_;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)
          }

          // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand)
          private static final org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand();
          }

          public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Operand>
              PARSER = new com.google.protobuf.AbstractParser<Operand>() {
            @java.lang.Override
            public Operand parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

          public static com.google.protobuf.Parser<Operand> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Operand> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        private int bitField0_;
        public static final int FIRST_OPERAND_FIELD_NUMBER = 1;
        private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand firstOperand_;
        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         * @return Whether the firstOperand field is set.
         */
        @java.lang.Override
        public boolean hasFirstOperand() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         * @return The firstOperand.
         */
        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getFirstOperand() {
          return firstOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : firstOperand_;
        }
        /**
         * <pre>
         * First operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
         */
        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getFirstOperandOrBuilder() {
          return firstOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : firstOperand_;
        }

        public static final int OPERATOR_FIELD_NUMBER = 2;
        private int operator_ = 0;
        /**
         * <pre>
         * Operator.
         *
         * If the operator is a binary operator, then the field second_operand shall be set.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
         * @return The enum numeric value on the wire for operator.
         */
        @java.lang.Override public int getOperatorValue() {
          return operator_;
        }
        /**
         * <pre>
         * Operator.
         *
         * If the operator is a binary operator, then the field second_operand shall be set.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
         * @return The operator.
         */
        @java.lang.Override public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType getOperator() {
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.forNumber(operator_);
          return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.UNRECOGNIZED : result;
        }

        public static final int SECOND_OPERAND_FIELD_NUMBER = 3;
        private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand secondOperand_;
        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         * @return Whether the secondOperand field is set.
         */
        @java.lang.Override
        public boolean hasSecondOperand() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         * @return The secondOperand.
         */
        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getSecondOperand() {
          return secondOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : secondOperand_;
        }
        /**
         * <pre>
         * Second operand.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
         */
        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getSecondOperandOrBuilder() {
          return secondOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : secondOperand_;
        }

        public static final int EXTENSION_FIELD_NUMBER = 15;
        @SuppressWarnings("serial")
        private java.util.List<com.google.protobuf.Any> extension_;
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.Any> getExtensionList() {
          return extension_;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        @java.lang.Override
        public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
            getExtensionOrBuilderList() {
          return extension_;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        @java.lang.Override
        public int getExtensionCount() {
          return extension_.size();
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        @java.lang.Override
        public com.google.protobuf.Any getExtension(int index) {
          return extension_.get(index);
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        @java.lang.Override
        public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
            int index) {
          return extension_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(1, getFirstOperand());
          }
          if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.UNKNOWN_OPERATION_TYPE.getNumber()) {
            output.writeEnum(2, operator_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeMessage(3, getSecondOperand());
          }
          for (int i = 0; i < extension_.size(); i++) {
            output.writeMessage(15, extension_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getFirstOperand());
          }
          if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.UNKNOWN_OPERATION_TYPE.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(2, operator_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getSecondOperand());
          }
          for (int i = 0; i < extension_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, extension_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)) {
            return super.equals(obj);
          }
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation other = (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation) obj;

          if (hasFirstOperand() != other.hasFirstOperand()) return false;
          if (hasFirstOperand()) {
            if (!getFirstOperand()
                .equals(other.getFirstOperand())) return false;
          }
          if (operator_ != other.operator_) return false;
          if (hasSecondOperand() != other.hasSecondOperand()) return false;
          if (hasSecondOperand()) {
            if (!getSecondOperand()
                .equals(other.getSecondOperand())) return false;
          }
          if (!getExtensionList()
              .equals(other.getExtensionList())) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasFirstOperand()) {
            hash = (37 * hash) + FIRST_OPERAND_FIELD_NUMBER;
            hash = (53 * hash) + getFirstOperand().hashCode();
          }
          hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
          hash = (53 * hash) + operator_;
          if (hasSecondOperand()) {
            hash = (37 * hash) + SECOND_OPERAND_FIELD_NUMBER;
            hash = (53 * hash) + getSecondOperand().hashCode();
          }
          if (getExtensionCount() > 0) {
            hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
            hash = (53 * hash) + getExtensionList().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Operation.
         * </pre>
         *
         * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder.class);
          }

          // Construct using org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getFirstOperandFieldBuilder();
              getSecondOperandFieldBuilder();
              getExtensionFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            firstOperand_ = null;
            if (firstOperandBuilder_ != null) {
              firstOperandBuilder_.dispose();
              firstOperandBuilder_ = null;
            }
            operator_ = 0;
            secondOperand_ = null;
            if (secondOperandBuilder_ != null) {
              secondOperandBuilder_.dispose();
              secondOperandBuilder_ = null;
            }
            if (extensionBuilder_ == null) {
              extension_ = java.util.Collections.emptyList();
            } else {
              extension_ = null;
              extensionBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_Operation_descriptor;
          }

          @java.lang.Override
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getDefaultInstanceForType() {
            return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance();
          }

          @java.lang.Override
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation build() {
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation buildPartial() {
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation result = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation(this);
            buildPartialRepeatedFields(result);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartialRepeatedFields(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation result) {
            if (extensionBuilder_ == null) {
              if (((bitField0_ & 0x00000008) != 0)) {
                extension_ = java.util.Collections.unmodifiableList(extension_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.extension_ = extension_;
            } else {
              result.extension_ = extensionBuilder_.build();
            }
          }

          private void buildPartial0(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.firstOperand_ = firstOperandBuilder_ == null
                  ? firstOperand_
                  : firstOperandBuilder_.build();
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.operator_ = operator_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.secondOperand_ = secondOperandBuilder_ == null
                  ? secondOperand_
                  : secondOperandBuilder_.build();
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation) {
              return mergeFrom((org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation other) {
            if (other == org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance()) return this;
            if (other.hasFirstOperand()) {
              mergeFirstOperand(other.getFirstOperand());
            }
            if (other.operator_ != 0) {
              setOperatorValue(other.getOperatorValue());
            }
            if (other.hasSecondOperand()) {
              mergeSecondOperand(other.getSecondOperand());
            }
            if (extensionBuilder_ == null) {
              if (!other.extension_.isEmpty()) {
                if (extension_.isEmpty()) {
                  extension_ = other.extension_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureExtensionIsMutable();
                  extension_.addAll(other.extension_);
                }
                onChanged();
              }
            } else {
              if (!other.extension_.isEmpty()) {
                if (extensionBuilder_.isEmpty()) {
                  extensionBuilder_.dispose();
                  extensionBuilder_ = null;
                  extension_ = other.extension_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  extensionBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getExtensionFieldBuilder() : null;
                } else {
                  extensionBuilder_.addAllMessages(other.extension_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    input.readMessage(
                        getFirstOperandFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                  case 16: {
                    operator_ = input.readEnum();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 26: {
                    input.readMessage(
                        getSecondOperandFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                  case 122: {
                    com.google.protobuf.Any m =
                        input.readMessage(
                            com.google.protobuf.Any.parser(),
                            extensionRegistry);
                    if (extensionBuilder_ == null) {
                      ensureExtensionIsMutable();
                      extension_.add(m);
                    } else {
                      extensionBuilder_.addMessage(m);
                    }
                    break;
                  } // case 122
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand firstOperand_;
          private com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder> firstOperandBuilder_;
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           * @return Whether the firstOperand field is set.
           */
          public boolean hasFirstOperand() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           * @return The firstOperand.
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getFirstOperand() {
            if (firstOperandBuilder_ == null) {
              return firstOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : firstOperand_;
            } else {
              return firstOperandBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public Builder setFirstOperand(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand value) {
            if (firstOperandBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              firstOperand_ = value;
            } else {
              firstOperandBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public Builder setFirstOperand(
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder builderForValue) {
            if (firstOperandBuilder_ == null) {
              firstOperand_ = builderForValue.build();
            } else {
              firstOperandBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public Builder mergeFirstOperand(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand value) {
            if (firstOperandBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                firstOperand_ != null &&
                firstOperand_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance()) {
                getFirstOperandBuilder().mergeFrom(value);
              } else {
                firstOperand_ = value;
              }
            } else {
              firstOperandBuilder_.mergeFrom(value);
            }
            if (firstOperand_ != null) {
              bitField0_ |= 0x00000001;
              onChanged();
            }
            return this;
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public Builder clearFirstOperand() {
            bitField0_ = (bitField0_ & ~0x00000001);
            firstOperand_ = null;
            if (firstOperandBuilder_ != null) {
              firstOperandBuilder_.dispose();
              firstOperandBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder getFirstOperandBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getFirstOperandFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getFirstOperandOrBuilder() {
            if (firstOperandBuilder_ != null) {
              return firstOperandBuilder_.getMessageOrBuilder();
            } else {
              return firstOperand_ == null ?
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : firstOperand_;
            }
          }
          /**
           * <pre>
           * First operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand first_operand = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder> 
              getFirstOperandFieldBuilder() {
            if (firstOperandBuilder_ == null) {
              firstOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder>(
                      getFirstOperand(),
                      getParentForChildren(),
                      isClean());
              firstOperand_ = null;
            }
            return firstOperandBuilder_;
          }

          private int operator_ = 0;
          /**
           * <pre>
           * Operator.
           *
           * If the operator is a binary operator, then the field second_operand shall be set.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
           * @return The enum numeric value on the wire for operator.
           */
          @java.lang.Override public int getOperatorValue() {
            return operator_;
          }
          /**
           * <pre>
           * Operator.
           *
           * If the operator is a binary operator, then the field second_operand shall be set.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
           * @param value The enum numeric value on the wire for operator to set.
           * @return This builder for chaining.
           */
          public Builder setOperatorValue(int value) {
            operator_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Operator.
           *
           * If the operator is a binary operator, then the field second_operand shall be set.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
           * @return The operator.
           */
          @java.lang.Override
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType getOperator() {
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.forNumber(operator_);
            return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Operator.
           *
           * If the operator is a binary operator, then the field second_operand shall be set.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
           * @param value The operator to set.
           * @return This builder for chaining.
           */
          public Builder setOperator(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            operator_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Operator.
           *
           * If the operator is a binary operator, then the field second_operand shall be set.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperationType operator = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearOperator() {
            bitField0_ = (bitField0_ & ~0x00000002);
            operator_ = 0;
            onChanged();
            return this;
          }

          private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand secondOperand_;
          private com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder> secondOperandBuilder_;
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           * @return Whether the secondOperand field is set.
           */
          public boolean hasSecondOperand() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           * @return The secondOperand.
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand getSecondOperand() {
            if (secondOperandBuilder_ == null) {
              return secondOperand_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : secondOperand_;
            } else {
              return secondOperandBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public Builder setSecondOperand(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand value) {
            if (secondOperandBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              secondOperand_ = value;
            } else {
              secondOperandBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public Builder setSecondOperand(
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder builderForValue) {
            if (secondOperandBuilder_ == null) {
              secondOperand_ = builderForValue.build();
            } else {
              secondOperandBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public Builder mergeSecondOperand(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand value) {
            if (secondOperandBuilder_ == null) {
              if (((bitField0_ & 0x00000004) != 0) &&
                secondOperand_ != null &&
                secondOperand_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance()) {
                getSecondOperandBuilder().mergeFrom(value);
              } else {
                secondOperand_ = value;
              }
            } else {
              secondOperandBuilder_.mergeFrom(value);
            }
            if (secondOperand_ != null) {
              bitField0_ |= 0x00000004;
              onChanged();
            }
            return this;
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public Builder clearSecondOperand() {
            bitField0_ = (bitField0_ & ~0x00000004);
            secondOperand_ = null;
            if (secondOperandBuilder_ != null) {
              secondOperandBuilder_.dispose();
              secondOperandBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder getSecondOperandBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getSecondOperandFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder getSecondOperandOrBuilder() {
            if (secondOperandBuilder_ != null) {
              return secondOperandBuilder_.getMessageOrBuilder();
            } else {
              return secondOperand_ == null ?
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.getDefaultInstance() : secondOperand_;
            }
          }
          /**
           * <pre>
           * Second operand.
           * </pre>
           *
           * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand second_operand = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder> 
              getSecondOperandFieldBuilder() {
            if (secondOperandBuilder_ == null) {
              secondOperandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Operand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.OperandOrBuilder>(
                      getSecondOperand(),
                      getParentForChildren(),
                      isClean());
              secondOperand_ = null;
            }
            return secondOperandBuilder_;
          }

          private java.util.List<com.google.protobuf.Any> extension_ =
            java.util.Collections.emptyList();
          private void ensureExtensionIsMutable() {
            if (!((bitField0_ & 0x00000008) != 0)) {
              extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public java.util.List<com.google.protobuf.Any> getExtensionList() {
            if (extensionBuilder_ == null) {
              return java.util.Collections.unmodifiableList(extension_);
            } else {
              return extensionBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public int getExtensionCount() {
            if (extensionBuilder_ == null) {
              return extension_.size();
            } else {
              return extensionBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public com.google.protobuf.Any getExtension(int index) {
            if (extensionBuilder_ == null) {
              return extension_.get(index);
            } else {
              return extensionBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder setExtension(
              int index, com.google.protobuf.Any value) {
            if (extensionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureExtensionIsMutable();
              extension_.set(index, value);
              onChanged();
            } else {
              extensionBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder setExtension(
              int index, com.google.protobuf.Any.Builder builderForValue) {
            if (extensionBuilder_ == null) {
              ensureExtensionIsMutable();
              extension_.set(index, builderForValue.build());
              onChanged();
            } else {
              extensionBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder addExtension(com.google.protobuf.Any value) {
            if (extensionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureExtensionIsMutable();
              extension_.add(value);
              onChanged();
            } else {
              extensionBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder addExtension(
              int index, com.google.protobuf.Any value) {
            if (extensionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureExtensionIsMutable();
              extension_.add(index, value);
              onChanged();
            } else {
              extensionBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder addExtension(
              com.google.protobuf.Any.Builder builderForValue) {
            if (extensionBuilder_ == null) {
              ensureExtensionIsMutable();
              extension_.add(builderForValue.build());
              onChanged();
            } else {
              extensionBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder addExtension(
              int index, com.google.protobuf.Any.Builder builderForValue) {
            if (extensionBuilder_ == null) {
              ensureExtensionIsMutable();
              extension_.add(index, builderForValue.build());
              onChanged();
            } else {
              extensionBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder addAllExtension(
              java.lang.Iterable<? extends com.google.protobuf.Any> values) {
            if (extensionBuilder_ == null) {
              ensureExtensionIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, extension_);
              onChanged();
            } else {
              extensionBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder clearExtension() {
            if (extensionBuilder_ == null) {
              extension_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              extensionBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public Builder removeExtension(int index) {
            if (extensionBuilder_ == null) {
              ensureExtensionIsMutable();
              extension_.remove(index);
              onChanged();
            } else {
              extensionBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public com.google.protobuf.Any.Builder getExtensionBuilder(
              int index) {
            return getExtensionFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
              int index) {
            if (extensionBuilder_ == null) {
              return extension_.get(index);  } else {
              return extensionBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
               getExtensionOrBuilderList() {
            if (extensionBuilder_ != null) {
              return extensionBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(extension_);
            }
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public com.google.protobuf.Any.Builder addExtensionBuilder() {
            return getExtensionFieldBuilder().addBuilder(
                com.google.protobuf.Any.getDefaultInstance());
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public com.google.protobuf.Any.Builder addExtensionBuilder(
              int index) {
            return getExtensionFieldBuilder().addBuilder(
                index, com.google.protobuf.Any.getDefaultInstance());
          }
          /**
           * <pre>
           * Proprietary extension.
           * </pre>
           *
           * <code>repeated .google.protobuf.Any extension = 15;</code>
           */
          public java.util.List<com.google.protobuf.Any.Builder> 
               getExtensionBuilderList() {
            return getExtensionFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
              getExtensionFieldBuilder() {
            if (extensionBuilder_ == null) {
              extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                      extension_,
                      ((bitField0_ & 0x00000008) != 0),
                      getParentForChildren(),
                      isClean());
              extension_ = null;
            }
            return extensionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)
        }

        // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation)
        private static final org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation();
        }

        public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Operation>
            PARSER = new com.google.protobuf.AbstractParser<Operation>() {
          @java.lang.Override
          public Operation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Operation> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Operation> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NOT_FIELD_NUMBER = 1;
      private com.google.protobuf.BoolValue not_;
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return Whether the not field is set.
       */
      @java.lang.Override
      public boolean hasNot() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return The not.
       */
      @java.lang.Override
      public com.google.protobuf.BoolValue getNot() {
        return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
        return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
      }

      public static final int FIRST_OPERATION_FIELD_NUMBER = 2;
      private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation firstOperation_;
      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       * @return Whether the firstOperation field is set.
       */
      @java.lang.Override
      public boolean hasFirstOperation() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       * @return The firstOperation.
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getFirstOperation() {
        return firstOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : firstOperation_;
      }
      /**
       * <pre>
       * Left side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getFirstOperationOrBuilder() {
        return firstOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : firstOperation_;
      }

      public static final int OPERATOR_FIELD_NUMBER = 3;
      private int operator_ = 0;
      /**
       * <pre>
       * Operator for comparison of the two boolean expressions.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
       * @return The enum numeric value on the wire for operator.
       */
      @java.lang.Override public int getOperatorValue() {
        return operator_;
      }
      /**
       * <pre>
       * Operator for comparison of the two boolean expressions.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
       * @return The operator.
       */
      @java.lang.Override public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType getOperator() {
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.forNumber(operator_);
        return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.UNRECOGNIZED : result;
      }

      public static final int SECOND_OPERATION_FIELD_NUMBER = 4;
      private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation secondOperation_;
      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       * @return Whether the secondOperation field is set.
       */
      @java.lang.Override
      public boolean hasSecondOperation() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       * @return The secondOperation.
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getSecondOperation() {
        return secondOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : secondOperation_;
      }
      /**
       * <pre>
       * Right side value of the boolean expression.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getSecondOperationOrBuilder() {
        return secondOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : secondOperation_;
      }

      public static final int EXTENSION_FIELD_NUMBER = 15;
      @SuppressWarnings("serial")
      private java.util.List<com.google.protobuf.Any> extension_;
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.Any> getExtensionList() {
        return extension_;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
          getExtensionOrBuilderList() {
        return extension_;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      @java.lang.Override
      public int getExtensionCount() {
        return extension_.size();
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Any getExtension(int index) {
        return extension_.get(index);
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      @java.lang.Override
      public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
          int index) {
        return extension_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getNot());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getFirstOperation());
        }
        if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.UNKNOWN_COMPARISON_OPERATOR_TYPE.getNumber()) {
          output.writeEnum(3, operator_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(4, getSecondOperation());
        }
        for (int i = 0; i < extension_.size(); i++) {
          output.writeMessage(15, extension_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getNot());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFirstOperation());
        }
        if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.UNKNOWN_COMPARISON_OPERATOR_TYPE.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, operator_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getSecondOperation());
        }
        for (int i = 0; i < extension_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, extension_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)) {
          return super.equals(obj);
        }
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression other = (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) obj;

        if (hasNot() != other.hasNot()) return false;
        if (hasNot()) {
          if (!getNot()
              .equals(other.getNot())) return false;
        }
        if (hasFirstOperation() != other.hasFirstOperation()) return false;
        if (hasFirstOperation()) {
          if (!getFirstOperation()
              .equals(other.getFirstOperation())) return false;
        }
        if (operator_ != other.operator_) return false;
        if (hasSecondOperation() != other.hasSecondOperation()) return false;
        if (hasSecondOperation()) {
          if (!getSecondOperation()
              .equals(other.getSecondOperation())) return false;
        }
        if (!getExtensionList()
            .equals(other.getExtensionList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNot()) {
          hash = (37 * hash) + NOT_FIELD_NUMBER;
          hash = (53 * hash) + getNot().hashCode();
        }
        if (hasFirstOperation()) {
          hash = (37 * hash) + FIRST_OPERATION_FIELD_NUMBER;
          hash = (53 * hash) + getFirstOperation().hashCode();
        }
        hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
        hash = (53 * hash) + operator_;
        if (hasSecondOperation()) {
          hash = (37 * hash) + SECOND_OPERATION_FIELD_NUMBER;
          hash = (53 * hash) + getSecondOperation().hashCode();
        }
        if (getExtensionCount() > 0) {
          hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getExtensionList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       *
       * Only data types that are comparable can be evaluated:
       * - int64 to int64 including the interpretation of exponent usage, also used for enum value to enum value
       * - bool to bool
       * - string to string
       * - bytes to bytes
       *
       * &#64;example Vehicle speed &gt; 2 [m/s].
       * </pre>
       *
       * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder.class);
        }

        // Construct using org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getNotFieldBuilder();
            getFirstOperationFieldBuilder();
            getSecondOperationFieldBuilder();
            getExtensionFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          not_ = null;
          if (notBuilder_ != null) {
            notBuilder_.dispose();
            notBuilder_ = null;
          }
          firstOperation_ = null;
          if (firstOperationBuilder_ != null) {
            firstOperationBuilder_.dispose();
            firstOperationBuilder_ = null;
          }
          operator_ = 0;
          secondOperation_ = null;
          if (secondOperationBuilder_ != null) {
            secondOperationBuilder_.dispose();
            secondOperationBuilder_ = null;
          }
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
          } else {
            extension_ = null;
            extensionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_ComparisonExpression_descriptor;
        }

        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getDefaultInstanceForType() {
          return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
        }

        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression build() {
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression buildPartial() {
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression result = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression result) {
          if (extensionBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0)) {
              extension_ = java.util.Collections.unmodifiableList(extension_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.extension_ = extension_;
          } else {
            result.extension_ = extensionBuilder_.build();
          }
        }

        private void buildPartial0(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.not_ = notBuilder_ == null
                ? not_
                : notBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.firstOperation_ = firstOperationBuilder_ == null
                ? firstOperation_
                : firstOperationBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.operator_ = operator_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.secondOperation_ = secondOperationBuilder_ == null
                ? secondOperation_
                : secondOperationBuilder_.build();
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) {
            return mergeFrom((org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression other) {
          if (other == org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance()) return this;
          if (other.hasNot()) {
            mergeNot(other.getNot());
          }
          if (other.hasFirstOperation()) {
            mergeFirstOperation(other.getFirstOperation());
          }
          if (other.operator_ != 0) {
            setOperatorValue(other.getOperatorValue());
          }
          if (other.hasSecondOperation()) {
            mergeSecondOperation(other.getSecondOperation());
          }
          if (extensionBuilder_ == null) {
            if (!other.extension_.isEmpty()) {
              if (extension_.isEmpty()) {
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureExtensionIsMutable();
                extension_.addAll(other.extension_);
              }
              onChanged();
            }
          } else {
            if (!other.extension_.isEmpty()) {
              if (extensionBuilder_.isEmpty()) {
                extensionBuilder_.dispose();
                extensionBuilder_ = null;
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000010);
                extensionBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getExtensionFieldBuilder() : null;
              } else {
                extensionBuilder_.addAllMessages(other.extension_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getNotFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getFirstOperationFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  operator_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  input.readMessage(
                      getSecondOperationFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 122: {
                  com.google.protobuf.Any m =
                      input.readMessage(
                          com.google.protobuf.Any.parser(),
                          extensionRegistry);
                  if (extensionBuilder_ == null) {
                    ensureExtensionIsMutable();
                    extension_.add(m);
                  } else {
                    extensionBuilder_.addMessage(m);
                  }
                  break;
                } // case 122
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.BoolValue not_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> notBuilder_;
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         * @return Whether the not field is set.
         */
        public boolean hasNot() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         * @return The not.
         */
        public com.google.protobuf.BoolValue getNot() {
          if (notBuilder_ == null) {
            return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
          } else {
            return notBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public Builder setNot(com.google.protobuf.BoolValue value) {
          if (notBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            not_ = value;
          } else {
            notBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public Builder setNot(
            com.google.protobuf.BoolValue.Builder builderForValue) {
          if (notBuilder_ == null) {
            not_ = builderForValue.build();
          } else {
            notBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public Builder mergeNot(com.google.protobuf.BoolValue value) {
          if (notBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              not_ != null &&
              not_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
              getNotBuilder().mergeFrom(value);
            } else {
              not_ = value;
            }
          } else {
            notBuilder_.mergeFrom(value);
          }
          if (not_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public Builder clearNot() {
          bitField0_ = (bitField0_ & ~0x00000001);
          not_ = null;
          if (notBuilder_ != null) {
            notBuilder_.dispose();
            notBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public com.google.protobuf.BoolValue.Builder getNotBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getNotFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
          if (notBuilder_ != null) {
            return notBuilder_.getMessageOrBuilder();
          } else {
            return not_ == null ?
                com.google.protobuf.BoolValue.getDefaultInstance() : not_;
          }
        }
        /**
         * <pre>
         * Negates the overall boolean result.
         *
         * If field is set to TRUE, the result of the boolean expression changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue not = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
            getNotFieldBuilder() {
          if (notBuilder_ == null) {
            notBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                    getNot(),
                    getParentForChildren(),
                    isClean());
            not_ = null;
          }
          return notBuilder_;
        }

        private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation firstOperation_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder> firstOperationBuilder_;
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         * @return Whether the firstOperation field is set.
         */
        public boolean hasFirstOperation() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         * @return The firstOperation.
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getFirstOperation() {
          if (firstOperationBuilder_ == null) {
            return firstOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : firstOperation_;
          } else {
            return firstOperationBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public Builder setFirstOperation(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation value) {
          if (firstOperationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            firstOperation_ = value;
          } else {
            firstOperationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public Builder setFirstOperation(
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder builderForValue) {
          if (firstOperationBuilder_ == null) {
            firstOperation_ = builderForValue.build();
          } else {
            firstOperationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public Builder mergeFirstOperation(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation value) {
          if (firstOperationBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              firstOperation_ != null &&
              firstOperation_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance()) {
              getFirstOperationBuilder().mergeFrom(value);
            } else {
              firstOperation_ = value;
            }
          } else {
            firstOperationBuilder_.mergeFrom(value);
          }
          if (firstOperation_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public Builder clearFirstOperation() {
          bitField0_ = (bitField0_ & ~0x00000002);
          firstOperation_ = null;
          if (firstOperationBuilder_ != null) {
            firstOperationBuilder_.dispose();
            firstOperationBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder getFirstOperationBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getFirstOperationFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getFirstOperationOrBuilder() {
          if (firstOperationBuilder_ != null) {
            return firstOperationBuilder_.getMessageOrBuilder();
          } else {
            return firstOperation_ == null ?
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : firstOperation_;
          }
        }
        /**
         * <pre>
         * Left side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation first_operation = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder> 
            getFirstOperationFieldBuilder() {
          if (firstOperationBuilder_ == null) {
            firstOperationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder>(
                    getFirstOperation(),
                    getParentForChildren(),
                    isClean());
            firstOperation_ = null;
          }
          return firstOperationBuilder_;
        }

        private int operator_ = 0;
        /**
         * <pre>
         * Operator for comparison of the two boolean expressions.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
         * @return The enum numeric value on the wire for operator.
         */
        @java.lang.Override public int getOperatorValue() {
          return operator_;
        }
        /**
         * <pre>
         * Operator for comparison of the two boolean expressions.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
         * @param value The enum numeric value on the wire for operator to set.
         * @return This builder for chaining.
         */
        public Builder setOperatorValue(int value) {
          operator_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Operator for comparison of the two boolean expressions.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
         * @return The operator.
         */
        @java.lang.Override
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType getOperator() {
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.forNumber(operator_);
          return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Operator for comparison of the two boolean expressions.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
         * @param value The operator to set.
         * @return This builder for chaining.
         */
        public Builder setOperator(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          operator_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Operator for comparison of the two boolean expressions.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.ComparisonOperatorType operator = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearOperator() {
          bitField0_ = (bitField0_ & ~0x00000004);
          operator_ = 0;
          onChanged();
          return this;
        }

        private org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation secondOperation_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder> secondOperationBuilder_;
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         * @return Whether the secondOperation field is set.
         */
        public boolean hasSecondOperation() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         * @return The secondOperation.
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation getSecondOperation() {
          if (secondOperationBuilder_ == null) {
            return secondOperation_ == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : secondOperation_;
          } else {
            return secondOperationBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public Builder setSecondOperation(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation value) {
          if (secondOperationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            secondOperation_ = value;
          } else {
            secondOperationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public Builder setSecondOperation(
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder builderForValue) {
          if (secondOperationBuilder_ == null) {
            secondOperation_ = builderForValue.build();
          } else {
            secondOperationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public Builder mergeSecondOperation(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation value) {
          if (secondOperationBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              secondOperation_ != null &&
              secondOperation_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance()) {
              getSecondOperationBuilder().mergeFrom(value);
            } else {
              secondOperation_ = value;
            }
          } else {
            secondOperationBuilder_.mergeFrom(value);
          }
          if (secondOperation_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public Builder clearSecondOperation() {
          bitField0_ = (bitField0_ & ~0x00000008);
          secondOperation_ = null;
          if (secondOperationBuilder_ != null) {
            secondOperationBuilder_.dispose();
            secondOperationBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder getSecondOperationBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getSecondOperationFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder getSecondOperationOrBuilder() {
          if (secondOperationBuilder_ != null) {
            return secondOperationBuilder_.getMessageOrBuilder();
          } else {
            return secondOperation_ == null ?
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.getDefaultInstance() : secondOperation_;
          }
        }
        /**
         * <pre>
         * Right side value of the boolean expression.
         * </pre>
         *
         * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation second_operation = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder> 
            getSecondOperationFieldBuilder() {
          if (secondOperationBuilder_ == null) {
            secondOperationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Operation.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.OperationOrBuilder>(
                    getSecondOperation(),
                    getParentForChildren(),
                    isClean());
            secondOperation_ = null;
          }
          return secondOperationBuilder_;
        }

        private java.util.List<com.google.protobuf.Any> extension_ =
          java.util.Collections.emptyList();
        private void ensureExtensionIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public java.util.List<com.google.protobuf.Any> getExtensionList() {
          if (extensionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(extension_);
          } else {
            return extensionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public int getExtensionCount() {
          if (extensionBuilder_ == null) {
            return extension_.size();
          } else {
            return extensionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public com.google.protobuf.Any getExtension(int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);
          } else {
            return extensionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder setExtension(
            int index, com.google.protobuf.Any value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.set(index, value);
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder setExtension(
            int index, com.google.protobuf.Any.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.set(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder addExtension(com.google.protobuf.Any value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder addExtension(
            int index, com.google.protobuf.Any value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(index, value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder addExtension(
            com.google.protobuf.Any.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder addExtension(
            int index, com.google.protobuf.Any.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder addAllExtension(
            java.lang.Iterable<? extends com.google.protobuf.Any> values) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, extension_);
            onChanged();
          } else {
            extensionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder clearExtension() {
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            extensionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public Builder removeExtension(int index) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.remove(index);
            onChanged();
          } else {
            extensionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public com.google.protobuf.Any.Builder getExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
            int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);  } else {
            return extensionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
             getExtensionOrBuilderList() {
          if (extensionBuilder_ != null) {
            return extensionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(extension_);
          }
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public com.google.protobuf.Any.Builder addExtensionBuilder() {
          return getExtensionFieldBuilder().addBuilder(
              com.google.protobuf.Any.getDefaultInstance());
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public com.google.protobuf.Any.Builder addExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().addBuilder(
              index, com.google.protobuf.Any.getDefaultInstance());
        }
        /**
         * <pre>
         * Proprietary extension.
         * </pre>
         *
         * <code>repeated .google.protobuf.Any extension = 15;</code>
         */
        public java.util.List<com.google.protobuf.Any.Builder> 
             getExtensionBuilderList() {
          return getExtensionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
            getExtensionFieldBuilder() {
          if (extensionBuilder_ == null) {
            extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                    extension_,
                    ((bitField0_ & 0x00000010) != 0),
                    getParentForChildren(),
                    isClean());
            extension_ = null;
          }
          return extensionBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)
      }

      // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression)
      private static final org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression();
      }

      public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ComparisonExpression>
          PARSER = new com.google.protobuf.AbstractParser<ComparisonExpression>() {
        @java.lang.Override
        public ComparisonExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ComparisonExpression> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ComparisonExpression> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int expressionFunctionCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object expressionFunction_;
    public enum ExpressionFunctionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      COMPARISON_EXPRESSION(2),
      EXPRESSIONFUNCTION_NOT_SET(0);
      private final int value;
      private ExpressionFunctionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ExpressionFunctionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ExpressionFunctionCase forNumber(int value) {
        switch (value) {
          case 2: return COMPARISON_EXPRESSION;
          case 0: return EXPRESSIONFUNCTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ExpressionFunctionCase
    getExpressionFunctionCase() {
      return ExpressionFunctionCase.forNumber(
          expressionFunctionCase_);
    }

    public static final int NOT_FIELD_NUMBER = 1;
    private com.google.protobuf.BoolValue not_;
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return Whether the not field is set.
     */
    @java.lang.Override
    public boolean hasNot() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return The not.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getNot() {
      return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
      return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
    }

    public static final int COMPARISON_EXPRESSION_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     * @return Whether the comparisonExpression field is set.
     */
    @java.lang.Override
    public boolean hasComparisonExpression() {
      return expressionFunctionCase_ == 2;
    }
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     * @return The comparisonExpression.
     */
    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getComparisonExpression() {
      if (expressionFunctionCase_ == 2) {
         return (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_;
      }
      return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
    }
    /**
     * <pre>
     * Comparison expression with a boolean result of TRUE or FALSE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
     */
    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder getComparisonExpressionOrBuilder() {
      if (expressionFunctionCase_ == 2) {
         return (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_;
      }
      return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
    }

    public static final int EXTENSION_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private java.util.List<com.google.protobuf.Any> extension_;
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.Any> getExtensionList() {
      return extension_;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getExtensionOrBuilderList() {
      return extension_;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    @java.lang.Override
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Any getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
        int index) {
      return extension_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getNot());
      }
      if (expressionFunctionCase_ == 2) {
        output.writeMessage(2, (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_);
      }
      for (int i = 0; i < extension_.size(); i++) {
        output.writeMessage(15, extension_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNot());
      }
      if (expressionFunctionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_);
      }
      for (int i = 0; i < extension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, extension_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand)) {
        return super.equals(obj);
      }
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand other = (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand) obj;

      if (hasNot() != other.hasNot()) return false;
      if (hasNot()) {
        if (!getNot()
            .equals(other.getNot())) return false;
      }
      if (!getExtensionList()
          .equals(other.getExtensionList())) return false;
      if (!getExpressionFunctionCase().equals(other.getExpressionFunctionCase())) return false;
      switch (expressionFunctionCase_) {
        case 2:
          if (!getComparisonExpression()
              .equals(other.getComparisonExpression())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNot()) {
        hash = (37 * hash) + NOT_FIELD_NUMBER;
        hash = (53 * hash) + getNot().hashCode();
      }
      if (getExtensionCount() > 0) {
        hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
        hash = (53 * hash) + getExtensionList().hashCode();
      }
      switch (expressionFunctionCase_) {
        case 2:
          hash = (37 * hash) + COMPARISON_EXPRESSION_FIELD_NUMBER;
          hash = (53 * hash) + getComparisonExpression().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Logical operand with a boolean result of TRUE or FALSE, resulting either out of a comparison expression or a boolean function.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand)
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.class, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder.class);
      }

      // Construct using org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNotFieldBuilder();
          getExtensionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        not_ = null;
        if (notBuilder_ != null) {
          notBuilder_.dispose();
          notBuilder_ = null;
        }
        if (comparisonExpressionBuilder_ != null) {
          comparisonExpressionBuilder_.clear();
        }
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
        } else {
          extension_ = null;
          extensionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        expressionFunctionCase_ = 0;
        expressionFunction_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_LogicalOperand_descriptor;
      }

      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand getDefaultInstanceForType() {
        return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand build() {
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand buildPartial() {
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand result = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand result) {
        if (extensionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            extension_ = java.util.Collections.unmodifiableList(extension_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.extension_ = extension_;
        } else {
          result.extension_ = extensionBuilder_.build();
        }
      }

      private void buildPartial0(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.not_ = notBuilder_ == null
              ? not_
              : notBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand result) {
        result.expressionFunctionCase_ = expressionFunctionCase_;
        result.expressionFunction_ = this.expressionFunction_;
        if (expressionFunctionCase_ == 2 &&
            comparisonExpressionBuilder_ != null) {
          result.expressionFunction_ = comparisonExpressionBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand) {
          return mergeFrom((org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand other) {
        if (other == org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.getDefaultInstance()) return this;
        if (other.hasNot()) {
          mergeNot(other.getNot());
        }
        if (extensionBuilder_ == null) {
          if (!other.extension_.isEmpty()) {
            if (extension_.isEmpty()) {
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureExtensionIsMutable();
              extension_.addAll(other.extension_);
            }
            onChanged();
          }
        } else {
          if (!other.extension_.isEmpty()) {
            if (extensionBuilder_.isEmpty()) {
              extensionBuilder_.dispose();
              extensionBuilder_ = null;
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000004);
              extensionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtensionFieldBuilder() : null;
            } else {
              extensionBuilder_.addAllMessages(other.extension_);
            }
          }
        }
        switch (other.getExpressionFunctionCase()) {
          case COMPARISON_EXPRESSION: {
            mergeComparisonExpression(other.getComparisonExpression());
            break;
          }
          case EXPRESSIONFUNCTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getNotFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getComparisonExpressionFieldBuilder().getBuilder(),
                    extensionRegistry);
                expressionFunctionCase_ = 2;
                break;
              } // case 18
              case 122: {
                com.google.protobuf.Any m =
                    input.readMessage(
                        com.google.protobuf.Any.parser(),
                        extensionRegistry);
                if (extensionBuilder_ == null) {
                  ensureExtensionIsMutable();
                  extension_.add(m);
                } else {
                  extensionBuilder_.addMessage(m);
                }
                break;
              } // case 122
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int expressionFunctionCase_ = 0;
      private java.lang.Object expressionFunction_;
      public ExpressionFunctionCase
          getExpressionFunctionCase() {
        return ExpressionFunctionCase.forNumber(
            expressionFunctionCase_);
      }

      public Builder clearExpressionFunction() {
        expressionFunctionCase_ = 0;
        expressionFunction_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.BoolValue not_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> notBuilder_;
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return Whether the not field is set.
       */
      public boolean hasNot() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       * @return The not.
       */
      public com.google.protobuf.BoolValue getNot() {
        if (notBuilder_ == null) {
          return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
        } else {
          return notBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public Builder setNot(com.google.protobuf.BoolValue value) {
        if (notBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          not_ = value;
        } else {
          notBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public Builder setNot(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (notBuilder_ == null) {
          not_ = builderForValue.build();
        } else {
          notBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public Builder mergeNot(com.google.protobuf.BoolValue value) {
        if (notBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            not_ != null &&
            not_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
            getNotBuilder().mergeFrom(value);
          } else {
            not_ = value;
          }
        } else {
          notBuilder_.mergeFrom(value);
        }
        if (not_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public Builder clearNot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        not_ = null;
        if (notBuilder_ != null) {
          notBuilder_.dispose();
          notBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public com.google.protobuf.BoolValue.Builder getNotBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNotFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
        if (notBuilder_ != null) {
          return notBuilder_.getMessageOrBuilder();
        } else {
          return not_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : not_;
        }
      }
      /**
       * <pre>
       * Negates the overall boolean result.
       *
       * If field is set to TRUE, the result of the boolean expression or function changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the result is not negated.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue not = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getNotFieldBuilder() {
        if (notBuilder_ == null) {
          notBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getNot(),
                  getParentForChildren(),
                  isClean());
          not_ = null;
        }
        return notBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder> comparisonExpressionBuilder_;
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       * @return Whether the comparisonExpression field is set.
       */
      @java.lang.Override
      public boolean hasComparisonExpression() {
        return expressionFunctionCase_ == 2;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       * @return The comparisonExpression.
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression getComparisonExpression() {
        if (comparisonExpressionBuilder_ == null) {
          if (expressionFunctionCase_ == 2) {
            return (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_;
          }
          return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
        } else {
          if (expressionFunctionCase_ == 2) {
            return comparisonExpressionBuilder_.getMessage();
          }
          return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      public Builder setComparisonExpression(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression value) {
        if (comparisonExpressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expressionFunction_ = value;
          onChanged();
        } else {
          comparisonExpressionBuilder_.setMessage(value);
        }
        expressionFunctionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      public Builder setComparisonExpression(
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder builderForValue) {
        if (comparisonExpressionBuilder_ == null) {
          expressionFunction_ = builderForValue.build();
          onChanged();
        } else {
          comparisonExpressionBuilder_.setMessage(builderForValue.build());
        }
        expressionFunctionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      public Builder mergeComparisonExpression(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression value) {
        if (comparisonExpressionBuilder_ == null) {
          if (expressionFunctionCase_ == 2 &&
              expressionFunction_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance()) {
            expressionFunction_ = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.newBuilder((org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_)
                .mergeFrom(value).buildPartial();
          } else {
            expressionFunction_ = value;
          }
          onChanged();
        } else {
          if (expressionFunctionCase_ == 2) {
            comparisonExpressionBuilder_.mergeFrom(value);
          } else {
            comparisonExpressionBuilder_.setMessage(value);
          }
        }
        expressionFunctionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      public Builder clearComparisonExpression() {
        if (comparisonExpressionBuilder_ == null) {
          if (expressionFunctionCase_ == 2) {
            expressionFunctionCase_ = 0;
            expressionFunction_ = null;
            onChanged();
          }
        } else {
          if (expressionFunctionCase_ == 2) {
            expressionFunctionCase_ = 0;
            expressionFunction_ = null;
          }
          comparisonExpressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder getComparisonExpressionBuilder() {
        return getComparisonExpressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      @java.lang.Override
      public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder getComparisonExpressionOrBuilder() {
        if ((expressionFunctionCase_ == 2) && (comparisonExpressionBuilder_ != null)) {
          return comparisonExpressionBuilder_.getMessageOrBuilder();
        } else {
          if (expressionFunctionCase_ == 2) {
            return (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_;
          }
          return org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Comparison expression with a boolean result of TRUE or FALSE.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression comparison_expression = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder> 
          getComparisonExpressionFieldBuilder() {
        if (comparisonExpressionBuilder_ == null) {
          if (!(expressionFunctionCase_ == 2)) {
            expressionFunction_ = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.getDefaultInstance();
          }
          comparisonExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpressionOrBuilder>(
                  (org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.ComparisonExpression) expressionFunction_,
                  getParentForChildren(),
                  isClean());
          expressionFunction_ = null;
        }
        expressionFunctionCase_ = 2;
        onChanged();
        return comparisonExpressionBuilder_;
      }

      private java.util.List<com.google.protobuf.Any> extension_ =
        java.util.Collections.emptyList();
      private void ensureExtensionIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<com.google.protobuf.Any> getExtensionList() {
        if (extensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extension_);
        } else {
          return extensionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public int getExtensionCount() {
        if (extensionBuilder_ == null) {
          return extension_.size();
        } else {
          return extensionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any getExtension(int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);
        } else {
          return extensionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.set(index, value);
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.set(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.Any value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(index, value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder addAllExtension(
          java.lang.Iterable<? extends com.google.protobuf.Any> values) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extension_);
          onChanged();
        } else {
          extensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder clearExtension() {
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          extensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public Builder removeExtension(int index) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.remove(index);
          onChanged();
        } else {
          extensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder getExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
          int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);  } else {
          return extensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getExtensionOrBuilderList() {
        if (extensionBuilder_ != null) {
          return extensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extension_);
        }
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder addExtensionBuilder() {
        return getExtensionFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public com.google.protobuf.Any.Builder addExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Proprietary extension.
       * </pre>
       *
       * <code>repeated .google.protobuf.Any extension = 15;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getExtensionBuilderList() {
        return getExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getExtensionFieldBuilder() {
        if (extensionBuilder_ == null) {
          extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  extension_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          extension_ = null;
        }
        return extensionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand)
    private static final org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand();
    }

    public static org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalOperand>
        PARSER = new com.google.protobuf.AbstractParser<LogicalOperand>() {
      @java.lang.Override
      public LogicalOperand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogicalOperand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalOperand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int NOT_FIELD_NUMBER = 1;
  private com.google.protobuf.BoolValue not_;
  /**
   * <pre>
   * Negates the overall boolean result.
   *
   * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue not = 1;</code>
   * @return Whether the not field is set.
   */
  @java.lang.Override
  public boolean hasNot() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Negates the overall boolean result.
   *
   * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue not = 1;</code>
   * @return The not.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getNot() {
    return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
  }
  /**
   * <pre>
   * Negates the overall boolean result.
   *
   * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue not = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
    return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
  }

  public static final int OPERATOR_FIELD_NUMBER = 2;
  private int operator_ = 0;
  /**
   * <pre>
   * Logical boolean operator for all elements of the field operand.
   *
   * The usage of the operator follows the rules:
   * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
   * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
   * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
   * @return The enum numeric value on the wire for operator.
   */
  @java.lang.Override public int getOperatorValue() {
    return operator_;
  }
  /**
   * <pre>
   * Logical boolean operator for all elements of the field operand.
   *
   * The usage of the operator follows the rules:
   * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
   * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
   * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
   * @return The operator.
   */
  @java.lang.Override public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator getOperator() {
    org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.forNumber(operator_);
    return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.UNRECOGNIZED : result;
  }

  public static final int OPERAND_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand> operand_;
  /**
   * <pre>
   * Operand.
   *
   * If no operand is set, the logical expression is FALSE by definition.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand> getOperandList() {
    return operand_;
  }
  /**
   * <pre>
   * Operand.
   *
   * If no operand is set, the logical expression is FALSE by definition.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder> 
      getOperandOrBuilderList() {
    return operand_;
  }
  /**
   * <pre>
   * Operand.
   *
   * If no operand is set, the logical expression is FALSE by definition.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
   */
  @java.lang.Override
  public int getOperandCount() {
    return operand_.size();
  }
  /**
   * <pre>
   * Operand.
   *
   * If no operand is set, the logical expression is FALSE by definition.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
   */
  @java.lang.Override
  public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand getOperand(int index) {
    return operand_.get(index);
  }
  /**
   * <pre>
   * Operand.
   *
   * If no operand is set, the logical expression is FALSE by definition.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
   */
  @java.lang.Override
  public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder getOperandOrBuilder(
      int index) {
    return operand_.get(index);
  }

  public static final int EXTENSION_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.Any> extension_;
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.Any> getExtensionList() {
    return extension_;
  }
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
      getExtensionOrBuilderList() {
    return extension_;
  }
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  @java.lang.Override
  public int getExtensionCount() {
    return extension_.size();
  }
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Any getExtension(int index) {
    return extension_.get(index);
  }
  /**
   * <pre>
   * Proprietary extension.
   * </pre>
   *
   * <code>repeated .google.protobuf.Any extension = 15;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
      int index) {
    return extension_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getNot());
    }
    if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.UNKNOWN_LOGICAL_OPERATOR.getNumber()) {
      output.writeEnum(2, operator_);
    }
    for (int i = 0; i < operand_.size(); i++) {
      output.writeMessage(3, operand_.get(i));
    }
    for (int i = 0; i < extension_.size(); i++) {
      output.writeMessage(15, extension_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getNot());
    }
    if (operator_ != org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.UNKNOWN_LOGICAL_OPERATOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, operator_);
    }
    for (int i = 0; i < operand_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, operand_.get(i));
    }
    for (int i = 0; i < extension_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, extension_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.types.logicalexpression.LogicalExpression)) {
      return super.equals(obj);
    }
    org.sensoris.types.logicalexpression.LogicalExpression other = (org.sensoris.types.logicalexpression.LogicalExpression) obj;

    if (hasNot() != other.hasNot()) return false;
    if (hasNot()) {
      if (!getNot()
          .equals(other.getNot())) return false;
    }
    if (operator_ != other.operator_) return false;
    if (!getOperandList()
        .equals(other.getOperandList())) return false;
    if (!getExtensionList()
        .equals(other.getExtensionList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasNot()) {
      hash = (37 * hash) + NOT_FIELD_NUMBER;
      hash = (53 * hash) + getNot().hashCode();
    }
    hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
    hash = (53 * hash) + operator_;
    if (getOperandCount() > 0) {
      hash = (37 * hash) + OPERAND_FIELD_NUMBER;
      hash = (53 * hash) + getOperandList().hashCode();
    }
    if (getExtensionCount() > 0) {
      hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
      hash = (53 * hash) + getExtensionList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.types.logicalexpression.LogicalExpression parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.types.logicalexpression.LogicalExpression parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.types.logicalexpression.LogicalExpression parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.types.logicalexpression.LogicalExpression prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines constituents for boolean expressions which consists of an operator applied on multiple operands.
   *
   * The operands may include boolean expressions, arithmetic expressions as well as sensor, map, or system parameters.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.types.logicalexpression.LogicalExpression}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.logicalexpression.LogicalExpression)
      org.sensoris.types.logicalexpression.LogicalExpressionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.types.logicalexpression.LogicalExpression.class, org.sensoris.types.logicalexpression.LogicalExpression.Builder.class);
    }

    // Construct using org.sensoris.types.logicalexpression.LogicalExpression.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNotFieldBuilder();
        getOperandFieldBuilder();
        getExtensionFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      not_ = null;
      if (notBuilder_ != null) {
        notBuilder_.dispose();
        notBuilder_ = null;
      }
      operator_ = 0;
      if (operandBuilder_ == null) {
        operand_ = java.util.Collections.emptyList();
      } else {
        operand_ = null;
        operandBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (extensionBuilder_ == null) {
        extension_ = java.util.Collections.emptyList();
      } else {
        extension_ = null;
        extensionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.types.logicalexpression.SensorisLogicalExpressionTypes.internal_static_sensoris_protobuf_types_logicalexpression_LogicalExpression_descriptor;
    }

    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression getDefaultInstanceForType() {
      return org.sensoris.types.logicalexpression.LogicalExpression.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression build() {
      org.sensoris.types.logicalexpression.LogicalExpression result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression buildPartial() {
      org.sensoris.types.logicalexpression.LogicalExpression result = new org.sensoris.types.logicalexpression.LogicalExpression(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.sensoris.types.logicalexpression.LogicalExpression result) {
      if (operandBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          operand_ = java.util.Collections.unmodifiableList(operand_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.operand_ = operand_;
      } else {
        result.operand_ = operandBuilder_.build();
      }
      if (extensionBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          extension_ = java.util.Collections.unmodifiableList(extension_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.extension_ = extension_;
      } else {
        result.extension_ = extensionBuilder_.build();
      }
    }

    private void buildPartial0(org.sensoris.types.logicalexpression.LogicalExpression result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.not_ = notBuilder_ == null
            ? not_
            : notBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.operator_ = operator_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.types.logicalexpression.LogicalExpression) {
        return mergeFrom((org.sensoris.types.logicalexpression.LogicalExpression)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.types.logicalexpression.LogicalExpression other) {
      if (other == org.sensoris.types.logicalexpression.LogicalExpression.getDefaultInstance()) return this;
      if (other.hasNot()) {
        mergeNot(other.getNot());
      }
      if (other.operator_ != 0) {
        setOperatorValue(other.getOperatorValue());
      }
      if (operandBuilder_ == null) {
        if (!other.operand_.isEmpty()) {
          if (operand_.isEmpty()) {
            operand_ = other.operand_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOperandIsMutable();
            operand_.addAll(other.operand_);
          }
          onChanged();
        }
      } else {
        if (!other.operand_.isEmpty()) {
          if (operandBuilder_.isEmpty()) {
            operandBuilder_.dispose();
            operandBuilder_ = null;
            operand_ = other.operand_;
            bitField0_ = (bitField0_ & ~0x00000004);
            operandBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOperandFieldBuilder() : null;
          } else {
            operandBuilder_.addAllMessages(other.operand_);
          }
        }
      }
      if (extensionBuilder_ == null) {
        if (!other.extension_.isEmpty()) {
          if (extension_.isEmpty()) {
            extension_ = other.extension_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExtensionIsMutable();
            extension_.addAll(other.extension_);
          }
          onChanged();
        }
      } else {
        if (!other.extension_.isEmpty()) {
          if (extensionBuilder_.isEmpty()) {
            extensionBuilder_.dispose();
            extensionBuilder_ = null;
            extension_ = other.extension_;
            bitField0_ = (bitField0_ & ~0x00000008);
            extensionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExtensionFieldBuilder() : null;
          } else {
            extensionBuilder_.addAllMessages(other.extension_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getNotFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              operator_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand m =
                  input.readMessage(
                      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.parser(),
                      extensionRegistry);
              if (operandBuilder_ == null) {
                ensureOperandIsMutable();
                operand_.add(m);
              } else {
                operandBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 122: {
              com.google.protobuf.Any m =
                  input.readMessage(
                      com.google.protobuf.Any.parser(),
                      extensionRegistry);
              if (extensionBuilder_ == null) {
                ensureExtensionIsMutable();
                extension_.add(m);
              } else {
                extensionBuilder_.addMessage(m);
              }
              break;
            } // case 122
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.BoolValue not_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> notBuilder_;
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return Whether the not field is set.
     */
    public boolean hasNot() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     * @return The not.
     */
    public com.google.protobuf.BoolValue getNot() {
      if (notBuilder_ == null) {
        return not_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : not_;
      } else {
        return notBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public Builder setNot(com.google.protobuf.BoolValue value) {
      if (notBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        not_ = value;
      } else {
        notBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public Builder setNot(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (notBuilder_ == null) {
        not_ = builderForValue.build();
      } else {
        notBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public Builder mergeNot(com.google.protobuf.BoolValue value) {
      if (notBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          not_ != null &&
          not_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getNotBuilder().mergeFrom(value);
        } else {
          not_ = value;
        }
      } else {
        notBuilder_.mergeFrom(value);
      }
      if (not_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public Builder clearNot() {
      bitField0_ = (bitField0_ & ~0x00000001);
      not_ = null;
      if (notBuilder_ != null) {
        notBuilder_.dispose();
        notBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public com.google.protobuf.BoolValue.Builder getNotBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getNotFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getNotOrBuilder() {
      if (notBuilder_ != null) {
        return notBuilder_.getMessageOrBuilder();
      } else {
        return not_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : not_;
      }
    }
    /**
     * <pre>
     * Negates the overall boolean result.
     *
     * If set to TRUE, the boolean result changes from TRUE to FALSE and respectively from FALSE to TRUE. If not set, the boolean result is not negated.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue not = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getNotFieldBuilder() {
      if (notBuilder_ == null) {
        notBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getNot(),
                getParentForChildren(),
                isClean());
        not_ = null;
      }
      return notBuilder_;
    }

    private int operator_ = 0;
    /**
     * <pre>
     * Logical boolean operator for all elements of the field operand.
     *
     * The usage of the operator follows the rules:
     * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
     * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
     * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
     * @return The enum numeric value on the wire for operator.
     */
    @java.lang.Override public int getOperatorValue() {
      return operator_;
    }
    /**
     * <pre>
     * Logical boolean operator for all elements of the field operand.
     *
     * The usage of the operator follows the rules:
     * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
     * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
     * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
     * @param value The enum numeric value on the wire for operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorValue(int value) {
      operator_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Logical boolean operator for all elements of the field operand.
     *
     * The usage of the operator follows the rules:
     * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
     * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
     * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
     * @return The operator.
     */
    @java.lang.Override
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator getOperator() {
      org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator result = org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.forNumber(operator_);
      return result == null ? org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Logical boolean operator for all elements of the field operand.
     *
     * The usage of the operator follows the rules:
     * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
     * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
     * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
     * @param value The operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperator(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperator value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      operator_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Logical boolean operator for all elements of the field operand.
     *
     * The usage of the operator follows the rules:
     * - If the field operand has more than one element, UNKNOWN_LOGICAL_OPERATOR shall not be used. If the field operand has exactly one element, then the operand is not evaluated.
     * - Applying the operator AND to a list of elements [A, B, C] returns TRUE if every element is TRUE and FALSE otherwise. Evaluation of the operator can return early with FALSE for the first element being FALSE.
     * - Applying the operator OR to a list of elements [A, B, C] returns FALSE if every element is FALSE and TRUE otherwise. Evaluation of the operator can return early with TRUE for the first element being TRUE.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperator operator = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOperator() {
      bitField0_ = (bitField0_ & ~0x00000002);
      operator_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand> operand_ =
      java.util.Collections.emptyList();
    private void ensureOperandIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        operand_ = new java.util.ArrayList<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand>(operand_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder> operandBuilder_;

    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public java.util.List<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand> getOperandList() {
      if (operandBuilder_ == null) {
        return java.util.Collections.unmodifiableList(operand_);
      } else {
        return operandBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public int getOperandCount() {
      if (operandBuilder_ == null) {
        return operand_.size();
      } else {
        return operandBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand getOperand(int index) {
      if (operandBuilder_ == null) {
        return operand_.get(index);
      } else {
        return operandBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder setOperand(
        int index, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand value) {
      if (operandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperandIsMutable();
        operand_.set(index, value);
        onChanged();
      } else {
        operandBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder setOperand(
        int index, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder builderForValue) {
      if (operandBuilder_ == null) {
        ensureOperandIsMutable();
        operand_.set(index, builderForValue.build());
        onChanged();
      } else {
        operandBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder addOperand(org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand value) {
      if (operandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperandIsMutable();
        operand_.add(value);
        onChanged();
      } else {
        operandBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder addOperand(
        int index, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand value) {
      if (operandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperandIsMutable();
        operand_.add(index, value);
        onChanged();
      } else {
        operandBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder addOperand(
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder builderForValue) {
      if (operandBuilder_ == null) {
        ensureOperandIsMutable();
        operand_.add(builderForValue.build());
        onChanged();
      } else {
        operandBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder addOperand(
        int index, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder builderForValue) {
      if (operandBuilder_ == null) {
        ensureOperandIsMutable();
        operand_.add(index, builderForValue.build());
        onChanged();
      } else {
        operandBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder addAllOperand(
        java.lang.Iterable<? extends org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand> values) {
      if (operandBuilder_ == null) {
        ensureOperandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, operand_);
        onChanged();
      } else {
        operandBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder clearOperand() {
      if (operandBuilder_ == null) {
        operand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        operandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public Builder removeOperand(int index) {
      if (operandBuilder_ == null) {
        ensureOperandIsMutable();
        operand_.remove(index);
        onChanged();
      } else {
        operandBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder getOperandBuilder(
        int index) {
      return getOperandFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder getOperandOrBuilder(
        int index) {
      if (operandBuilder_ == null) {
        return operand_.get(index);  } else {
        return operandBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public java.util.List<? extends org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder> 
         getOperandOrBuilderList() {
      if (operandBuilder_ != null) {
        return operandBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(operand_);
      }
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder addOperandBuilder() {
      return getOperandFieldBuilder().addBuilder(
          org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.getDefaultInstance());
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder addOperandBuilder(
        int index) {
      return getOperandFieldBuilder().addBuilder(
          index, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.getDefaultInstance());
    }
    /**
     * <pre>
     * Operand.
     *
     * If no operand is set, the logical expression is FALSE by definition.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.types.logicalexpression.LogicalExpression.LogicalOperand operand = 3;</code>
     */
    public java.util.List<org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder> 
         getOperandBuilderList() {
      return getOperandFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder> 
        getOperandFieldBuilder() {
      if (operandBuilder_ == null) {
        operandBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperand.Builder, org.sensoris.types.logicalexpression.LogicalExpression.LogicalOperandOrBuilder>(
                operand_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        operand_ = null;
      }
      return operandBuilder_;
    }

    private java.util.List<com.google.protobuf.Any> extension_ =
      java.util.Collections.emptyList();
    private void ensureExtensionIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        extension_ = new java.util.ArrayList<com.google.protobuf.Any>(extension_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> extensionBuilder_;

    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public java.util.List<com.google.protobuf.Any> getExtensionList() {
      if (extensionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(extension_);
      } else {
        return extensionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public int getExtensionCount() {
      if (extensionBuilder_ == null) {
        return extension_.size();
      } else {
        return extensionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.Any getExtension(int index) {
      if (extensionBuilder_ == null) {
        return extension_.get(index);
      } else {
        return extensionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder setExtension(
        int index, com.google.protobuf.Any value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.set(index, value);
        onChanged();
      } else {
        extensionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder setExtension(
        int index, com.google.protobuf.Any.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.set(index, builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder addExtension(com.google.protobuf.Any value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.add(value);
        onChanged();
      } else {
        extensionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder addExtension(
        int index, com.google.protobuf.Any value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.add(index, value);
        onChanged();
      } else {
        extensionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder addExtension(
        com.google.protobuf.Any.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.add(builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder addExtension(
        int index, com.google.protobuf.Any.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.add(index, builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder addAllExtension(
        java.lang.Iterable<? extends com.google.protobuf.Any> values) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, extension_);
        onChanged();
      } else {
        extensionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder clearExtension() {
      if (extensionBuilder_ == null) {
        extension_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        extensionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public Builder removeExtension(int index) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.remove(index);
        onChanged();
      } else {
        extensionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.Any.Builder getExtensionBuilder(
        int index) {
      return getExtensionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.AnyOrBuilder getExtensionOrBuilder(
        int index) {
      if (extensionBuilder_ == null) {
        return extension_.get(index);  } else {
        return extensionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
         getExtensionOrBuilderList() {
      if (extensionBuilder_ != null) {
        return extensionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(extension_);
      }
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.Any.Builder addExtensionBuilder() {
      return getExtensionFieldBuilder().addBuilder(
          com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public com.google.protobuf.Any.Builder addExtensionBuilder(
        int index) {
      return getExtensionFieldBuilder().addBuilder(
          index, com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     * <pre>
     * Proprietary extension.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any extension = 15;</code>
     */
    public java.util.List<com.google.protobuf.Any.Builder> 
         getExtensionBuilderList() {
      return getExtensionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getExtensionFieldBuilder() {
      if (extensionBuilder_ == null) {
        extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                extension_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        extension_ = null;
      }
      return extensionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.logicalexpression.LogicalExpression)
  private static final org.sensoris.types.logicalexpression.LogicalExpression DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.types.logicalexpression.LogicalExpression();
  }

  public static org.sensoris.types.logicalexpression.LogicalExpression getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogicalExpression>
      PARSER = new com.google.protobuf.AbstractParser<LogicalExpression>() {
    @java.lang.Override
    public LogicalExpression parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LogicalExpression> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogicalExpression> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.types.logicalexpression.LogicalExpression getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

