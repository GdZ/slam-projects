/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/base.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.types.base;

public interface AbsoluteOrExtensionPathsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Path.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;</code>
   */
  java.util.List<org.sensoris.types.base.AbsoluteOrExtensionPath> 
      getPathList();
  /**
   * <pre>
   * Path.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;</code>
   */
  org.sensoris.types.base.AbsoluteOrExtensionPath getPath(int index);
  /**
   * <pre>
   * Path.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;</code>
   */
  int getPathCount();
  /**
   * <pre>
   * Path.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;</code>
   */
  java.util.List<? extends org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder> 
      getPathOrBuilderList();
  /**
   * <pre>
   * Path.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;</code>
   */
  org.sensoris.types.base.AbsoluteOrExtensionPathOrBuilder getPathOrBuilder(
      int index);
}
