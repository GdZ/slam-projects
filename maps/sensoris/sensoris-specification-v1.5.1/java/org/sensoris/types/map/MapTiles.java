/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/types/map.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.types.map;

/**
 * <pre>
 * Map tiles.
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.types.map.MapTiles}
 */
public final class MapTiles extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.types.map.MapTiles)
    MapTilesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MapTiles.newBuilder() to construct.
  private MapTiles(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MapTiles() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MapTiles();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.types.map.SensorisMapTypes.internal_static_sensoris_protobuf_types_map_MapTiles_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.types.map.SensorisMapTypes.internal_static_sensoris_protobuf_types_map_MapTiles_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.types.map.MapTiles.class, org.sensoris.types.map.MapTiles.Builder.class);
  }

  private int bitField0_;
  public static final int TILING_SCHEME_FIELD_NUMBER = 1;
  private org.sensoris.types.map.MapTilingScheme tilingScheme_;
  /**
   * <pre>
   * Map tiling scheme.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
   * @return Whether the tilingScheme field is set.
   */
  @java.lang.Override
  public boolean hasTilingScheme() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Map tiling scheme.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
   * @return The tilingScheme.
   */
  @java.lang.Override
  public org.sensoris.types.map.MapTilingScheme getTilingScheme() {
    return tilingScheme_ == null ? org.sensoris.types.map.MapTilingScheme.getDefaultInstance() : tilingScheme_;
  }
  /**
   * <pre>
   * Map tiling scheme.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
   */
  @java.lang.Override
  public org.sensoris.types.map.MapTilingSchemeOrBuilder getTilingSchemeOrBuilder() {
    return tilingScheme_ == null ? org.sensoris.types.map.MapTilingScheme.getDefaultInstance() : tilingScheme_;
  }

  public static final int TILE_IDS_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue tileIds_;
  /**
   * <pre>
   * Tile ids in the map tiling scheme.
   *
   * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
   * </pre>
   *
   * <code>.google.protobuf.StringValue tile_ids = 2;</code>
   * @return Whether the tileIds field is set.
   */
  @java.lang.Override
  public boolean hasTileIds() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Tile ids in the map tiling scheme.
   *
   * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
   * </pre>
   *
   * <code>.google.protobuf.StringValue tile_ids = 2;</code>
   * @return The tileIds.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getTileIds() {
    return tileIds_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : tileIds_;
  }
  /**
   * <pre>
   * Tile ids in the map tiling scheme.
   *
   * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
   * </pre>
   *
   * <code>.google.protobuf.StringValue tile_ids = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getTileIdsOrBuilder() {
    return tileIds_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : tileIds_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getTilingScheme());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getTileIds());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTilingScheme());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTileIds());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.types.map.MapTiles)) {
      return super.equals(obj);
    }
    org.sensoris.types.map.MapTiles other = (org.sensoris.types.map.MapTiles) obj;

    if (hasTilingScheme() != other.hasTilingScheme()) return false;
    if (hasTilingScheme()) {
      if (!getTilingScheme()
          .equals(other.getTilingScheme())) return false;
    }
    if (hasTileIds() != other.hasTileIds()) return false;
    if (hasTileIds()) {
      if (!getTileIds()
          .equals(other.getTileIds())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTilingScheme()) {
      hash = (37 * hash) + TILING_SCHEME_FIELD_NUMBER;
      hash = (53 * hash) + getTilingScheme().hashCode();
    }
    if (hasTileIds()) {
      hash = (37 * hash) + TILE_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getTileIds().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.types.map.MapTiles parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.types.map.MapTiles parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.types.map.MapTiles parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.types.map.MapTiles parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.types.map.MapTiles prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Map tiles.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.types.map.MapTiles}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.types.map.MapTiles)
      org.sensoris.types.map.MapTilesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.types.map.SensorisMapTypes.internal_static_sensoris_protobuf_types_map_MapTiles_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.types.map.SensorisMapTypes.internal_static_sensoris_protobuf_types_map_MapTiles_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.types.map.MapTiles.class, org.sensoris.types.map.MapTiles.Builder.class);
    }

    // Construct using org.sensoris.types.map.MapTiles.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTilingSchemeFieldBuilder();
        getTileIdsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tilingScheme_ = null;
      if (tilingSchemeBuilder_ != null) {
        tilingSchemeBuilder_.dispose();
        tilingSchemeBuilder_ = null;
      }
      tileIds_ = null;
      if (tileIdsBuilder_ != null) {
        tileIdsBuilder_.dispose();
        tileIdsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.types.map.SensorisMapTypes.internal_static_sensoris_protobuf_types_map_MapTiles_descriptor;
    }

    @java.lang.Override
    public org.sensoris.types.map.MapTiles getDefaultInstanceForType() {
      return org.sensoris.types.map.MapTiles.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.types.map.MapTiles build() {
      org.sensoris.types.map.MapTiles result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.types.map.MapTiles buildPartial() {
      org.sensoris.types.map.MapTiles result = new org.sensoris.types.map.MapTiles(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.sensoris.types.map.MapTiles result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tilingScheme_ = tilingSchemeBuilder_ == null
            ? tilingScheme_
            : tilingSchemeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.tileIds_ = tileIdsBuilder_ == null
            ? tileIds_
            : tileIdsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.types.map.MapTiles) {
        return mergeFrom((org.sensoris.types.map.MapTiles)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.types.map.MapTiles other) {
      if (other == org.sensoris.types.map.MapTiles.getDefaultInstance()) return this;
      if (other.hasTilingScheme()) {
        mergeTilingScheme(other.getTilingScheme());
      }
      if (other.hasTileIds()) {
        mergeTileIds(other.getTileIds());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTilingSchemeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTileIdsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.sensoris.types.map.MapTilingScheme tilingScheme_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.map.MapTilingScheme, org.sensoris.types.map.MapTilingScheme.Builder, org.sensoris.types.map.MapTilingSchemeOrBuilder> tilingSchemeBuilder_;
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     * @return Whether the tilingScheme field is set.
     */
    public boolean hasTilingScheme() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     * @return The tilingScheme.
     */
    public org.sensoris.types.map.MapTilingScheme getTilingScheme() {
      if (tilingSchemeBuilder_ == null) {
        return tilingScheme_ == null ? org.sensoris.types.map.MapTilingScheme.getDefaultInstance() : tilingScheme_;
      } else {
        return tilingSchemeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public Builder setTilingScheme(org.sensoris.types.map.MapTilingScheme value) {
      if (tilingSchemeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tilingScheme_ = value;
      } else {
        tilingSchemeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public Builder setTilingScheme(
        org.sensoris.types.map.MapTilingScheme.Builder builderForValue) {
      if (tilingSchemeBuilder_ == null) {
        tilingScheme_ = builderForValue.build();
      } else {
        tilingSchemeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public Builder mergeTilingScheme(org.sensoris.types.map.MapTilingScheme value) {
      if (tilingSchemeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          tilingScheme_ != null &&
          tilingScheme_ != org.sensoris.types.map.MapTilingScheme.getDefaultInstance()) {
          getTilingSchemeBuilder().mergeFrom(value);
        } else {
          tilingScheme_ = value;
        }
      } else {
        tilingSchemeBuilder_.mergeFrom(value);
      }
      if (tilingScheme_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public Builder clearTilingScheme() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tilingScheme_ = null;
      if (tilingSchemeBuilder_ != null) {
        tilingSchemeBuilder_.dispose();
        tilingSchemeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public org.sensoris.types.map.MapTilingScheme.Builder getTilingSchemeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTilingSchemeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    public org.sensoris.types.map.MapTilingSchemeOrBuilder getTilingSchemeOrBuilder() {
      if (tilingSchemeBuilder_ != null) {
        return tilingSchemeBuilder_.getMessageOrBuilder();
      } else {
        return tilingScheme_ == null ?
            org.sensoris.types.map.MapTilingScheme.getDefaultInstance() : tilingScheme_;
      }
    }
    /**
     * <pre>
     * Map tiling scheme.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.map.MapTilingScheme, org.sensoris.types.map.MapTilingScheme.Builder, org.sensoris.types.map.MapTilingSchemeOrBuilder> 
        getTilingSchemeFieldBuilder() {
      if (tilingSchemeBuilder_ == null) {
        tilingSchemeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.map.MapTilingScheme, org.sensoris.types.map.MapTilingScheme.Builder, org.sensoris.types.map.MapTilingSchemeOrBuilder>(
                getTilingScheme(),
                getParentForChildren(),
                isClean());
        tilingScheme_ = null;
      }
      return tilingSchemeBuilder_;
    }

    private com.google.protobuf.StringValue tileIds_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> tileIdsBuilder_;
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     * @return Whether the tileIds field is set.
     */
    public boolean hasTileIds() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     * @return The tileIds.
     */
    public com.google.protobuf.StringValue getTileIds() {
      if (tileIdsBuilder_ == null) {
        return tileIds_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : tileIds_;
      } else {
        return tileIdsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public Builder setTileIds(com.google.protobuf.StringValue value) {
      if (tileIdsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tileIds_ = value;
      } else {
        tileIdsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public Builder setTileIds(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (tileIdsBuilder_ == null) {
        tileIds_ = builderForValue.build();
      } else {
        tileIdsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public Builder mergeTileIds(com.google.protobuf.StringValue value) {
      if (tileIdsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          tileIds_ != null &&
          tileIds_ != com.google.protobuf.StringValue.getDefaultInstance()) {
          getTileIdsBuilder().mergeFrom(value);
        } else {
          tileIds_ = value;
        }
      } else {
        tileIdsBuilder_.mergeFrom(value);
      }
      if (tileIds_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public Builder clearTileIds() {
      bitField0_ = (bitField0_ & ~0x00000002);
      tileIds_ = null;
      if (tileIdsBuilder_ != null) {
        tileIdsBuilder_.dispose();
        tileIdsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getTileIdsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getTileIdsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getTileIdsOrBuilder() {
      if (tileIdsBuilder_ != null) {
        return tileIdsBuilder_.getMessageOrBuilder();
      } else {
        return tileIds_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : tileIds_;
      }
    }
    /**
     * <pre>
     * Tile ids in the map tiling scheme.
     *
     * &#64;syntax [&lt;tile-id-type&gt;-]&lt;tile-id-1&gt;[;&lt;tile-id-2&gt;][;&lt;tile-id-n&gt;]
     * </pre>
     *
     * <code>.google.protobuf.StringValue tile_ids = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getTileIdsFieldBuilder() {
      if (tileIdsBuilder_ == null) {
        tileIdsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getTileIds(),
                getParentForChildren(),
                isClean());
        tileIds_ = null;
      }
      return tileIdsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.types.map.MapTiles)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.types.map.MapTiles)
  private static final org.sensoris.types.map.MapTiles DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.types.map.MapTiles();
  }

  public static org.sensoris.types.map.MapTiles getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MapTiles>
      PARSER = new com.google.protobuf.AbstractParser<MapTiles>() {
    @java.lang.Override
    public MapTiles parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MapTiles> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MapTiles> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.types.map.MapTiles getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

