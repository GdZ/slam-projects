/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/object_detection.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.objectdetection;

public interface MovableObjectOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.objectdetection.MovableObject)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Movable object identifier.
   *
   * Identifier is unique within a DataMessage and can be used to trace movable objects.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   * @return Whether the objectId field is set.
   */
  boolean hasObjectId();
  /**
   * <pre>
   * Movable object identifier.
   *
   * Identifier is unique within a DataMessage and can be used to trace movable objects.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   * @return The objectId.
   */
  com.google.protobuf.Int64Value getObjectId();
  /**
   * <pre>
   * Movable object identifier.
   *
   * Identifier is unique within a DataMessage and can be used to trace movable objects.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.google.protobuf.Int64Value object_id = 2;</code>
   */
  com.google.protobuf.Int64ValueOrBuilder getObjectIdOrBuilder();

  /**
   * <pre>
   * Confidence that a movable object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   * @return Whether the existenceConfidence field is set.
   */
  boolean hasExistenceConfidence();
  /**
   * <pre>
   * Confidence that a movable object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   * @return The existenceConfidence.
   */
  org.sensoris.types.base.Confidence getExistenceConfidence();
  /**
   * <pre>
   * Confidence that a movable object has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 3;</code>
   */
  org.sensoris.types.base.ConfidenceOrBuilder getExistenceConfidenceOrBuilder();

  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   * @return Whether the detectionStatus field is set.
   */
  boolean hasDetectionStatus();
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   * @return The detectionStatus.
   */
  org.sensoris.types.base.EventDetectionStatus getDetectionStatus();
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;</code>
   */
  org.sensoris.types.base.EventDetectionStatusOrBuilder getDetectionStatusOrBuilder();

  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;</code>
   * @return Whether the typeAndConfidence field is set.
   */
  boolean hasTypeAndConfidence();
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;</code>
   * @return The typeAndConfidence.
   */
  org.sensoris.categories.objectdetection.MovableObject.TypeAndConfidence getTypeAndConfidence();
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;</code>
   */
  org.sensoris.categories.objectdetection.MovableObject.TypeAndConfidenceOrBuilder getTypeAndConfidenceOrBuilder();

  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   * @return Whether the rectangularBoxAndAccuracy field is set.
   */
  boolean hasRectangularBoxAndAccuracy();
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   * @return The rectangularBoxAndAccuracy.
   */
  org.sensoris.types.spatial.RectangularBoxAndAccuracy getRectangularBoxAndAccuracy();
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;</code>
   */
  org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder getRectangularBoxAndAccuracyOrBuilder();

  /**
   * <pre>
   * Speed relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return Whether the speedAndAccuracy field is set.
   */
  boolean hasSpeedAndAccuracy();
  /**
   * <pre>
   * Speed relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return The speedAndAccuracy.
   */
  org.sensoris.types.spatial.XyzVectorAndAccuracy getSpeedAndAccuracy();
  /**
   * <pre>
   * Speed relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.spatial.XyzVectorAndAccuracyOrBuilder getSpeedAndAccuracyOrBuilder();

  /**
   * <pre>
   * Acceleration relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second Squared
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return Whether the accelerationAndAccuracy field is set.
   */
  boolean hasAccelerationAndAccuracy();
  /**
   * <pre>
   * Acceleration relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second Squared
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   * @return The accelerationAndAccuracy.
   */
  org.sensoris.types.spatial.XyzVectorAndAccuracy getAccelerationAndAccuracy();
  /**
   * <pre>
   * Acceleration relative to SENSORIS vehicle coordinate system or other coordinate system if explicitly mentioned.
   *
   * &#64;unit Meter per Second Squared
   * &#64;resolution 0.1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];</code>
   */
  org.sensoris.types.spatial.XyzVectorAndAccuracyOrBuilder getAccelerationAndAccuracyOrBuilder();
}
