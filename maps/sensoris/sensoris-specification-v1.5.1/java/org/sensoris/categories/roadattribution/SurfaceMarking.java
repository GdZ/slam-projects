/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/road_attribution.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.roadattribution;

/**
 * <pre>
 * Surface marking.
 *
 * &#64;relation 1..* sensoris.protobuf.categories.roadattribution.SurfaceMarking IMPACT 1 sensoris.protobuf.categories.roadattribution.Lane
 * &#64;relation 1..* sensoris.protobuf.categories.roadattribution.SurfaceMarking IMPACT 1 sensoris.protobuf.categories.roadattribution.Road
 * &#64;relation 1 sensoris.protobuf.categories.roadattribution.SurfaceMarking EQUAL 1 sensoris.protobuf.categories.trafficregulation.TrafficSign
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.roadattribution.SurfaceMarking}
 */
public final class SurfaceMarking extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.roadattribution.SurfaceMarking)
    SurfaceMarkingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SurfaceMarking.newBuilder() to construct.
  private SurfaceMarking(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SurfaceMarking() {
    colorAndConfidence_ = java.util.Collections.emptyList();
    materialAndConfidence_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SurfaceMarking();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.roadattribution.SurfaceMarking.class, org.sensoris.categories.roadattribution.SurfaceMarking.Builder.class);
  }

  public interface TypeAndConfidenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
     * @return The type.
     */
    org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type getType();

    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     * @return Whether the confidence field is set.
     */
    boolean hasConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     * @return The confidence.
     */
    org.sensoris.types.base.Confidence getConfidence();
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder();
  }
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence}
   */
  public static final class TypeAndConfidence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence)
      TypeAndConfidenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TypeAndConfidence.newBuilder() to construct.
    private TypeAndConfidence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeAndConfidence() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TypeAndConfidence();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_TypeAndConfidence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_TypeAndConfidence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.class, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder.class);
    }

    /**
     * <pre>
     * Type.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      UNKNOWN_TYPE(0),
      /**
       * <pre>
       * Sign painted on road surface.
       *
       * The sign can be detailed by an event relation of type EQUAL to 1 sensoris.protobuf.categories.trafficregulation.TrafficSign.
       * </pre>
       *
       * <code>SIGN = 1;</code>
       */
      SIGN(1),
      /**
       * <pre>
       * Text written on road surface. The text itself may be specified in the field text.
       * </pre>
       *
       * <code>TEXT = 2;</code>
       */
      TEXT(2),
      /**
       * <pre>
       * Graphic icon painted on road surface if it is not recognized as sign, text or one of the below enumeration items. The icon itself is not specified.
       * </pre>
       *
       * <code>ICON = 3;</code>
       */
      ICON(3),
      /**
       * <pre>
       * Any patterned area painted on the road surface (e.g. chevron, crosswalk). The pattern itself is not specified.
       * </pre>
       *
       * <code>PATTERN = 4;</code>
       */
      PATTERN(4),
      /**
       * <pre>
       * Combination of lines making up a crosswalk.
       * </pre>
       *
       * <code>PATTERN_CROSSWALK = 5;</code>
       */
      PATTERN_CROSSWALK(5),
      /**
       * <pre>
       * Rectangular element of a line, for example a dot or block.
       * </pre>
       *
       * <code>LINE_ELEMENT = 6;</code>
       */
      LINE_ELEMENT(6),
      /**
       * <pre>
       * Line mainly perpendicular to the driving direction indicating where to stop.
       * </pre>
       *
       * <code>STOP_LINE = 7;</code>
       */
      STOP_LINE(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      public static final int UNKNOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Sign painted on road surface.
       *
       * The sign can be detailed by an event relation of type EQUAL to 1 sensoris.protobuf.categories.trafficregulation.TrafficSign.
       * </pre>
       *
       * <code>SIGN = 1;</code>
       */
      public static final int SIGN_VALUE = 1;
      /**
       * <pre>
       * Text written on road surface. The text itself may be specified in the field text.
       * </pre>
       *
       * <code>TEXT = 2;</code>
       */
      public static final int TEXT_VALUE = 2;
      /**
       * <pre>
       * Graphic icon painted on road surface if it is not recognized as sign, text or one of the below enumeration items. The icon itself is not specified.
       * </pre>
       *
       * <code>ICON = 3;</code>
       */
      public static final int ICON_VALUE = 3;
      /**
       * <pre>
       * Any patterned area painted on the road surface (e.g. chevron, crosswalk). The pattern itself is not specified.
       * </pre>
       *
       * <code>PATTERN = 4;</code>
       */
      public static final int PATTERN_VALUE = 4;
      /**
       * <pre>
       * Combination of lines making up a crosswalk.
       * </pre>
       *
       * <code>PATTERN_CROSSWALK = 5;</code>
       */
      public static final int PATTERN_CROSSWALK_VALUE = 5;
      /**
       * <pre>
       * Rectangular element of a line, for example a dot or block.
       * </pre>
       *
       * <code>LINE_ELEMENT = 6;</code>
       */
      public static final int LINE_ELEMENT_VALUE = 6;
      /**
       * <pre>
       * Line mainly perpendicular to the driving direction indicating where to stop.
       * </pre>
       *
       * <code>STOP_LINE = 7;</code>
       */
      public static final int STOP_LINE_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_TYPE;
          case 1: return SIGN;
          case 2: return TEXT;
          case 3: return ICON;
          case 4: return PATTERN;
          case 5: return PATTERN_CROSSWALK;
          case 6: return LINE_ELEMENT;
          case 7: return STOP_LINE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type getType() {
      org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type result = org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.forNumber(type_);
      return result == null ? org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private org.sensoris.types.base.Confidence confidence_;
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     * @return Whether the confidence field is set.
     */
    @java.lang.Override
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     * @return The confidence.
     */
    @java.lang.Override
    public org.sensoris.types.base.Confidence getConfidence() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }
    /**
     * <pre>
     * Confidence of type.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
     */
    @java.lang.Override
    public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
      return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getConfidence());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.UNKNOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfidence());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence)) {
        return super.equals(obj);
      }
      org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence other = (org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence) obj;

      if (type_ != other.type_) return false;
      if (hasConfidence() != other.hasConfidence()) return false;
      if (hasConfidence()) {
        if (!getConfidence()
            .equals(other.getConfidence())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConfidence().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence)
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_TypeAndConfidence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_TypeAndConfidence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.class, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder.class);
      }

      // Construct using org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfidenceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        confidence_ = null;
        if (confidenceBuilder_ != null) {
          confidenceBuilder_.dispose();
          confidenceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_TypeAndConfidence_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence getDefaultInstanceForType() {
        return org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence build() {
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence buildPartial() {
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence result = new org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.confidence_ = confidenceBuilder_ == null
              ? confidence_
              : confidenceBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence) {
          return mergeFrom((org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence other) {
        if (other == org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasConfidence()) {
          mergeConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getConfidenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type getType() {
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type result = org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.forNumber(type_);
        return result == null ? org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private org.sensoris.types.base.Confidence confidence_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> confidenceBuilder_;
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       * @return Whether the confidence field is set.
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       * @return The confidence.
       */
      public org.sensoris.types.base.Confidence getConfidence() {
        if (confidenceBuilder_ == null) {
          return confidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        } else {
          return confidenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confidence_ = value;
        } else {
          confidenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder setConfidence(
          org.sensoris.types.base.Confidence.Builder builderForValue) {
        if (confidenceBuilder_ == null) {
          confidence_ = builderForValue.build();
        } else {
          confidenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder mergeConfidence(org.sensoris.types.base.Confidence value) {
        if (confidenceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            confidence_ != null &&
            confidence_ != org.sensoris.types.base.Confidence.getDefaultInstance()) {
            getConfidenceBuilder().mergeFrom(value);
          } else {
            confidence_ = value;
          }
        } else {
          confidenceBuilder_.mergeFrom(value);
        }
        if (confidence_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000002);
        confidence_ = null;
        if (confidenceBuilder_ != null) {
          confidenceBuilder_.dispose();
          confidenceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.Confidence.Builder getConfidenceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConfidenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      public org.sensoris.types.base.ConfidenceOrBuilder getConfidenceOrBuilder() {
        if (confidenceBuilder_ != null) {
          return confidenceBuilder_.getMessageOrBuilder();
        } else {
          return confidence_ == null ?
              org.sensoris.types.base.Confidence.getDefaultInstance() : confidence_;
        }
      }
      /**
       * <pre>
       * Confidence of type.
       * </pre>
       *
       * <code>.sensoris.protobuf.types.base.Confidence confidence = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
          getConfidenceFieldBuilder() {
        if (confidenceBuilder_ == null) {
          confidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                  getConfidence(),
                  getParentForChildren(),
                  isClean());
          confidence_ = null;
        }
        return confidenceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence)
    private static final org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence();
    }

    public static org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeAndConfidence>
        PARSER = new com.google.protobuf.AbstractParser<TypeAndConfidence>() {
      @java.lang.Override
      public TypeAndConfidence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TypeAndConfidence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeAndConfidence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.EventEnvelope envelope_;
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  @java.lang.Override
  public boolean hasEnvelope() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }

  public static final int EXISTENCE_CONFIDENCE_FIELD_NUMBER = 2;
  private org.sensoris.types.base.Confidence existenceConfidence_;
  /**
   * <pre>
   * Confidence that a surface marking has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
   * @return Whether the existenceConfidence field is set.
   */
  @java.lang.Override
  public boolean hasExistenceConfidence() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Confidence that a surface marking has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
   * @return The existenceConfidence.
   */
  @java.lang.Override
  public org.sensoris.types.base.Confidence getExistenceConfidence() {
    return existenceConfidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
  }
  /**
   * <pre>
   * Confidence that a surface marking has been detected.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.ConfidenceOrBuilder getExistenceConfidenceOrBuilder() {
    return existenceConfidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
  }

  public static final int DETECTION_STATUS_FIELD_NUMBER = 3;
  private org.sensoris.types.base.EventDetectionStatus detectionStatus_;
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
   * @return Whether the detectionStatus field is set.
   */
  @java.lang.Override
  public boolean hasDetectionStatus() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
   * @return The detectionStatus.
   */
  @java.lang.Override
  public org.sensoris.types.base.EventDetectionStatus getDetectionStatus() {
    return detectionStatus_ == null ? org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
  }
  /**
   * <pre>
   * Event detection status.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.EventDetectionStatusOrBuilder getDetectionStatusOrBuilder() {
    return detectionStatus_ == null ? org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
  }

  public static final int TYPE_AND_CONFIDENCE_FIELD_NUMBER = 4;
  private org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence typeAndConfidence_;
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
   * @return Whether the typeAndConfidence field is set.
   */
  @java.lang.Override
  public boolean hasTypeAndConfidence() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
   * @return The typeAndConfidence.
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence getTypeAndConfidence() {
    return typeAndConfidence_ == null ? org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
  }
  /**
   * <pre>
   * Type and confidence.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder getTypeAndConfidenceOrBuilder() {
    return typeAndConfidence_ == null ? org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
  }

  public static final int TEXT_FIELD_NUMBER = 5;
  private com.google.protobuf.StringValue text_;
  /**
   * <pre>
   * Text on the surface if detailed specification is required additional to type.
   * </pre>
   *
   * <code>.google.protobuf.StringValue text = 5;</code>
   * @return Whether the text field is set.
   */
  @java.lang.Override
  public boolean hasText() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Text on the surface if detailed specification is required additional to type.
   * </pre>
   *
   * <code>.google.protobuf.StringValue text = 5;</code>
   * @return The text.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getText() {
    return text_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : text_;
  }
  /**
   * <pre>
   * Text on the surface if detailed specification is required additional to type.
   * </pre>
   *
   * <code>.google.protobuf.StringValue text = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getTextOrBuilder() {
    return text_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : text_;
  }

  public static final int COLOR_AND_CONFIDENCE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.MarkingColorAndConfidence> colorAndConfidence_;
  /**
   * <pre>
   * Marking color and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.MarkingColorAndConfidence> getColorAndConfidenceList() {
    return colorAndConfidence_;
  }
  /**
   * <pre>
   * Marking color and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder> 
      getColorAndConfidenceOrBuilderList() {
    return colorAndConfidence_;
  }
  /**
   * <pre>
   * Marking color and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
   */
  @java.lang.Override
  public int getColorAndConfidenceCount() {
    return colorAndConfidence_.size();
  }
  /**
   * <pre>
   * Marking color and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.MarkingColorAndConfidence getColorAndConfidence(int index) {
    return colorAndConfidence_.get(index);
  }
  /**
   * <pre>
   * Marking color and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder getColorAndConfidenceOrBuilder(
      int index) {
    return colorAndConfidence_.get(index);
  }

  public static final int MATERIAL_AND_CONFIDENCE_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence> materialAndConfidence_;
  /**
   * <pre>
   * Marking material and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence> getMaterialAndConfidenceList() {
    return materialAndConfidence_;
  }
  /**
   * <pre>
   * Marking material and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder> 
      getMaterialAndConfidenceOrBuilderList() {
    return materialAndConfidence_;
  }
  /**
   * <pre>
   * Marking material and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
   */
  @java.lang.Override
  public int getMaterialAndConfidenceCount() {
    return materialAndConfidence_.size();
  }
  /**
   * <pre>
   * Marking material and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence getMaterialAndConfidence(int index) {
    return materialAndConfidence_.get(index);
  }
  /**
   * <pre>
   * Marking material and confidence.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder getMaterialAndConfidenceOrBuilder(
      int index) {
    return materialAndConfidence_.get(index);
  }

  public static final int RECTANGULAR_BOX_AND_ACCURACY_FIELD_NUMBER = 8;
  private org.sensoris.types.spatial.RectangularBoxAndAccuracy rectangularBoxAndAccuracy_;
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
   * @return Whether the rectangularBoxAndAccuracy field is set.
   */
  @java.lang.Override
  public boolean hasRectangularBoxAndAccuracy() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
   * @return The rectangularBoxAndAccuracy.
   */
  @java.lang.Override
  public org.sensoris.types.spatial.RectangularBoxAndAccuracy getRectangularBoxAndAccuracy() {
    return rectangularBoxAndAccuracy_ == null ? org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance() : rectangularBoxAndAccuracy_;
  }
  /**
   * <pre>
   * Rectangular box and accuracy.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
   */
  @java.lang.Override
  public org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder getRectangularBoxAndAccuracyOrBuilder() {
    return rectangularBoxAndAccuracy_ == null ? org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance() : rectangularBoxAndAccuracy_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getEnvelope());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getExistenceConfidence());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getDetectionStatus());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getTypeAndConfidence());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getText());
    }
    for (int i = 0; i < colorAndConfidence_.size(); i++) {
      output.writeMessage(6, colorAndConfidence_.get(i));
    }
    for (int i = 0; i < materialAndConfidence_.size(); i++) {
      output.writeMessage(7, materialAndConfidence_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(8, getRectangularBoxAndAccuracy());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getExistenceConfidence());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDetectionStatus());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTypeAndConfidence());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getText());
    }
    for (int i = 0; i < colorAndConfidence_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, colorAndConfidence_.get(i));
    }
    for (int i = 0; i < materialAndConfidence_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, materialAndConfidence_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getRectangularBoxAndAccuracy());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.roadattribution.SurfaceMarking)) {
      return super.equals(obj);
    }
    org.sensoris.categories.roadattribution.SurfaceMarking other = (org.sensoris.categories.roadattribution.SurfaceMarking) obj;

    if (hasEnvelope() != other.hasEnvelope()) return false;
    if (hasEnvelope()) {
      if (!getEnvelope()
          .equals(other.getEnvelope())) return false;
    }
    if (hasExistenceConfidence() != other.hasExistenceConfidence()) return false;
    if (hasExistenceConfidence()) {
      if (!getExistenceConfidence()
          .equals(other.getExistenceConfidence())) return false;
    }
    if (hasDetectionStatus() != other.hasDetectionStatus()) return false;
    if (hasDetectionStatus()) {
      if (!getDetectionStatus()
          .equals(other.getDetectionStatus())) return false;
    }
    if (hasTypeAndConfidence() != other.hasTypeAndConfidence()) return false;
    if (hasTypeAndConfidence()) {
      if (!getTypeAndConfidence()
          .equals(other.getTypeAndConfidence())) return false;
    }
    if (hasText() != other.hasText()) return false;
    if (hasText()) {
      if (!getText()
          .equals(other.getText())) return false;
    }
    if (!getColorAndConfidenceList()
        .equals(other.getColorAndConfidenceList())) return false;
    if (!getMaterialAndConfidenceList()
        .equals(other.getMaterialAndConfidenceList())) return false;
    if (hasRectangularBoxAndAccuracy() != other.hasRectangularBoxAndAccuracy()) return false;
    if (hasRectangularBoxAndAccuracy()) {
      if (!getRectangularBoxAndAccuracy()
          .equals(other.getRectangularBoxAndAccuracy())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    if (hasExistenceConfidence()) {
      hash = (37 * hash) + EXISTENCE_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getExistenceConfidence().hashCode();
    }
    if (hasDetectionStatus()) {
      hash = (37 * hash) + DETECTION_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getDetectionStatus().hashCode();
    }
    if (hasTypeAndConfidence()) {
      hash = (37 * hash) + TYPE_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeAndConfidence().hashCode();
    }
    if (hasText()) {
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
    }
    if (getColorAndConfidenceCount() > 0) {
      hash = (37 * hash) + COLOR_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getColorAndConfidenceList().hashCode();
    }
    if (getMaterialAndConfidenceCount() > 0) {
      hash = (37 * hash) + MATERIAL_AND_CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + getMaterialAndConfidenceList().hashCode();
    }
    if (hasRectangularBoxAndAccuracy()) {
      hash = (37 * hash) + RECTANGULAR_BOX_AND_ACCURACY_FIELD_NUMBER;
      hash = (53 * hash) + getRectangularBoxAndAccuracy().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.categories.roadattribution.SurfaceMarking parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.categories.roadattribution.SurfaceMarking parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.roadattribution.SurfaceMarking parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.roadattribution.SurfaceMarking prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Surface marking.
   *
   * &#64;relation 1..* sensoris.protobuf.categories.roadattribution.SurfaceMarking IMPACT 1 sensoris.protobuf.categories.roadattribution.Lane
   * &#64;relation 1..* sensoris.protobuf.categories.roadattribution.SurfaceMarking IMPACT 1 sensoris.protobuf.categories.roadattribution.Road
   * &#64;relation 1 sensoris.protobuf.categories.roadattribution.SurfaceMarking EQUAL 1 sensoris.protobuf.categories.trafficregulation.TrafficSign
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.roadattribution.SurfaceMarking}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.roadattribution.SurfaceMarking)
      org.sensoris.categories.roadattribution.SurfaceMarkingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.roadattribution.SurfaceMarking.class, org.sensoris.categories.roadattribution.SurfaceMarking.Builder.class);
    }

    // Construct using org.sensoris.categories.roadattribution.SurfaceMarking.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEnvelopeFieldBuilder();
        getExistenceConfidenceFieldBuilder();
        getDetectionStatusFieldBuilder();
        getTypeAndConfidenceFieldBuilder();
        getTextFieldBuilder();
        getColorAndConfidenceFieldBuilder();
        getMaterialAndConfidenceFieldBuilder();
        getRectangularBoxAndAccuracyFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      existenceConfidence_ = null;
      if (existenceConfidenceBuilder_ != null) {
        existenceConfidenceBuilder_.dispose();
        existenceConfidenceBuilder_ = null;
      }
      detectionStatus_ = null;
      if (detectionStatusBuilder_ != null) {
        detectionStatusBuilder_.dispose();
        detectionStatusBuilder_ = null;
      }
      typeAndConfidence_ = null;
      if (typeAndConfidenceBuilder_ != null) {
        typeAndConfidenceBuilder_.dispose();
        typeAndConfidenceBuilder_ = null;
      }
      text_ = null;
      if (textBuilder_ != null) {
        textBuilder_.dispose();
        textBuilder_ = null;
      }
      if (colorAndConfidenceBuilder_ == null) {
        colorAndConfidence_ = java.util.Collections.emptyList();
      } else {
        colorAndConfidence_ = null;
        colorAndConfidenceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (materialAndConfidenceBuilder_ == null) {
        materialAndConfidence_ = java.util.Collections.emptyList();
      } else {
        materialAndConfidence_ = null;
        materialAndConfidenceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      rectangularBoxAndAccuracy_ = null;
      if (rectangularBoxAndAccuracyBuilder_ != null) {
        rectangularBoxAndAccuracyBuilder_.dispose();
        rectangularBoxAndAccuracyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.roadattribution.SensorisRoadAttributionCategory.internal_static_sensoris_protobuf_categories_roadattribution_SurfaceMarking_descriptor;
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.SurfaceMarking getDefaultInstanceForType() {
      return org.sensoris.categories.roadattribution.SurfaceMarking.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.SurfaceMarking build() {
      org.sensoris.categories.roadattribution.SurfaceMarking result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.categories.roadattribution.SurfaceMarking buildPartial() {
      org.sensoris.categories.roadattribution.SurfaceMarking result = new org.sensoris.categories.roadattribution.SurfaceMarking(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.sensoris.categories.roadattribution.SurfaceMarking result) {
      if (colorAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          colorAndConfidence_ = java.util.Collections.unmodifiableList(colorAndConfidence_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.colorAndConfidence_ = colorAndConfidence_;
      } else {
        result.colorAndConfidence_ = colorAndConfidenceBuilder_.build();
      }
      if (materialAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          materialAndConfidence_ = java.util.Collections.unmodifiableList(materialAndConfidence_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.materialAndConfidence_ = materialAndConfidence_;
      } else {
        result.materialAndConfidence_ = materialAndConfidenceBuilder_.build();
      }
    }

    private void buildPartial0(org.sensoris.categories.roadattribution.SurfaceMarking result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.envelope_ = envelopeBuilder_ == null
            ? envelope_
            : envelopeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.existenceConfidence_ = existenceConfidenceBuilder_ == null
            ? existenceConfidence_
            : existenceConfidenceBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.detectionStatus_ = detectionStatusBuilder_ == null
            ? detectionStatus_
            : detectionStatusBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.typeAndConfidence_ = typeAndConfidenceBuilder_ == null
            ? typeAndConfidence_
            : typeAndConfidenceBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.text_ = textBuilder_ == null
            ? text_
            : textBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.rectangularBoxAndAccuracy_ = rectangularBoxAndAccuracyBuilder_ == null
            ? rectangularBoxAndAccuracy_
            : rectangularBoxAndAccuracyBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.roadattribution.SurfaceMarking) {
        return mergeFrom((org.sensoris.categories.roadattribution.SurfaceMarking)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.roadattribution.SurfaceMarking other) {
      if (other == org.sensoris.categories.roadattribution.SurfaceMarking.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (other.hasExistenceConfidence()) {
        mergeExistenceConfidence(other.getExistenceConfidence());
      }
      if (other.hasDetectionStatus()) {
        mergeDetectionStatus(other.getDetectionStatus());
      }
      if (other.hasTypeAndConfidence()) {
        mergeTypeAndConfidence(other.getTypeAndConfidence());
      }
      if (other.hasText()) {
        mergeText(other.getText());
      }
      if (colorAndConfidenceBuilder_ == null) {
        if (!other.colorAndConfidence_.isEmpty()) {
          if (colorAndConfidence_.isEmpty()) {
            colorAndConfidence_ = other.colorAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureColorAndConfidenceIsMutable();
            colorAndConfidence_.addAll(other.colorAndConfidence_);
          }
          onChanged();
        }
      } else {
        if (!other.colorAndConfidence_.isEmpty()) {
          if (colorAndConfidenceBuilder_.isEmpty()) {
            colorAndConfidenceBuilder_.dispose();
            colorAndConfidenceBuilder_ = null;
            colorAndConfidence_ = other.colorAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000020);
            colorAndConfidenceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getColorAndConfidenceFieldBuilder() : null;
          } else {
            colorAndConfidenceBuilder_.addAllMessages(other.colorAndConfidence_);
          }
        }
      }
      if (materialAndConfidenceBuilder_ == null) {
        if (!other.materialAndConfidence_.isEmpty()) {
          if (materialAndConfidence_.isEmpty()) {
            materialAndConfidence_ = other.materialAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMaterialAndConfidenceIsMutable();
            materialAndConfidence_.addAll(other.materialAndConfidence_);
          }
          onChanged();
        }
      } else {
        if (!other.materialAndConfidence_.isEmpty()) {
          if (materialAndConfidenceBuilder_.isEmpty()) {
            materialAndConfidenceBuilder_.dispose();
            materialAndConfidenceBuilder_ = null;
            materialAndConfidence_ = other.materialAndConfidence_;
            bitField0_ = (bitField0_ & ~0x00000040);
            materialAndConfidenceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMaterialAndConfidenceFieldBuilder() : null;
          } else {
            materialAndConfidenceBuilder_.addAllMessages(other.materialAndConfidence_);
          }
        }
      }
      if (other.hasRectangularBoxAndAccuracy()) {
        mergeRectangularBoxAndAccuracy(other.getRectangularBoxAndAccuracy());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEnvelopeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getExistenceConfidenceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDetectionStatusFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getTypeAndConfidenceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              org.sensoris.categories.roadattribution.MarkingColorAndConfidence m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.MarkingColorAndConfidence.parser(),
                      extensionRegistry);
              if (colorAndConfidenceBuilder_ == null) {
                ensureColorAndConfidenceIsMutable();
                colorAndConfidence_.add(m);
              } else {
                colorAndConfidenceBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence m =
                  input.readMessage(
                      org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.parser(),
                      extensionRegistry);
              if (materialAndConfidenceBuilder_ == null) {
                ensureMaterialAndConfidenceIsMutable();
                materialAndConfidence_.add(m);
              } else {
                materialAndConfidenceBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getRectangularBoxAndAccuracyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.sensoris.types.base.EventEnvelope envelope_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return Whether the envelope field is set.
     */
    public boolean hasEnvelope() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return The envelope.
     */
    public org.sensoris.types.base.EventEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
      } else {
        envelopeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.EventEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          envelope_ != null &&
          envelope_ != org.sensoris.types.base.EventEnvelope.getDefaultInstance()) {
          getEnvelopeBuilder().mergeFrom(value);
        } else {
          envelope_ = value;
        }
      } else {
        envelopeBuilder_.mergeFrom(value);
      }
      if (envelope_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope.Builder getEnvelopeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private org.sensoris.types.base.Confidence existenceConfidence_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> existenceConfidenceBuilder_;
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     * @return Whether the existenceConfidence field is set.
     */
    public boolean hasExistenceConfidence() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     * @return The existenceConfidence.
     */
    public org.sensoris.types.base.Confidence getExistenceConfidence() {
      if (existenceConfidenceBuilder_ == null) {
        return existenceConfidence_ == null ? org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
      } else {
        return existenceConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public Builder setExistenceConfidence(org.sensoris.types.base.Confidence value) {
      if (existenceConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        existenceConfidence_ = value;
      } else {
        existenceConfidenceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public Builder setExistenceConfidence(
        org.sensoris.types.base.Confidence.Builder builderForValue) {
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidence_ = builderForValue.build();
      } else {
        existenceConfidenceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public Builder mergeExistenceConfidence(org.sensoris.types.base.Confidence value) {
      if (existenceConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          existenceConfidence_ != null &&
          existenceConfidence_ != org.sensoris.types.base.Confidence.getDefaultInstance()) {
          getExistenceConfidenceBuilder().mergeFrom(value);
        } else {
          existenceConfidence_ = value;
        }
      } else {
        existenceConfidenceBuilder_.mergeFrom(value);
      }
      if (existenceConfidence_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public Builder clearExistenceConfidence() {
      bitField0_ = (bitField0_ & ~0x00000002);
      existenceConfidence_ = null;
      if (existenceConfidenceBuilder_ != null) {
        existenceConfidenceBuilder_.dispose();
        existenceConfidenceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public org.sensoris.types.base.Confidence.Builder getExistenceConfidenceBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getExistenceConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    public org.sensoris.types.base.ConfidenceOrBuilder getExistenceConfidenceOrBuilder() {
      if (existenceConfidenceBuilder_ != null) {
        return existenceConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return existenceConfidence_ == null ?
            org.sensoris.types.base.Confidence.getDefaultInstance() : existenceConfidence_;
      }
    }
    /**
     * <pre>
     * Confidence that a surface marking has been detected.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Confidence existence_confidence = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder> 
        getExistenceConfidenceFieldBuilder() {
      if (existenceConfidenceBuilder_ == null) {
        existenceConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Confidence, org.sensoris.types.base.Confidence.Builder, org.sensoris.types.base.ConfidenceOrBuilder>(
                getExistenceConfidence(),
                getParentForChildren(),
                isClean());
        existenceConfidence_ = null;
      }
      return existenceConfidenceBuilder_;
    }

    private org.sensoris.types.base.EventDetectionStatus detectionStatus_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder> detectionStatusBuilder_;
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     * @return Whether the detectionStatus field is set.
     */
    public boolean hasDetectionStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     * @return The detectionStatus.
     */
    public org.sensoris.types.base.EventDetectionStatus getDetectionStatus() {
      if (detectionStatusBuilder_ == null) {
        return detectionStatus_ == null ? org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
      } else {
        return detectionStatusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public Builder setDetectionStatus(org.sensoris.types.base.EventDetectionStatus value) {
      if (detectionStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detectionStatus_ = value;
      } else {
        detectionStatusBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public Builder setDetectionStatus(
        org.sensoris.types.base.EventDetectionStatus.Builder builderForValue) {
      if (detectionStatusBuilder_ == null) {
        detectionStatus_ = builderForValue.build();
      } else {
        detectionStatusBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public Builder mergeDetectionStatus(org.sensoris.types.base.EventDetectionStatus value) {
      if (detectionStatusBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          detectionStatus_ != null &&
          detectionStatus_ != org.sensoris.types.base.EventDetectionStatus.getDefaultInstance()) {
          getDetectionStatusBuilder().mergeFrom(value);
        } else {
          detectionStatus_ = value;
        }
      } else {
        detectionStatusBuilder_.mergeFrom(value);
      }
      if (detectionStatus_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public Builder clearDetectionStatus() {
      bitField0_ = (bitField0_ & ~0x00000004);
      detectionStatus_ = null;
      if (detectionStatusBuilder_ != null) {
        detectionStatusBuilder_.dispose();
        detectionStatusBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public org.sensoris.types.base.EventDetectionStatus.Builder getDetectionStatusBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDetectionStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    public org.sensoris.types.base.EventDetectionStatusOrBuilder getDetectionStatusOrBuilder() {
      if (detectionStatusBuilder_ != null) {
        return detectionStatusBuilder_.getMessageOrBuilder();
      } else {
        return detectionStatus_ == null ?
            org.sensoris.types.base.EventDetectionStatus.getDefaultInstance() : detectionStatus_;
      }
    }
    /**
     * <pre>
     * Event detection status.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventDetectionStatus detection_status = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder> 
        getDetectionStatusFieldBuilder() {
      if (detectionStatusBuilder_ == null) {
        detectionStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventDetectionStatus, org.sensoris.types.base.EventDetectionStatus.Builder, org.sensoris.types.base.EventDetectionStatusOrBuilder>(
                getDetectionStatus(),
                getParentForChildren(),
                isClean());
        detectionStatus_ = null;
      }
      return detectionStatusBuilder_;
    }

    private org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence typeAndConfidence_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder> typeAndConfidenceBuilder_;
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     * @return Whether the typeAndConfidence field is set.
     */
    public boolean hasTypeAndConfidence() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     * @return The typeAndConfidence.
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence getTypeAndConfidence() {
      if (typeAndConfidenceBuilder_ == null) {
        return typeAndConfidence_ == null ? org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
      } else {
        return typeAndConfidenceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public Builder setTypeAndConfidence(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence value) {
      if (typeAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeAndConfidence_ = value;
      } else {
        typeAndConfidenceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public Builder setTypeAndConfidence(
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder builderForValue) {
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidence_ = builderForValue.build();
      } else {
        typeAndConfidenceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public Builder mergeTypeAndConfidence(org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence value) {
      if (typeAndConfidenceBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          typeAndConfidence_ != null &&
          typeAndConfidence_ != org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance()) {
          getTypeAndConfidenceBuilder().mergeFrom(value);
        } else {
          typeAndConfidence_ = value;
        }
      } else {
        typeAndConfidenceBuilder_.mergeFrom(value);
      }
      if (typeAndConfidence_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public Builder clearTypeAndConfidence() {
      bitField0_ = (bitField0_ & ~0x00000008);
      typeAndConfidence_ = null;
      if (typeAndConfidenceBuilder_ != null) {
        typeAndConfidenceBuilder_.dispose();
        typeAndConfidenceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder getTypeAndConfidenceBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getTypeAndConfidenceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    public org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder getTypeAndConfidenceOrBuilder() {
      if (typeAndConfidenceBuilder_ != null) {
        return typeAndConfidenceBuilder_.getMessageOrBuilder();
      } else {
        return typeAndConfidence_ == null ?
            org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.getDefaultInstance() : typeAndConfidence_;
      }
    }
    /**
     * <pre>
     * Type and confidence.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.roadattribution.SurfaceMarking.TypeAndConfidence type_and_confidence = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder> 
        getTypeAndConfidenceFieldBuilder() {
      if (typeAndConfidenceBuilder_ == null) {
        typeAndConfidenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidence.Builder, org.sensoris.categories.roadattribution.SurfaceMarking.TypeAndConfidenceOrBuilder>(
                getTypeAndConfidence(),
                getParentForChildren(),
                isClean());
        typeAndConfidence_ = null;
      }
      return typeAndConfidenceBuilder_;
    }

    private com.google.protobuf.StringValue text_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> textBuilder_;
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     * @return Whether the text field is set.
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     * @return The text.
     */
    public com.google.protobuf.StringValue getText() {
      if (textBuilder_ == null) {
        return text_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : text_;
      } else {
        return textBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public Builder setText(com.google.protobuf.StringValue value) {
      if (textBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        text_ = value;
      } else {
        textBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public Builder setText(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (textBuilder_ == null) {
        text_ = builderForValue.build();
      } else {
        textBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public Builder mergeText(com.google.protobuf.StringValue value) {
      if (textBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          text_ != null &&
          text_ != com.google.protobuf.StringValue.getDefaultInstance()) {
          getTextBuilder().mergeFrom(value);
        } else {
          text_ = value;
        }
      } else {
        textBuilder_.mergeFrom(value);
      }
      if (text_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public Builder clearText() {
      bitField0_ = (bitField0_ & ~0x00000010);
      text_ = null;
      if (textBuilder_ != null) {
        textBuilder_.dispose();
        textBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public com.google.protobuf.StringValue.Builder getTextBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getTextOrBuilder() {
      if (textBuilder_ != null) {
        return textBuilder_.getMessageOrBuilder();
      } else {
        return text_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : text_;
      }
    }
    /**
     * <pre>
     * Text on the surface if detailed specification is required additional to type.
     * </pre>
     *
     * <code>.google.protobuf.StringValue text = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getTextFieldBuilder() {
      if (textBuilder_ == null) {
        textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getText(),
                getParentForChildren(),
                isClean());
        text_ = null;
      }
      return textBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.MarkingColorAndConfidence> colorAndConfidence_ =
      java.util.Collections.emptyList();
    private void ensureColorAndConfidenceIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        colorAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.MarkingColorAndConfidence>(colorAndConfidence_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.MarkingColorAndConfidence, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder> colorAndConfidenceBuilder_;

    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.MarkingColorAndConfidence> getColorAndConfidenceList() {
      if (colorAndConfidenceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(colorAndConfidence_);
      } else {
        return colorAndConfidenceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public int getColorAndConfidenceCount() {
      if (colorAndConfidenceBuilder_ == null) {
        return colorAndConfidence_.size();
      } else {
        return colorAndConfidenceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingColorAndConfidence getColorAndConfidence(int index) {
      if (colorAndConfidenceBuilder_ == null) {
        return colorAndConfidence_.get(index);
      } else {
        return colorAndConfidenceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder setColorAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingColorAndConfidence value) {
      if (colorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.set(index, value);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder setColorAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder builderForValue) {
      if (colorAndConfidenceBuilder_ == null) {
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.set(index, builderForValue.build());
        onChanged();
      } else {
        colorAndConfidenceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder addColorAndConfidence(org.sensoris.categories.roadattribution.MarkingColorAndConfidence value) {
      if (colorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.add(value);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder addColorAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingColorAndConfidence value) {
      if (colorAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.add(index, value);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder addColorAndConfidence(
        org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder builderForValue) {
      if (colorAndConfidenceBuilder_ == null) {
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.add(builderForValue.build());
        onChanged();
      } else {
        colorAndConfidenceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder addColorAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder builderForValue) {
      if (colorAndConfidenceBuilder_ == null) {
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.add(index, builderForValue.build());
        onChanged();
      } else {
        colorAndConfidenceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder addAllColorAndConfidence(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.MarkingColorAndConfidence> values) {
      if (colorAndConfidenceBuilder_ == null) {
        ensureColorAndConfidenceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, colorAndConfidence_);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder clearColorAndConfidence() {
      if (colorAndConfidenceBuilder_ == null) {
        colorAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public Builder removeColorAndConfidence(int index) {
      if (colorAndConfidenceBuilder_ == null) {
        ensureColorAndConfidenceIsMutable();
        colorAndConfidence_.remove(index);
        onChanged();
      } else {
        colorAndConfidenceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder getColorAndConfidenceBuilder(
        int index) {
      return getColorAndConfidenceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder getColorAndConfidenceOrBuilder(
        int index) {
      if (colorAndConfidenceBuilder_ == null) {
        return colorAndConfidence_.get(index);  } else {
        return colorAndConfidenceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder> 
         getColorAndConfidenceOrBuilderList() {
      if (colorAndConfidenceBuilder_ != null) {
        return colorAndConfidenceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(colorAndConfidence_);
      }
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder addColorAndConfidenceBuilder() {
      return getColorAndConfidenceFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.MarkingColorAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder addColorAndConfidenceBuilder(
        int index) {
      return getColorAndConfidenceFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Marking color and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingColorAndConfidence color_and_confidence = 6;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder> 
         getColorAndConfidenceBuilderList() {
      return getColorAndConfidenceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.MarkingColorAndConfidence, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder> 
        getColorAndConfidenceFieldBuilder() {
      if (colorAndConfidenceBuilder_ == null) {
        colorAndConfidenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.MarkingColorAndConfidence, org.sensoris.categories.roadattribution.MarkingColorAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingColorAndConfidenceOrBuilder>(
                colorAndConfidence_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        colorAndConfidence_ = null;
      }
      return colorAndConfidenceBuilder_;
    }

    private java.util.List<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence> materialAndConfidence_ =
      java.util.Collections.emptyList();
    private void ensureMaterialAndConfidenceIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        materialAndConfidence_ = new java.util.ArrayList<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence>(materialAndConfidence_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder> materialAndConfidenceBuilder_;

    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence> getMaterialAndConfidenceList() {
      if (materialAndConfidenceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(materialAndConfidence_);
      } else {
        return materialAndConfidenceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public int getMaterialAndConfidenceCount() {
      if (materialAndConfidenceBuilder_ == null) {
        return materialAndConfidence_.size();
      } else {
        return materialAndConfidenceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence getMaterialAndConfidence(int index) {
      if (materialAndConfidenceBuilder_ == null) {
        return materialAndConfidence_.get(index);
      } else {
        return materialAndConfidenceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder setMaterialAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence value) {
      if (materialAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.set(index, value);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder setMaterialAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder builderForValue) {
      if (materialAndConfidenceBuilder_ == null) {
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.set(index, builderForValue.build());
        onChanged();
      } else {
        materialAndConfidenceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder addMaterialAndConfidence(org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence value) {
      if (materialAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.add(value);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder addMaterialAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence value) {
      if (materialAndConfidenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.add(index, value);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder addMaterialAndConfidence(
        org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder builderForValue) {
      if (materialAndConfidenceBuilder_ == null) {
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.add(builderForValue.build());
        onChanged();
      } else {
        materialAndConfidenceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder addMaterialAndConfidence(
        int index, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder builderForValue) {
      if (materialAndConfidenceBuilder_ == null) {
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.add(index, builderForValue.build());
        onChanged();
      } else {
        materialAndConfidenceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder addAllMaterialAndConfidence(
        java.lang.Iterable<? extends org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence> values) {
      if (materialAndConfidenceBuilder_ == null) {
        ensureMaterialAndConfidenceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, materialAndConfidence_);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder clearMaterialAndConfidence() {
      if (materialAndConfidenceBuilder_ == null) {
        materialAndConfidence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public Builder removeMaterialAndConfidence(int index) {
      if (materialAndConfidenceBuilder_ == null) {
        ensureMaterialAndConfidenceIsMutable();
        materialAndConfidence_.remove(index);
        onChanged();
      } else {
        materialAndConfidenceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder getMaterialAndConfidenceBuilder(
        int index) {
      return getMaterialAndConfidenceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder getMaterialAndConfidenceOrBuilder(
        int index) {
      if (materialAndConfidenceBuilder_ == null) {
        return materialAndConfidence_.get(index);  } else {
        return materialAndConfidenceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public java.util.List<? extends org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder> 
         getMaterialAndConfidenceOrBuilderList() {
      if (materialAndConfidenceBuilder_ != null) {
        return materialAndConfidenceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(materialAndConfidence_);
      }
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder addMaterialAndConfidenceBuilder() {
      return getMaterialAndConfidenceFieldBuilder().addBuilder(
          org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder addMaterialAndConfidenceBuilder(
        int index) {
      return getMaterialAndConfidenceFieldBuilder().addBuilder(
          index, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.getDefaultInstance());
    }
    /**
     * <pre>
     * Marking material and confidence.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.roadattribution.MarkingMaterialAndConfidence material_and_confidence = 7;</code>
     */
    public java.util.List<org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder> 
         getMaterialAndConfidenceBuilderList() {
      return getMaterialAndConfidenceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder> 
        getMaterialAndConfidenceFieldBuilder() {
      if (materialAndConfidenceBuilder_ == null) {
        materialAndConfidenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidence.Builder, org.sensoris.categories.roadattribution.MarkingMaterialAndConfidenceOrBuilder>(
                materialAndConfidence_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        materialAndConfidence_ = null;
      }
      return materialAndConfidenceBuilder_;
    }

    private org.sensoris.types.spatial.RectangularBoxAndAccuracy rectangularBoxAndAccuracy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder> rectangularBoxAndAccuracyBuilder_;
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     * @return Whether the rectangularBoxAndAccuracy field is set.
     */
    public boolean hasRectangularBoxAndAccuracy() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     * @return The rectangularBoxAndAccuracy.
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracy getRectangularBoxAndAccuracy() {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        return rectangularBoxAndAccuracy_ == null ? org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance() : rectangularBoxAndAccuracy_;
      } else {
        return rectangularBoxAndAccuracyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public Builder setRectangularBoxAndAccuracy(org.sensoris.types.spatial.RectangularBoxAndAccuracy value) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rectangularBoxAndAccuracy_ = value;
      } else {
        rectangularBoxAndAccuracyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public Builder setRectangularBoxAndAccuracy(
        org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder builderForValue) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        rectangularBoxAndAccuracy_ = builderForValue.build();
      } else {
        rectangularBoxAndAccuracyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public Builder mergeRectangularBoxAndAccuracy(org.sensoris.types.spatial.RectangularBoxAndAccuracy value) {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          rectangularBoxAndAccuracy_ != null &&
          rectangularBoxAndAccuracy_ != org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance()) {
          getRectangularBoxAndAccuracyBuilder().mergeFrom(value);
        } else {
          rectangularBoxAndAccuracy_ = value;
        }
      } else {
        rectangularBoxAndAccuracyBuilder_.mergeFrom(value);
      }
      if (rectangularBoxAndAccuracy_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public Builder clearRectangularBoxAndAccuracy() {
      bitField0_ = (bitField0_ & ~0x00000080);
      rectangularBoxAndAccuracy_ = null;
      if (rectangularBoxAndAccuracyBuilder_ != null) {
        rectangularBoxAndAccuracyBuilder_.dispose();
        rectangularBoxAndAccuracyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder getRectangularBoxAndAccuracyBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getRectangularBoxAndAccuracyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    public org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder getRectangularBoxAndAccuracyOrBuilder() {
      if (rectangularBoxAndAccuracyBuilder_ != null) {
        return rectangularBoxAndAccuracyBuilder_.getMessageOrBuilder();
      } else {
        return rectangularBoxAndAccuracy_ == null ?
            org.sensoris.types.spatial.RectangularBoxAndAccuracy.getDefaultInstance() : rectangularBoxAndAccuracy_;
      }
    }
    /**
     * <pre>
     * Rectangular box and accuracy.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder> 
        getRectangularBoxAndAccuracyFieldBuilder() {
      if (rectangularBoxAndAccuracyBuilder_ == null) {
        rectangularBoxAndAccuracyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.spatial.RectangularBoxAndAccuracy, org.sensoris.types.spatial.RectangularBoxAndAccuracy.Builder, org.sensoris.types.spatial.RectangularBoxAndAccuracyOrBuilder>(
                getRectangularBoxAndAccuracy(),
                getParentForChildren(),
                isClean());
        rectangularBoxAndAccuracy_ = null;
      }
      return rectangularBoxAndAccuracyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.roadattribution.SurfaceMarking)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.roadattribution.SurfaceMarking)
  private static final org.sensoris.categories.roadattribution.SurfaceMarking DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.roadattribution.SurfaceMarking();
  }

  public static org.sensoris.categories.roadattribution.SurfaceMarking getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SurfaceMarking>
      PARSER = new com.google.protobuf.AbstractParser<SurfaceMarking>() {
    @java.lang.Override
    public SurfaceMarking parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SurfaceMarking> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SurfaceMarking> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.categories.roadattribution.SurfaceMarking getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

