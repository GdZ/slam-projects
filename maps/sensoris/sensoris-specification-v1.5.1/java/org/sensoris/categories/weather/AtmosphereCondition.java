/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/weather.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.weather;

/**
 * <pre>
 * Atmosphere condition.
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.weather.AtmosphereCondition}
 */
public final class AtmosphereCondition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.weather.AtmosphereCondition)
    AtmosphereConditionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AtmosphereCondition.newBuilder() to construct.
  private AtmosphereCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AtmosphereCondition() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AtmosphereCondition();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.weather.SensorisWeatherCategory.internal_static_sensoris_protobuf_categories_weather_AtmosphereCondition_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.weather.SensorisWeatherCategory.internal_static_sensoris_protobuf_categories_weather_AtmosphereCondition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.weather.AtmosphereCondition.class, org.sensoris.categories.weather.AtmosphereCondition.Builder.class);
  }

  private int bitField0_;
  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.EventEnvelope envelope_;
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  @java.lang.Override
  public boolean hasEnvelope() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }

  public static final int OUTSIDE_AIR_TEMPERATURE_FIELD_NUMBER = 2;
  private org.sensoris.types.base.Int64ValueAndAccuracy outsideAirTemperature_;
  /**
   * <pre>
   * Outside air temperature.
   *
   * &#64;unit Degree Celsius
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return Whether the outsideAirTemperature field is set.
   */
  @java.lang.Override
  public boolean hasOutsideAirTemperature() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Outside air temperature.
   *
   * &#64;unit Degree Celsius
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return The outsideAirTemperature.
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracy getOutsideAirTemperature() {
    return outsideAirTemperature_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : outsideAirTemperature_;
  }
  /**
   * <pre>
   * Outside air temperature.
   *
   * &#64;unit Degree Celsius
   * &#64;resolution 1
   * &#64;range ( , )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getOutsideAirTemperatureOrBuilder() {
    return outsideAirTemperature_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : outsideAirTemperature_;
  }

  public static final int RELATIVE_HUMIDITY_FIELD_NUMBER = 3;
  private org.sensoris.types.base.Int64ValueAndAccuracy relativeHumidity_;
  /**
   * <pre>
   * Outside air relative humidity.
   *
   * &#64;unit Percent
   * &#64;resolution 1
   * &#64;range [0,100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return Whether the relativeHumidity field is set.
   */
  @java.lang.Override
  public boolean hasRelativeHumidity() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Outside air relative humidity.
   *
   * &#64;unit Percent
   * &#64;resolution 1
   * &#64;range [0,100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return The relativeHumidity.
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracy getRelativeHumidity() {
    return relativeHumidity_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : relativeHumidity_;
  }
  /**
   * <pre>
   * Outside air relative humidity.
   *
   * &#64;unit Percent
   * &#64;resolution 1
   * &#64;range [0,100]
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getRelativeHumidityOrBuilder() {
    return relativeHumidity_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : relativeHumidity_;
  }

  public static final int STATIC_AIR_PRESSURE_FIELD_NUMBER = 4;
  private org.sensoris.types.base.Int64ValueAndAccuracy staticAirPressure_;
  /**
   * <pre>
   * Static air pressure.
   *
   * &#64;unit HectoPascal
   * &#64;resolution 1
   * &#64;range [0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return Whether the staticAirPressure field is set.
   */
  @java.lang.Override
  public boolean hasStaticAirPressure() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Static air pressure.
   *
   * &#64;unit HectoPascal
   * &#64;resolution 1
   * &#64;range [0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return The staticAirPressure.
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracy getStaticAirPressure() {
    return staticAirPressure_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : staticAirPressure_;
  }
  /**
   * <pre>
   * Static air pressure.
   *
   * &#64;unit HectoPascal
   * &#64;resolution 1
   * &#64;range [0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getStaticAirPressureOrBuilder() {
    return staticAirPressure_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : staticAirPressure_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getEnvelope());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getOutsideAirTemperature());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getRelativeHumidity());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getStaticAirPressure());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOutsideAirTemperature());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRelativeHumidity());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getStaticAirPressure());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.weather.AtmosphereCondition)) {
      return super.equals(obj);
    }
    org.sensoris.categories.weather.AtmosphereCondition other = (org.sensoris.categories.weather.AtmosphereCondition) obj;

    if (hasEnvelope() != other.hasEnvelope()) return false;
    if (hasEnvelope()) {
      if (!getEnvelope()
          .equals(other.getEnvelope())) return false;
    }
    if (hasOutsideAirTemperature() != other.hasOutsideAirTemperature()) return false;
    if (hasOutsideAirTemperature()) {
      if (!getOutsideAirTemperature()
          .equals(other.getOutsideAirTemperature())) return false;
    }
    if (hasRelativeHumidity() != other.hasRelativeHumidity()) return false;
    if (hasRelativeHumidity()) {
      if (!getRelativeHumidity()
          .equals(other.getRelativeHumidity())) return false;
    }
    if (hasStaticAirPressure() != other.hasStaticAirPressure()) return false;
    if (hasStaticAirPressure()) {
      if (!getStaticAirPressure()
          .equals(other.getStaticAirPressure())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    if (hasOutsideAirTemperature()) {
      hash = (37 * hash) + OUTSIDE_AIR_TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + getOutsideAirTemperature().hashCode();
    }
    if (hasRelativeHumidity()) {
      hash = (37 * hash) + RELATIVE_HUMIDITY_FIELD_NUMBER;
      hash = (53 * hash) + getRelativeHumidity().hashCode();
    }
    if (hasStaticAirPressure()) {
      hash = (37 * hash) + STATIC_AIR_PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + getStaticAirPressure().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.categories.weather.AtmosphereCondition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.categories.weather.AtmosphereCondition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.weather.AtmosphereCondition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.weather.AtmosphereCondition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Atmosphere condition.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.weather.AtmosphereCondition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.weather.AtmosphereCondition)
      org.sensoris.categories.weather.AtmosphereConditionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.weather.SensorisWeatherCategory.internal_static_sensoris_protobuf_categories_weather_AtmosphereCondition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.weather.SensorisWeatherCategory.internal_static_sensoris_protobuf_categories_weather_AtmosphereCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.weather.AtmosphereCondition.class, org.sensoris.categories.weather.AtmosphereCondition.Builder.class);
    }

    // Construct using org.sensoris.categories.weather.AtmosphereCondition.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEnvelopeFieldBuilder();
        getOutsideAirTemperatureFieldBuilder();
        getRelativeHumidityFieldBuilder();
        getStaticAirPressureFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      outsideAirTemperature_ = null;
      if (outsideAirTemperatureBuilder_ != null) {
        outsideAirTemperatureBuilder_.dispose();
        outsideAirTemperatureBuilder_ = null;
      }
      relativeHumidity_ = null;
      if (relativeHumidityBuilder_ != null) {
        relativeHumidityBuilder_.dispose();
        relativeHumidityBuilder_ = null;
      }
      staticAirPressure_ = null;
      if (staticAirPressureBuilder_ != null) {
        staticAirPressureBuilder_.dispose();
        staticAirPressureBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.weather.SensorisWeatherCategory.internal_static_sensoris_protobuf_categories_weather_AtmosphereCondition_descriptor;
    }

    @java.lang.Override
    public org.sensoris.categories.weather.AtmosphereCondition getDefaultInstanceForType() {
      return org.sensoris.categories.weather.AtmosphereCondition.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.categories.weather.AtmosphereCondition build() {
      org.sensoris.categories.weather.AtmosphereCondition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.categories.weather.AtmosphereCondition buildPartial() {
      org.sensoris.categories.weather.AtmosphereCondition result = new org.sensoris.categories.weather.AtmosphereCondition(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.sensoris.categories.weather.AtmosphereCondition result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.envelope_ = envelopeBuilder_ == null
            ? envelope_
            : envelopeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.outsideAirTemperature_ = outsideAirTemperatureBuilder_ == null
            ? outsideAirTemperature_
            : outsideAirTemperatureBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.relativeHumidity_ = relativeHumidityBuilder_ == null
            ? relativeHumidity_
            : relativeHumidityBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.staticAirPressure_ = staticAirPressureBuilder_ == null
            ? staticAirPressure_
            : staticAirPressureBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.weather.AtmosphereCondition) {
        return mergeFrom((org.sensoris.categories.weather.AtmosphereCondition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.weather.AtmosphereCondition other) {
      if (other == org.sensoris.categories.weather.AtmosphereCondition.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (other.hasOutsideAirTemperature()) {
        mergeOutsideAirTemperature(other.getOutsideAirTemperature());
      }
      if (other.hasRelativeHumidity()) {
        mergeRelativeHumidity(other.getRelativeHumidity());
      }
      if (other.hasStaticAirPressure()) {
        mergeStaticAirPressure(other.getStaticAirPressure());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEnvelopeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOutsideAirTemperatureFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRelativeHumidityFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getStaticAirPressureFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.sensoris.types.base.EventEnvelope envelope_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return Whether the envelope field is set.
     */
    public boolean hasEnvelope() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return The envelope.
     */
    public org.sensoris.types.base.EventEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
      } else {
        envelopeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.EventEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          envelope_ != null &&
          envelope_ != org.sensoris.types.base.EventEnvelope.getDefaultInstance()) {
          getEnvelopeBuilder().mergeFrom(value);
        } else {
          envelope_ = value;
        }
      } else {
        envelopeBuilder_.mergeFrom(value);
      }
      if (envelope_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope.Builder getEnvelopeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private org.sensoris.types.base.Int64ValueAndAccuracy outsideAirTemperature_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> outsideAirTemperatureBuilder_;
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return Whether the outsideAirTemperature field is set.
     */
    public boolean hasOutsideAirTemperature() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return The outsideAirTemperature.
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getOutsideAirTemperature() {
      if (outsideAirTemperatureBuilder_ == null) {
        return outsideAirTemperature_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : outsideAirTemperature_;
      } else {
        return outsideAirTemperatureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setOutsideAirTemperature(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (outsideAirTemperatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outsideAirTemperature_ = value;
      } else {
        outsideAirTemperatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setOutsideAirTemperature(
        org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
      if (outsideAirTemperatureBuilder_ == null) {
        outsideAirTemperature_ = builderForValue.build();
      } else {
        outsideAirTemperatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder mergeOutsideAirTemperature(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (outsideAirTemperatureBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          outsideAirTemperature_ != null &&
          outsideAirTemperature_ != org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance()) {
          getOutsideAirTemperatureBuilder().mergeFrom(value);
        } else {
          outsideAirTemperature_ = value;
        }
      } else {
        outsideAirTemperatureBuilder_.mergeFrom(value);
      }
      if (outsideAirTemperature_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder clearOutsideAirTemperature() {
      bitField0_ = (bitField0_ & ~0x00000002);
      outsideAirTemperature_ = null;
      if (outsideAirTemperatureBuilder_ != null) {
        outsideAirTemperatureBuilder_.dispose();
        outsideAirTemperatureBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getOutsideAirTemperatureBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getOutsideAirTemperatureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getOutsideAirTemperatureOrBuilder() {
      if (outsideAirTemperatureBuilder_ != null) {
        return outsideAirTemperatureBuilder_.getMessageOrBuilder();
      } else {
        return outsideAirTemperature_ == null ?
            org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : outsideAirTemperature_;
      }
    }
    /**
     * <pre>
     * Outside air temperature.
     *
     * &#64;unit Degree Celsius
     * &#64;resolution 1
     * &#64;range ( , )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy outside_air_temperature = 2 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
        getOutsideAirTemperatureFieldBuilder() {
      if (outsideAirTemperatureBuilder_ == null) {
        outsideAirTemperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                getOutsideAirTemperature(),
                getParentForChildren(),
                isClean());
        outsideAirTemperature_ = null;
      }
      return outsideAirTemperatureBuilder_;
    }

    private org.sensoris.types.base.Int64ValueAndAccuracy relativeHumidity_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> relativeHumidityBuilder_;
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return Whether the relativeHumidity field is set.
     */
    public boolean hasRelativeHumidity() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return The relativeHumidity.
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getRelativeHumidity() {
      if (relativeHumidityBuilder_ == null) {
        return relativeHumidity_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : relativeHumidity_;
      } else {
        return relativeHumidityBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setRelativeHumidity(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (relativeHumidityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        relativeHumidity_ = value;
      } else {
        relativeHumidityBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setRelativeHumidity(
        org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
      if (relativeHumidityBuilder_ == null) {
        relativeHumidity_ = builderForValue.build();
      } else {
        relativeHumidityBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder mergeRelativeHumidity(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (relativeHumidityBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          relativeHumidity_ != null &&
          relativeHumidity_ != org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance()) {
          getRelativeHumidityBuilder().mergeFrom(value);
        } else {
          relativeHumidity_ = value;
        }
      } else {
        relativeHumidityBuilder_.mergeFrom(value);
      }
      if (relativeHumidity_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder clearRelativeHumidity() {
      bitField0_ = (bitField0_ & ~0x00000004);
      relativeHumidity_ = null;
      if (relativeHumidityBuilder_ != null) {
        relativeHumidityBuilder_.dispose();
        relativeHumidityBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getRelativeHumidityBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getRelativeHumidityFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getRelativeHumidityOrBuilder() {
      if (relativeHumidityBuilder_ != null) {
        return relativeHumidityBuilder_.getMessageOrBuilder();
      } else {
        return relativeHumidity_ == null ?
            org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : relativeHumidity_;
      }
    }
    /**
     * <pre>
     * Outside air relative humidity.
     *
     * &#64;unit Percent
     * &#64;resolution 1
     * &#64;range [0,100]
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy relative_humidity = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
        getRelativeHumidityFieldBuilder() {
      if (relativeHumidityBuilder_ == null) {
        relativeHumidityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                getRelativeHumidity(),
                getParentForChildren(),
                isClean());
        relativeHumidity_ = null;
      }
      return relativeHumidityBuilder_;
    }

    private org.sensoris.types.base.Int64ValueAndAccuracy staticAirPressure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> staticAirPressureBuilder_;
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return Whether the staticAirPressure field is set.
     */
    public boolean hasStaticAirPressure() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     * @return The staticAirPressure.
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy getStaticAirPressure() {
      if (staticAirPressureBuilder_ == null) {
        return staticAirPressure_ == null ? org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : staticAirPressure_;
      } else {
        return staticAirPressureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setStaticAirPressure(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (staticAirPressureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        staticAirPressure_ = value;
      } else {
        staticAirPressureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder setStaticAirPressure(
        org.sensoris.types.base.Int64ValueAndAccuracy.Builder builderForValue) {
      if (staticAirPressureBuilder_ == null) {
        staticAirPressure_ = builderForValue.build();
      } else {
        staticAirPressureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder mergeStaticAirPressure(org.sensoris.types.base.Int64ValueAndAccuracy value) {
      if (staticAirPressureBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          staticAirPressure_ != null &&
          staticAirPressure_ != org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance()) {
          getStaticAirPressureBuilder().mergeFrom(value);
        } else {
          staticAirPressure_ = value;
        }
      } else {
        staticAirPressureBuilder_.mergeFrom(value);
      }
      if (staticAirPressure_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public Builder clearStaticAirPressure() {
      bitField0_ = (bitField0_ & ~0x00000008);
      staticAirPressure_ = null;
      if (staticAirPressureBuilder_ != null) {
        staticAirPressureBuilder_.dispose();
        staticAirPressureBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracy.Builder getStaticAirPressureBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getStaticAirPressureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    public org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getStaticAirPressureOrBuilder() {
      if (staticAirPressureBuilder_ != null) {
        return staticAirPressureBuilder_.getMessageOrBuilder();
      } else {
        return staticAirPressure_ == null ?
            org.sensoris.types.base.Int64ValueAndAccuracy.getDefaultInstance() : staticAirPressure_;
      }
    }
    /**
     * <pre>
     * Static air pressure.
     *
     * &#64;unit HectoPascal
     * &#64;resolution 1
     * &#64;range [0, )
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy static_air_pressure = 4 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder> 
        getStaticAirPressureFieldBuilder() {
      if (staticAirPressureBuilder_ == null) {
        staticAirPressureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.Int64ValueAndAccuracy, org.sensoris.types.base.Int64ValueAndAccuracy.Builder, org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder>(
                getStaticAirPressure(),
                getParentForChildren(),
                isClean());
        staticAirPressure_ = null;
      }
      return staticAirPressureBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.weather.AtmosphereCondition)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.weather.AtmosphereCondition)
  private static final org.sensoris.categories.weather.AtmosphereCondition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.weather.AtmosphereCondition();
  }

  public static org.sensoris.categories.weather.AtmosphereCondition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AtmosphereCondition>
      PARSER = new com.google.protobuf.AbstractParser<AtmosphereCondition>() {
    @java.lang.Override
    public AtmosphereCondition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AtmosphereCondition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AtmosphereCondition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.categories.weather.AtmosphereCondition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

