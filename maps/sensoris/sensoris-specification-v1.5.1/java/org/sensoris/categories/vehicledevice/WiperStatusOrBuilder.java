/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/vehicle_device.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.vehicledevice;

public interface WiperStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.vehicledevice.WiperStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Speed type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;</code>
   * @return The enum numeric value on the wire for speedType.
   */
  int getSpeedTypeValue();
  /**
   * <pre>
   * Speed type.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.vehicledevice.WiperStatus.SpeedType speed_type = 2;</code>
   * @return The speedType.
   */
  org.sensoris.categories.vehicledevice.WiperStatus.SpeedType getSpeedType();

  /**
   * <pre>
   * Wiper speed.
   *
   * &#64;unit RPM of the wiper where one revolution is one complete cycle.
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return Whether the speedAndAccuracy field is set.
   */
  boolean hasSpeedAndAccuracy();
  /**
   * <pre>
   * Wiper speed.
   *
   * &#64;unit RPM of the wiper where one revolution is one complete cycle.
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   * @return The speedAndAccuracy.
   */
  org.sensoris.types.base.Int64ValueAndAccuracy getSpeedAndAccuracy();
  /**
   * <pre>
   * Wiper speed.
   *
   * &#64;unit RPM of the wiper where one revolution is one complete cycle.
   * &#64;resolution 1
   * &#64;range (0, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64ValueAndAccuracy speed_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];</code>
   */
  org.sensoris.types.base.Int64ValueAndAccuracyOrBuilder getSpeedAndAccuracyOrBuilder();
}
