/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/vehicle_device.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.vehicledevice;

/**
 * <pre>
 * Status of exterior light.
 * </pre>
 *
 * Protobuf type {@code sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus}
 */
public final class ExteriorLightStatus extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
    ExteriorLightStatusOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExteriorLightStatus.newBuilder() to construct.
  private ExteriorLightStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExteriorLightStatus() {
    typeAndStatus_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExteriorLightStatus();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.sensoris.categories.vehicledevice.ExteriorLightStatus.class, org.sensoris.categories.vehicledevice.ExteriorLightStatus.Builder.class);
  }

  public interface TypeAndStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Type of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
     * @return The type.
     */
    org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type getType();

    /**
     * <pre>
     * Status of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <pre>
     * Status of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
     * @return The status.
     */
    org.sensoris.categories.vehicledevice.Status getStatus();
  }
  /**
   * <pre>
   * Type and status of exterior light.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus}
   */
  public static final class TypeAndStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
      TypeAndStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TypeAndStatus.newBuilder() to construct.
    private TypeAndStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeAndStatus() {
      type_ = 0;
      status_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TypeAndStatus();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_TypeAndStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_TypeAndStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.class, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder.class);
    }

    /**
     * <pre>
     * Type of exterior light.
     * </pre>
     *
     * Protobuf enum {@code sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Unknown light.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      UNKNOWN_TYPE(0),
      /**
       * <pre>
       * Low beams.
       * </pre>
       *
       * <code>LOW_BEAMS = 1;</code>
       */
      LOW_BEAMS(1),
      /**
       * <pre>
       * High beams.
       * </pre>
       *
       * <code>HIGH_BEAMS = 2;</code>
       */
      HIGH_BEAMS(2),
      /**
       * <pre>
       * Front fog light.
       * </pre>
       *
       * <code>FOG_LIGHT_FRONT = 3;</code>
       */
      FOG_LIGHT_FRONT(3),
      /**
       * <pre>
       * Rear fog light.
       * </pre>
       *
       * <code>FOG_LIGHT_REAR = 4;</code>
       */
      FOG_LIGHT_REAR(4),
      /**
       * <pre>
       * Hazard lights.
       * </pre>
       *
       * <code>HAZARD = 5;</code>
       */
      HAZARD(5),
      /**
       * <pre>
       * Left turn signal light.
       * </pre>
       *
       * <code>LEFT_TURN = 6;</code>
       */
      LEFT_TURN(6),
      /**
       * <pre>
       * Right turn signal light.
       * </pre>
       *
       * <code>RIGHT_TURN = 7;</code>
       */
      RIGHT_TURN(7),
      /**
       * <pre>
       * Brake lights including CHMSL (center high mounted stop light).
       * </pre>
       *
       * <code>BRAKE = 8;</code>
       */
      BRAKE(8),
      /**
       * <pre>
       * Reverse lights.
       * </pre>
       *
       * <code>REVERSE = 9;</code>
       */
      REVERSE(9),
      /**
       * <pre>
       * Parking lights.
       * </pre>
       *
       * <code>PARKING = 10;</code>
       */
      PARKING(10),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown light.
       * </pre>
       *
       * <code>UNKNOWN_TYPE = 0;</code>
       */
      public static final int UNKNOWN_TYPE_VALUE = 0;
      /**
       * <pre>
       * Low beams.
       * </pre>
       *
       * <code>LOW_BEAMS = 1;</code>
       */
      public static final int LOW_BEAMS_VALUE = 1;
      /**
       * <pre>
       * High beams.
       * </pre>
       *
       * <code>HIGH_BEAMS = 2;</code>
       */
      public static final int HIGH_BEAMS_VALUE = 2;
      /**
       * <pre>
       * Front fog light.
       * </pre>
       *
       * <code>FOG_LIGHT_FRONT = 3;</code>
       */
      public static final int FOG_LIGHT_FRONT_VALUE = 3;
      /**
       * <pre>
       * Rear fog light.
       * </pre>
       *
       * <code>FOG_LIGHT_REAR = 4;</code>
       */
      public static final int FOG_LIGHT_REAR_VALUE = 4;
      /**
       * <pre>
       * Hazard lights.
       * </pre>
       *
       * <code>HAZARD = 5;</code>
       */
      public static final int HAZARD_VALUE = 5;
      /**
       * <pre>
       * Left turn signal light.
       * </pre>
       *
       * <code>LEFT_TURN = 6;</code>
       */
      public static final int LEFT_TURN_VALUE = 6;
      /**
       * <pre>
       * Right turn signal light.
       * </pre>
       *
       * <code>RIGHT_TURN = 7;</code>
       */
      public static final int RIGHT_TURN_VALUE = 7;
      /**
       * <pre>
       * Brake lights including CHMSL (center high mounted stop light).
       * </pre>
       *
       * <code>BRAKE = 8;</code>
       */
      public static final int BRAKE_VALUE = 8;
      /**
       * <pre>
       * Reverse lights.
       * </pre>
       *
       * <code>REVERSE = 9;</code>
       */
      public static final int REVERSE_VALUE = 9;
      /**
       * <pre>
       * Parking lights.
       * </pre>
       *
       * <code>PARKING = 10;</code>
       */
      public static final int PARKING_VALUE = 10;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_TYPE;
          case 1: return LOW_BEAMS;
          case 2: return HIGH_BEAMS;
          case 3: return FOG_LIGHT_FRONT;
          case 4: return FOG_LIGHT_REAR;
          case 5: return HAZARD;
          case 6: return LEFT_TURN;
          case 7: return RIGHT_TURN;
          case 8: return BRAKE;
          case 9: return REVERSE;
          case 10: return PARKING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <pre>
     * Type of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type getType() {
      org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type result = org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.forNumber(type_);
      return result == null ? org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.UNRECOGNIZED : result;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_ = 0;
    /**
     * <pre>
     * Status of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Status of exterior light.
     * </pre>
     *
     * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
     * @return The status.
     */
    @java.lang.Override public org.sensoris.categories.vehicledevice.Status getStatus() {
      org.sensoris.categories.vehicledevice.Status result = org.sensoris.categories.vehicledevice.Status.forNumber(status_);
      return result == null ? org.sensoris.categories.vehicledevice.Status.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.UNKNOWN_TYPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (status_ != org.sensoris.categories.vehicledevice.Status.UNKNOWN_STATUS.getNumber()) {
        output.writeEnum(2, status_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.UNKNOWN_TYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (status_ != org.sensoris.categories.vehicledevice.Status.UNKNOWN_STATUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)) {
        return super.equals(obj);
      }
      org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus other = (org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus) obj;

      if (type_ != other.type_) return false;
      if (status_ != other.status_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Type and status of exterior light.
     * </pre>
     *
     * Protobuf type {@code sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_TypeAndStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_TypeAndStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.class, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder.class);
      }

      // Construct using org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        status_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_TypeAndStatus_descriptor;
      }

      @java.lang.Override
      public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus getDefaultInstanceForType() {
        return org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.getDefaultInstance();
      }

      @java.lang.Override
      public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus build() {
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus buildPartial() {
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus result = new org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.status_ = status_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus) {
          return mergeFrom((org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus other) {
        if (other == org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                status_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * Type of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type getType() {
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type result = org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.forNumber(type_);
        return result == null ? org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <pre>
       * Status of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       * Status of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Status of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.sensoris.categories.vehicledevice.Status getStatus() {
        org.sensoris.categories.vehicledevice.Status result = org.sensoris.categories.vehicledevice.Status.forNumber(status_);
        return result == null ? org.sensoris.categories.vehicledevice.Status.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Status of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.sensoris.categories.vehicledevice.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Status of exterior light.
       * </pre>
       *
       * <code>.sensoris.protobuf.categories.vehicledevice.Status status = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
    }

    // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus)
    private static final org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus();
    }

    public static org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeAndStatus>
        PARSER = new com.google.protobuf.AbstractParser<TypeAndStatus>() {
      @java.lang.Override
      public TypeAndStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TypeAndStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeAndStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int ENVELOPE_FIELD_NUMBER = 1;
  private org.sensoris.types.base.EventEnvelope envelope_;
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  @java.lang.Override
  public boolean hasEnvelope() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelope getEnvelope() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  @java.lang.Override
  public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
    return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
  }

  public static final int TYPE_AND_STATUS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus> typeAndStatus_;
  /**
   * <pre>
   * Light type and status.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus> getTypeAndStatusList() {
    return typeAndStatus_;
  }
  /**
   * <pre>
   * Light type and status.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder> 
      getTypeAndStatusOrBuilderList() {
    return typeAndStatus_;
  }
  /**
   * <pre>
   * Light type and status.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
   */
  @java.lang.Override
  public int getTypeAndStatusCount() {
    return typeAndStatus_.size();
  }
  /**
   * <pre>
   * Light type and status.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus getTypeAndStatus(int index) {
    return typeAndStatus_.get(index);
  }
  /**
   * <pre>
   * Light type and status.
   * </pre>
   *
   * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
   */
  @java.lang.Override
  public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder getTypeAndStatusOrBuilder(
      int index) {
    return typeAndStatus_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getEnvelope());
    }
    for (int i = 0; i < typeAndStatus_.size(); i++) {
      output.writeMessage(2, typeAndStatus_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEnvelope());
    }
    for (int i = 0; i < typeAndStatus_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, typeAndStatus_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.sensoris.categories.vehicledevice.ExteriorLightStatus)) {
      return super.equals(obj);
    }
    org.sensoris.categories.vehicledevice.ExteriorLightStatus other = (org.sensoris.categories.vehicledevice.ExteriorLightStatus) obj;

    if (hasEnvelope() != other.hasEnvelope()) return false;
    if (hasEnvelope()) {
      if (!getEnvelope()
          .equals(other.getEnvelope())) return false;
    }
    if (!getTypeAndStatusList()
        .equals(other.getTypeAndStatusList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEnvelope()) {
      hash = (37 * hash) + ENVELOPE_FIELD_NUMBER;
      hash = (53 * hash) + getEnvelope().hashCode();
    }
    if (getTypeAndStatusCount() > 0) {
      hash = (37 * hash) + TYPE_AND_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getTypeAndStatusList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.sensoris.categories.vehicledevice.ExteriorLightStatus prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Status of exterior light.
   * </pre>
   *
   * Protobuf type {@code sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
      org.sensoris.categories.vehicledevice.ExteriorLightStatusOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.sensoris.categories.vehicledevice.ExteriorLightStatus.class, org.sensoris.categories.vehicledevice.ExteriorLightStatus.Builder.class);
    }

    // Construct using org.sensoris.categories.vehicledevice.ExteriorLightStatus.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getEnvelopeFieldBuilder();
        getTypeAndStatusFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      if (typeAndStatusBuilder_ == null) {
        typeAndStatus_ = java.util.Collections.emptyList();
      } else {
        typeAndStatus_ = null;
        typeAndStatusBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.sensoris.categories.vehicledevice.SensorisVehicleDeviceCategory.internal_static_sensoris_protobuf_categories_vehicledevice_ExteriorLightStatus_descriptor;
    }

    @java.lang.Override
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus getDefaultInstanceForType() {
      return org.sensoris.categories.vehicledevice.ExteriorLightStatus.getDefaultInstance();
    }

    @java.lang.Override
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus build() {
      org.sensoris.categories.vehicledevice.ExteriorLightStatus result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus buildPartial() {
      org.sensoris.categories.vehicledevice.ExteriorLightStatus result = new org.sensoris.categories.vehicledevice.ExteriorLightStatus(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.sensoris.categories.vehicledevice.ExteriorLightStatus result) {
      if (typeAndStatusBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          typeAndStatus_ = java.util.Collections.unmodifiableList(typeAndStatus_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.typeAndStatus_ = typeAndStatus_;
      } else {
        result.typeAndStatus_ = typeAndStatusBuilder_.build();
      }
    }

    private void buildPartial0(org.sensoris.categories.vehicledevice.ExteriorLightStatus result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.envelope_ = envelopeBuilder_ == null
            ? envelope_
            : envelopeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.sensoris.categories.vehicledevice.ExteriorLightStatus) {
        return mergeFrom((org.sensoris.categories.vehicledevice.ExteriorLightStatus)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.sensoris.categories.vehicledevice.ExteriorLightStatus other) {
      if (other == org.sensoris.categories.vehicledevice.ExteriorLightStatus.getDefaultInstance()) return this;
      if (other.hasEnvelope()) {
        mergeEnvelope(other.getEnvelope());
      }
      if (typeAndStatusBuilder_ == null) {
        if (!other.typeAndStatus_.isEmpty()) {
          if (typeAndStatus_.isEmpty()) {
            typeAndStatus_ = other.typeAndStatus_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTypeAndStatusIsMutable();
            typeAndStatus_.addAll(other.typeAndStatus_);
          }
          onChanged();
        }
      } else {
        if (!other.typeAndStatus_.isEmpty()) {
          if (typeAndStatusBuilder_.isEmpty()) {
            typeAndStatusBuilder_.dispose();
            typeAndStatusBuilder_ = null;
            typeAndStatus_ = other.typeAndStatus_;
            bitField0_ = (bitField0_ & ~0x00000002);
            typeAndStatusBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTypeAndStatusFieldBuilder() : null;
          } else {
            typeAndStatusBuilder_.addAllMessages(other.typeAndStatus_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEnvelopeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus m =
                  input.readMessage(
                      org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.parser(),
                      extensionRegistry);
              if (typeAndStatusBuilder_ == null) {
                ensureTypeAndStatusIsMutable();
                typeAndStatus_.add(m);
              } else {
                typeAndStatusBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.sensoris.types.base.EventEnvelope envelope_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> envelopeBuilder_;
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return Whether the envelope field is set.
     */
    public boolean hasEnvelope() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     * @return The envelope.
     */
    public org.sensoris.types.base.EventEnvelope getEnvelope() {
      if (envelopeBuilder_ == null) {
        return envelope_ == null ? org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      } else {
        return envelopeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        envelope_ = value;
      } else {
        envelopeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder setEnvelope(
        org.sensoris.types.base.EventEnvelope.Builder builderForValue) {
      if (envelopeBuilder_ == null) {
        envelope_ = builderForValue.build();
      } else {
        envelopeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder mergeEnvelope(org.sensoris.types.base.EventEnvelope value) {
      if (envelopeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          envelope_ != null &&
          envelope_ != org.sensoris.types.base.EventEnvelope.getDefaultInstance()) {
          getEnvelopeBuilder().mergeFrom(value);
        } else {
          envelope_ = value;
        }
      } else {
        envelopeBuilder_.mergeFrom(value);
      }
      if (envelope_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public Builder clearEnvelope() {
      bitField0_ = (bitField0_ & ~0x00000001);
      envelope_ = null;
      if (envelopeBuilder_ != null) {
        envelopeBuilder_.dispose();
        envelopeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelope.Builder getEnvelopeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getEnvelopeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    public org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder() {
      if (envelopeBuilder_ != null) {
        return envelopeBuilder_.getMessageOrBuilder();
      } else {
        return envelope_ == null ?
            org.sensoris.types.base.EventEnvelope.getDefaultInstance() : envelope_;
      }
    }
    /**
     * <pre>
     * Event envelope.
     * </pre>
     *
     * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder> 
        getEnvelopeFieldBuilder() {
      if (envelopeBuilder_ == null) {
        envelopeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.sensoris.types.base.EventEnvelope, org.sensoris.types.base.EventEnvelope.Builder, org.sensoris.types.base.EventEnvelopeOrBuilder>(
                getEnvelope(),
                getParentForChildren(),
                isClean());
        envelope_ = null;
      }
      return envelopeBuilder_;
    }

    private java.util.List<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus> typeAndStatus_ =
      java.util.Collections.emptyList();
    private void ensureTypeAndStatusIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        typeAndStatus_ = new java.util.ArrayList<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus>(typeAndStatus_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder> typeAndStatusBuilder_;

    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public java.util.List<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus> getTypeAndStatusList() {
      if (typeAndStatusBuilder_ == null) {
        return java.util.Collections.unmodifiableList(typeAndStatus_);
      } else {
        return typeAndStatusBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public int getTypeAndStatusCount() {
      if (typeAndStatusBuilder_ == null) {
        return typeAndStatus_.size();
      } else {
        return typeAndStatusBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus getTypeAndStatus(int index) {
      if (typeAndStatusBuilder_ == null) {
        return typeAndStatus_.get(index);
      } else {
        return typeAndStatusBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder setTypeAndStatus(
        int index, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus value) {
      if (typeAndStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.set(index, value);
        onChanged();
      } else {
        typeAndStatusBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder setTypeAndStatus(
        int index, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder builderForValue) {
      if (typeAndStatusBuilder_ == null) {
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.set(index, builderForValue.build());
        onChanged();
      } else {
        typeAndStatusBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder addTypeAndStatus(org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus value) {
      if (typeAndStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.add(value);
        onChanged();
      } else {
        typeAndStatusBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder addTypeAndStatus(
        int index, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus value) {
      if (typeAndStatusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.add(index, value);
        onChanged();
      } else {
        typeAndStatusBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder addTypeAndStatus(
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder builderForValue) {
      if (typeAndStatusBuilder_ == null) {
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.add(builderForValue.build());
        onChanged();
      } else {
        typeAndStatusBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder addTypeAndStatus(
        int index, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder builderForValue) {
      if (typeAndStatusBuilder_ == null) {
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.add(index, builderForValue.build());
        onChanged();
      } else {
        typeAndStatusBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder addAllTypeAndStatus(
        java.lang.Iterable<? extends org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus> values) {
      if (typeAndStatusBuilder_ == null) {
        ensureTypeAndStatusIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, typeAndStatus_);
        onChanged();
      } else {
        typeAndStatusBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder clearTypeAndStatus() {
      if (typeAndStatusBuilder_ == null) {
        typeAndStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        typeAndStatusBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public Builder removeTypeAndStatus(int index) {
      if (typeAndStatusBuilder_ == null) {
        ensureTypeAndStatusIsMutable();
        typeAndStatus_.remove(index);
        onChanged();
      } else {
        typeAndStatusBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder getTypeAndStatusBuilder(
        int index) {
      return getTypeAndStatusFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder getTypeAndStatusOrBuilder(
        int index) {
      if (typeAndStatusBuilder_ == null) {
        return typeAndStatus_.get(index);  } else {
        return typeAndStatusBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public java.util.List<? extends org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder> 
         getTypeAndStatusOrBuilderList() {
      if (typeAndStatusBuilder_ != null) {
        return typeAndStatusBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(typeAndStatus_);
      }
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder addTypeAndStatusBuilder() {
      return getTypeAndStatusFieldBuilder().addBuilder(
          org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.getDefaultInstance());
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder addTypeAndStatusBuilder(
        int index) {
      return getTypeAndStatusFieldBuilder().addBuilder(
          index, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.getDefaultInstance());
    }
    /**
     * <pre>
     * Light type and status.
     * </pre>
     *
     * <code>repeated .sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus type_and_status = 2;</code>
     */
    public java.util.List<org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder> 
         getTypeAndStatusBuilderList() {
      return getTypeAndStatusFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder> 
        getTypeAndStatusFieldBuilder() {
      if (typeAndStatusBuilder_ == null) {
        typeAndStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatus.Builder, org.sensoris.categories.vehicledevice.ExteriorLightStatus.TypeAndStatusOrBuilder>(
                typeAndStatus_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        typeAndStatus_ = null;
      }
      return typeAndStatusBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  }

  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.vehicledevice.ExteriorLightStatus)
  private static final org.sensoris.categories.vehicledevice.ExteriorLightStatus DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.sensoris.categories.vehicledevice.ExteriorLightStatus();
  }

  public static org.sensoris.categories.vehicledevice.ExteriorLightStatus getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExteriorLightStatus>
      PARSER = new com.google.protobuf.AbstractParser<ExteriorLightStatus>() {
    @java.lang.Override
    public ExteriorLightStatus parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExteriorLightStatus> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExteriorLightStatus> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.sensoris.categories.vehicledevice.ExteriorLightStatus getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

