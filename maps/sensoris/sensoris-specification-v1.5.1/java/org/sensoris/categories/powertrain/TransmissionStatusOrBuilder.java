/*
 * Copyright (c) 2017-2022 SENSORIS Innovation Platform hosted by ERTICO - ITS Europe.
 *
 * This program and the accompanying materials are made available under the terms of the Creative Commons Attribution-NoDerivatives 4.0 International license which accompanies this distribution, and is available at https://creativecommons.org/licenses/by-nd/4.0/legalcode.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensoris/protobuf/categories/powertrain.proto

// Protobuf Java Version: 3.25.1
package org.sensoris.categories.powertrain;

public interface TransmissionStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sensoris.protobuf.categories.powertrain.TransmissionStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   * @return The envelope.
   */
  org.sensoris.types.base.EventEnvelope getEnvelope();
  /**
   * <pre>
   * Event envelope.
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.EventEnvelope envelope = 1;</code>
   */
  org.sensoris.types.base.EventEnvelopeOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * Mode of gear.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;</code>
   * @return The enum numeric value on the wire for gearMode.
   */
  int getGearModeValue();
  /**
   * <pre>
   * Mode of gear.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;</code>
   * @return The gearMode.
   */
  org.sensoris.categories.powertrain.TransmissionStatus.GearMode getGearMode();

  /**
   * <pre>
   * Drive mode.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;</code>
   * @return The enum numeric value on the wire for driveMode.
   */
  int getDriveModeValue();
  /**
   * <pre>
   * Drive mode.
   * </pre>
   *
   * <code>.sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;</code>
   * @return The driveMode.
   */
  org.sensoris.categories.powertrain.TransmissionStatus.DriveMode getDriveMode();

  /**
   * <pre>
   * Current gear in the selected mode for which 1 is the gear with the highest ratio (slowest possible speed) and the maximum number (e.g. 6) is the gear with the lowest ratio (highest possible speed).
   *
   * If gear mode is REVERSE, then current gear refers to the gear in reverse as vehicles might have multiple reverse gears.
   * If gear mode is PARK or NEUTRAL, the current gear is not relevant.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value current_gear = 4;</code>
   * @return Whether the currentGear field is set.
   */
  boolean hasCurrentGear();
  /**
   * <pre>
   * Current gear in the selected mode for which 1 is the gear with the highest ratio (slowest possible speed) and the maximum number (e.g. 6) is the gear with the lowest ratio (highest possible speed).
   *
   * If gear mode is REVERSE, then current gear refers to the gear in reverse as vehicles might have multiple reverse gears.
   * If gear mode is PARK or NEUTRAL, the current gear is not relevant.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value current_gear = 4;</code>
   * @return The currentGear.
   */
  org.sensoris.types.base.Int64Value getCurrentGear();
  /**
   * <pre>
   * Current gear in the selected mode for which 1 is the gear with the highest ratio (slowest possible speed) and the maximum number (e.g. 6) is the gear with the lowest ratio (highest possible speed).
   *
   * If gear mode is REVERSE, then current gear refers to the gear in reverse as vehicles might have multiple reverse gears.
   * If gear mode is PARK or NEUTRAL, the current gear is not relevant.
   *
   * &#64;unit 1
   * &#64;resolution 1
   * &#64;range [1, )
   * </pre>
   *
   * <code>.sensoris.protobuf.types.base.Int64Value current_gear = 4;</code>
   */
  org.sensoris.types.base.Int64ValueOrBuilder getCurrentGearOrBuilder();
}
